*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.17 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O169YHYE
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O169YHYE new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[171187] MAX=1 EXCEEDMAXVALUE='' )[171183] )[171189]
VALIDCHOICES=(CHOICE1='Y' )[171191] )[170689] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[171185]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[171167] )[171169] )[171181] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[171177]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[171171] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[171173] )[171175] )[171179] )[169095]
1121749    proc freq data=EMWS8.Ensmbl10_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl10_VariableSet noprint;
1121750    table ROLE*LEVEL/out=WORK.Ensmbl10META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl10META;
1121751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL10_VARIABLESET.
NOTE: The data set WORK.ENSMBL10META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1121752    proc print data=WORK.Ensmbl10META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl10META label noobs;
1121753    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1121754    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1121754  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1121754  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1121755    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1121756    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1121757    run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL10META.
NOTE: The PROCEDURE PRINT printed page 941.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121758    title10;
MPRINT(EM_DIAGRAM):   title10;
1121759    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural33_TRAIN EMWS8.Neural33_TRAIN
EMWS8.Neural33_TRAIN EMWS8.Neural33_TRAIN EMWS8 Neural33_TRAIN
EMWS8.Neural33_TRAIN EMWS8.Neural33_TRAIN
EMWS8.Neural33_TRAIN EMWS8.Neural33_TRAIN EMWS8 Neural33_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural33_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural33_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1121788    data WORK.Ensmbl10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1121789    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1121790    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1121790  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1121790  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1121791       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1121791  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1121791  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1121792    set EMWS8.NEURAL33_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL33_DEPVAR_DM( where=(_TYPE_="TARGET"));
1121793    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1121794    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1121795    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1121796    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1121797    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1121798    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1121799    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1121800    end;
MPRINT(EM_DIAGRAM):   end;
1121801    output;
MPRINT(EM_DIAGRAM):   output;
1121802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL33_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL10_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1121803    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1121804    proc print data=WORK.Ensmbl10_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl10_EVENT noobs label;
1121805    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1121806    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1121807    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1121808    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL10_EVENT.
NOTE: The PROCEDURE PRINT printed page 942.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121809    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1121810    proc print data = EMWS8.Neural33_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural33_DepVar_DM noobs label;
1121811    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1121812    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1121813    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1121813  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1121813  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1121814    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1121815    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1121816    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL33_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 943.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121817    title10;
MPRINT(EM_DIAGRAM):   title10;
1121818    %let groupid =;
1121819    %let endGroupid =;
1121820    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1121821    set EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_EMINFO;
1121822    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1121822  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1121823    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1121824    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1121825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL33_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121826    %let groupid =;
1121827    %let endGroupid =;
1121828    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1121829    set EMWS8.Neural31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural31_EMINFO;
1121830    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1121830  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1121831    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1121832    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1121833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL31_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121834    %let groupid =;
1121835    %let endGroupid =;
1121836    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1121837    set EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO;
1121838    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1121838  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1121839    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1121840    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1121841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121842    %let groupid =;
1121843    %let endGroupid =;
1121844    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1121845    set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
1121846    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1121846  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1121847    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1121848    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1121849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121850    %let groupid =;
1121851    %let endGroupid =;
1121852    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1121853    set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
1121854    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1121854  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1121855    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1121856    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1121857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121858    data WORK.Ensmbl10;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl10;
1121859    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1121860    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1121860  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1121861    nodeid="NEURAL33";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL33";
1121862    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1121863    output;
MPRINT(EM_DIAGRAM):   output;
1121864    nodeid="NEURAL31";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL31";
1121865    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1121866    output;
MPRINT(EM_DIAGRAM):   output;
1121867    nodeid="NEURAL32";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL32";
1121868    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1121869    output;
MPRINT(EM_DIAGRAM):   output;
1121870    nodeid="NEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL34";
1121871    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1121872    output;
MPRINT(EM_DIAGRAM):   output;
1121873    nodeid="NEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL35";
1121874    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1121875    output;
MPRINT(EM_DIAGRAM):   output;
1121876    ;
MPRINT(EM_DIAGRAM):   ;
1121877    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL10 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121878    title;
MPRINT(EM_DIAGRAM):   title;
1121879    proc print data=WORK.Ensmbl10 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl10 label noobs;
1121880    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1121881    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1121882    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL10.
NOTE: The PROCEDURE PRINT printed page 944.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1121883    title9;
MPRINT(EM_DIAGRAM):   title9;
1121884    title10;
MPRINT(EM_DIAGRAM):   title10;
1121885    data WORK.M0EA3CDL;
MPRINT(EM_DIAGRAM):    data WORK.M0EA3CDL;
1121886    set WORK.M0EA3CDL;
MPRINT(EM_DIAGRAM):   set WORK.M0EA3CDL;
1121887    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1121888    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0EA3CDL.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0EA3CDL has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1121889    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1121890    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1121891    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1121892    %macro DMDBClass;
1121893        DepVar(DESC)
1121894    %mend DMDBClass;
1121895    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1121896    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1121897    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1121898    %macro DMDBVar;
1121899
1121900    %mend DMDBVar;
1121901    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1121902    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1121903    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1121904    proc dmdb batch data=EMWS8.Neural33_TRAIN
1121905    dmdbcat=WORK.EM_DMDB
1121906    maxlevel = 513
1121907    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural33_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
1121908    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1121909    target
1121910    DepVar
1121911    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1121912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL33_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL33_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1121913    quit;
1121914    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3U3RBB1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3U3RBB1 new;
MPRINT(EM_DIAGRAM):   run;
1122016    filename emflow
1122016  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring NEURAL33_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122017    *------------------------------------------------------------*;
1122018    * Ensmbl10: Scoring NEURAL33_TRAIN data;
1122019    *------------------------------------------------------------*;
1122020    data EMWS8.Ensmbl10_TRAIN
1122021    / view=EMWS8.Ensmbl10_TRAIN
1122022    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_TRAIN / view=EMWS8.Ensmbl10_TRAIN ;
1122023    set EMWS8.Neural33_TRAIN
1122024    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_TRAIN ;
1122025    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas.
1122026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122027   +* Ensmbl10: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Combine model for DepVar;
1122028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122029   +* Ensmbl10: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 1 of 5;
1122030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122032   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1122033   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1122034   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1122035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122037   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1122038   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1122039   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1122040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122042   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1122043   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1122044   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1122045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122047   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1122048   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1122049   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1122050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122051   +
1122052   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1122053   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1122053  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1122054   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1122055   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1122056   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1122057   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1122058   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1122059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122060   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1122061   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1122062   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1122063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122065   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1122066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122067   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1122068   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1122069   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1122070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122071   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1122072   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1122073   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1122074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122076   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1122077   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1122078   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1122079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122081   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1122082   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1122083   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1122084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122085   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1122086   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1122087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1122088   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1122089   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1122090   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1122091   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1122092   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1122093   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1122094   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1122095   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1122096   +LENGTH _WARN_ $4
1122097   +      F_DepVar  $ 12
1122098   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1122099   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1122100   +
1122101   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1122102   +
1122103   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1122104   +
1122105   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1122106   +
1122107   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1122108   +
1122109   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1122110   +
1122111   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1122112   +
1122113   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1122114   +
1122115   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1122116   +
1122117   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1122118   +
1122119   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1122120   +
1122121   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1122122   +
1122123   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1122124   +
1122125   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1122126   +
1122127   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1122128   +
1122129   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1122130   +
1122131   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1122132   +
1122133   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1122134   +
1122135   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1122136   +
1122137   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1122138   +
1122139   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1122140   +
1122141   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1122142   +
1122143   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1122144   +
1122145   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1122146   +
1122147   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1122148   +
1122149   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1122150   +
1122151   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1122152   +
1122153   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1122154   +
1122155   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1122156   +
1122157   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1122158   +
1122159   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1122160   +
1122161   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1122162   +
1122163   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1122164   +
1122165   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1122166   +
1122167   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1122168   +
1122169   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1122170   +
1122171   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1122172   +
1122173   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1122174   +
1122175   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1122176   +
1122177   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1122178   +
1122179   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1122180   +
1122181   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1122182   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1122183   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1122184   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1122185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122187   +end;
MPRINT(EM_DIAGRAM):   end;
1122188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122190   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1122191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122193   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1122194   +   end;
MPRINT(EM_DIAGRAM):   end;
1122195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122196   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1122197   +   end;
MPRINT(EM_DIAGRAM):   end;
1122198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122199   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1122200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122202   +   end;
MPRINT(EM_DIAGRAM):   end;
1122203   +end;
MPRINT(EM_DIAGRAM):   end;
1122204   +
1122205   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1122206   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1122207   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1122208   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1122209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122211   +end;
MPRINT(EM_DIAGRAM):   end;
1122212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122214   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1122215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122216   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122217   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1122218   +   end;
MPRINT(EM_DIAGRAM):   end;
1122219   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122220   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1122221   +   end;
MPRINT(EM_DIAGRAM):   end;
1122222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122223   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1122224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122226   +   end;
MPRINT(EM_DIAGRAM):   end;
1122227   +end;
MPRINT(EM_DIAGRAM):   end;
1122228   +
1122229   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1122230   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1122231   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1122232   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1122233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122235   +end;
MPRINT(EM_DIAGRAM):   end;
1122236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122238   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1122239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122240   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122241   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1122242   +   end;
MPRINT(EM_DIAGRAM):   end;
1122243   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122244   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1122245   +   end;
MPRINT(EM_DIAGRAM):   end;
1122246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122247   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1122248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122250   +   end;
MPRINT(EM_DIAGRAM):   end;
1122251   +end;
MPRINT(EM_DIAGRAM):   end;
1122252   +
1122253   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1122254   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1122255   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1122256   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1122257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122259   +end;
MPRINT(EM_DIAGRAM):   end;
1122260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122262   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1122263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122264   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122265   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1122266   +   end;
MPRINT(EM_DIAGRAM):   end;
1122267   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122268   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1122269   +   end;
MPRINT(EM_DIAGRAM):   end;
1122270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122271   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1122272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122274   +   end;
MPRINT(EM_DIAGRAM):   end;
1122275   +end;
MPRINT(EM_DIAGRAM):   end;
1122276   +
1122277   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1122278   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1122279   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1122280   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1122281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122283   +end;
MPRINT(EM_DIAGRAM):   end;
1122284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122285   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122286   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1122287   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122288   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122289   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1122290   +   end;
MPRINT(EM_DIAGRAM):   end;
1122291   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122292   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1122293   +   end;
MPRINT(EM_DIAGRAM):   end;
1122294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122295   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1122296   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122297   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122298   +   end;
MPRINT(EM_DIAGRAM):   end;
1122299   +end;
MPRINT(EM_DIAGRAM):   end;
1122300   +
1122301   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1122302   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1122303   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1122304   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1122305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122307   +end;
MPRINT(EM_DIAGRAM):   end;
1122308   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122309   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122310   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1122311   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122312   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122313   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1122314   +   end;
MPRINT(EM_DIAGRAM):   end;
1122315   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122316   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1122317   +   end;
MPRINT(EM_DIAGRAM):   end;
1122318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122319   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1122320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122322   +   end;
MPRINT(EM_DIAGRAM):   end;
1122323   +end;
MPRINT(EM_DIAGRAM):   end;
1122324   +
1122325   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1122326   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1122327   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1122328   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1122329   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1122330   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1122331   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1122332   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1122333   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1122334   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1122335   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1122336   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1122337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122339   +end;
MPRINT(EM_DIAGRAM):   end;
1122340   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122341   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1122342   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1122343   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122344   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1122345   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1122346   +   end;
MPRINT(EM_DIAGRAM):   end;
1122347   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1122348   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1122349   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1122350   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1122351   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1122352   +   end;
MPRINT(EM_DIAGRAM):   end;
1122353   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1122354   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1122355   +   end;
MPRINT(EM_DIAGRAM):   end;
1122356   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1122357   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1122358   +   end;
MPRINT(EM_DIAGRAM):   end;
1122359   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1122360   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1122361   +   end;
MPRINT(EM_DIAGRAM):   end;
1122362   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122363   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1122364   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1122365   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1122366   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1122367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122369   +   end;
MPRINT(EM_DIAGRAM):   end;
1122370   +end;
MPRINT(EM_DIAGRAM):   end;
1122371   +
1122372   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1122373   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1122374   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1122375   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1122376   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1122377   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1122378   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1122379   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1122380   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1122381   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1122382   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1122383   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1122384   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1122385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122387   +end;
MPRINT(EM_DIAGRAM):   end;
1122388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122389   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1122390   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1122391   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122392   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1122393   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1122394   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1122395   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1122396   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1122397   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1122398   +         end;
MPRINT(EM_DIAGRAM):   end;
1122399   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1122400   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1122401   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1122402   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1122403   +            end;
MPRINT(EM_DIAGRAM):   end;
1122404   +         end;
MPRINT(EM_DIAGRAM):   end;
1122405   +      end;
MPRINT(EM_DIAGRAM):   end;
1122406   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1122407   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1122408   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1122409   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1122410   +         end;
MPRINT(EM_DIAGRAM):   end;
1122411   +      end;
MPRINT(EM_DIAGRAM):   end;
1122412   +   end;
MPRINT(EM_DIAGRAM):   end;
1122413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122414   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1122415   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1122416   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1122417   +      end;
MPRINT(EM_DIAGRAM):   end;
1122418   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1122419   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1122420   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1122421   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1122422   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1122423   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1122424   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1122425   +         end;
MPRINT(EM_DIAGRAM):   end;
1122426   +      end;
MPRINT(EM_DIAGRAM):   end;
1122427   +   end;
MPRINT(EM_DIAGRAM):   end;
1122428   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1122429   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1122430   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1122431   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1122432   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1122433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122435   +   end;
MPRINT(EM_DIAGRAM):   end;
1122436   +end;
MPRINT(EM_DIAGRAM):   end;
1122437   +
1122438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122439   +*** Checking missing input Interval
1122440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1122441   +
1122442   +IF NMISS(
1122443   +   Income ,
1122444   +   Kidhome ,
1122445   +   MntFishProducts ,
1122446   +   MntFruits ,
1122447   +   MntGoldProds ,
1122448   +   MntMeatProducts ,
1122449   +   MntSweetProducts ,
1122450   +   MntWines ,
1122451   +   NumCatalogPurchases ,
1122452   +   NumDealsPurchases ,
1122453   +   NumStorePurchases ,
1122454   +   NumWebPurchases ,
1122455   +   NumWebVisitsMonth ,
1122456   +   Recency ,
1122457   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1122458   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1122459   +
1122460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122461   +END;
MPRINT(EM_DIAGRAM):   END;
1122462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122463   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1122464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122465   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1122466   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1122467   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1122468   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1122469   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1122470   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1122471   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1122472   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1122473   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1122474   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1122475   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1122476   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1122477   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1122478   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1122479   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1122480   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1122481   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1122482   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1122483   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1122484   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1122485   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1122486   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1122487   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1122488   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1122489   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1122490   +END;
MPRINT(EM_DIAGRAM):   END;
1122491   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1122492   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1122493   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1122494   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1122495   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1122496   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1122497   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1122498   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1122499   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1122500   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1122501   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1122502   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1122503   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1122504   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1122505   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1122506   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1122507   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1122508   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1122509   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1122510   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1122511   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1122512   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1122513   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1122514   +   ELSE S_NumCatalogPurchases
1122515   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1122516   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1122517   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1122518   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1122519   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1122520   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1122521   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1122522   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1122523   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1122524   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1122525   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1122526   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1122527   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1122528   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1122529   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1122530   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1122531   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1122532   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1122533   +END;
MPRINT(EM_DIAGRAM):   END;
1122534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122535   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1122536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122538   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1122539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122541   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1122542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122543   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1122544   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1122545   +          +     0.13364230231465 * S_MntFishProducts
1122546   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1122547   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1122548   +          +    -0.10871064476617 * S_MntSweetProducts
1122549   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1122550   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1122551   +          +     0.52835897625366 * S_NumStorePurchases
1122552   +          +     0.66297635444958 * S_NumWebPurchases
1122553   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1122554   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1122555   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1122556   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1122557   +          +     0.14748983783528 * S_MntFishProducts
1122558   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1122559   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1122560   +          +     0.31095426478608 * S_MntSweetProducts
1122561   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1122562   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1122563   +          +     0.14387100066933 * S_NumStorePurchases
1122564   +          +    -0.01648998884133 * S_NumWebPurchases
1122565   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1122566   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1122567   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1122568   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1122569   +          +     0.00774185404534 * S_MntFishProducts
1122570   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1122571   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1122572   +          +     0.28728624268589 * S_MntSweetProducts
1122573   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1122574   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1122575   +          +     0.56446566213593 * S_NumStorePurchases
1122576   +          +     0.44547549135846 * S_NumWebPurchases
1122577   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1122578   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1122579   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1122580   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1122581   +          +     0.24665716882586 * S_MntFishProducts
1122582   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1122583   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1122584   +          +    -0.10530818594736 * S_MntSweetProducts
1122585   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1122586   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1122587   +          +     0.36617016651032 * S_NumStorePurchases
1122588   +          +      0.3580014320946 * S_NumWebPurchases
1122589   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1122590   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1122591   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1122592   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1122593   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1122594   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1122595   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1122596   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1122597   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1122598   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1122599   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1122600   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1122601   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1122602   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1122603   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1122604   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1122605   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1122606   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1122607   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1122608   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1122609   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1122610   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1122611   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1122612   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1122613   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1122614   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1122615   +          +     0.05171313818048 * Marital_StatusDivorced
1122616   +          +    -0.79112453157624 * Marital_StatusMarried
1122617   +          +     0.89650138723512 * Marital_StatusSingle
1122618   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1122619   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1122620   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1122621   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1122622   +          +     0.05091092042416 * Marital_StatusDivorced
1122623   +          +     0.86642985712339 * Marital_StatusMarried
1122624   +          +    -0.14148832619997 * Marital_StatusSingle
1122625   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1122626   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1122627   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1122628   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1122629   +          +    -0.67787102917679 * Marital_StatusDivorced
1122630   +          +     1.38931504762816 * Marital_StatusMarried
1122631   +          +    -0.51164629287485 * Marital_StatusSingle
1122632   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1122633   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1122634   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1122635   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1122636   +          +     0.12658153975639 * Marital_StatusDivorced
1122637   +          +     0.20111721742791 * Marital_StatusMarried
1122638   +          +     -0.3521524791648 * Marital_StatusSingle
1122639   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1122640   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1122641   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1122642   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1122643   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1122644   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1122645   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1122646   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1122647   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1122648   +END;
MPRINT(EM_DIAGRAM):   END;
1122649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1122650   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1122651   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1122652   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1122653   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1122654   +END;
MPRINT(EM_DIAGRAM):   END;
1122655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122656   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1122657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122658   +
1122659   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1122660   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1122661   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1122662   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1122663   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1122664   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122665   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1122666   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1122667   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1122668   +end;
MPRINT(EM_DIAGRAM):   end;
1122669   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122670   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1122671   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1122672   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1122673   +   end;
MPRINT(EM_DIAGRAM):   end;
1122674   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1122675   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1122676   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1122677   +   end;
MPRINT(EM_DIAGRAM):   end;
1122678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122679   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1122680   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1122681   +   end;
MPRINT(EM_DIAGRAM):   end;
1122682   +end;
MPRINT(EM_DIAGRAM):   end;
1122683   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1122684   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1122685   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1122686   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1122687   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1122688   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1122689   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1122690   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1122691   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1122692   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1122693   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1122694   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1122695   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1122696   +END;
MPRINT(EM_DIAGRAM):   END;
1122697   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1122698   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1122699   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1122700   +END;
MPRINT(EM_DIAGRAM):   END;
1122701   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1122702   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1122703   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1122704   +END;
MPRINT(EM_DIAGRAM):   END;
1122705   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1122706   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1122707   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1122708   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1122709   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1122710   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1122711   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1122712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122713   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1122714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1122715   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1122716   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1122717   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1122718   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1122719   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1122720   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1122721   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1122722   +END;
MPRINT(EM_DIAGRAM):   END;
1122723   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1122724   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1122725   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1122726   +drop
1122727   +H11
1122728   +H12
1122729   +H13
1122730   +H14
1122731   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1122732   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1122733   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1122734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122735   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1122736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122737   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1122738   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1122739   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1122740   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1122741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122742   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1122743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122744   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1122745   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1122746   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1122747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122748   +* Ensmbl10: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 2 of 5;
1122749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122751   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1122752   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1122753   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1122754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1122755   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1122756   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1122757   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1122758   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1122759   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1122760   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1122761   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1122762   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1122763   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1122764   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1122765   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1122766   +LENGTH _WARN_ $4
1122767   +      F_DepVar  $ 12
1122768   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1122769   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1122770   +
1122771   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1122772   +
1122773   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1122774   +
1122775   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1122776   +
1122777   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1122778   +
1122779   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1122780   +
1122781   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1122782   +
1122783   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1122784   +
1122785   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1122786   +
1122787   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1122788   +
1122789   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1122790   +
1122791   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1122792   +
1122793   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1122794   +
1122795   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1122796   +
1122797   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1122798   +
1122799   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1122800   +
1122801   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1122802   +
1122803   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1122804   +
1122805   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1122806   +
1122807   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1122808   +
1122809   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1122810   +
1122811   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1122812   +
1122813   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1122814   +
1122815   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1122816   +
1122817   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1122818   +
1122819   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1122820   +
1122821   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1122822   +
1122823   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1122824   +
1122825   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1122826   +
1122827   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1122828   +
1122829   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1122830   +
1122831   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1122832   +
1122833   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1122834   +
1122835   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1122836   +
1122837   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1122838   +
1122839   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1122840   +
1122841   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1122842   +
1122843   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1122844   +
1122845   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1122846   +
1122847   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1122848   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1122849   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1122850   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1122851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122853   +end;
MPRINT(EM_DIAGRAM):   end;
1122854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122856   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1122857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122858   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122859   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1122860   +   end;
MPRINT(EM_DIAGRAM):   end;
1122861   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122862   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1122863   +   end;
MPRINT(EM_DIAGRAM):   end;
1122864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122865   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1122866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122868   +   end;
MPRINT(EM_DIAGRAM):   end;
1122869   +end;
MPRINT(EM_DIAGRAM):   end;
1122870   +
1122871   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1122872   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1122873   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1122874   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1122875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122877   +end;
MPRINT(EM_DIAGRAM):   end;
1122878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122880   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1122881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122882   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122883   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1122884   +   end;
MPRINT(EM_DIAGRAM):   end;
1122885   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122886   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1122887   +   end;
MPRINT(EM_DIAGRAM):   end;
1122888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122889   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1122890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122892   +   end;
MPRINT(EM_DIAGRAM):   end;
1122893   +end;
MPRINT(EM_DIAGRAM):   end;
1122894   +
1122895   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1122896   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1122897   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1122898   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1122899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122901   +end;
MPRINT(EM_DIAGRAM):   end;
1122902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122903   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122904   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1122905   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122906   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122907   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1122908   +   end;
MPRINT(EM_DIAGRAM):   end;
1122909   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122910   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1122911   +   end;
MPRINT(EM_DIAGRAM):   end;
1122912   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122913   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1122914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122916   +   end;
MPRINT(EM_DIAGRAM):   end;
1122917   +end;
MPRINT(EM_DIAGRAM):   end;
1122918   +
1122919   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1122920   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1122921   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1122922   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1122923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122925   +end;
MPRINT(EM_DIAGRAM):   end;
1122926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122927   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122928   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1122929   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122930   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122931   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1122932   +   end;
MPRINT(EM_DIAGRAM):   end;
1122933   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122934   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1122935   +   end;
MPRINT(EM_DIAGRAM):   end;
1122936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122937   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1122938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122940   +   end;
MPRINT(EM_DIAGRAM):   end;
1122941   +end;
MPRINT(EM_DIAGRAM):   end;
1122942   +
1122943   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1122944   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1122945   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1122946   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1122947   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122949   +end;
MPRINT(EM_DIAGRAM):   end;
1122950   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122951   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122952   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1122953   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122954   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122955   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1122956   +   end;
MPRINT(EM_DIAGRAM):   end;
1122957   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122958   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1122959   +   end;
MPRINT(EM_DIAGRAM):   end;
1122960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122961   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1122962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122964   +   end;
MPRINT(EM_DIAGRAM):   end;
1122965   +end;
MPRINT(EM_DIAGRAM):   end;
1122966   +
1122967   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1122968   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1122969   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1122970   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1122971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1122972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122973   +end;
MPRINT(EM_DIAGRAM):   end;
1122974   +else do;
MPRINT(EM_DIAGRAM):   else do;
1122975   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1122976   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1122977   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1122978   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1122979   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1122980   +   end;
MPRINT(EM_DIAGRAM):   end;
1122981   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1122982   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1122983   +   end;
MPRINT(EM_DIAGRAM):   end;
1122984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1122985   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1122986   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1122987   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1122988   +   end;
MPRINT(EM_DIAGRAM):   end;
1122989   +end;
MPRINT(EM_DIAGRAM):   end;
1122990   +
1122991   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1122992   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1122993   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1122994   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1122995   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1122996   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1122997   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1122998   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1122999   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1123000   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1123001   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1123002   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1123003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123005   +end;
MPRINT(EM_DIAGRAM):   end;
1123006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123007   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1123008   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1123009   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123010   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1123011   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1123012   +   end;
MPRINT(EM_DIAGRAM):   end;
1123013   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1123014   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1123015   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1123016   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1123017   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1123018   +   end;
MPRINT(EM_DIAGRAM):   end;
1123019   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1123020   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1123021   +   end;
MPRINT(EM_DIAGRAM):   end;
1123022   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1123023   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1123024   +   end;
MPRINT(EM_DIAGRAM):   end;
1123025   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1123026   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1123027   +   end;
MPRINT(EM_DIAGRAM):   end;
1123028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123029   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1123030   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1123031   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1123032   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1123033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123035   +   end;
MPRINT(EM_DIAGRAM):   end;
1123036   +end;
MPRINT(EM_DIAGRAM):   end;
1123037   +
1123038   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1123039   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1123040   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1123041   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1123042   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1123043   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1123044   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1123045   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1123046   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1123047   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1123048   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1123049   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1123050   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1123051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123053   +end;
MPRINT(EM_DIAGRAM):   end;
1123054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123055   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1123056   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1123057   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123058   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1123059   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1123060   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1123061   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1123062   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1123063   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123064   +         end;
MPRINT(EM_DIAGRAM):   end;
1123065   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1123066   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1123067   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1123068   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123069   +            end;
MPRINT(EM_DIAGRAM):   end;
1123070   +         end;
MPRINT(EM_DIAGRAM):   end;
1123071   +      end;
MPRINT(EM_DIAGRAM):   end;
1123072   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1123073   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1123074   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1123075   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123076   +         end;
MPRINT(EM_DIAGRAM):   end;
1123077   +      end;
MPRINT(EM_DIAGRAM):   end;
1123078   +   end;
MPRINT(EM_DIAGRAM):   end;
1123079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123080   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1123081   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1123082   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123083   +      end;
MPRINT(EM_DIAGRAM):   end;
1123084   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1123085   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1123086   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1123087   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1123088   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1123089   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1123090   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123091   +         end;
MPRINT(EM_DIAGRAM):   end;
1123092   +      end;
MPRINT(EM_DIAGRAM):   end;
1123093   +   end;
MPRINT(EM_DIAGRAM):   end;
1123094   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1123095   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1123096   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1123097   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1123098   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1123099   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123100   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123101   +   end;
MPRINT(EM_DIAGRAM):   end;
1123102   +end;
MPRINT(EM_DIAGRAM):   end;
1123103   +
1123104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123105   +*** Checking missing input Interval
1123106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1123107   +
1123108   +IF NMISS(
1123109   +   Income ,
1123110   +   Kidhome ,
1123111   +   MntFishProducts ,
1123112   +   MntFruits ,
1123113   +   MntGoldProds ,
1123114   +   MntMeatProducts ,
1123115   +   MntSweetProducts ,
1123116   +   MntWines ,
1123117   +   NumCatalogPurchases ,
1123118   +   NumDealsPurchases ,
1123119   +   NumStorePurchases ,
1123120   +   NumWebPurchases ,
1123121   +   NumWebVisitsMonth ,
1123122   +   Recency ,
1123123   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1123124   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1123125   +
1123126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123127   +END;
MPRINT(EM_DIAGRAM):   END;
1123128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123129   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1123130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123131   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123132   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1123133   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1123134   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1123135   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1123136   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1123137   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1123138   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1123139   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1123140   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1123141   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1123142   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1123143   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1123144   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1123145   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1123146   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1123147   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1123148   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1123149   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1123150   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1123151   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1123152   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1123153   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1123154   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1123155   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1123156   +END;
MPRINT(EM_DIAGRAM):   END;
1123157   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123158   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1123159   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1123160   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1123161   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1123162   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1123163   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1123164   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1123165   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1123166   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1123167   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1123168   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1123169   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1123170   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1123171   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1123172   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1123173   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1123174   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1123175   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1123176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1123177   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1123178   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1123179   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1123180   +   ELSE S_NumCatalogPurchases
1123181   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1123182   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1123183   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1123184   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1123185   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1123186   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1123187   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1123188   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1123189   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1123190   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1123191   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1123192   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1123193   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1123194   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1123195   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1123196   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1123197   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1123198   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1123199   +END;
MPRINT(EM_DIAGRAM):   END;
1123200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123201   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1123202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123204   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1123205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123207   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1123208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123209   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123210   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1123211   +          +     0.06177226616611 * S_MntFishProducts
1123212   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1123213   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1123214   +          +     0.19245635559754 * S_MntSweetProducts
1123215   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1123216   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1123217   +          +    -0.35392759932805 * S_NumStorePurchases
1123218   +          +     -0.2443007642616 * S_NumWebPurchases
1123219   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1123220   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1123221   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1123222   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1123223   +          +     0.00012212205827 * S_MntFishProducts
1123224   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1123225   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1123226   +          +     0.01459978689352 * S_MntSweetProducts
1123227   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1123228   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1123229   +          +      0.4054643699817 * S_NumStorePurchases
1123230   +          +     0.27747327375374 * S_NumWebPurchases
1123231   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1123232   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1123233   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1123234   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1123235   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1123236   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1123237   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1123238   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1123239   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1123240   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1123241   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1123242   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1123243   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1123244   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1123245   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1123246   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1123247   +          +    -0.43667846017683 * Marital_StatusDivorced
1123248   +          +     1.33507828005472 * Marital_StatusMarried
1123249   +          +    -0.75026283842664 * Marital_StatusSingle
1123250   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1123251   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1123252   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1123253   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1123254   +          +    -0.03531690128173 * Marital_StatusDivorced
1123255   +          +    -0.04344171367809 * Marital_StatusMarried
1123256   +          +    -0.05137362653166 * Marital_StatusSingle
1123257   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1123258   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1123259   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1123260   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1123261   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1123262   +END;
MPRINT(EM_DIAGRAM):   END;
1123263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123264   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1123265   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1123266   +END;
MPRINT(EM_DIAGRAM):   END;
1123267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123268   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1123269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123270   +
1123271   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1123272   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1123273   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1123274   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1123275   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1123276   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123277   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1123278   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1123279   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1123280   +end;
MPRINT(EM_DIAGRAM):   end;
1123281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123282   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1123283   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1123284   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1123285   +   end;
MPRINT(EM_DIAGRAM):   end;
1123286   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1123287   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1123288   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1123289   +   end;
MPRINT(EM_DIAGRAM):   end;
1123290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123291   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1123292   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1123293   +   end;
MPRINT(EM_DIAGRAM):   end;
1123294   +end;
MPRINT(EM_DIAGRAM):   end;
1123295   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123296   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1123297   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1123298   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1123299   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1123300   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1123301   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1123302   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1123303   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1123304   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1123305   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1123306   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1123307   +END;
MPRINT(EM_DIAGRAM):   END;
1123308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123309   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1123310   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1123311   +END;
MPRINT(EM_DIAGRAM):   END;
1123312   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1123313   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1123314   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1123315   +END;
MPRINT(EM_DIAGRAM):   END;
1123316   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1123317   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1123318   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1123319   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1123320   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1123321   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1123322   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1123323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123324   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1123325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123326   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1123327   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1123328   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1123329   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1123330   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1123331   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1123332   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1123333   +END;
MPRINT(EM_DIAGRAM):   END;
1123334   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1123335   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1123336   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1123337   +drop
1123338   +H11
1123339   +H12
1123340   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1123341   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1123342   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1123343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123344   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1123345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123346   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1123347   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1123348   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1123349   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1123350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123351   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1123352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123353   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1123354   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1123355   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1123356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123357   +* Ensmbl10: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 3 of 5;
1123358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123360   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1123361   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1123362   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1123363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123364   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1123365   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1123366   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1123367   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1123368   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1123369   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1123370   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1123371   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1123372   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1123373   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1123374   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1123375   +LENGTH _WARN_ $4
1123376   +      F_DepVar  $ 12
1123377   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1123378   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1123379   +
1123380   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1123381   +
1123382   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1123383   +
1123384   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1123385   +
1123386   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1123387   +
1123388   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1123389   +
1123390   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1123391   +
1123392   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1123393   +
1123394   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1123395   +
1123396   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1123397   +
1123398   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1123399   +
1123400   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1123401   +
1123402   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1123403   +
1123404   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1123405   +
1123406   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1123407   +
1123408   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1123409   +
1123410   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1123411   +
1123412   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1123413   +
1123414   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1123415   +
1123416   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1123417   +
1123418   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1123419   +
1123420   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1123421   +
1123422   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1123423   +
1123424   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1123425   +
1123426   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1123427   +
1123428   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1123429   +
1123430   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1123431   +
1123432   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1123433   +
1123434   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1123435   +
1123436   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1123437   +
1123438   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1123439   +
1123440   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1123441   +
1123442   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1123443   +
1123444   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1123445   +
1123446   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1123447   +
1123448   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1123449   +
1123450   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1123451   +
1123452   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1123453   +
1123454   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1123455   +
1123456   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1123457   +
1123458   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1123459   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1123460   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1123461   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1123462   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123463   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123464   +end;
MPRINT(EM_DIAGRAM):   end;
1123465   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123466   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123467   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1123468   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123469   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123470   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1123471   +   end;
MPRINT(EM_DIAGRAM):   end;
1123472   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123473   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1123474   +   end;
MPRINT(EM_DIAGRAM):   end;
1123475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123476   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1123477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123479   +   end;
MPRINT(EM_DIAGRAM):   end;
1123480   +end;
MPRINT(EM_DIAGRAM):   end;
1123481   +
1123482   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1123483   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1123484   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1123485   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1123486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123488   +end;
MPRINT(EM_DIAGRAM):   end;
1123489   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123490   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123491   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1123492   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123493   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123494   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1123495   +   end;
MPRINT(EM_DIAGRAM):   end;
1123496   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123497   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1123498   +   end;
MPRINT(EM_DIAGRAM):   end;
1123499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123500   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1123501   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123502   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123503   +   end;
MPRINT(EM_DIAGRAM):   end;
1123504   +end;
MPRINT(EM_DIAGRAM):   end;
1123505   +
1123506   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1123507   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1123508   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1123509   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1123510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123512   +end;
MPRINT(EM_DIAGRAM):   end;
1123513   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123514   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123515   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1123516   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123517   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123518   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1123519   +   end;
MPRINT(EM_DIAGRAM):   end;
1123520   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123521   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1123522   +   end;
MPRINT(EM_DIAGRAM):   end;
1123523   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123524   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1123525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123527   +   end;
MPRINT(EM_DIAGRAM):   end;
1123528   +end;
MPRINT(EM_DIAGRAM):   end;
1123529   +
1123530   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1123531   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1123532   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1123533   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1123534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123536   +end;
MPRINT(EM_DIAGRAM):   end;
1123537   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123538   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123539   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1123540   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123541   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123542   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1123543   +   end;
MPRINT(EM_DIAGRAM):   end;
1123544   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123545   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1123546   +   end;
MPRINT(EM_DIAGRAM):   end;
1123547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123548   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1123549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123551   +   end;
MPRINT(EM_DIAGRAM):   end;
1123552   +end;
MPRINT(EM_DIAGRAM):   end;
1123553   +
1123554   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1123555   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1123556   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1123557   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1123558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123560   +end;
MPRINT(EM_DIAGRAM):   end;
1123561   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123562   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123563   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1123564   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123565   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123566   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1123567   +   end;
MPRINT(EM_DIAGRAM):   end;
1123568   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123569   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1123570   +   end;
MPRINT(EM_DIAGRAM):   end;
1123571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123572   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1123573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123575   +   end;
MPRINT(EM_DIAGRAM):   end;
1123576   +end;
MPRINT(EM_DIAGRAM):   end;
1123577   +
1123578   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1123579   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1123580   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1123581   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1123582   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123584   +end;
MPRINT(EM_DIAGRAM):   end;
1123585   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123586   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1123587   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1123588   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123589   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1123590   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1123591   +   end;
MPRINT(EM_DIAGRAM):   end;
1123592   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1123593   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1123594   +   end;
MPRINT(EM_DIAGRAM):   end;
1123595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123596   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1123597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123599   +   end;
MPRINT(EM_DIAGRAM):   end;
1123600   +end;
MPRINT(EM_DIAGRAM):   end;
1123601   +
1123602   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1123603   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1123604   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1123605   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1123606   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1123607   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1123608   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1123609   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1123610   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1123611   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1123612   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1123613   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1123614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123616   +end;
MPRINT(EM_DIAGRAM):   end;
1123617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123618   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1123619   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1123620   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123621   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1123622   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1123623   +   end;
MPRINT(EM_DIAGRAM):   end;
1123624   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1123625   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1123626   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1123627   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1123628   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1123629   +   end;
MPRINT(EM_DIAGRAM):   end;
1123630   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1123631   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1123632   +   end;
MPRINT(EM_DIAGRAM):   end;
1123633   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1123634   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1123635   +   end;
MPRINT(EM_DIAGRAM):   end;
1123636   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1123637   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1123638   +   end;
MPRINT(EM_DIAGRAM):   end;
1123639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123640   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1123641   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1123642   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1123643   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1123644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123646   +   end;
MPRINT(EM_DIAGRAM):   end;
1123647   +end;
MPRINT(EM_DIAGRAM):   end;
1123648   +
1123649   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1123650   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1123651   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1123652   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1123653   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1123654   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1123655   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1123656   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1123657   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1123658   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1123659   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1123660   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1123661   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1123662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1123663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123664   +end;
MPRINT(EM_DIAGRAM):   end;
1123665   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123666   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1123667   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1123668   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123669   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1123670   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1123671   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1123672   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1123673   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1123674   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123675   +         end;
MPRINT(EM_DIAGRAM):   end;
1123676   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1123677   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1123678   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1123679   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123680   +            end;
MPRINT(EM_DIAGRAM):   end;
1123681   +         end;
MPRINT(EM_DIAGRAM):   end;
1123682   +      end;
MPRINT(EM_DIAGRAM):   end;
1123683   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1123684   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1123685   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1123686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123687   +         end;
MPRINT(EM_DIAGRAM):   end;
1123688   +      end;
MPRINT(EM_DIAGRAM):   end;
1123689   +   end;
MPRINT(EM_DIAGRAM):   end;
1123690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123691   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1123692   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1123693   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123694   +      end;
MPRINT(EM_DIAGRAM):   end;
1123695   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1123696   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1123697   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1123698   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1123699   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1123700   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1123701   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1123702   +         end;
MPRINT(EM_DIAGRAM):   end;
1123703   +      end;
MPRINT(EM_DIAGRAM):   end;
1123704   +   end;
MPRINT(EM_DIAGRAM):   end;
1123705   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1123706   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1123707   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1123708   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1123709   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1123710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1123711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123712   +   end;
MPRINT(EM_DIAGRAM):   end;
1123713   +end;
MPRINT(EM_DIAGRAM):   end;
1123714   +
1123715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123716   +*** Checking missing input Interval
1123717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1123718   +
1123719   +IF NMISS(
1123720   +   Income ,
1123721   +   Kidhome ,
1123722   +   MntFishProducts ,
1123723   +   MntFruits ,
1123724   +   MntGoldProds ,
1123725   +   MntMeatProducts ,
1123726   +   MntSweetProducts ,
1123727   +   MntWines ,
1123728   +   NumCatalogPurchases ,
1123729   +   NumDealsPurchases ,
1123730   +   NumStorePurchases ,
1123731   +   NumWebPurchases ,
1123732   +   NumWebVisitsMonth ,
1123733   +   Recency ,
1123734   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1123735   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1123736   +
1123737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1123738   +END;
MPRINT(EM_DIAGRAM):   END;
1123739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123740   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1123741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123743   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1123744   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1123745   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1123746   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1123747   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1123748   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1123749   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1123750   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1123751   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1123752   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1123753   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1123754   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1123755   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1123756   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1123757   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1123758   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1123759   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1123760   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1123761   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1123762   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1123763   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1123764   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1123765   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1123766   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1123767   +END;
MPRINT(EM_DIAGRAM):   END;
1123768   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123769   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1123770   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1123771   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1123772   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1123773   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1123774   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1123775   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1123776   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1123777   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1123778   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1123779   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1123780   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1123781   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1123782   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1123783   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1123784   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1123785   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1123786   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1123787   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1123788   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1123789   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1123790   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1123791   +   ELSE S_NumCatalogPurchases
1123792   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1123793   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1123794   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1123795   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1123796   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1123797   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1123798   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1123799   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1123800   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1123801   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1123802   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1123803   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1123804   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1123805   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1123806   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1123807   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1123808   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1123809   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1123810   +END;
MPRINT(EM_DIAGRAM):   END;
1123811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123812   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1123813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123815   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1123816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123818   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1123819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123821   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1123822   +          +    -0.12974862644982 * S_MntFishProducts
1123823   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1123824   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1123825   +          +    -0.12290326901613 * S_MntSweetProducts
1123826   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1123827   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1123828   +          +     0.09738032540137 * S_NumStorePurchases
1123829   +          +     0.44459515215205 * S_NumWebPurchases
1123830   +          +      0.8471075994578 * S_NumWebVisitsMonth
1123831   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1123832   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1123833   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1123834   +          +     0.02406077596811 * S_MntFishProducts
1123835   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1123836   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1123837   +          +     -0.1147507059349 * S_MntSweetProducts
1123838   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1123839   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1123840   +          +    -0.23920969262322 * S_NumStorePurchases
1123841   +          +     -0.6008837862932 * S_NumWebPurchases
1123842   +          +     0.26759743722885 * S_NumWebVisitsMonth
1123843   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1123844   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1123845   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1123846   +          +     0.04398331533724 * S_MntFishProducts
1123847   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1123848   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1123849   +          +     0.00552488718744 * S_MntSweetProducts
1123850   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1123851   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1123852   +          +     0.60058189155105 * S_NumStorePurchases
1123853   +          +     0.51423374855856 * S_NumWebPurchases
1123854   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1123855   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1123856   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1123857   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1123858   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1123859   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1123860   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1123861   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1123862   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1123863   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1123864   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1123865   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1123866   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1123867   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1123868   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1123869   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1123870   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1123871   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1123872   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1123873   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1123874   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1123875   +          +     0.52129580188513 * Marital_StatusDivorced
1123876   +          +     -1.5224490339553 * Marital_StatusMarried
1123877   +          +     1.05062906057771 * Marital_StatusSingle
1123878   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1123879   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1123880   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1123881   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1123882   +          +    -0.14428158063317 * Marital_StatusDivorced
1123883   +          +     0.22396926143356 * Marital_StatusMarried
1123884   +          +    -0.12980854818876 * Marital_StatusSingle
1123885   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1123886   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1123887   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1123888   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1123889   +          +    -0.25615797303064 * Marital_StatusDivorced
1123890   +          +     0.18825506199046 * Marital_StatusMarried
1123891   +          +    -0.24607556819871 * Marital_StatusSingle
1123892   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1123893   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1123894   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1123895   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1123896   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1123897   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1123898   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1123899   +END;
MPRINT(EM_DIAGRAM):   END;
1123900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123901   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1123902   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1123903   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1123904   +END;
MPRINT(EM_DIAGRAM):   END;
1123905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123906   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1123907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123908   +
1123909   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1123910   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1123911   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1123912   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1123913   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1123914   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1123915   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1123916   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1123917   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1123918   +end;
MPRINT(EM_DIAGRAM):   end;
1123919   +else do;
MPRINT(EM_DIAGRAM):   else do;
1123920   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1123921   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1123922   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1123923   +   end;
MPRINT(EM_DIAGRAM):   end;
1123924   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1123925   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1123926   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1123927   +   end;
MPRINT(EM_DIAGRAM):   end;
1123928   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1123929   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1123930   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1123931   +   end;
MPRINT(EM_DIAGRAM):   end;
1123932   +end;
MPRINT(EM_DIAGRAM):   end;
1123933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1123934   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1123935   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1123936   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1123937   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1123938   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1123939   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1123940   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1123941   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1123942   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1123943   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1123944   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1123945   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1123946   +END;
MPRINT(EM_DIAGRAM):   END;
1123947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1123948   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1123949   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1123950   +END;
MPRINT(EM_DIAGRAM):   END;
1123951   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1123952   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1123953   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1123954   +END;
MPRINT(EM_DIAGRAM):   END;
1123955   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1123956   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1123957   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1123958   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1123959   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1123960   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1123961   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1123962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123963   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1123964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1123965   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1123966   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1123967   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1123968   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1123969   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1123970   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1123971   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1123972   +END;
MPRINT(EM_DIAGRAM):   END;
1123973   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1123974   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1123975   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1123976   +drop
1123977   +H11
1123978   +H12
1123979   +H13
1123980   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1123981   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1123982   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1123983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123984   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1123985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123986   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1123987   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1123988   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1123989   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1123990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123991   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1123992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123993   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1123994   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1123995   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1123996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123997   +* Ensmbl10: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 4 of 5;
1123998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1123999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124000   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1124001   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1124002   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1124003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124004   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1124005   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1124006   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1124007   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1124008   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1124009   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1124010   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1124011   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1124012   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1124013   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1124014   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1124015   +LENGTH _WARN_ $4
1124016   +      F_DepVar  $ 12
1124017   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1124018   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1124019   +
1124020   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1124021   +
1124022   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1124023   +
1124024   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1124025   +
1124026   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1124027   +
1124028   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1124029   +
1124030   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1124031   +
1124032   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1124033   +
1124034   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1124035   +
1124036   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1124037   +
1124038   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1124039   +
1124040   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1124041   +
1124042   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1124043   +
1124044   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1124045   +
1124046   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1124047   +
1124048   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1124049   +
1124050   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1124051   +
1124052   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1124053   +
1124054   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1124055   +
1124056   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1124057   +
1124058   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1124059   +
1124060   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1124061   +
1124062   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1124063   +
1124064   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1124065   +
1124066   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1124067   +
1124068   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1124069   +
1124070   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1124071   +
1124072   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1124073   +
1124074   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1124075   +
1124076   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1124077   +
1124078   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1124079   +
1124080   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1124081   +
1124082   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1124083   +
1124084   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1124085   +
1124086   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1124087   +
1124088   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1124089   +
1124090   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1124091   +
1124092   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1124093   +
1124094   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1124095   +
1124096   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1124097   +
1124098   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1124099   +
1124100   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1124101   +
1124102   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1124103   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1124104   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1124105   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1124106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124108   +end;
MPRINT(EM_DIAGRAM):   end;
1124109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124111   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1124112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124114   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1124115   +   end;
MPRINT(EM_DIAGRAM):   end;
1124116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124117   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1124118   +   end;
MPRINT(EM_DIAGRAM):   end;
1124119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124120   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1124121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124123   +   end;
MPRINT(EM_DIAGRAM):   end;
1124124   +end;
MPRINT(EM_DIAGRAM):   end;
1124125   +
1124126   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1124127   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1124128   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1124129   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1124130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124132   +end;
MPRINT(EM_DIAGRAM):   end;
1124133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124135   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1124136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124138   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1124139   +   end;
MPRINT(EM_DIAGRAM):   end;
1124140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124141   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1124142   +   end;
MPRINT(EM_DIAGRAM):   end;
1124143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124144   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1124145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124147   +   end;
MPRINT(EM_DIAGRAM):   end;
1124148   +end;
MPRINT(EM_DIAGRAM):   end;
1124149   +
1124150   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1124151   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1124152   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1124153   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1124154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124156   +end;
MPRINT(EM_DIAGRAM):   end;
1124157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124159   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1124160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124162   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1124163   +   end;
MPRINT(EM_DIAGRAM):   end;
1124164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124165   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1124166   +   end;
MPRINT(EM_DIAGRAM):   end;
1124167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124168   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1124169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124171   +   end;
MPRINT(EM_DIAGRAM):   end;
1124172   +end;
MPRINT(EM_DIAGRAM):   end;
1124173   +
1124174   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1124175   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1124176   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1124177   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1124178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124180   +end;
MPRINT(EM_DIAGRAM):   end;
1124181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124183   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1124184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124186   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1124187   +   end;
MPRINT(EM_DIAGRAM):   end;
1124188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124189   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1124190   +   end;
MPRINT(EM_DIAGRAM):   end;
1124191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124192   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1124193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124195   +   end;
MPRINT(EM_DIAGRAM):   end;
1124196   +end;
MPRINT(EM_DIAGRAM):   end;
1124197   +
1124198   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1124199   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1124200   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1124201   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1124202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124204   +end;
MPRINT(EM_DIAGRAM):   end;
1124205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124207   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1124208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124210   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1124211   +   end;
MPRINT(EM_DIAGRAM):   end;
1124212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124213   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1124214   +   end;
MPRINT(EM_DIAGRAM):   end;
1124215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124216   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1124217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124219   +   end;
MPRINT(EM_DIAGRAM):   end;
1124220   +end;
MPRINT(EM_DIAGRAM):   end;
1124221   +
1124222   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1124223   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1124224   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1124225   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1124226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124228   +end;
MPRINT(EM_DIAGRAM):   end;
1124229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124231   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1124232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124234   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1124235   +   end;
MPRINT(EM_DIAGRAM):   end;
1124236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124237   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1124238   +   end;
MPRINT(EM_DIAGRAM):   end;
1124239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124240   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1124241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124243   +   end;
MPRINT(EM_DIAGRAM):   end;
1124244   +end;
MPRINT(EM_DIAGRAM):   end;
1124245   +
1124246   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1124247   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1124248   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1124249   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1124250   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1124251   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1124252   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1124253   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1124254   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1124255   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1124256   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1124257   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1124258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124260   +end;
MPRINT(EM_DIAGRAM):   end;
1124261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124262   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1124263   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1124264   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124265   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1124266   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1124267   +   end;
MPRINT(EM_DIAGRAM):   end;
1124268   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1124269   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1124270   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1124271   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1124272   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1124273   +   end;
MPRINT(EM_DIAGRAM):   end;
1124274   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1124275   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1124276   +   end;
MPRINT(EM_DIAGRAM):   end;
1124277   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1124278   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1124279   +   end;
MPRINT(EM_DIAGRAM):   end;
1124280   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1124281   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1124282   +   end;
MPRINT(EM_DIAGRAM):   end;
1124283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124284   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1124285   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1124286   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1124287   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1124288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124290   +   end;
MPRINT(EM_DIAGRAM):   end;
1124291   +end;
MPRINT(EM_DIAGRAM):   end;
1124292   +
1124293   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1124294   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1124295   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1124296   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1124297   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1124298   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1124299   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1124300   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1124301   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1124302   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1124303   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1124304   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1124305   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1124306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124308   +end;
MPRINT(EM_DIAGRAM):   end;
1124309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124310   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1124311   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1124312   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124313   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1124314   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1124315   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1124316   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1124317   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1124318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1124319   +         end;
MPRINT(EM_DIAGRAM):   end;
1124320   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1124321   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1124322   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1124323   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1124324   +            end;
MPRINT(EM_DIAGRAM):   end;
1124325   +         end;
MPRINT(EM_DIAGRAM):   end;
1124326   +      end;
MPRINT(EM_DIAGRAM):   end;
1124327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1124328   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1124329   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1124330   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1124331   +         end;
MPRINT(EM_DIAGRAM):   end;
1124332   +      end;
MPRINT(EM_DIAGRAM):   end;
1124333   +   end;
MPRINT(EM_DIAGRAM):   end;
1124334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124335   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1124336   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1124337   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1124338   +      end;
MPRINT(EM_DIAGRAM):   end;
1124339   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1124340   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1124341   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1124342   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1124343   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1124344   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1124345   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1124346   +         end;
MPRINT(EM_DIAGRAM):   end;
1124347   +      end;
MPRINT(EM_DIAGRAM):   end;
1124348   +   end;
MPRINT(EM_DIAGRAM):   end;
1124349   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1124350   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1124351   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1124352   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1124353   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1124354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124356   +   end;
MPRINT(EM_DIAGRAM):   end;
1124357   +end;
MPRINT(EM_DIAGRAM):   end;
1124358   +
1124359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124360   +*** Checking missing input Interval
1124361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1124362   +
1124363   +IF NMISS(
1124364   +   Income ,
1124365   +   Kidhome ,
1124366   +   MntFishProducts ,
1124367   +   MntFruits ,
1124368   +   MntGoldProds ,
1124369   +   MntMeatProducts ,
1124370   +   MntSweetProducts ,
1124371   +   MntWines ,
1124372   +   NumCatalogPurchases ,
1124373   +   NumDealsPurchases ,
1124374   +   NumStorePurchases ,
1124375   +   NumWebPurchases ,
1124376   +   NumWebVisitsMonth ,
1124377   +   Recency ,
1124378   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1124379   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1124380   +
1124381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124382   +END;
MPRINT(EM_DIAGRAM):   END;
1124383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124384   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1124385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1124387   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1124388   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1124389   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1124390   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1124391   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1124392   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1124393   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1124394   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1124395   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1124396   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1124397   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1124398   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1124399   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1124400   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1124401   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1124402   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1124403   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1124404   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1124405   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1124406   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1124407   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1124408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1124409   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1124410   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1124411   +END;
MPRINT(EM_DIAGRAM):   END;
1124412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1124413   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1124414   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1124415   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1124416   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1124417   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1124418   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1124419   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1124420   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1124421   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1124422   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1124423   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1124424   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1124425   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1124426   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1124427   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1124428   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1124429   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1124430   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1124431   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1124432   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1124433   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1124434   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1124435   +   ELSE S_NumCatalogPurchases
1124436   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1124437   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1124438   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1124439   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1124440   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1124441   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1124442   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1124443   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1124444   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1124445   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1124446   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1124447   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1124448   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1124449   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1124450   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1124451   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1124452   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1124453   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1124454   +END;
MPRINT(EM_DIAGRAM):   END;
1124455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124456   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1124457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124459   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1124460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124462   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1124463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124464   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1124465   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1124466   +          +     0.24367603598167 * S_MntFishProducts
1124467   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1124468   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1124469   +          +     0.34054806441484 * S_MntSweetProducts
1124470   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1124471   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1124472   +          +     0.98942946974575 * S_NumStorePurchases
1124473   +          +     0.89701206630103 * S_NumWebPurchases
1124474   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1124475   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1124476   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1124477   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1124478   +          +     0.16683404689723 * S_MntFishProducts
1124479   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1124480   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1124481   +          +     0.20389084548968 * S_MntSweetProducts
1124482   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1124483   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1124484   +          +     1.27164659640366 * S_NumStorePurchases
1124485   +          +     1.02122194207802 * S_NumWebPurchases
1124486   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1124487   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1124488   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1124489   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1124490   +          +    -0.03345077166544 * S_MntFishProducts
1124491   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1124492   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1124493   +          +    -0.11948662500951 * S_MntSweetProducts
1124494   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1124495   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1124496   +          +     0.22401914357376 * S_NumStorePurchases
1124497   +          +     0.04219877865976 * S_NumWebPurchases
1124498   +          +     1.21753334166036 * S_NumWebVisitsMonth
1124499   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1124500   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1124501   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1124502   +          +     0.31175257038578 * S_MntFishProducts
1124503   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1124504   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1124505   +          +      0.0927253053382 * S_MntSweetProducts
1124506   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1124507   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1124508   +          +    -0.12667606349662 * S_NumStorePurchases
1124509   +          +     0.30148374518724 * S_NumWebPurchases
1124510   +          +     0.48934229701658 * S_NumWebVisitsMonth
1124511   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1124512   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1124513   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1124514   +          +     0.42646725119177 * S_MntFishProducts
1124515   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1124516   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1124517   +          +    -0.01493605582616 * S_MntSweetProducts
1124518   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1124519   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1124520   +          +     0.54256744091258 * S_NumStorePurchases
1124521   +          +     0.43065931458468 * S_NumWebPurchases
1124522   +          +      0.5935561420466 * S_NumWebVisitsMonth
1124523   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1124524   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1124525   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1124526   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1124527   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1124528   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1124529   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1124530   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1124531   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1124532   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1124533   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1124534   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1124535   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1124536   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1124537   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1124538   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1124539   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1124540   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1124541   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1124542   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1124543   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1124544   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1124545   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1124546   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1124547   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1124548   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1124549   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1124550   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1124551   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1124552   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1124553   +          +    -0.85912688909911 * Marital_StatusDivorced
1124554   +          +     0.81561401465875 * Marital_StatusMarried
1124555   +          +    -0.58324403081542 * Marital_StatusSingle
1124556   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1124557   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1124558   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1124559   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1124560   +          +    -0.34784695867287 * Marital_StatusDivorced
1124561   +          +    -0.18194022182247 * Marital_StatusMarried
1124562   +          +    -0.10633185904164 * Marital_StatusSingle
1124563   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1124564   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1124565   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1124566   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1124567   +          +     0.61058752124466 * Marital_StatusDivorced
1124568   +          +    -1.38793808025141 * Marital_StatusMarried
1124569   +          +     1.10060737810944 * Marital_StatusSingle
1124570   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1124571   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1124572   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1124573   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1124574   +          +     0.11973800573581 * Marital_StatusDivorced
1124575   +          +      -0.294635257911 * Marital_StatusMarried
1124576   +          +    -0.05399659601172 * Marital_StatusSingle
1124577   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1124578   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1124579   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1124580   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1124581   +          +     0.42838191659864 * Marital_StatusDivorced
1124582   +          +    -0.09150349181363 * Marital_StatusMarried
1124583   +          +    -0.33520164145276 * Marital_StatusSingle
1124584   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1124585   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1124586   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1124587   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1124588   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1124589   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1124590   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1124591   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1124592   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1124593   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1124594   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1124595   +END;
MPRINT(EM_DIAGRAM):   END;
1124596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1124597   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1124598   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1124599   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1124600   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1124601   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1124602   +END;
MPRINT(EM_DIAGRAM):   END;
1124603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124604   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1124605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124606   +
1124607   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1124608   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1124609   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1124610   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1124611   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1124612   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124613   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1124614   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1124615   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1124616   +end;
MPRINT(EM_DIAGRAM):   end;
1124617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124618   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1124619   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1124620   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1124621   +   end;
MPRINT(EM_DIAGRAM):   end;
1124622   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1124623   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1124624   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1124625   +   end;
MPRINT(EM_DIAGRAM):   end;
1124626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124627   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1124628   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1124629   +   end;
MPRINT(EM_DIAGRAM):   end;
1124630   +end;
MPRINT(EM_DIAGRAM):   end;
1124631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1124632   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1124633   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1124634   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1124635   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1124636   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1124637   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1124638   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1124639   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1124640   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1124641   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1124642   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1124643   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1124644   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1124645   +END;
MPRINT(EM_DIAGRAM):   END;
1124646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1124647   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1124648   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1124649   +END;
MPRINT(EM_DIAGRAM):   END;
1124650   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1124651   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1124652   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1124653   +END;
MPRINT(EM_DIAGRAM):   END;
1124654   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1124655   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1124656   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1124657   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1124658   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1124659   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1124660   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1124661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124662   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1124663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1124664   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1124665   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1124666   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1124667   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1124668   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1124669   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1124670   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1124671   +END;
MPRINT(EM_DIAGRAM):   END;
1124672   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1124673   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1124674   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1124675   +drop
1124676   +H11
1124677   +H12
1124678   +H13
1124679   +H14
1124680   +H15
1124681   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1124682   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1124683   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1124684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124685   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1124686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124687   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1124688   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1124689   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1124690   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1124691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124692   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1124693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124694   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1124695   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1124696   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1124697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124698   +* Ensmbl10: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 5 of 5;
1124699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124701   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1124702   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1124703   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1124704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1124705   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1124706   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1124707   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1124708   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1124709   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1124710   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1124711   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1124712   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1124713   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1124714   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1124715   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1124716   +LENGTH _WARN_ $4
1124717   +      F_DepVar  $ 12
1124718   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1124719   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1124720   +
1124721   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1124722   +
1124723   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1124724   +
1124725   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1124726   +
1124727   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1124728   +
1124729   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1124730   +
1124731   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1124732   +
1124733   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1124734   +
1124735   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1124736   +
1124737   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1124738   +
1124739   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1124740   +
1124741   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1124742   +
1124743   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1124744   +
1124745   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1124746   +
1124747   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1124748   +
1124749   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1124750   +
1124751   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1124752   +
1124753   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1124754   +
1124755   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1124756   +
1124757   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1124758   +
1124759   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1124760   +
1124761   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1124762   +
1124763   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1124764   +
1124765   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1124766   +
1124767   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1124768   +
1124769   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1124770   +
1124771   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1124772   +
1124773   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1124774   +
1124775   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1124776   +
1124777   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1124778   +
1124779   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1124780   +
1124781   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1124782   +
1124783   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1124784   +
1124785   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1124786   +
1124787   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1124788   +
1124789   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1124790   +
1124791   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1124792   +
1124793   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1124794   +
1124795   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1124796   +
1124797   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1124798   +
1124799   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1124800   +
1124801   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1124802   +
1124803   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1124804   +
1124805   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1124806   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1124807   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1124808   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1124809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124811   +end;
MPRINT(EM_DIAGRAM):   end;
1124812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124814   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1124815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124817   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1124818   +   end;
MPRINT(EM_DIAGRAM):   end;
1124819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124820   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1124821   +   end;
MPRINT(EM_DIAGRAM):   end;
1124822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124823   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1124824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124826   +   end;
MPRINT(EM_DIAGRAM):   end;
1124827   +end;
MPRINT(EM_DIAGRAM):   end;
1124828   +
1124829   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1124830   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1124831   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1124832   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1124833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124835   +end;
MPRINT(EM_DIAGRAM):   end;
1124836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124838   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1124839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124841   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1124842   +   end;
MPRINT(EM_DIAGRAM):   end;
1124843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124844   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1124845   +   end;
MPRINT(EM_DIAGRAM):   end;
1124846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124847   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1124848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124850   +   end;
MPRINT(EM_DIAGRAM):   end;
1124851   +end;
MPRINT(EM_DIAGRAM):   end;
1124852   +
1124853   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1124854   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1124855   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1124856   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1124857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124859   +end;
MPRINT(EM_DIAGRAM):   end;
1124860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124862   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1124863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124865   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1124866   +   end;
MPRINT(EM_DIAGRAM):   end;
1124867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124868   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1124869   +   end;
MPRINT(EM_DIAGRAM):   end;
1124870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124871   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1124872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124874   +   end;
MPRINT(EM_DIAGRAM):   end;
1124875   +end;
MPRINT(EM_DIAGRAM):   end;
1124876   +
1124877   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1124878   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1124879   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1124880   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1124881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124883   +end;
MPRINT(EM_DIAGRAM):   end;
1124884   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124886   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1124887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124889   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1124890   +   end;
MPRINT(EM_DIAGRAM):   end;
1124891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124892   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1124893   +   end;
MPRINT(EM_DIAGRAM):   end;
1124894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124895   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1124896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124898   +   end;
MPRINT(EM_DIAGRAM):   end;
1124899   +end;
MPRINT(EM_DIAGRAM):   end;
1124900   +
1124901   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1124902   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1124903   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1124904   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1124905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124907   +end;
MPRINT(EM_DIAGRAM):   end;
1124908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124910   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1124911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124913   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1124914   +   end;
MPRINT(EM_DIAGRAM):   end;
1124915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124916   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1124917   +   end;
MPRINT(EM_DIAGRAM):   end;
1124918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124919   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1124920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124922   +   end;
MPRINT(EM_DIAGRAM):   end;
1124923   +end;
MPRINT(EM_DIAGRAM):   end;
1124924   +
1124925   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1124926   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1124927   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1124928   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1124929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124931   +end;
MPRINT(EM_DIAGRAM):   end;
1124932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1124934   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1124935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1124937   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1124938   +   end;
MPRINT(EM_DIAGRAM):   end;
1124939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1124940   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1124941   +   end;
MPRINT(EM_DIAGRAM):   end;
1124942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124943   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1124944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124946   +   end;
MPRINT(EM_DIAGRAM):   end;
1124947   +end;
MPRINT(EM_DIAGRAM):   end;
1124948   +
1124949   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1124950   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1124951   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1124952   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1124953   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1124954   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1124955   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1124956   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1124957   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1124958   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1124959   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1124960   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1124961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1124962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124963   +end;
MPRINT(EM_DIAGRAM):   end;
1124964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1124965   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1124966   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1124967   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1124968   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1124969   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1124970   +   end;
MPRINT(EM_DIAGRAM):   end;
1124971   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1124972   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1124973   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1124974   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1124975   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1124976   +   end;
MPRINT(EM_DIAGRAM):   end;
1124977   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1124978   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1124979   +   end;
MPRINT(EM_DIAGRAM):   end;
1124980   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1124981   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1124982   +   end;
MPRINT(EM_DIAGRAM):   end;
1124983   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1124984   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1124985   +   end;
MPRINT(EM_DIAGRAM):   end;
1124986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1124987   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1124988   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1124989   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1124990   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1124991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1124992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1124993   +   end;
MPRINT(EM_DIAGRAM):   end;
1124994   +end;
MPRINT(EM_DIAGRAM):   end;
1124995   +
1124996   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1124997   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1124998   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1124999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1125000   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1125001   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1125002   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1125003   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1125004   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1125005   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1125006   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1125007   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1125008   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1125009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125011   +end;
MPRINT(EM_DIAGRAM):   end;
1125012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125013   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1125014   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1125015   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125016   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1125017   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1125018   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1125019   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1125020   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1125021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125022   +         end;
MPRINT(EM_DIAGRAM):   end;
1125023   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1125024   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1125025   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1125026   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125027   +            end;
MPRINT(EM_DIAGRAM):   end;
1125028   +         end;
MPRINT(EM_DIAGRAM):   end;
1125029   +      end;
MPRINT(EM_DIAGRAM):   end;
1125030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1125031   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1125032   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1125033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125034   +         end;
MPRINT(EM_DIAGRAM):   end;
1125035   +      end;
MPRINT(EM_DIAGRAM):   end;
1125036   +   end;
MPRINT(EM_DIAGRAM):   end;
1125037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125038   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1125039   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1125040   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125041   +      end;
MPRINT(EM_DIAGRAM):   end;
1125042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1125043   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1125044   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1125045   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1125046   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1125047   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1125048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125049   +         end;
MPRINT(EM_DIAGRAM):   end;
1125050   +      end;
MPRINT(EM_DIAGRAM):   end;
1125051   +   end;
MPRINT(EM_DIAGRAM):   end;
1125052   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1125053   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1125054   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1125055   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1125056   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1125057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125059   +   end;
MPRINT(EM_DIAGRAM):   end;
1125060   +end;
MPRINT(EM_DIAGRAM):   end;
1125061   +
1125062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125063   +*** Checking missing input Interval
1125064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1125065   +
1125066   +IF NMISS(
1125067   +   Income ,
1125068   +   Kidhome ,
1125069   +   MntFishProducts ,
1125070   +   MntFruits ,
1125071   +   MntGoldProds ,
1125072   +   MntMeatProducts ,
1125073   +   MntSweetProducts ,
1125074   +   MntWines ,
1125075   +   NumCatalogPurchases ,
1125076   +   NumDealsPurchases ,
1125077   +   NumStorePurchases ,
1125078   +   NumWebPurchases ,
1125079   +   NumWebVisitsMonth ,
1125080   +   Recency ,
1125081   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1125082   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1125083   +
1125084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125085   +END;
MPRINT(EM_DIAGRAM):   END;
1125086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125087   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1125088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1125090   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1125091   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1125092   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1125093   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1125094   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1125095   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1125096   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1125097   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1125098   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1125099   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1125100   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1125101   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1125102   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1125103   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1125104   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1125105   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1125106   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1125107   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1125108   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1125109   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1125110   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1125111   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1125112   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1125113   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1125114   +END;
MPRINT(EM_DIAGRAM):   END;
1125115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1125116   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1125117   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1125118   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1125119   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1125120   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1125121   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1125122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1125123   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1125124   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1125125   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1125126   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1125127   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1125128   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1125129   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1125130   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1125131   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1125132   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1125133   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1125134   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1125135   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1125136   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1125137   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1125138   +   ELSE S_NumCatalogPurchases
1125139   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1125140   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1125141   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1125142   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1125143   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1125144   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1125145   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1125146   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1125147   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1125148   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1125149   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1125150   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1125151   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1125152   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1125153   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1125154   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1125155   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1125156   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1125157   +END;
MPRINT(EM_DIAGRAM):   END;
1125158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125159   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1125160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125162   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1125163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125165   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1125166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1125168   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1125169   +          +    -0.08967295716195 * S_MntFishProducts
1125170   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1125171   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1125172   +          +    -0.02806094557115 * S_MntSweetProducts
1125173   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1125174   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1125175   +          +     0.25137876058262 * S_NumStorePurchases
1125176   +          +    -0.07865442401292 * S_NumWebPurchases
1125177   +          +     1.03197398967259 * S_NumWebVisitsMonth
1125178   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1125179   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1125180   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1125181   +          +     0.19312392388912 * S_MntFishProducts
1125182   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1125183   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1125184   +          +       0.204174263605 * S_MntSweetProducts
1125185   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1125186   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1125187   +          +     0.07747830335769 * S_NumStorePurchases
1125188   +          +     0.07960837555191 * S_NumWebPurchases
1125189   +          +     0.02351602389122 * S_NumWebVisitsMonth
1125190   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1125191   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1125192   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1125193   +          +     0.18733919794636 * S_MntFishProducts
1125194   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1125195   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1125196   +          +     0.42514606159239 * S_MntSweetProducts
1125197   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1125198   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1125199   +          +     0.36582106462789 * S_NumStorePurchases
1125200   +          +     0.04244777020435 * S_NumWebPurchases
1125201   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1125202   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1125203   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1125204   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1125205   +          +     0.05986489897572 * S_MntFishProducts
1125206   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1125207   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1125208   +          +    -0.05513370461072 * S_MntSweetProducts
1125209   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1125210   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1125211   +          +     0.64364674828841 * S_NumStorePurchases
1125212   +          +     0.15084748708424 * S_NumWebPurchases
1125213   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1125214   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1125215   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1125216   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1125217   +          +    -0.14543196273578 * S_MntFishProducts
1125218   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1125219   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1125220   +          +     0.49374793444169 * S_MntSweetProducts
1125221   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1125222   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1125223   +          +     1.23754786782746 * S_NumStorePurchases
1125224   +          +     1.11316667348511 * S_NumWebPurchases
1125225   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1125226   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1125227   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1125228   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1125229   +          +     0.29549884005341 * S_MntFishProducts
1125230   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1125231   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1125232   +          +    -0.11909215986981 * S_MntSweetProducts
1125233   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1125234   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1125235   +          +     0.30109334594548 * S_NumStorePurchases
1125236   +          +     0.01985762767489 * S_NumWebPurchases
1125237   +          +     0.44965133281333 * S_NumWebVisitsMonth
1125238   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1125239   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1125240   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1125241   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1125242   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1125243   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1125244   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1125245   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1125246   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1125247   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1125248   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1125249   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1125250   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1125251   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1125252   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1125253   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1125254   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1125255   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1125256   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1125257   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1125258   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1125259   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1125260   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1125261   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1125262   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1125263   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1125264   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1125265   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1125266   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1125267   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1125268   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1125269   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1125270   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1125271   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1125272   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1125273   +          +     0.51015833145636 * Marital_StatusDivorced
1125274   +          +     -1.1653662063616 * Marital_StatusMarried
1125275   +          +     1.19396547750441 * Marital_StatusSingle
1125276   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1125277   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1125278   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1125279   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1125280   +          +     0.09154288513995 * Marital_StatusDivorced
1125281   +          +     0.06725684628382 * Marital_StatusMarried
1125282   +          +     0.11327659191494 * Marital_StatusSingle
1125283   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1125284   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1125285   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1125286   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1125287   +          +     0.37591653615852 * Marital_StatusDivorced
1125288   +          +    -0.05024236790132 * Marital_StatusMarried
1125289   +          +    -0.28317154997144 * Marital_StatusSingle
1125290   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1125291   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1125292   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1125293   +        EducationGraduation  +       0.638986138084 * EducationMaster
1125294   +          +    -0.44885292450558 * Marital_StatusDivorced
1125295   +          +     0.78958791519299 * Marital_StatusMarried
1125296   +          +    -0.09688714431356 * Marital_StatusSingle
1125297   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1125298   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1125299   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1125300   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1125301   +          +    -0.30801073895989 * Marital_StatusDivorced
1125302   +          +     -0.1285150749223 * Marital_StatusMarried
1125303   +          +     0.06775542164414 * Marital_StatusSingle
1125304   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1125305   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1125306   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1125307   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1125308   +          +     0.22193599090368 * Marital_StatusDivorced
1125309   +          +    -0.54544672042168 * Marital_StatusMarried
1125310   +          +    -0.02237436019864 * Marital_StatusSingle
1125311   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1125312   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1125313   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1125314   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1125315   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1125316   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1125317   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1125318   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1125319   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1125320   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1125321   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1125322   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1125323   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1125324   +END;
MPRINT(EM_DIAGRAM):   END;
1125325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1125326   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1125327   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1125328   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1125329   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1125330   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1125331   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1125332   +END;
MPRINT(EM_DIAGRAM):   END;
1125333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125334   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1125335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125336   +
1125337   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1125338   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1125339   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1125340   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1125341   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1125342   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125343   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1125344   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1125345   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1125346   +end;
MPRINT(EM_DIAGRAM):   end;
1125347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125348   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1125349   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1125350   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1125351   +   end;
MPRINT(EM_DIAGRAM):   end;
1125352   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1125353   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1125354   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1125355   +   end;
MPRINT(EM_DIAGRAM):   end;
1125356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125357   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1125358   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1125359   +   end;
MPRINT(EM_DIAGRAM):   end;
1125360   +end;
MPRINT(EM_DIAGRAM):   end;
1125361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1125362   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1125363   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1125364   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1125365   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1125366   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1125367   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1125368   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1125369   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1125370   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1125371   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1125372   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1125373   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1125374   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1125375   +END;
MPRINT(EM_DIAGRAM):   END;
1125376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1125377   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1125378   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1125379   +END;
MPRINT(EM_DIAGRAM):   END;
1125380   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1125381   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1125382   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1125383   +END;
MPRINT(EM_DIAGRAM):   END;
1125384   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1125385   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1125386   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1125387   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1125388   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1125389   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1125390   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1125391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125392   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1125393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125394   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1125395   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1125396   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1125397   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1125398   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1125399   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1125400   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1125401   +END;
MPRINT(EM_DIAGRAM):   END;
1125402   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1125403   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1125404   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1125405   +drop
1125406   +H11
1125407   +H12
1125408   +H13
1125409   +H14
1125410   +H15
1125411   +H16
1125412   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1125413   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1125414   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1125415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125416   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1125417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125418   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1125419   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1125420   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1125421   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1125422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125423   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1125424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125425   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1125426   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1125427   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1125428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125429   +* Ensmbl10: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Average Posteriors of 5 models;
1125430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125431   +P_DepVar1 = (
1125432   +Neural33_P_DepVar1 +
1125433   +Neural31_P_DepVar1 +
1125434   +Neural32_P_DepVar1 +
1125435   +Neural34_P_DepVar1 +
1125436   +Neural35_P_DepVar1
1125437   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural33_P_DepVar1 + Neural31_P_DepVar1 +
Neural32_P_DepVar1 + Neural34_P_DepVar1 + Neural35_P_DepVar1 )/5;
1125438   +P_DepVar0 = (
1125439   +Neural33_P_DepVar0 +
1125440   +Neural31_P_DepVar0 +
1125441   +Neural32_P_DepVar0 +
1125442   +Neural34_P_DepVar0 +
1125443   +Neural35_P_DepVar0
1125444   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural33_P_DepVar0 + Neural31_P_DepVar0 +
Neural32_P_DepVar0 + Neural34_P_DepVar0 + Neural35_P_DepVar0 )/5;
1125445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125446   +* Ensmbl10: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Classification Vars;
1125447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125448   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1125449   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1125450   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1125451   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1125452   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1125453   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1125454   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1125455   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1125456   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1125457   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1125458   +end;
MPRINT(EM_DIAGRAM):   end;
1125459   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1125460   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1125461   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1125462   +end;
MPRINT(EM_DIAGRAM):   end;
1125463   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1125464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125465   +* Ensmbl10: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Producing Unformatted variable;
1125466   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125467   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1125468   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1125469   +else
1125470   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1125471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125472   +* Ensmbl10: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing _WARN_ Variable;
1125473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125474   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1125475   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1125476   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1125477   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1125477  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1125478   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1125478  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1125479   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1125479  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1125480   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1125480  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1125481   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1125481  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1125482   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1125482  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1125483   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1125483  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1125484   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1125484  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1125485   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1125485  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1125486   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1125486  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1125487   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1125487  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1125488   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1125488  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1125489   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1125489  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1125490   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1125490  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1125491   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1125491  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1125492   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1125492  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1125493   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1125493  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1125494   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1125494  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1125495   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1125495  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1125496   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1125496  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1125497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125498   +* Ensmbl10: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Residual Vars;
1125499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125500   +if
1125501   +F_DepVar NE '1'
1125502   +AND F_DepVar NE '0'
1125503   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1125504   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1125505   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1125506   +end;
MPRINT(EM_DIAGRAM):   end;
1125507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125508   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1125509   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1125510   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1125511   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1125512   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1125513   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1125514   +END;
MPRINT(EM_DIAGRAM):   END;
1125515   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1125516    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL33_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1125517    quit;
1125518    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1125519    filename emflow
1125519  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring NEURAL33_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125520    *------------------------------------------------------------*;
1125521    * Ensmbl10: Scoring NEURAL33_VALIDATE data;
1125522    *------------------------------------------------------------*;
1125523    data EMWS8.Ensmbl10_VALIDATE
1125524    / view=EMWS8.Ensmbl10_VALIDATE
1125525    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_VALIDATE / view=EMWS8.Ensmbl10_VALIDATE ;
1125526    set EMWS8.Neural33_VALIDATE
1125527    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_VALIDATE ;
1125528    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas.
1125529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125530   +* Ensmbl10: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Combine model for DepVar;
1125531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125532   +* Ensmbl10: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 1 of 5;
1125533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125535   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1125536   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1125537   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1125538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125540   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1125541   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1125542   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1125543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125545   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1125546   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1125547   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1125548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125550   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1125551   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1125552   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1125553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125554   +
1125555   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1125556   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1125556  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1125557   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1125558   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1125559   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1125560   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1125561   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1125562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125563   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1125564   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1125565   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1125566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125568   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1125569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125570   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1125571   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1125572   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1125573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125574   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1125575   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1125576   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1125577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125579   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1125580   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1125581   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1125582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125584   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1125585   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1125586   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1125587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1125588   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1125589   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1125590   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1125591   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1125592   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1125593   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1125594   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1125595   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1125596   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1125597   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1125598   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1125599   +LENGTH _WARN_ $4
1125600   +      F_DepVar  $ 12
1125601   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1125602   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1125603   +
1125604   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1125605   +
1125606   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1125607   +
1125608   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1125609   +
1125610   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1125611   +
1125612   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1125613   +
1125614   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1125615   +
1125616   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1125617   +
1125618   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1125619   +
1125620   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1125621   +
1125622   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1125623   +
1125624   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1125625   +
1125626   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1125627   +
1125628   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1125629   +
1125630   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1125631   +
1125632   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1125633   +
1125634   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1125635   +
1125636   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1125637   +
1125638   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1125639   +
1125640   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1125641   +
1125642   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1125643   +
1125644   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1125645   +
1125646   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1125647   +
1125648   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1125649   +
1125650   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1125651   +
1125652   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1125653   +
1125654   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1125655   +
1125656   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1125657   +
1125658   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1125659   +
1125660   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1125661   +
1125662   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1125663   +
1125664   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1125665   +
1125666   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1125667   +
1125668   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1125669   +
1125670   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1125671   +
1125672   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1125673   +
1125674   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1125675   +
1125676   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1125677   +
1125678   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1125679   +
1125680   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1125681   +
1125682   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1125683   +
1125684   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1125685   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1125686   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1125687   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1125688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125690   +end;
MPRINT(EM_DIAGRAM):   end;
1125691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125693   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1125694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125696   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1125697   +   end;
MPRINT(EM_DIAGRAM):   end;
1125698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125699   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1125700   +   end;
MPRINT(EM_DIAGRAM):   end;
1125701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125702   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1125703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125705   +   end;
MPRINT(EM_DIAGRAM):   end;
1125706   +end;
MPRINT(EM_DIAGRAM):   end;
1125707   +
1125708   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1125709   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1125710   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1125711   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1125712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125714   +end;
MPRINT(EM_DIAGRAM):   end;
1125715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125717   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1125718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125720   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1125721   +   end;
MPRINT(EM_DIAGRAM):   end;
1125722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125723   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1125724   +   end;
MPRINT(EM_DIAGRAM):   end;
1125725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125726   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1125727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125729   +   end;
MPRINT(EM_DIAGRAM):   end;
1125730   +end;
MPRINT(EM_DIAGRAM):   end;
1125731   +
1125732   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1125733   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1125734   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1125735   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1125736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125738   +end;
MPRINT(EM_DIAGRAM):   end;
1125739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125741   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1125742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125744   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1125745   +   end;
MPRINT(EM_DIAGRAM):   end;
1125746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125747   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1125748   +   end;
MPRINT(EM_DIAGRAM):   end;
1125749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125750   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1125751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125753   +   end;
MPRINT(EM_DIAGRAM):   end;
1125754   +end;
MPRINT(EM_DIAGRAM):   end;
1125755   +
1125756   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1125757   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1125758   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1125759   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1125760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125762   +end;
MPRINT(EM_DIAGRAM):   end;
1125763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125765   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1125766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125767   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125768   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1125769   +   end;
MPRINT(EM_DIAGRAM):   end;
1125770   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125771   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1125772   +   end;
MPRINT(EM_DIAGRAM):   end;
1125773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125774   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1125775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125777   +   end;
MPRINT(EM_DIAGRAM):   end;
1125778   +end;
MPRINT(EM_DIAGRAM):   end;
1125779   +
1125780   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1125781   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1125782   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1125783   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1125784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125786   +end;
MPRINT(EM_DIAGRAM):   end;
1125787   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125789   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1125790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125791   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125792   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1125793   +   end;
MPRINT(EM_DIAGRAM):   end;
1125794   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125795   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1125796   +   end;
MPRINT(EM_DIAGRAM):   end;
1125797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125798   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1125799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125801   +   end;
MPRINT(EM_DIAGRAM):   end;
1125802   +end;
MPRINT(EM_DIAGRAM):   end;
1125803   +
1125804   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1125805   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1125806   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1125807   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1125808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125810   +end;
MPRINT(EM_DIAGRAM):   end;
1125811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1125813   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1125814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125815   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1125816   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1125817   +   end;
MPRINT(EM_DIAGRAM):   end;
1125818   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1125819   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1125820   +   end;
MPRINT(EM_DIAGRAM):   end;
1125821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125822   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1125823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125825   +   end;
MPRINT(EM_DIAGRAM):   end;
1125826   +end;
MPRINT(EM_DIAGRAM):   end;
1125827   +
1125828   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1125829   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1125830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1125831   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1125832   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1125833   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1125834   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1125835   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1125836   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1125837   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1125838   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1125839   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1125840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125842   +end;
MPRINT(EM_DIAGRAM):   end;
1125843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125844   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1125845   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1125846   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125847   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1125848   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1125849   +   end;
MPRINT(EM_DIAGRAM):   end;
1125850   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1125851   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1125852   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1125853   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1125854   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1125855   +   end;
MPRINT(EM_DIAGRAM):   end;
1125856   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1125857   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1125858   +   end;
MPRINT(EM_DIAGRAM):   end;
1125859   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1125860   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1125861   +   end;
MPRINT(EM_DIAGRAM):   end;
1125862   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1125863   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1125864   +   end;
MPRINT(EM_DIAGRAM):   end;
1125865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125866   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1125867   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1125868   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1125869   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1125870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125872   +   end;
MPRINT(EM_DIAGRAM):   end;
1125873   +end;
MPRINT(EM_DIAGRAM):   end;
1125874   +
1125875   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1125876   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1125877   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1125878   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1125879   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1125880   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1125881   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1125882   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1125883   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1125884   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1125885   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1125886   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1125887   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1125888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1125889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125890   +end;
MPRINT(EM_DIAGRAM):   end;
1125891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1125892   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1125893   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1125894   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1125895   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1125896   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1125897   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1125898   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1125899   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1125900   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125901   +         end;
MPRINT(EM_DIAGRAM):   end;
1125902   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1125903   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1125904   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1125905   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125906   +            end;
MPRINT(EM_DIAGRAM):   end;
1125907   +         end;
MPRINT(EM_DIAGRAM):   end;
1125908   +      end;
MPRINT(EM_DIAGRAM):   end;
1125909   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1125910   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1125911   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1125912   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125913   +         end;
MPRINT(EM_DIAGRAM):   end;
1125914   +      end;
MPRINT(EM_DIAGRAM):   end;
1125915   +   end;
MPRINT(EM_DIAGRAM):   end;
1125916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1125917   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1125918   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1125919   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125920   +      end;
MPRINT(EM_DIAGRAM):   end;
1125921   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1125922   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1125923   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1125924   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1125925   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1125926   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1125927   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1125928   +         end;
MPRINT(EM_DIAGRAM):   end;
1125929   +      end;
MPRINT(EM_DIAGRAM):   end;
1125930   +   end;
MPRINT(EM_DIAGRAM):   end;
1125931   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1125932   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1125933   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1125934   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1125935   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1125936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1125937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125938   +   end;
MPRINT(EM_DIAGRAM):   end;
1125939   +end;
MPRINT(EM_DIAGRAM):   end;
1125940   +
1125941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125942   +*** Checking missing input Interval
1125943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1125944   +
1125945   +IF NMISS(
1125946   +   Income ,
1125947   +   Kidhome ,
1125948   +   MntFishProducts ,
1125949   +   MntFruits ,
1125950   +   MntGoldProds ,
1125951   +   MntMeatProducts ,
1125952   +   MntSweetProducts ,
1125953   +   MntWines ,
1125954   +   NumCatalogPurchases ,
1125955   +   NumDealsPurchases ,
1125956   +   NumStorePurchases ,
1125957   +   NumWebPurchases ,
1125958   +   NumWebVisitsMonth ,
1125959   +   Recency ,
1125960   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1125961   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1125962   +
1125963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1125964   +END;
MPRINT(EM_DIAGRAM):   END;
1125965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125966   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1125967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1125968   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1125969   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1125970   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1125971   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1125972   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1125973   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1125974   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1125975   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1125976   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1125977   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1125978   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1125979   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1125980   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1125981   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1125982   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1125983   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1125984   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1125985   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1125986   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1125987   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1125988   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1125989   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1125990   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1125991   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1125992   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1125993   +END;
MPRINT(EM_DIAGRAM):   END;
1125994   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1125995   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1125996   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1125997   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1125998   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1125999   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1126000   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1126001   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1126002   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1126003   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1126004   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1126005   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1126006   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1126007   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1126008   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1126009   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1126010   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1126011   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1126012   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1126013   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1126014   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1126015   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1126016   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1126017   +   ELSE S_NumCatalogPurchases
1126018   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1126019   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1126020   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1126021   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1126022   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1126023   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1126024   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1126025   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1126026   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1126027   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1126028   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1126029   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1126030   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1126031   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1126032   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1126033   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1126034   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1126035   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1126036   +END;
MPRINT(EM_DIAGRAM):   END;
1126037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126038   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1126039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126041   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1126042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126044   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1126045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1126047   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1126048   +          +     0.13364230231465 * S_MntFishProducts
1126049   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1126050   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1126051   +          +    -0.10871064476617 * S_MntSweetProducts
1126052   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1126053   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1126054   +          +     0.52835897625366 * S_NumStorePurchases
1126055   +          +     0.66297635444958 * S_NumWebPurchases
1126056   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1126057   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1126058   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1126059   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1126060   +          +     0.14748983783528 * S_MntFishProducts
1126061   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1126062   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1126063   +          +     0.31095426478608 * S_MntSweetProducts
1126064   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1126065   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1126066   +          +     0.14387100066933 * S_NumStorePurchases
1126067   +          +    -0.01648998884133 * S_NumWebPurchases
1126068   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1126069   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1126070   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1126071   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1126072   +          +     0.00774185404534 * S_MntFishProducts
1126073   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1126074   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1126075   +          +     0.28728624268589 * S_MntSweetProducts
1126076   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1126077   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1126078   +          +     0.56446566213593 * S_NumStorePurchases
1126079   +          +     0.44547549135846 * S_NumWebPurchases
1126080   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1126081   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1126082   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1126083   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1126084   +          +     0.24665716882586 * S_MntFishProducts
1126085   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1126086   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1126087   +          +    -0.10530818594736 * S_MntSweetProducts
1126088   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1126089   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1126090   +          +     0.36617016651032 * S_NumStorePurchases
1126091   +          +      0.3580014320946 * S_NumWebPurchases
1126092   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1126093   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1126094   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1126095   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1126096   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1126097   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1126098   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1126099   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1126100   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1126101   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1126102   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1126103   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1126104   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1126105   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1126106   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1126107   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1126108   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1126109   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1126110   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1126111   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1126112   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1126113   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1126114   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1126115   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1126116   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1126117   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1126118   +          +     0.05171313818048 * Marital_StatusDivorced
1126119   +          +    -0.79112453157624 * Marital_StatusMarried
1126120   +          +     0.89650138723512 * Marital_StatusSingle
1126121   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1126122   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1126123   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1126124   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1126125   +          +     0.05091092042416 * Marital_StatusDivorced
1126126   +          +     0.86642985712339 * Marital_StatusMarried
1126127   +          +    -0.14148832619997 * Marital_StatusSingle
1126128   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1126129   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1126130   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1126131   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1126132   +          +    -0.67787102917679 * Marital_StatusDivorced
1126133   +          +     1.38931504762816 * Marital_StatusMarried
1126134   +          +    -0.51164629287485 * Marital_StatusSingle
1126135   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1126136   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1126137   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1126138   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1126139   +          +     0.12658153975639 * Marital_StatusDivorced
1126140   +          +     0.20111721742791 * Marital_StatusMarried
1126141   +          +     -0.3521524791648 * Marital_StatusSingle
1126142   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1126143   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1126144   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1126145   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1126146   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1126147   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1126148   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1126149   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1126150   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1126151   +END;
MPRINT(EM_DIAGRAM):   END;
1126152   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1126153   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1126154   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1126155   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1126156   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1126157   +END;
MPRINT(EM_DIAGRAM):   END;
1126158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126159   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1126160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126161   +
1126162   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1126163   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
The SAS System
 
1126164   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1126165   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1126166   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1126167   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126168   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1126169   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1126170   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1126171   +end;
MPRINT(EM_DIAGRAM):   end;
1126172   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126173   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1126174   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1126175   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1126176   +   end;
MPRINT(EM_DIAGRAM):   end;
1126177   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1126178   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1126179   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1126180   +   end;
MPRINT(EM_DIAGRAM):   end;
1126181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126182   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1126183   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1126184   +   end;
MPRINT(EM_DIAGRAM):   end;
1126185   +end;
MPRINT(EM_DIAGRAM):   end;
1126186   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1126187   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1126188   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1126189   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1126190   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1126191   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1126192   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1126193   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1126194   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1126195   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1126196   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1126197   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1126198   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1126199   +END;
MPRINT(EM_DIAGRAM):   END;
1126200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1126201   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1126202   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1126203   +END;
MPRINT(EM_DIAGRAM):   END;
1126204   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1126205   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1126206   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1126207   +END;
MPRINT(EM_DIAGRAM):   END;
1126208   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1126209   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1126210   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1126211   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1126212   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1126213   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1126214   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1126215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126216   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1126217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126218   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1126219   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1126220   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1126221   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1126222   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1126223   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1126224   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1126225   +END;
MPRINT(EM_DIAGRAM):   END;
1126226   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1126227   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1126228   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1126229   +drop
1126230   +H11
1126231   +H12
1126232   +H13
1126233   +H14
1126234   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1126235   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1126236   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1126237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126238   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1126239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126240   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1126241   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1126242   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1126243   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1126244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126245   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1126246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126247   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1126248   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1126249   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1126250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126251   +* Ensmbl10: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 2 of 5;
1126252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126254   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1126255   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1126256   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1126257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126258   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1126259   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1126260   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1126261   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1126262   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1126263   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1126264   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1126265   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1126266   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1126267   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1126268   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1126269   +LENGTH _WARN_ $4
1126270   +      F_DepVar  $ 12
1126271   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1126272   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1126273   +
1126274   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1126275   +
1126276   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1126277   +
1126278   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1126279   +
1126280   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1126281   +
1126282   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1126283   +
1126284   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1126285   +
1126286   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1126287   +
1126288   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1126289   +
1126290   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1126291   +
1126292   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1126293   +
1126294   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1126295   +
1126296   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1126297   +
1126298   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1126299   +
1126300   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1126301   +
1126302   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1126303   +
1126304   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1126305   +
1126306   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1126307   +
1126308   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1126309   +
1126310   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1126311   +
1126312   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1126313   +
1126314   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1126315   +
1126316   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1126317   +
1126318   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1126319   +
1126320   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1126321   +
1126322   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1126323   +
1126324   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1126325   +
1126326   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1126327   +
1126328   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1126329   +
1126330   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1126331   +
1126332   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1126333   +
1126334   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1126335   +
1126336   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1126337   +
1126338   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1126339   +
1126340   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1126341   +
1126342   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1126343   +
1126344   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1126345   +
1126346   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1126347   +
1126348   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1126349   +
1126350   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1126351   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1126352   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1126353   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1126354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126356   +end;
MPRINT(EM_DIAGRAM):   end;
1126357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126359   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1126360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126362   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1126363   +   end;
MPRINT(EM_DIAGRAM):   end;
1126364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126365   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1126366   +   end;
MPRINT(EM_DIAGRAM):   end;
1126367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126368   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1126369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126371   +   end;
MPRINT(EM_DIAGRAM):   end;
1126372   +end;
MPRINT(EM_DIAGRAM):   end;
1126373   +
1126374   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1126375   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1126376   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1126377   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1126378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126380   +end;
MPRINT(EM_DIAGRAM):   end;
1126381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126383   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1126384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126386   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1126387   +   end;
MPRINT(EM_DIAGRAM):   end;
1126388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126389   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1126390   +   end;
MPRINT(EM_DIAGRAM):   end;
1126391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126392   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1126393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126395   +   end;
MPRINT(EM_DIAGRAM):   end;
1126396   +end;
MPRINT(EM_DIAGRAM):   end;
1126397   +
1126398   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1126399   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1126400   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1126401   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1126402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126404   +end;
MPRINT(EM_DIAGRAM):   end;
1126405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126407   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1126408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126410   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1126411   +   end;
MPRINT(EM_DIAGRAM):   end;
1126412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126413   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1126414   +   end;
MPRINT(EM_DIAGRAM):   end;
1126415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126416   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1126417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126419   +   end;
MPRINT(EM_DIAGRAM):   end;
1126420   +end;
MPRINT(EM_DIAGRAM):   end;
1126421   +
1126422   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1126423   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1126424   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1126425   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1126426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126428   +end;
MPRINT(EM_DIAGRAM):   end;
1126429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126431   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1126432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126434   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1126435   +   end;
MPRINT(EM_DIAGRAM):   end;
1126436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126437   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1126438   +   end;
MPRINT(EM_DIAGRAM):   end;
1126439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126440   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1126441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126443   +   end;
MPRINT(EM_DIAGRAM):   end;
1126444   +end;
MPRINT(EM_DIAGRAM):   end;
1126445   +
1126446   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1126447   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1126448   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1126449   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1126450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126452   +end;
MPRINT(EM_DIAGRAM):   end;
1126453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126455   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1126456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126458   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1126459   +   end;
MPRINT(EM_DIAGRAM):   end;
1126460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126461   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1126462   +   end;
MPRINT(EM_DIAGRAM):   end;
1126463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126464   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1126465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126467   +   end;
MPRINT(EM_DIAGRAM):   end;
1126468   +end;
MPRINT(EM_DIAGRAM):   end;
1126469   +
1126470   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1126471   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1126472   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1126473   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1126474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126476   +end;
MPRINT(EM_DIAGRAM):   end;
1126477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126479   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1126480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126482   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1126483   +   end;
MPRINT(EM_DIAGRAM):   end;
1126484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126485   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1126486   +   end;
MPRINT(EM_DIAGRAM):   end;
1126487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126488   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1126489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126491   +   end;
MPRINT(EM_DIAGRAM):   end;
1126492   +end;
MPRINT(EM_DIAGRAM):   end;
1126493   +
1126494   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1126495   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1126496   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1126497   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1126498   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1126499   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1126500   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1126501   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1126502   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1126503   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1126504   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1126505   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1126506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126508   +end;
MPRINT(EM_DIAGRAM):   end;
1126509   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126510   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1126511   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1126512   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126513   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1126514   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1126515   +   end;
MPRINT(EM_DIAGRAM):   end;
1126516   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1126517   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1126518   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1126519   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1126520   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1126521   +   end;
MPRINT(EM_DIAGRAM):   end;
1126522   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1126523   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1126524   +   end;
MPRINT(EM_DIAGRAM):   end;
1126525   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1126526   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1126527   +   end;
MPRINT(EM_DIAGRAM):   end;
1126528   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1126529   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1126530   +   end;
MPRINT(EM_DIAGRAM):   end;
1126531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126532   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1126533   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1126534   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1126535   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1126536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126538   +   end;
MPRINT(EM_DIAGRAM):   end;
1126539   +end;
MPRINT(EM_DIAGRAM):   end;
1126540   +
1126541   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1126542   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1126543   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1126544   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1126545   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1126546   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1126547   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1126548   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1126549   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1126550   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1126551   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1126552   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1126553   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1126554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126556   +end;
MPRINT(EM_DIAGRAM):   end;
1126557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126558   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1126559   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1126560   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126561   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1126562   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1126563   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1126564   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1126565   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1126566   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1126567   +         end;
MPRINT(EM_DIAGRAM):   end;
1126568   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1126569   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1126570   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1126571   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1126572   +            end;
MPRINT(EM_DIAGRAM):   end;
1126573   +         end;
MPRINT(EM_DIAGRAM):   end;
1126574   +      end;
MPRINT(EM_DIAGRAM):   end;
1126575   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1126576   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1126577   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1126578   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1126579   +         end;
MPRINT(EM_DIAGRAM):   end;
1126580   +      end;
MPRINT(EM_DIAGRAM):   end;
1126581   +   end;
MPRINT(EM_DIAGRAM):   end;
1126582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126583   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1126584   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1126585   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1126586   +      end;
MPRINT(EM_DIAGRAM):   end;
1126587   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1126588   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1126589   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1126590   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1126591   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1126592   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1126593   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1126594   +         end;
MPRINT(EM_DIAGRAM):   end;
1126595   +      end;
MPRINT(EM_DIAGRAM):   end;
1126596   +   end;
MPRINT(EM_DIAGRAM):   end;
1126597   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1126598   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1126599   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1126600   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1126601   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1126602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126604   +   end;
MPRINT(EM_DIAGRAM):   end;
1126605   +end;
MPRINT(EM_DIAGRAM):   end;
1126606   +
1126607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126608   +*** Checking missing input Interval
1126609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1126610   +
1126611   +IF NMISS(
1126612   +   Income ,
1126613   +   Kidhome ,
1126614   +   MntFishProducts ,
1126615   +   MntFruits ,
1126616   +   MntGoldProds ,
1126617   +   MntMeatProducts ,
1126618   +   MntSweetProducts ,
1126619   +   MntWines ,
1126620   +   NumCatalogPurchases ,
1126621   +   NumDealsPurchases ,
1126622   +   NumStorePurchases ,
1126623   +   NumWebPurchases ,
1126624   +   NumWebVisitsMonth ,
1126625   +   Recency ,
1126626   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1126627   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1126628   +
1126629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126630   +END;
MPRINT(EM_DIAGRAM):   END;
1126631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126632   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1126633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126634   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1126635   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1126636   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1126637   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1126638   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1126639   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1126640   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1126641   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1126642   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1126643   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1126644   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1126645   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1126646   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1126647   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1126648   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1126649   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1126650   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1126651   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1126652   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1126653   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1126654   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1126655   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1126656   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1126657   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1126658   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1126659   +END;
MPRINT(EM_DIAGRAM):   END;
1126660   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1126661   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1126662   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1126663   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1126664   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1126665   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1126666   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1126667   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1126668   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1126669   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1126670   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1126671   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1126672   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1126673   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1126674   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1126675   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1126676   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1126677   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1126678   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1126679   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1126680   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1126681   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1126682   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1126683   +   ELSE S_NumCatalogPurchases
1126684   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1126685   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1126686   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1126687   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1126688   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1126689   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1126690   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1126691   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1126692   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1126693   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1126694   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1126695   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1126696   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1126697   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1126698   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1126699   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1126700   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1126701   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1126702   +END;
MPRINT(EM_DIAGRAM):   END;
1126703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126704   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1126705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126707   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1126708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126710   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1126711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1126713   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1126714   +          +     0.06177226616611 * S_MntFishProducts
1126715   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1126716   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1126717   +          +     0.19245635559754 * S_MntSweetProducts
1126718   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1126719   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1126720   +          +    -0.35392759932805 * S_NumStorePurchases
1126721   +          +     -0.2443007642616 * S_NumWebPurchases
1126722   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1126723   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1126724   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1126725   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1126726   +          +     0.00012212205827 * S_MntFishProducts
1126727   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1126728   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1126729   +          +     0.01459978689352 * S_MntSweetProducts
1126730   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1126731   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1126732   +          +      0.4054643699817 * S_NumStorePurchases
1126733   +          +     0.27747327375374 * S_NumWebPurchases
1126734   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1126735   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1126736   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1126737   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1126738   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1126739   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1126740   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1126741   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1126742   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1126743   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1126744   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1126745   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1126746   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1126747   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1126748   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1126749   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1126750   +          +    -0.43667846017683 * Marital_StatusDivorced
1126751   +          +     1.33507828005472 * Marital_StatusMarried
1126752   +          +    -0.75026283842664 * Marital_StatusSingle
1126753   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1126754   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1126755   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1126756   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1126757   +          +    -0.03531690128173 * Marital_StatusDivorced
1126758   +          +    -0.04344171367809 * Marital_StatusMarried
1126759   +          +    -0.05137362653166 * Marital_StatusSingle
1126760   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1126761   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1126762   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1126763   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1126764   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1126765   +END;
MPRINT(EM_DIAGRAM):   END;
1126766   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1126767   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1126768   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1126769   +END;
MPRINT(EM_DIAGRAM):   END;
1126770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126771   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1126772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126773   +
1126774   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1126775   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1126776   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1126777   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1126778   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1126779   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126780   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1126781   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1126782   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1126783   +end;
MPRINT(EM_DIAGRAM):   end;
1126784   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126785   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1126786   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1126787   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1126788   +   end;
MPRINT(EM_DIAGRAM):   end;
1126789   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1126790   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1126791   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1126792   +   end;
MPRINT(EM_DIAGRAM):   end;
1126793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126794   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1126795   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1126796   +   end;
MPRINT(EM_DIAGRAM):   end;
1126797   +end;
MPRINT(EM_DIAGRAM):   end;
1126798   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1126799   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1126800   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1126801   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1126802   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1126803   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1126804   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1126805   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1126806   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1126807   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1126808   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1126809   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1126810   +END;
MPRINT(EM_DIAGRAM):   END;
1126811   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1126812   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1126813   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1126814   +END;
MPRINT(EM_DIAGRAM):   END;
1126815   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1126816   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1126817   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1126818   +END;
MPRINT(EM_DIAGRAM):   END;
1126819   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1126820   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1126821   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1126822   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1126823   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1126824   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1126825   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1126826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126827   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1126828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1126829   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1126830   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1126831   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1126832   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1126833   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1126834   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1126835   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1126836   +END;
MPRINT(EM_DIAGRAM):   END;
1126837   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1126838   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1126839   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1126840   +drop
1126841   +H11
1126842   +H12
1126843   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1126844   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1126845   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1126846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126847   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1126848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126849   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1126850   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1126851   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1126852   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1126853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126854   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1126855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126856   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1126857   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1126858   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1126859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126860   +* Ensmbl10: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 3 of 5;
1126861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126863   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1126864   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1126865   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1126866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126867   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1126868   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1126869   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1126870   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1126871   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1126872   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1126873   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1126874   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1126875   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1126876   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1126877   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1126878   +LENGTH _WARN_ $4
1126879   +      F_DepVar  $ 12
1126880   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1126881   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1126882   +
1126883   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1126884   +
1126885   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1126886   +
1126887   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1126888   +
1126889   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1126890   +
1126891   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1126892   +
1126893   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1126894   +
1126895   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1126896   +
1126897   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1126898   +
1126899   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1126900   +
1126901   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1126902   +
1126903   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1126904   +
1126905   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1126906   +
1126907   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1126908   +
1126909   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1126910   +
1126911   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1126912   +
1126913   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1126914   +
1126915   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1126916   +
1126917   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1126918   +
1126919   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1126920   +
1126921   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1126922   +
1126923   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1126924   +
1126925   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1126926   +
1126927   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1126928   +
1126929   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1126930   +
1126931   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1126932   +
1126933   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1126934   +
1126935   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1126936   +
1126937   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1126938   +
1126939   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1126940   +
1126941   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1126942   +
1126943   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1126944   +
1126945   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1126946   +
1126947   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1126948   +
1126949   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1126950   +
1126951   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1126952   +
1126953   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1126954   +
1126955   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1126956   +
1126957   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1126958   +
1126959   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1126960   +
1126961   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1126962   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1126963   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1126964   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1126965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126967   +end;
MPRINT(EM_DIAGRAM):   end;
1126968   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126970   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1126971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126972   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126973   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1126974   +   end;
MPRINT(EM_DIAGRAM):   end;
1126975   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1126976   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1126977   +   end;
MPRINT(EM_DIAGRAM):   end;
1126978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1126979   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1126980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1126981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126982   +   end;
MPRINT(EM_DIAGRAM):   end;
1126983   +end;
MPRINT(EM_DIAGRAM):   end;
1126984   +
1126985   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1126986   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1126987   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1126988   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1126989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1126990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1126991   +end;
MPRINT(EM_DIAGRAM):   end;
1126992   +else do;
MPRINT(EM_DIAGRAM):   else do;
1126993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1126994   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1126995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1126996   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1126997   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1126998   +   end;
MPRINT(EM_DIAGRAM):   end;
1126999   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127000   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1127001   +   end;
MPRINT(EM_DIAGRAM):   end;
1127002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127003   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1127004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127006   +   end;
MPRINT(EM_DIAGRAM):   end;
1127007   +end;
MPRINT(EM_DIAGRAM):   end;
1127008   +
1127009   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1127010   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1127011   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1127012   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1127013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127015   +end;
MPRINT(EM_DIAGRAM):   end;
1127016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127018   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1127019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127020   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127021   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1127022   +   end;
MPRINT(EM_DIAGRAM):   end;
1127023   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127024   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1127025   +   end;
MPRINT(EM_DIAGRAM):   end;
1127026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127027   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1127028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127030   +   end;
MPRINT(EM_DIAGRAM):   end;
1127031   +end;
MPRINT(EM_DIAGRAM):   end;
1127032   +
1127033   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1127034   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1127035   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1127036   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1127037   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127039   +end;
MPRINT(EM_DIAGRAM):   end;
1127040   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127041   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127042   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1127043   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127044   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127045   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1127046   +   end;
MPRINT(EM_DIAGRAM):   end;
1127047   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127048   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1127049   +   end;
MPRINT(EM_DIAGRAM):   end;
1127050   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127051   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1127052   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127053   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127054   +   end;
MPRINT(EM_DIAGRAM):   end;
1127055   +end;
MPRINT(EM_DIAGRAM):   end;
1127056   +
1127057   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1127058   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1127059   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1127060   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1127061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127063   +end;
MPRINT(EM_DIAGRAM):   end;
1127064   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127065   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127066   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1127067   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127068   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127069   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1127070   +   end;
MPRINT(EM_DIAGRAM):   end;
1127071   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127072   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1127073   +   end;
MPRINT(EM_DIAGRAM):   end;
1127074   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127075   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1127076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127078   +   end;
MPRINT(EM_DIAGRAM):   end;
1127079   +end;
MPRINT(EM_DIAGRAM):   end;
1127080   +
1127081   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1127082   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1127083   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1127084   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1127085   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127087   +end;
MPRINT(EM_DIAGRAM):   end;
1127088   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127089   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127090   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1127091   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127092   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127093   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1127094   +   end;
MPRINT(EM_DIAGRAM):   end;
1127095   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127096   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1127097   +   end;
MPRINT(EM_DIAGRAM):   end;
1127098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127099   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1127100   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127101   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127102   +   end;
MPRINT(EM_DIAGRAM):   end;
1127103   +end;
MPRINT(EM_DIAGRAM):   end;
1127104   +
1127105   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1127106   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1127107   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1127108   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1127109   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1127110   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1127111   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1127112   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1127113   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1127114   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1127115   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1127116   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1127117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127119   +end;
MPRINT(EM_DIAGRAM):   end;
1127120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127121   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1127122   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1127123   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127124   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1127125   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1127126   +   end;
MPRINT(EM_DIAGRAM):   end;
1127127   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1127128   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1127129   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1127130   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1127131   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1127132   +   end;
MPRINT(EM_DIAGRAM):   end;
1127133   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1127134   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1127135   +   end;
MPRINT(EM_DIAGRAM):   end;
1127136   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1127137   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1127138   +   end;
MPRINT(EM_DIAGRAM):   end;
1127139   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1127140   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1127141   +   end;
MPRINT(EM_DIAGRAM):   end;
1127142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127143   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1127144   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1127145   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1127146   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1127147   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127148   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127149   +   end;
MPRINT(EM_DIAGRAM):   end;
1127150   +end;
MPRINT(EM_DIAGRAM):   end;
1127151   +
1127152   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1127153   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1127154   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1127155   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1127156   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1127157   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1127158   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1127159   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1127160   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1127161   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1127162   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1127163   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1127164   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1127165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127167   +end;
MPRINT(EM_DIAGRAM):   end;
1127168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127169   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1127170   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1127171   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127172   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1127173   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1127174   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1127175   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1127176   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1127177   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127178   +         end;
MPRINT(EM_DIAGRAM):   end;
1127179   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1127180   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1127181   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1127182   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127183   +            end;
MPRINT(EM_DIAGRAM):   end;
1127184   +         end;
MPRINT(EM_DIAGRAM):   end;
1127185   +      end;
MPRINT(EM_DIAGRAM):   end;
1127186   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1127187   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1127188   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1127189   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127190   +         end;
MPRINT(EM_DIAGRAM):   end;
1127191   +      end;
MPRINT(EM_DIAGRAM):   end;
1127192   +   end;
MPRINT(EM_DIAGRAM):   end;
1127193   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127194   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1127195   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1127196   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127197   +      end;
MPRINT(EM_DIAGRAM):   end;
1127198   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1127199   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1127200   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1127201   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1127202   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1127203   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1127204   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127205   +         end;
MPRINT(EM_DIAGRAM):   end;
1127206   +      end;
MPRINT(EM_DIAGRAM):   end;
1127207   +   end;
MPRINT(EM_DIAGRAM):   end;
1127208   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1127209   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1127210   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1127211   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1127212   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1127213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127215   +   end;
MPRINT(EM_DIAGRAM):   end;
1127216   +end;
MPRINT(EM_DIAGRAM):   end;
1127217   +
1127218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127219   +*** Checking missing input Interval
1127220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1127221   +
1127222   +IF NMISS(
1127223   +   Income ,
1127224   +   Kidhome ,
1127225   +   MntFishProducts ,
1127226   +   MntFruits ,
1127227   +   MntGoldProds ,
1127228   +   MntMeatProducts ,
1127229   +   MntSweetProducts ,
1127230   +   MntWines ,
1127231   +   NumCatalogPurchases ,
1127232   +   NumDealsPurchases ,
1127233   +   NumStorePurchases ,
1127234   +   NumWebPurchases ,
1127235   +   NumWebVisitsMonth ,
1127236   +   Recency ,
1127237   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1127238   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1127239   +
1127240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127241   +END;
MPRINT(EM_DIAGRAM):   END;
1127242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127243   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1127244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127245   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1127246   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1127247   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1127248   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1127249   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1127250   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1127251   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1127252   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1127253   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1127254   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1127255   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1127256   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1127257   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1127258   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1127259   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1127260   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1127261   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1127262   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1127263   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1127264   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1127265   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1127266   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1127267   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1127268   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1127269   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1127270   +END;
MPRINT(EM_DIAGRAM):   END;
1127271   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1127272   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1127273   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1127274   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1127275   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1127276   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1127277   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1127278   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1127279   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1127280   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1127281   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1127282   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1127283   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1127284   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1127285   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1127286   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1127287   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1127288   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1127289   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1127290   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1127291   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1127292   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1127293   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1127294   +   ELSE S_NumCatalogPurchases
1127295   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1127296   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1127297   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1127298   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1127299   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1127300   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1127301   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1127302   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1127303   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1127304   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1127305   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1127306   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1127307   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1127308   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1127309   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1127310   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1127311   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1127312   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1127313   +END;
MPRINT(EM_DIAGRAM):   END;
1127314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127315   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1127316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127318   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1127319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127321   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1127322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127323   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1127324   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1127325   +          +    -0.12974862644982 * S_MntFishProducts
1127326   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1127327   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1127328   +          +    -0.12290326901613 * S_MntSweetProducts
1127329   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1127330   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1127331   +          +     0.09738032540137 * S_NumStorePurchases
1127332   +          +     0.44459515215205 * S_NumWebPurchases
1127333   +          +      0.8471075994578 * S_NumWebVisitsMonth
1127334   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1127335   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1127336   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1127337   +          +     0.02406077596811 * S_MntFishProducts
1127338   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1127339   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1127340   +          +     -0.1147507059349 * S_MntSweetProducts
1127341   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1127342   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1127343   +          +    -0.23920969262322 * S_NumStorePurchases
1127344   +          +     -0.6008837862932 * S_NumWebPurchases
1127345   +          +     0.26759743722885 * S_NumWebVisitsMonth
1127346   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1127347   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1127348   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1127349   +          +     0.04398331533724 * S_MntFishProducts
1127350   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1127351   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1127352   +          +     0.00552488718744 * S_MntSweetProducts
1127353   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1127354   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1127355   +          +     0.60058189155105 * S_NumStorePurchases
1127356   +          +     0.51423374855856 * S_NumWebPurchases
1127357   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1127358   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1127359   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1127360   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1127361   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1127362   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1127363   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1127364   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1127365   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1127366   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1127367   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1127368   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1127369   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1127370   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1127371   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1127372   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1127373   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1127374   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1127375   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1127376   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1127377   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1127378   +          +     0.52129580188513 * Marital_StatusDivorced
1127379   +          +     -1.5224490339553 * Marital_StatusMarried
1127380   +          +     1.05062906057771 * Marital_StatusSingle
1127381   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1127382   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1127383   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1127384   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1127385   +          +    -0.14428158063317 * Marital_StatusDivorced
1127386   +          +     0.22396926143356 * Marital_StatusMarried
1127387   +          +    -0.12980854818876 * Marital_StatusSingle
1127388   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1127389   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1127390   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1127391   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1127392   +          +    -0.25615797303064 * Marital_StatusDivorced
1127393   +          +     0.18825506199046 * Marital_StatusMarried
1127394   +          +    -0.24607556819871 * Marital_StatusSingle
1127395   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1127396   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1127397   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1127398   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1127399   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1127400   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1127401   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1127402   +END;
MPRINT(EM_DIAGRAM):   END;
1127403   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1127404   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1127405   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1127406   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1127407   +END;
MPRINT(EM_DIAGRAM):   END;
1127408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127409   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1127410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127411   +
1127412   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1127413   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1127414   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1127415   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1127416   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1127417   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127418   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1127419   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1127420   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1127421   +end;
MPRINT(EM_DIAGRAM):   end;
1127422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127423   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1127424   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1127425   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1127426   +   end;
MPRINT(EM_DIAGRAM):   end;
1127427   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1127428   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1127429   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1127430   +   end;
MPRINT(EM_DIAGRAM):   end;
1127431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127432   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1127433   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1127434   +   end;
MPRINT(EM_DIAGRAM):   end;
1127435   +end;
MPRINT(EM_DIAGRAM):   end;
1127436   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1127437   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1127438   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1127439   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1127440   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1127441   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1127442   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1127443   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1127444   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1127445   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1127446   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1127447   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1127448   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1127449   +END;
MPRINT(EM_DIAGRAM):   END;
1127450   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1127451   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1127452   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1127453   +END;
MPRINT(EM_DIAGRAM):   END;
1127454   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1127455   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1127456   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1127457   +END;
MPRINT(EM_DIAGRAM):   END;
1127458   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1127459   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1127460   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1127461   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1127462   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1127463   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1127464   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1127465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127466   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1127467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127468   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1127469   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1127470   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1127471   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1127472   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1127473   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1127474   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1127475   +END;
MPRINT(EM_DIAGRAM):   END;
1127476   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1127477   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1127478   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1127479   +drop
1127480   +H11
1127481   +H12
1127482   +H13
1127483   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1127484   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1127485   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1127486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127487   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1127488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127489   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1127490   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1127491   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1127492   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1127493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127494   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1127495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127496   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1127497   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1127498   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1127499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127500   +* Ensmbl10: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 4 of 5;
1127501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127503   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1127504   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1127505   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1127506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1127507   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1127508   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1127509   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1127510   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1127511   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1127512   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1127513   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1127514   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1127515   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1127516   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1127517   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1127518   +LENGTH _WARN_ $4
1127519   +      F_DepVar  $ 12
1127520   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1127521   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1127522   +
1127523   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1127524   +
1127525   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1127526   +
1127527   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1127528   +
1127529   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1127530   +
1127531   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1127532   +
1127533   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1127534   +
1127535   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1127536   +
1127537   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1127538   +
1127539   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1127540   +
1127541   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1127542   +
1127543   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1127544   +
1127545   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1127546   +
1127547   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1127548   +
1127549   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1127550   +
1127551   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1127552   +
1127553   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1127554   +
1127555   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1127556   +
1127557   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1127558   +
1127559   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1127560   +
1127561   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1127562   +
1127563   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1127564   +
1127565   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1127566   +
1127567   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1127568   +
1127569   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1127570   +
1127571   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1127572   +
1127573   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1127574   +
1127575   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1127576   +
1127577   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1127578   +
1127579   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1127580   +
1127581   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1127582   +
1127583   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1127584   +
1127585   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1127586   +
1127587   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1127588   +
1127589   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1127590   +
1127591   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1127592   +
1127593   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1127594   +
1127595   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1127596   +
1127597   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1127598   +
1127599   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1127600   +
1127601   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1127602   +
1127603   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1127604   +
1127605   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1127606   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1127607   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1127608   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1127609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127611   +end;
MPRINT(EM_DIAGRAM):   end;
1127612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127614   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1127615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127617   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1127618   +   end;
MPRINT(EM_DIAGRAM):   end;
1127619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127620   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1127621   +   end;
MPRINT(EM_DIAGRAM):   end;
1127622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127623   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1127624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127626   +   end;
MPRINT(EM_DIAGRAM):   end;
1127627   +end;
MPRINT(EM_DIAGRAM):   end;
1127628   +
1127629   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1127630   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1127631   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1127632   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1127633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127635   +end;
MPRINT(EM_DIAGRAM):   end;
1127636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127638   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1127639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127641   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1127642   +   end;
MPRINT(EM_DIAGRAM):   end;
1127643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127644   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1127645   +   end;
MPRINT(EM_DIAGRAM):   end;
1127646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127647   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1127648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127650   +   end;
MPRINT(EM_DIAGRAM):   end;
1127651   +end;
MPRINT(EM_DIAGRAM):   end;
1127652   +
1127653   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1127654   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1127655   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1127656   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1127657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127659   +end;
MPRINT(EM_DIAGRAM):   end;
1127660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127662   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1127663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127665   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1127666   +   end;
MPRINT(EM_DIAGRAM):   end;
1127667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127668   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1127669   +   end;
MPRINT(EM_DIAGRAM):   end;
1127670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127671   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1127672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127674   +   end;
MPRINT(EM_DIAGRAM):   end;
1127675   +end;
MPRINT(EM_DIAGRAM):   end;
1127676   +
1127677   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1127678   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1127679   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1127680   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1127681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127683   +end;
MPRINT(EM_DIAGRAM):   end;
1127684   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127686   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1127687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127689   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1127690   +   end;
MPRINT(EM_DIAGRAM):   end;
1127691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127692   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1127693   +   end;
MPRINT(EM_DIAGRAM):   end;
1127694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127695   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1127696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127698   +   end;
MPRINT(EM_DIAGRAM):   end;
1127699   +end;
MPRINT(EM_DIAGRAM):   end;
1127700   +
1127701   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1127702   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1127703   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1127704   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1127705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127707   +end;
MPRINT(EM_DIAGRAM):   end;
1127708   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127710   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1127711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127712   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127713   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1127714   +   end;
MPRINT(EM_DIAGRAM):   end;
1127715   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127716   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1127717   +   end;
MPRINT(EM_DIAGRAM):   end;
1127718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127719   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1127720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127722   +   end;
MPRINT(EM_DIAGRAM):   end;
1127723   +end;
MPRINT(EM_DIAGRAM):   end;
1127724   +
1127725   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1127726   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1127727   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1127728   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1127729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127731   +end;
MPRINT(EM_DIAGRAM):   end;
1127732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1127734   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1127735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127736   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1127737   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1127738   +   end;
MPRINT(EM_DIAGRAM):   end;
1127739   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1127740   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1127741   +   end;
MPRINT(EM_DIAGRAM):   end;
1127742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127743   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1127744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127746   +   end;
MPRINT(EM_DIAGRAM):   end;
1127747   +end;
MPRINT(EM_DIAGRAM):   end;
1127748   +
1127749   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1127750   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1127751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1127752   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1127753   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1127754   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1127755   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1127756   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1127757   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1127758   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1127759   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1127760   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1127761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127763   +end;
MPRINT(EM_DIAGRAM):   end;
1127764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127765   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1127766   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1127767   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127768   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1127769   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1127770   +   end;
MPRINT(EM_DIAGRAM):   end;
1127771   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1127772   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1127773   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1127774   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1127775   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1127776   +   end;
MPRINT(EM_DIAGRAM):   end;
1127777   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1127778   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1127779   +   end;
MPRINT(EM_DIAGRAM):   end;
1127780   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1127781   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1127782   +   end;
MPRINT(EM_DIAGRAM):   end;
1127783   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1127784   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1127785   +   end;
MPRINT(EM_DIAGRAM):   end;
1127786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127787   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1127788   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1127789   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1127790   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1127791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127793   +   end;
MPRINT(EM_DIAGRAM):   end;
1127794   +end;
MPRINT(EM_DIAGRAM):   end;
1127795   +
1127796   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1127797   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1127798   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1127799   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1127800   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1127801   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1127802   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1127803   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1127804   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1127805   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1127806   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1127807   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1127808   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1127809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1127810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127811   +end;
MPRINT(EM_DIAGRAM):   end;
1127812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1127813   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1127814   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1127815   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1127816   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1127817   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1127818   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1127819   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1127820   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1127821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127822   +         end;
MPRINT(EM_DIAGRAM):   end;
1127823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1127824   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1127825   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1127826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127827   +            end;
MPRINT(EM_DIAGRAM):   end;
1127828   +         end;
MPRINT(EM_DIAGRAM):   end;
1127829   +      end;
MPRINT(EM_DIAGRAM):   end;
1127830   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1127831   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1127832   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1127833   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127834   +         end;
MPRINT(EM_DIAGRAM):   end;
1127835   +      end;
MPRINT(EM_DIAGRAM):   end;
1127836   +   end;
MPRINT(EM_DIAGRAM):   end;
1127837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1127838   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1127839   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1127840   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127841   +      end;
MPRINT(EM_DIAGRAM):   end;
1127842   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1127843   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1127844   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1127845   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1127846   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1127847   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1127848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1127849   +         end;
MPRINT(EM_DIAGRAM):   end;
1127850   +      end;
MPRINT(EM_DIAGRAM):   end;
1127851   +   end;
MPRINT(EM_DIAGRAM):   end;
1127852   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1127853   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1127854   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1127855   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1127856   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1127857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1127858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127859   +   end;
MPRINT(EM_DIAGRAM):   end;
1127860   +end;
MPRINT(EM_DIAGRAM):   end;
1127861   +
1127862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127863   +*** Checking missing input Interval
1127864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1127865   +
1127866   +IF NMISS(
1127867   +   Income ,
1127868   +   Kidhome ,
1127869   +   MntFishProducts ,
1127870   +   MntFruits ,
1127871   +   MntGoldProds ,
1127872   +   MntMeatProducts ,
1127873   +   MntSweetProducts ,
1127874   +   MntWines ,
1127875   +   NumCatalogPurchases ,
1127876   +   NumDealsPurchases ,
1127877   +   NumStorePurchases ,
1127878   +   NumWebPurchases ,
1127879   +   NumWebVisitsMonth ,
1127880   +   Recency ,
1127881   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1127882   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1127883   +
1127884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1127885   +END;
MPRINT(EM_DIAGRAM):   END;
1127886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127887   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1127888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1127890   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1127891   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1127892   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1127893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1127894   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1127895   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1127896   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1127897   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1127898   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1127899   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1127900   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1127901   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1127902   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1127903   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1127904   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1127905   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1127906   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1127907   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1127908   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1127909   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1127910   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1127911   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1127912   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1127913   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1127914   +END;
MPRINT(EM_DIAGRAM):   END;
1127915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1127916   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1127917   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1127918   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1127919   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1127920   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1127921   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1127922   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1127923   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1127924   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1127925   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1127926   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1127927   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1127928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1127929   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1127930   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1127931   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1127932   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1127933   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1127934   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1127935   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1127936   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1127937   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1127938   +   ELSE S_NumCatalogPurchases
1127939   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1127940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1127941   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1127942   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1127943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1127944   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1127945   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1127946   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1127947   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1127948   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1127949   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1127950   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1127951   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1127952   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1127953   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1127954   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1127955   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1127956   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1127957   +END;
MPRINT(EM_DIAGRAM):   END;
1127958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127959   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1127960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127962   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1127963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127965   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1127966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1127967   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1127968   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1127969   +          +     0.24367603598167 * S_MntFishProducts
1127970   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1127971   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1127972   +          +     0.34054806441484 * S_MntSweetProducts
1127973   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1127974   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1127975   +          +     0.98942946974575 * S_NumStorePurchases
1127976   +          +     0.89701206630103 * S_NumWebPurchases
1127977   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1127978   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1127979   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1127980   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1127981   +          +     0.16683404689723 * S_MntFishProducts
1127982   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1127983   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1127984   +          +     0.20389084548968 * S_MntSweetProducts
1127985   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1127986   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1127987   +          +     1.27164659640366 * S_NumStorePurchases
1127988   +          +     1.02122194207802 * S_NumWebPurchases
1127989   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1127990   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1127991   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1127992   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1127993   +          +    -0.03345077166544 * S_MntFishProducts
1127994   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1127995   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1127996   +          +    -0.11948662500951 * S_MntSweetProducts
1127997   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1127998   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1127999   +          +     0.22401914357376 * S_NumStorePurchases
1128000   +          +     0.04219877865976 * S_NumWebPurchases
1128001   +          +     1.21753334166036 * S_NumWebVisitsMonth
1128002   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1128003   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1128004   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1128005   +          +     0.31175257038578 * S_MntFishProducts
1128006   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1128007   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1128008   +          +      0.0927253053382 * S_MntSweetProducts
1128009   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1128010   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1128011   +          +    -0.12667606349662 * S_NumStorePurchases
1128012   +          +     0.30148374518724 * S_NumWebPurchases
1128013   +          +     0.48934229701658 * S_NumWebVisitsMonth
1128014   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1128015   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1128016   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1128017   +          +     0.42646725119177 * S_MntFishProducts
1128018   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1128019   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1128020   +          +    -0.01493605582616 * S_MntSweetProducts
1128021   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1128022   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1128023   +          +     0.54256744091258 * S_NumStorePurchases
1128024   +          +     0.43065931458468 * S_NumWebPurchases
1128025   +          +      0.5935561420466 * S_NumWebVisitsMonth
1128026   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1128027   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1128028   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1128029   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1128030   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1128031   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1128032   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1128033   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1128034   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1128035   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1128036   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1128037   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1128038   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1128039   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1128040   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1128041   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1128042   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1128043   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1128044   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1128045   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1128046   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1128047   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1128048   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1128049   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1128050   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1128051   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1128052   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1128053   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1128054   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1128055   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1128056   +          +    -0.85912688909911 * Marital_StatusDivorced
1128057   +          +     0.81561401465875 * Marital_StatusMarried
1128058   +          +    -0.58324403081542 * Marital_StatusSingle
1128059   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1128060   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1128061   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1128062   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1128063   +          +    -0.34784695867287 * Marital_StatusDivorced
1128064   +          +    -0.18194022182247 * Marital_StatusMarried
1128065   +          +    -0.10633185904164 * Marital_StatusSingle
1128066   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1128067   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1128068   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1128069   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1128070   +          +     0.61058752124466 * Marital_StatusDivorced
1128071   +          +    -1.38793808025141 * Marital_StatusMarried
1128072   +          +     1.10060737810944 * Marital_StatusSingle
1128073   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1128074   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1128075   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1128076   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1128077   +          +     0.11973800573581 * Marital_StatusDivorced
1128078   +          +      -0.294635257911 * Marital_StatusMarried
1128079   +          +    -0.05399659601172 * Marital_StatusSingle
1128080   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1128081   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1128082   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1128083   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1128084   +          +     0.42838191659864 * Marital_StatusDivorced
1128085   +          +    -0.09150349181363 * Marital_StatusMarried
1128086   +          +    -0.33520164145276 * Marital_StatusSingle
1128087   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1128088   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1128089   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1128090   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1128091   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1128092   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1128093   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1128094   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1128095   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1128096   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1128097   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1128098   +END;
MPRINT(EM_DIAGRAM):   END;
1128099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1128100   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1128101   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1128102   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1128103   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1128104   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1128105   +END;
MPRINT(EM_DIAGRAM):   END;
1128106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128107   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1128108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128109   +
1128110   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1128111   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1128112   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1128113   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1128114   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1128115   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128116   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1128117   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1128118   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1128119   +end;
MPRINT(EM_DIAGRAM):   end;
1128120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128121   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1128122   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1128123   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1128124   +   end;
MPRINT(EM_DIAGRAM):   end;
1128125   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1128126   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1128127   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1128128   +   end;
MPRINT(EM_DIAGRAM):   end;
1128129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128130   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1128131   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1128132   +   end;
MPRINT(EM_DIAGRAM):   end;
1128133   +end;
MPRINT(EM_DIAGRAM):   end;
1128134   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1128135   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1128136   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1128137   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1128138   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1128139   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1128140   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1128141   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1128142   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1128143   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1128144   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1128145   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1128146   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1128147   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1128148   +END;
MPRINT(EM_DIAGRAM):   END;
1128149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1128150   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1128151   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1128152   +END;
MPRINT(EM_DIAGRAM):   END;
1128153   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1128154   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1128155   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1128156   +END;
MPRINT(EM_DIAGRAM):   END;
1128157   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1128158   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1128159   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1128160   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1128161   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1128162   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1128163   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1128164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128165   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1128166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128167   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1128168   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1128169   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1128170   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1128171   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1128172   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1128173   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1128174   +END;
MPRINT(EM_DIAGRAM):   END;
1128175   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1128176   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1128177   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1128178   +drop
1128179   +H11
1128180   +H12
1128181   +H13
1128182   +H14
1128183   +H15
1128184   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1128185   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1128186   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1128187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128188   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1128189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128190   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1128191   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1128192   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1128193   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1128194   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128195   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1128196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128197   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1128198   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1128199   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1128200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128201   +* Ensmbl10: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 5 of 5;
1128202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128204   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1128205   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1128206   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1128207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128208   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1128209   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1128210   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1128211   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1128212   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1128213   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1128214   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1128215   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1128216   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1128217   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1128218   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1128219   +LENGTH _WARN_ $4
1128220   +      F_DepVar  $ 12
1128221   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1128222   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1128223   +
1128224   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1128225   +
1128226   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1128227   +
1128228   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1128229   +
1128230   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1128231   +
1128232   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1128233   +
1128234   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1128235   +
1128236   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1128237   +
1128238   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1128239   +
1128240   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1128241   +
1128242   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1128243   +
1128244   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1128245   +
1128246   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1128247   +
1128248   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1128249   +
1128250   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1128251   +
1128252   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1128253   +
1128254   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1128255   +
1128256   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1128257   +
1128258   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1128259   +
1128260   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1128261   +
1128262   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1128263   +
1128264   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1128265   +
1128266   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1128267   +
1128268   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1128269   +
1128270   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1128271   +
1128272   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1128273   +
1128274   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1128275   +
1128276   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1128277   +
1128278   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1128279   +
1128280   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1128281   +
1128282   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1128283   +
1128284   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1128285   +
1128286   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1128287   +
1128288   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1128289   +
1128290   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1128291   +
1128292   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1128293   +
1128294   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1128295   +
1128296   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1128297   +
1128298   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1128299   +
1128300   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1128301   +
1128302   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1128303   +
1128304   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1128305   +
1128306   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1128307   +
1128308   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1128309   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1128310   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1128311   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1128312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128314   +end;
MPRINT(EM_DIAGRAM):   end;
1128315   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128317   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1128318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128320   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1128321   +   end;
MPRINT(EM_DIAGRAM):   end;
1128322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128323   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1128324   +   end;
MPRINT(EM_DIAGRAM):   end;
1128325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128326   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1128327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128329   +   end;
MPRINT(EM_DIAGRAM):   end;
1128330   +end;
MPRINT(EM_DIAGRAM):   end;
1128331   +
1128332   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1128333   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1128334   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1128335   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1128336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128338   +end;
MPRINT(EM_DIAGRAM):   end;
1128339   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128341   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1128342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128343   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128344   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1128345   +   end;
MPRINT(EM_DIAGRAM):   end;
1128346   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128347   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1128348   +   end;
MPRINT(EM_DIAGRAM):   end;
1128349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128350   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1128351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128353   +   end;
MPRINT(EM_DIAGRAM):   end;
1128354   +end;
MPRINT(EM_DIAGRAM):   end;
1128355   +
1128356   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1128357   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1128358   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1128359   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1128360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128362   +end;
MPRINT(EM_DIAGRAM):   end;
1128363   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128364   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128365   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1128366   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128367   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128368   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1128369   +   end;
MPRINT(EM_DIAGRAM):   end;
1128370   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128371   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1128372   +   end;
MPRINT(EM_DIAGRAM):   end;
1128373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128374   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1128375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128377   +   end;
MPRINT(EM_DIAGRAM):   end;
1128378   +end;
MPRINT(EM_DIAGRAM):   end;
1128379   +
1128380   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1128381   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1128382   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1128383   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1128384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128386   +end;
MPRINT(EM_DIAGRAM):   end;
1128387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128389   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1128390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128391   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128392   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1128393   +   end;
MPRINT(EM_DIAGRAM):   end;
1128394   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128395   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1128396   +   end;
MPRINT(EM_DIAGRAM):   end;
1128397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128398   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1128399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128401   +   end;
MPRINT(EM_DIAGRAM):   end;
1128402   +end;
MPRINT(EM_DIAGRAM):   end;
1128403   +
1128404   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1128405   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1128406   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1128407   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1128408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128410   +end;
MPRINT(EM_DIAGRAM):   end;
1128411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128413   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1128414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128415   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128416   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1128417   +   end;
MPRINT(EM_DIAGRAM):   end;
1128418   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128419   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1128420   +   end;
MPRINT(EM_DIAGRAM):   end;
1128421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128422   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1128423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128425   +   end;
MPRINT(EM_DIAGRAM):   end;
1128426   +end;
MPRINT(EM_DIAGRAM):   end;
1128427   +
1128428   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1128429   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1128430   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1128431   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1128432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128434   +end;
MPRINT(EM_DIAGRAM):   end;
1128435   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128436   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128437   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1128438   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128439   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1128440   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1128441   +   end;
MPRINT(EM_DIAGRAM):   end;
1128442   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1128443   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1128444   +   end;
MPRINT(EM_DIAGRAM):   end;
1128445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128446   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1128447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128449   +   end;
MPRINT(EM_DIAGRAM):   end;
1128450   +end;
MPRINT(EM_DIAGRAM):   end;
1128451   +
1128452   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1128453   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1128454   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1128455   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1128456   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1128457   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1128458   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1128459   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1128460   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1128461   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1128462   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1128463   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1128464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128466   +end;
MPRINT(EM_DIAGRAM):   end;
1128467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128468   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1128469   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1128470   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128471   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1128472   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1128473   +   end;
MPRINT(EM_DIAGRAM):   end;
1128474   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1128475   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1128476   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1128477   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1128478   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1128479   +   end;
MPRINT(EM_DIAGRAM):   end;
1128480   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1128481   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1128482   +   end;
MPRINT(EM_DIAGRAM):   end;
1128483   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1128484   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1128485   +   end;
MPRINT(EM_DIAGRAM):   end;
1128486   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1128487   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1128488   +   end;
MPRINT(EM_DIAGRAM):   end;
1128489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128490   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1128491   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1128492   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1128493   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1128494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128496   +   end;
MPRINT(EM_DIAGRAM):   end;
1128497   +end;
MPRINT(EM_DIAGRAM):   end;
1128498   +
1128499   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1128500   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1128501   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1128502   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1128503   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1128504   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1128505   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1128506   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1128507   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1128508   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1128509   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1128510   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1128511   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1128512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128514   +end;
MPRINT(EM_DIAGRAM):   end;
1128515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128516   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1128517   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1128518   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128519   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1128520   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1128521   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1128522   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1128523   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1128524   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128525   +         end;
MPRINT(EM_DIAGRAM):   end;
1128526   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1128527   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1128528   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1128529   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128530   +            end;
MPRINT(EM_DIAGRAM):   end;
1128531   +         end;
MPRINT(EM_DIAGRAM):   end;
1128532   +      end;
MPRINT(EM_DIAGRAM):   end;
1128533   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1128534   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1128535   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1128536   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128537   +         end;
MPRINT(EM_DIAGRAM):   end;
1128538   +      end;
MPRINT(EM_DIAGRAM):   end;
1128539   +   end;
MPRINT(EM_DIAGRAM):   end;
1128540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128541   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1128542   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1128543   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128544   +      end;
MPRINT(EM_DIAGRAM):   end;
1128545   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1128546   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1128547   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1128548   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1128549   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1128550   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1128551   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128552   +         end;
MPRINT(EM_DIAGRAM):   end;
1128553   +      end;
MPRINT(EM_DIAGRAM):   end;
1128554   +   end;
MPRINT(EM_DIAGRAM):   end;
1128555   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1128556   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1128557   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1128558   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1128559   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1128560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128562   +   end;
MPRINT(EM_DIAGRAM):   end;
1128563   +end;
MPRINT(EM_DIAGRAM):   end;
1128564   +
1128565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128566   +*** Checking missing input Interval
1128567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1128568   +
1128569   +IF NMISS(
1128570   +   Income ,
1128571   +   Kidhome ,
1128572   +   MntFishProducts ,
1128573   +   MntFruits ,
1128574   +   MntGoldProds ,
1128575   +   MntMeatProducts ,
1128576   +   MntSweetProducts ,
1128577   +   MntWines ,
1128578   +   NumCatalogPurchases ,
1128579   +   NumDealsPurchases ,
1128580   +   NumStorePurchases ,
1128581   +   NumWebPurchases ,
1128582   +   NumWebVisitsMonth ,
1128583   +   Recency ,
1128584   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1128585   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1128586   +
1128587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128588   +END;
MPRINT(EM_DIAGRAM):   END;
1128589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128590   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1128591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128592   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1128593   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1128594   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1128595   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1128596   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1128597   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1128598   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1128599   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1128600   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1128601   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1128602   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1128603   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1128604   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1128605   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1128606   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1128607   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1128608   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1128609   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1128610   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1128611   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1128612   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1128613   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1128614   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1128615   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1128616   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1128617   +END;
MPRINT(EM_DIAGRAM):   END;
1128618   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1128619   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1128620   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1128621   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1128622   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1128623   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1128624   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1128625   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1128626   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1128627   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1128628   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1128629   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1128630   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1128631   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1128632   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1128633   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1128634   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1128635   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1128636   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1128637   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1128638   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1128639   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1128640   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1128641   +   ELSE S_NumCatalogPurchases
1128642   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1128643   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1128644   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1128645   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1128646   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1128647   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1128648   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1128649   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1128650   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1128651   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1128652   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1128653   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1128654   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1128655   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1128656   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1128657   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1128658   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1128659   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1128660   +END;
MPRINT(EM_DIAGRAM):   END;
1128661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128662   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1128663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128665   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1128666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128668   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1128669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128670   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1128671   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1128672   +          +    -0.08967295716195 * S_MntFishProducts
1128673   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1128674   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1128675   +          +    -0.02806094557115 * S_MntSweetProducts
1128676   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1128677   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1128678   +          +     0.25137876058262 * S_NumStorePurchases
1128679   +          +    -0.07865442401292 * S_NumWebPurchases
1128680   +          +     1.03197398967259 * S_NumWebVisitsMonth
1128681   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1128682   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1128683   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1128684   +          +     0.19312392388912 * S_MntFishProducts
1128685   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1128686   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1128687   +          +       0.204174263605 * S_MntSweetProducts
1128688   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1128689   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1128690   +          +     0.07747830335769 * S_NumStorePurchases
1128691   +          +     0.07960837555191 * S_NumWebPurchases
1128692   +          +     0.02351602389122 * S_NumWebVisitsMonth
1128693   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1128694   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1128695   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1128696   +          +     0.18733919794636 * S_MntFishProducts
1128697   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1128698   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1128699   +          +     0.42514606159239 * S_MntSweetProducts
1128700   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1128701   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1128702   +          +     0.36582106462789 * S_NumStorePurchases
1128703   +          +     0.04244777020435 * S_NumWebPurchases
1128704   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1128705   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1128706   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1128707   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1128708   +          +     0.05986489897572 * S_MntFishProducts
1128709   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1128710   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1128711   +          +    -0.05513370461072 * S_MntSweetProducts
1128712   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1128713   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1128714   +          +     0.64364674828841 * S_NumStorePurchases
1128715   +          +     0.15084748708424 * S_NumWebPurchases
1128716   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1128717   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1128718   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1128719   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1128720   +          +    -0.14543196273578 * S_MntFishProducts
1128721   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1128722   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1128723   +          +     0.49374793444169 * S_MntSweetProducts
1128724   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1128725   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1128726   +          +     1.23754786782746 * S_NumStorePurchases
1128727   +          +     1.11316667348511 * S_NumWebPurchases
1128728   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1128729   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1128730   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1128731   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1128732   +          +     0.29549884005341 * S_MntFishProducts
1128733   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1128734   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1128735   +          +    -0.11909215986981 * S_MntSweetProducts
1128736   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1128737   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1128738   +          +     0.30109334594548 * S_NumStorePurchases
1128739   +          +     0.01985762767489 * S_NumWebPurchases
1128740   +          +     0.44965133281333 * S_NumWebVisitsMonth
1128741   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1128742   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1128743   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1128744   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1128745   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1128746   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1128747   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1128748   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1128749   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1128750   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1128751   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1128752   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1128753   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1128754   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1128755   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1128756   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1128757   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1128758   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1128759   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1128760   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1128761   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1128762   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1128763   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1128764   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1128765   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1128766   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1128767   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1128768   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1128769   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1128770   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1128771   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1128772   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1128773   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1128774   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1128775   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1128776   +          +     0.51015833145636 * Marital_StatusDivorced
1128777   +          +     -1.1653662063616 * Marital_StatusMarried
1128778   +          +     1.19396547750441 * Marital_StatusSingle
1128779   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1128780   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1128781   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1128782   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1128783   +          +     0.09154288513995 * Marital_StatusDivorced
1128784   +          +     0.06725684628382 * Marital_StatusMarried
1128785   +          +     0.11327659191494 * Marital_StatusSingle
1128786   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1128787   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1128788   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1128789   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1128790   +          +     0.37591653615852 * Marital_StatusDivorced
1128791   +          +    -0.05024236790132 * Marital_StatusMarried
1128792   +          +    -0.28317154997144 * Marital_StatusSingle
1128793   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1128794   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1128795   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1128796   +        EducationGraduation  +       0.638986138084 * EducationMaster
1128797   +          +    -0.44885292450558 * Marital_StatusDivorced
1128798   +          +     0.78958791519299 * Marital_StatusMarried
1128799   +          +    -0.09688714431356 * Marital_StatusSingle
1128800   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1128801   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1128802   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1128803   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1128804   +          +    -0.30801073895989 * Marital_StatusDivorced
1128805   +          +     -0.1285150749223 * Marital_StatusMarried
1128806   +          +     0.06775542164414 * Marital_StatusSingle
1128807   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1128808   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1128809   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1128810   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1128811   +          +     0.22193599090368 * Marital_StatusDivorced
1128812   +          +    -0.54544672042168 * Marital_StatusMarried
1128813   +          +    -0.02237436019864 * Marital_StatusSingle
1128814   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1128815   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1128816   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1128817   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1128818   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1128819   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1128820   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1128821   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1128822   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1128823   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1128824   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1128825   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1128826   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1128827   +END;
MPRINT(EM_DIAGRAM):   END;
1128828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1128829   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1128830   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1128831   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1128832   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1128833   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1128834   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1128835   +END;
MPRINT(EM_DIAGRAM):   END;
1128836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128837   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1128838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128839   +
1128840   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1128841   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1128842   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1128843   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1128844   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1128845   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128846   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1128847   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1128848   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1128849   +end;
MPRINT(EM_DIAGRAM):   end;
1128850   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128851   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1128852   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1128853   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1128854   +   end;
MPRINT(EM_DIAGRAM):   end;
1128855   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1128856   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1128857   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1128858   +   end;
MPRINT(EM_DIAGRAM):   end;
1128859   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128860   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1128861   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1128862   +   end;
MPRINT(EM_DIAGRAM):   end;
1128863   +end;
MPRINT(EM_DIAGRAM):   end;
1128864   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1128865   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1128866   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1128867   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1128868   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1128869   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1128870   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1128871   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1128872   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1128873   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1128874   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1128875   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1128876   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1128877   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1128878   +END;
MPRINT(EM_DIAGRAM):   END;
1128879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1128880   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1128881   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1128882   +END;
MPRINT(EM_DIAGRAM):   END;
1128883   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1128884   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1128885   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1128886   +END;
MPRINT(EM_DIAGRAM):   END;
1128887   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1128888   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1128889   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1128890   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1128891   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1128892   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1128893   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1128894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128895   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1128896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1128897   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1128898   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1128899   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1128900   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1128901   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1128902   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1128903   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1128904   +END;
MPRINT(EM_DIAGRAM):   END;
1128905   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1128906   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1128907   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1128908   +drop
1128909   +H11
1128910   +H12
1128911   +H13
1128912   +H14
1128913   +H15
1128914   +H16
1128915   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1128916   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1128917   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1128918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128919   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1128920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128921   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1128922   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1128923   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1128924   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1128925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128926   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1128927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128928   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1128929   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1128930   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1128931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128932   +* Ensmbl10: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Average Posteriors of 5 models;
1128933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128934   +P_DepVar1 = (
1128935   +Neural33_P_DepVar1 +
1128936   +Neural31_P_DepVar1 +
1128937   +Neural32_P_DepVar1 +
1128938   +Neural34_P_DepVar1 +
1128939   +Neural35_P_DepVar1
1128940   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural33_P_DepVar1 + Neural31_P_DepVar1 +
Neural32_P_DepVar1 + Neural34_P_DepVar1 + Neural35_P_DepVar1 )/5;
1128941   +P_DepVar0 = (
1128942   +Neural33_P_DepVar0 +
1128943   +Neural31_P_DepVar0 +
1128944   +Neural32_P_DepVar0 +
1128945   +Neural34_P_DepVar0 +
1128946   +Neural35_P_DepVar0
1128947   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural33_P_DepVar0 + Neural31_P_DepVar0 +
Neural32_P_DepVar0 + Neural34_P_DepVar0 + Neural35_P_DepVar0 )/5;
1128948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128949   +* Ensmbl10: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Classification Vars;
1128950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128951   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1128952   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1128953   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1128954   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1128955   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1128956   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1128957   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1128958   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1128959   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1128960   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1128961   +end;
MPRINT(EM_DIAGRAM):   end;
1128962   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1128963   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1128964   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1128965   +end;
MPRINT(EM_DIAGRAM):   end;
1128966   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1128967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128968   +* Ensmbl10: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Producing Unformatted variable;
1128969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128970   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1128971   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1128972   +else
1128973   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1128974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128975   +* Ensmbl10: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing _WARN_ Variable;
1128976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128977   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1128978   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1128979   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1128980   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1128980  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1128981   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1128981  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1128982   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1128982  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1128983   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1128983  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1128984   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1128984  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1128985   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1128985  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1128986   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1128986  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1128987   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1128987  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1128988   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1128988  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1128989   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1128989  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1128990   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1128990  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1128991   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1128991  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1128992   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1128992  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1128993   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1128993  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1128994   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1128994  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1128995   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1128995  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1128996   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1128996  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1128997   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1128997  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1128998   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1128998  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1128999   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1128999  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1129000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1129001   +* Ensmbl10: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Residual Vars;
1129002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1129003   +if
1129004   +F_DepVar NE '1'
1129005   +AND F_DepVar NE '0'
1129006   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1129007   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1129008   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1129009   +end;
MPRINT(EM_DIAGRAM):   end;
1129010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129011   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1129012   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1129013   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1129014   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1129015   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1129016   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1129017   +END;
MPRINT(EM_DIAGRAM):   END;
1129018   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1129019    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL33_VALIDATE.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1129020    quit;
1129021    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl10_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl10_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl10_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1129081    filename _pref
1129081  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
1129082    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1129083    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas.
1129084   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1129085   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1129086   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1129087   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1129088   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1129089   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1129090   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1129091   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1129092   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1129093   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1129094   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1129095   +LENGTH _WARN_ $4
1129096   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1129097   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1129098   +
1129099   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1129100   +
1129101   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1129102   +
1129103   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1129104   +
1129105   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1129106   +
1129107   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1129108   +
1129109   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1129110   +
1129111   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1129112   +
1129113   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1129114   +
1129115   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1129116   +
1129117   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1129118   +
1129119   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1129120   +
1129121   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1129122   +
1129123   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1129124   +
1129125   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1129126   +
1129127   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1129128   +
1129129   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1129130   +
1129131   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1129132   +
1129133   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1129134   +
1129135   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1129136   +
1129137   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1129138   +
1129139   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1129140   +
1129141   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1129142   +
1129143   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1129144   +
1129145   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1129146   +
1129147   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1129148   +
1129149   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1129150   +
1129151   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1129152   +
1129153   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1129154   +
1129155   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1129156   +
1129157   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1129158   +
1129159   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1129160   +
1129161   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1129162   +
1129163   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1129164   +
1129165   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1129166   +
1129167   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1129168   +
1129169   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1129170   +
1129171   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1129172   +
1129173   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1129174   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1129175   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1129176   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1129177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129179   +end;
MPRINT(EM_DIAGRAM):   end;
1129180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129182   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1129183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129184   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129185   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1129186   +   end;
MPRINT(EM_DIAGRAM):   end;
1129187   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129188   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1129189   +   end;
MPRINT(EM_DIAGRAM):   end;
1129190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129191   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1129192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129194   +   end;
MPRINT(EM_DIAGRAM):   end;
1129195   +end;
MPRINT(EM_DIAGRAM):   end;
1129196   +
1129197   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1129198   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1129199   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1129200   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1129201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129203   +end;
MPRINT(EM_DIAGRAM):   end;
1129204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129206   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1129207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129208   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129209   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1129210   +   end;
MPRINT(EM_DIAGRAM):   end;
1129211   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129212   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1129213   +   end;
MPRINT(EM_DIAGRAM):   end;
1129214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129215   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1129216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129218   +   end;
MPRINT(EM_DIAGRAM):   end;
1129219   +end;
MPRINT(EM_DIAGRAM):   end;
1129220   +
1129221   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1129222   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1129223   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1129224   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1129225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129227   +end;
MPRINT(EM_DIAGRAM):   end;
1129228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129230   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1129231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129232   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129233   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1129234   +   end;
MPRINT(EM_DIAGRAM):   end;
1129235   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129236   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1129237   +   end;
MPRINT(EM_DIAGRAM):   end;
1129238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129239   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1129240   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129241   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129242   +   end;
MPRINT(EM_DIAGRAM):   end;
1129243   +end;
MPRINT(EM_DIAGRAM):   end;
1129244   +
1129245   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1129246   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1129247   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1129248   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1129249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129251   +end;
MPRINT(EM_DIAGRAM):   end;
1129252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129254   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1129255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129257   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1129258   +   end;
MPRINT(EM_DIAGRAM):   end;
1129259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129260   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1129261   +   end;
MPRINT(EM_DIAGRAM):   end;
1129262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129263   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1129264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129266   +   end;
MPRINT(EM_DIAGRAM):   end;
1129267   +end;
MPRINT(EM_DIAGRAM):   end;
1129268   +
1129269   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1129270   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1129271   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1129272   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1129273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129275   +end;
MPRINT(EM_DIAGRAM):   end;
1129276   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129278   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1129279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129281   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1129282   +   end;
MPRINT(EM_DIAGRAM):   end;
1129283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129284   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1129285   +   end;
MPRINT(EM_DIAGRAM):   end;
1129286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129287   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1129288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129290   +   end;
MPRINT(EM_DIAGRAM):   end;
1129291   +end;
MPRINT(EM_DIAGRAM):   end;
1129292   +
1129293   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1129294   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1129295   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1129296   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1129297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129299   +end;
MPRINT(EM_DIAGRAM):   end;
1129300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129302   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1129303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1129305   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1129306   +   end;
MPRINT(EM_DIAGRAM):   end;
1129307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1129308   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1129309   +   end;
MPRINT(EM_DIAGRAM):   end;
1129310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129311   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1129312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129314   +   end;
MPRINT(EM_DIAGRAM):   end;
1129315   +end;
MPRINT(EM_DIAGRAM):   end;
1129316   +
1129317   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1129318   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1129319   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129320   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1129321   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1129322   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1129323   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1129324   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1129325   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1129326   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1129327   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1129328   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1129329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129331   +end;
MPRINT(EM_DIAGRAM):   end;
1129332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129333   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1129334   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1129335   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129336   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1129337   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1129338   +   end;
MPRINT(EM_DIAGRAM):   end;
1129339   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1129340   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1129341   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1129342   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1129343   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1129344   +   end;
MPRINT(EM_DIAGRAM):   end;
1129345   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1129346   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1129347   +   end;
MPRINT(EM_DIAGRAM):   end;
1129348   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1129349   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1129350   +   end;
MPRINT(EM_DIAGRAM):   end;
1129351   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1129352   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1129353   +   end;
MPRINT(EM_DIAGRAM):   end;
1129354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129355   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1129356   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1129357   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1129358   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1129359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129361   +   end;
MPRINT(EM_DIAGRAM):   end;
1129362   +end;
MPRINT(EM_DIAGRAM):   end;
1129363   +
1129364   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1129365   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1129366   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1129367   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129368   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1129369   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1129370   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1129371   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1129372   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1129373   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1129374   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1129375   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1129376   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1129377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129379   +end;
MPRINT(EM_DIAGRAM):   end;
1129380   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129381   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1129382   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1129383   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129384   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129385   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1129386   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1129387   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1129388   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1129389   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129390   +         end;
MPRINT(EM_DIAGRAM):   end;
1129391   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129392   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1129393   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1129394   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129395   +            end;
MPRINT(EM_DIAGRAM):   end;
1129396   +         end;
MPRINT(EM_DIAGRAM):   end;
1129397   +      end;
MPRINT(EM_DIAGRAM):   end;
1129398   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129399   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1129400   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1129401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129402   +         end;
MPRINT(EM_DIAGRAM):   end;
1129403   +      end;
MPRINT(EM_DIAGRAM):   end;
1129404   +   end;
MPRINT(EM_DIAGRAM):   end;
1129405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129406   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1129407   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1129408   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129409   +      end;
MPRINT(EM_DIAGRAM):   end;
1129410   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129411   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1129412   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1129413   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1129414   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1129415   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1129416   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129417   +         end;
MPRINT(EM_DIAGRAM):   end;
1129418   +      end;
MPRINT(EM_DIAGRAM):   end;
1129419   +   end;
MPRINT(EM_DIAGRAM):   end;
1129420   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129421   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1129422   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1129423   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1129424   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1129425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129427   +   end;
MPRINT(EM_DIAGRAM):   end;
1129428   +end;
MPRINT(EM_DIAGRAM):   end;
1129429   +
1129430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129431   +*** Checking missing input Interval
1129432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1129433   +
1129434   +IF NMISS(
1129435   +   Income ,
1129436   +   Kidhome ,
1129437   +   MntFishProducts ,
1129438   +   MntFruits ,
1129439   +   MntGoldProds ,
1129440   +   MntMeatProducts ,
1129441   +   MntSweetProducts ,
1129442   +   MntWines ,
1129443   +   NumCatalogPurchases ,
1129444   +   NumDealsPurchases ,
1129445   +   NumStorePurchases ,
1129446   +   NumWebPurchases ,
1129447   +   NumWebVisitsMonth ,
1129448   +   Recency ,
1129449   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1129450   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1129451   +
1129452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129453   +END;
MPRINT(EM_DIAGRAM):   END;
1129454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129455   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1129456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129457   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1129458   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1129459   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1129460   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1129461   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1129462   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1129463   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1129464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1129465   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1129466   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1129467   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1129468   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1129469   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1129470   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1129471   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1129472   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1129473   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1129474   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1129475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1129476   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1129477   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1129478   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1129479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1129480   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1129481   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1129482   +END;
MPRINT(EM_DIAGRAM):   END;
1129483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1129484   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1129485   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1129486   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1129487   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1129488   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1129489   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1129490   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1129491   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1129492   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1129493   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1129494   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1129495   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1129496   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1129497   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1129498   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1129499   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1129500   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1129501   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1129502   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1129503   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1129504   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1129505   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1129506   +   ELSE S_NumCatalogPurchases
1129507   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1129508   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1129509   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1129510   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1129511   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1129512   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1129513   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1129514   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1129515   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1129516   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1129517   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1129518   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1129519   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1129520   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1129521   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1129522   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1129523   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1129524   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1129525   +END;
MPRINT(EM_DIAGRAM):   END;
1129526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129527   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1129528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129530   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1129531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129533   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1129534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129535   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1129536   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1129537   +          +     0.13364230231465 * S_MntFishProducts
1129538   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1129539   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1129540   +          +    -0.10871064476617 * S_MntSweetProducts
1129541   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1129542   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1129543   +          +     0.52835897625366 * S_NumStorePurchases
1129544   +          +     0.66297635444958 * S_NumWebPurchases
1129545   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1129546   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1129547   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1129548   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1129549   +          +     0.14748983783528 * S_MntFishProducts
1129550   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1129551   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1129552   +          +     0.31095426478608 * S_MntSweetProducts
1129553   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1129554   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1129555   +          +     0.14387100066933 * S_NumStorePurchases
1129556   +          +    -0.01648998884133 * S_NumWebPurchases
1129557   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1129558   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1129559   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1129560   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1129561   +          +     0.00774185404534 * S_MntFishProducts
1129562   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1129563   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1129564   +          +     0.28728624268589 * S_MntSweetProducts
1129565   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1129566   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1129567   +          +     0.56446566213593 * S_NumStorePurchases
1129568   +          +     0.44547549135846 * S_NumWebPurchases
1129569   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1129570   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1129571   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1129572   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1129573   +          +     0.24665716882586 * S_MntFishProducts
1129574   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1129575   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1129576   +          +    -0.10530818594736 * S_MntSweetProducts
1129577   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1129578   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1129579   +          +     0.36617016651032 * S_NumStorePurchases
1129580   +          +      0.3580014320946 * S_NumWebPurchases
1129581   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1129582   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1129583   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1129584   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1129585   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1129586   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1129587   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1129588   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1129589   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1129590   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1129591   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1129592   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1129593   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1129594   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1129595   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1129596   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1129597   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1129598   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1129599   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1129600   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1129601   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1129602   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1129603   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1129604   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1129605   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1129606   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1129607   +          +     0.05171313818048 * Marital_StatusDivorced
1129608   +          +    -0.79112453157624 * Marital_StatusMarried
1129609   +          +     0.89650138723512 * Marital_StatusSingle
1129610   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1129611   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1129612   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1129613   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1129614   +          +     0.05091092042416 * Marital_StatusDivorced
1129615   +          +     0.86642985712339 * Marital_StatusMarried
1129616   +          +    -0.14148832619997 * Marital_StatusSingle
1129617   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1129618   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1129619   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1129620   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1129621   +          +    -0.67787102917679 * Marital_StatusDivorced
1129622   +          +     1.38931504762816 * Marital_StatusMarried
1129623   +          +    -0.51164629287485 * Marital_StatusSingle
1129624   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1129625   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1129626   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1129627   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1129628   +          +     0.12658153975639 * Marital_StatusDivorced
1129629   +          +     0.20111721742791 * Marital_StatusMarried
1129630   +          +     -0.3521524791648 * Marital_StatusSingle
1129631   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1129632   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1129633   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1129634   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1129635   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1129636   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1129637   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1129638   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1129639   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1129640   +END;
MPRINT(EM_DIAGRAM):   END;
1129641   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1129642   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1129643   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1129644   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1129645   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1129646   +END;
MPRINT(EM_DIAGRAM):   END;
1129647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129648   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1129649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1129651   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1129652   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1129653   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1129654   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1129655   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1129656   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1129657   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1129658   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1129659   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1129660   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1129661   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1129662   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1129663   +END;
MPRINT(EM_DIAGRAM):   END;
1129664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1129665   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1129666   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1129667   +END;
MPRINT(EM_DIAGRAM):   END;
1129668   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1129669   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1129670   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1129671   +END;
MPRINT(EM_DIAGRAM):   END;
1129672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129673   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1129674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1129675   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1129676   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1129677   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1129678   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1129679   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1129680   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1129681   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1129682   +END;
MPRINT(EM_DIAGRAM):   END;
1129683   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1129684   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1129685   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1129686   +drop
1129687   +H11
1129688   +H12
1129689   +H13
1129690   +H14
1129691   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1129692   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1129693    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1129694    quit;
1129695    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1129696    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1129697    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1129698    retain ID 2 Node "Neural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural33";
1129699    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1129700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129701    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1129702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
 
 
1129704    proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
1129705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
1129707    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129708    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1129709    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1129710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129711    proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
1129712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1129713    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1129714    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129716    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129717    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1129718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129719    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129720    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1129721    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1129721  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 878 rows and 5 columns.
 
1129722    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129723    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1129724    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 878 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 878 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129725    filename _pref
1129725  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1129726    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1129727    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1129728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1129729   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1129730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1129731   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1129732   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1129733   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1129734    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1129735    quit;
1129736    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1129737    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1129738    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1129739    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1129740    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1129741    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129742    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1129743    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129745    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1129746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129747    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129748    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129749    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1129750    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1129751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129752    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1129753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1129754    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1129755    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129757    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129758    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1129759    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129760    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129761    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1129762    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1129762  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1129763    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129764    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1129765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 882 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129766    filename _pref
1129766  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1129767    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1129768    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1129769   +
1129770   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1129771   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1129771  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1129772   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1129773   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1129774   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1129775   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1129776   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1129777    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1129778    quit;
1129779    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1129780    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1129781    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1129782    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1129783    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1129784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129785    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1129786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129788    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1129789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129791    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129792    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1129793    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1129794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129795    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1129796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129797    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1129798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129801    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1129802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129803    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129804    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1129805    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1129805  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1129806    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129807    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1129808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 921 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129809    filename _pref
1129809  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1129810    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1129811    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1129812   +
1129813   +
1129814   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1129815   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1129816   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1129817   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1129818   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1129819   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129820   +
1129821   +
1129822   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1129823   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1129824   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1129825   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1129826   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1129827   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129828   +
1129829   +
1129830   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1129831   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1129832   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1129833   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1129834   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1129835   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129836   +
1129837   +
1129838   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1129839   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1129840   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1129841   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1129842   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1129843   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129844   +
1129845   +
1129846   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1129847   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1129848   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1129849   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1129850   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1129851   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129852   +
1129853   +
1129854   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1129855   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1129856   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1129857   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1129858   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1129859   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129860   +
1129861   +
1129862   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1129863   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1129864   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1129865   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1129866   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1129867   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129868   +
1129869   +
1129870   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1129871   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1129872   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1129873   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1129874   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1129875   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1129876   +if
1129877   +_FILTERNORM1 not in ( '.')
1129878   + and
1129879   +_FILTERNORM2 not in ( '.')
1129880   + and
1129881   +_FILTERNORM3 not in ( '.')
1129882   + and
1129883   +_FILTERNORM4 not in ( '.')
1129884   + and
1129885   +_FILTERNORM5 not in ( '.')
1129886   + and
1129887   +_FILTERNORM6 not in ( '.')
1129888   + and
1129889   +_FILTERNORM7 not in ( ' ')
1129890   + and
1129891   +_FILTERNORM8 not in ( ' ')
1129892   +and
1129893   +( Dt_Customer ne .)
1129894   +and ( Income ne . and (Income<=107000))
1129895   +and ( Kidhome ne .)
1129896   +and ( MntFishProducts ne .)
1129897   +and ( MntFruits ne .)
1129898   +and ( MntGoldProds ne .)
1129899   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1129900   +and ( MntSweetProducts ne .)
1129901   +and ( MntWines ne .)
1129902   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1129903   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1129904   +and ( NumStorePurchases ne .)
1129905   +and ( NumWebPurchases ne .)
1129906   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1129907   +and ( Recency ne .)
1129908   +and ( Teenhome ne .)
1129909   +and ( Year_Birth ne .)
1129910   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1129911   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1129912   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1129913   +end;
MPRINT(EM_DIAGRAM):   end;
1129914   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1129915   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1129916    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1129917    quit;
1129918    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1129919    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1129920    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1129921    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1129922    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1129923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129924    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1129925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129927    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1129928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129931    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1129932    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1129933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129934    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1129935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1129936    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1129937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1129940    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1129941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1129942    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129943    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1129944    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1129944  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1129945    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1129946    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1129947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1129948    %macro varDept(fcmpdata=,id=);
1129949    %global nobs&id scoreFlag&id;
1129950    %let scoreFlag&id = 0;
1129951    %if &id=1 or ^&fcmpStart %then %do;
1129952    proc sort data=&fcmpdata out=_temp&id nodupkey;
1129953    by NAME;
1129954    where id=&id and LHS in( %let j=1;
1129955    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1129956    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1129957    "&var" %let j = %eval(&j+1);
1129958    %end;
1129959    );
1129960    run;
1129961    %let dsid = %sysfunc(open(_temp&id));
1129962    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1129963    %let dsid = %sysfunc(close(&dsid));
1129964    %if &&nobs&id %then %do;
1129965    %let scoreFlag&id = 1;
1129966    %let fcmpStart = 1;
1129967    %end;
1129968    %else %let fcmpStart = 0;
1129969    %end;
1129970    %else %do;
1129971    proc sort data=&fcmpdata out=_tempid;
1129972    where id=&id;
1129973    by LHS;
1129974    run;
1129975    %let dsid = %sysfunc(open(_tempid));
1129976    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1129977    %let dsid = %sysfunc(close(&dsid));
1129978    %if ^&&nobs&id %then %do;
1129979    proc datasets lib=work nolist;
1129980    delete _tempid;
1129981    run;
1129982    quit;
1129983    %end;
1129984    %else %do;
1129985    data _tempAll;
1129986    set %let j=%eval(&id-1);
1129987    %do x=1 %to &j;
1129988    %if &&nobs&x %then %do;
1129989    _temp&x %end;
1129990    %end;
1129991    ;
1129992    run;
1129993    proc sql;
1129994    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1129994  ! work._tempid p2 where p.name=p2.lhs;
1129995    quit;
1129996    data _temp&id;
1129997    set _temp&id;
1129998    where LHS ne '' and NAME ne '' and Node ne '';
1129999    run;
1130000    proc datasets lib=work nolist;
1130001    delete _tempAll;
1130002    run;
1130003    %let dsid = %sysfunc(open(_temp&id));
1130004    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130005    %let dsid = %sysfunc(close(&dsid));
1130006    %if ^&&nobs&id %then %do;
1130007    proc datasets lib=work nolist;
1130008    delete _temp&id;
1130009    run;
1130010    quit;
1130011    %end;
1130012    %else %do;
1130013    %let scoreFlag&id = 1;
1130014    data _temp&id;
1130015    set _temp&id;
1130016    where LHS ne NAME and node ne '';
1130017    run;
1130018    %let dsid = %sysfunc(open(_temp&id));
1130019    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130020    %let dsid = %sysfunc(close(&dsid));
1130021    %if ^&&nobs&id %then %do;
1130022    proc datasets lib=work nolist;
1130023    delete _temp&id;
1130024    run;
1130025    quit;
1130026    %end;
1130027    %else %do;
1130028    proc sort data=_temp&id nodupkey;
1130029    by LHS NAME;
1130030    run;
1130031    %end;
1130032    %end;
1130033    %end;
1130034    %end;
1130035    %mend varDept;
1130036    %macro optCode(outdata=fcmpdata);
1130037    %global fcmpStart;
1130038    %let fcmpStart = 0;
1130039    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1130040    %let NumNodes=9;
1130041    %do k=1 %to &NumNodes;
1130042    %vardept(fcmpdata=&outdata, id=&k);
1130043    %end;
1130044    %mend optCode;
1130045    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1130046    filename _pref
1130046  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
1130047    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1130048    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas.
1130049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130050   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1130051   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130052   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1130053   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1130054   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1130055   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1130056   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1130057   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1130058   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1130059   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1130060   +LENGTH _WARN_ $4
1130061   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1130062   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1130063   +
1130064   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1130065   +
1130066   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1130067   +
1130068   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1130069   +
1130070   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1130071   +
1130072   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1130073   +
1130074   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1130075   +
1130076   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1130077   +
1130078   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1130079   +
1130080   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1130081   +
1130082   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1130083   +
1130084   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1130085   +
1130086   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1130087   +
1130088   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1130089   +
1130090   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1130091   +
1130092   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1130093   +
1130094   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1130095   +
1130096   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1130097   +
1130098   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1130099   +
1130100   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1130101   +
1130102   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1130103   +
1130104   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1130105   +
1130106   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1130107   +
1130108   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1130109   +
1130110   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1130111   +
1130112   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1130113   +
1130114   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1130115   +
1130116   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1130117   +
1130118   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1130119   +
1130120   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1130121   +
1130122   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1130123   +
1130124   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1130125   +
1130126   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1130127   +
1130128   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1130129   +
1130130   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1130131   +
1130132   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1130133   +
1130134   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1130135   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1130136   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1130137   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1130138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130140   +end;
MPRINT(EM_DIAGRAM):   end;
1130141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130143   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1130144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130146   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1130147   +   end;
MPRINT(EM_DIAGRAM):   end;
1130148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130149   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1130150   +   end;
MPRINT(EM_DIAGRAM):   end;
1130151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130152   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1130153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130155   +   end;
MPRINT(EM_DIAGRAM):   end;
1130156   +end;
MPRINT(EM_DIAGRAM):   end;
1130157   +
1130158   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1130159   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1130160   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1130161   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1130162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130164   +end;
MPRINT(EM_DIAGRAM):   end;
1130165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130167   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1130168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130170   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1130171   +   end;
MPRINT(EM_DIAGRAM):   end;
1130172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130173   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1130174   +   end;
MPRINT(EM_DIAGRAM):   end;
1130175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130176   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1130177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130179   +   end;
MPRINT(EM_DIAGRAM):   end;
1130180   +end;
MPRINT(EM_DIAGRAM):   end;
1130181   +
1130182   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1130183   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1130184   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1130185   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1130186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130188   +end;
MPRINT(EM_DIAGRAM):   end;
1130189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130191   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1130192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130194   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1130195   +   end;
MPRINT(EM_DIAGRAM):   end;
1130196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130197   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1130198   +   end;
MPRINT(EM_DIAGRAM):   end;
1130199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130200   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1130201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130203   +   end;
MPRINT(EM_DIAGRAM):   end;
1130204   +end;
MPRINT(EM_DIAGRAM):   end;
1130205   +
1130206   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1130207   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1130208   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1130209   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1130210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130212   +end;
MPRINT(EM_DIAGRAM):   end;
1130213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130215   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1130216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130218   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1130219   +   end;
MPRINT(EM_DIAGRAM):   end;
1130220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130221   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1130222   +   end;
MPRINT(EM_DIAGRAM):   end;
1130223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130224   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1130225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130227   +   end;
MPRINT(EM_DIAGRAM):   end;
1130228   +end;
MPRINT(EM_DIAGRAM):   end;
1130229   +
1130230   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1130231   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1130232   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1130233   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1130234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130236   +end;
MPRINT(EM_DIAGRAM):   end;
1130237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130239   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1130240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130242   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1130243   +   end;
MPRINT(EM_DIAGRAM):   end;
1130244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130245   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1130246   +   end;
MPRINT(EM_DIAGRAM):   end;
1130247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130248   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1130249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130251   +   end;
MPRINT(EM_DIAGRAM):   end;
1130252   +end;
MPRINT(EM_DIAGRAM):   end;
1130253   +
1130254   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1130255   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1130256   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1130257   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1130258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130260   +end;
MPRINT(EM_DIAGRAM):   end;
1130261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130263   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1130264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1130266   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1130267   +   end;
MPRINT(EM_DIAGRAM):   end;
1130268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1130269   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1130270   +   end;
MPRINT(EM_DIAGRAM):   end;
1130271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130272   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1130273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130275   +   end;
MPRINT(EM_DIAGRAM):   end;
1130276   +end;
MPRINT(EM_DIAGRAM):   end;
1130277   +
1130278   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1130279   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1130280   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130281   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1130282   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1130283   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1130284   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1130285   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1130286   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1130287   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1130288   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1130289   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1130290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130292   +end;
MPRINT(EM_DIAGRAM):   end;
1130293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130294   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1130295   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1130296   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130297   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1130298   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1130299   +   end;
MPRINT(EM_DIAGRAM):   end;
1130300   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1130301   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1130302   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1130303   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1130304   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1130305   +   end;
MPRINT(EM_DIAGRAM):   end;
1130306   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1130307   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1130308   +   end;
MPRINT(EM_DIAGRAM):   end;
1130309   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1130310   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1130311   +   end;
MPRINT(EM_DIAGRAM):   end;
1130312   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1130313   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1130314   +   end;
MPRINT(EM_DIAGRAM):   end;
1130315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130316   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1130317   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1130318   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1130319   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1130320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130322   +   end;
MPRINT(EM_DIAGRAM):   end;
1130323   +end;
MPRINT(EM_DIAGRAM):   end;
1130324   +
1130325   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1130326   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1130327   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1130328   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130329   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1130330   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1130331   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1130332   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1130333   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1130334   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1130335   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1130336   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1130337   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1130338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130340   +end;
MPRINT(EM_DIAGRAM):   end;
1130341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130342   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1130343   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1130344   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130345   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130346   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1130347   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1130348   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1130349   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1130350   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130351   +         end;
MPRINT(EM_DIAGRAM):   end;
1130352   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130353   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1130354   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1130355   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130356   +            end;
MPRINT(EM_DIAGRAM):   end;
1130357   +         end;
MPRINT(EM_DIAGRAM):   end;
1130358   +      end;
MPRINT(EM_DIAGRAM):   end;
1130359   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130360   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1130361   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1130362   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130363   +         end;
MPRINT(EM_DIAGRAM):   end;
1130364   +      end;
MPRINT(EM_DIAGRAM):   end;
1130365   +   end;
MPRINT(EM_DIAGRAM):   end;
1130366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130367   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1130368   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1130369   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130370   +      end;
MPRINT(EM_DIAGRAM):   end;
1130371   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130372   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1130373   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1130374   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1130375   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1130376   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1130377   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130378   +         end;
MPRINT(EM_DIAGRAM):   end;
1130379   +      end;
MPRINT(EM_DIAGRAM):   end;
1130380   +   end;
MPRINT(EM_DIAGRAM):   end;
1130381   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130382   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1130383   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1130384   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1130385   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1130386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130388   +   end;
MPRINT(EM_DIAGRAM):   end;
1130389   +end;
MPRINT(EM_DIAGRAM):   end;
1130390   +
1130391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130392   +*** Checking missing input Interval
1130393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1130394   +
1130395   +IF NMISS(
1130396   +   Income ,
1130397   +   Kidhome ,
1130398   +   MntFishProducts ,
1130399   +   MntFruits ,
1130400   +   MntGoldProds ,
1130401   +   MntMeatProducts ,
1130402   +   MntSweetProducts ,
1130403   +   MntWines ,
1130404   +   NumCatalogPurchases ,
1130405   +   NumDealsPurchases ,
1130406   +   NumStorePurchases ,
1130407   +   NumWebPurchases ,
1130408   +   NumWebVisitsMonth ,
1130409   +   Recency ,
1130410   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1130411   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1130412   +
1130413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130414   +END;
MPRINT(EM_DIAGRAM):   END;
1130415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130416   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1130417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130418   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130419   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1130420   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1130421   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1130422   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1130423   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1130424   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1130425   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1130426   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1130427   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1130428   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1130429   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1130430   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1130431   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1130432   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1130433   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1130434   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1130435   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1130436   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1130437   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1130438   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1130439   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1130440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1130441   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1130442   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1130443   +END;
MPRINT(EM_DIAGRAM):   END;
1130444   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130445   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1130446   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1130447   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1130448   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1130449   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1130450   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1130451   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1130452   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1130453   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1130454   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1130455   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1130456   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1130457   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1130458   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1130459   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1130460   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1130461   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1130462   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1130463   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1130464   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1130465   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1130466   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1130467   +   ELSE S_NumCatalogPurchases
1130468   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1130469   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1130470   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1130471   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1130472   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1130473   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1130474   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1130475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1130476   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1130477   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1130478   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1130479   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1130480   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1130481   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1130482   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1130483   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1130484   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1130485   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1130486   +END;
MPRINT(EM_DIAGRAM):   END;
1130487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130488   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1130489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130491   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1130492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130494   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1130495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130496   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130497   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1130498   +          +     0.06177226616611 * S_MntFishProducts
1130499   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1130500   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1130501   +          +     0.19245635559754 * S_MntSweetProducts
1130502   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1130503   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1130504   +          +    -0.35392759932805 * S_NumStorePurchases
1130505   +          +     -0.2443007642616 * S_NumWebPurchases
1130506   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1130507   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1130508   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1130509   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1130510   +          +     0.00012212205827 * S_MntFishProducts
1130511   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1130512   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1130513   +          +     0.01459978689352 * S_MntSweetProducts
1130514   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1130515   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1130516   +          +      0.4054643699817 * S_NumStorePurchases
1130517   +          +     0.27747327375374 * S_NumWebPurchases
1130518   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1130519   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1130520   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1130521   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1130522   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1130523   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1130524   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1130525   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1130526   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1130527   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1130528   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1130529   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1130530   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1130531   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1130532   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1130533   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1130534   +          +    -0.43667846017683 * Marital_StatusDivorced
1130535   +          +     1.33507828005472 * Marital_StatusMarried
1130536   +          +    -0.75026283842664 * Marital_StatusSingle
1130537   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1130538   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1130539   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1130540   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1130541   +          +    -0.03531690128173 * Marital_StatusDivorced
1130542   +          +    -0.04344171367809 * Marital_StatusMarried
1130543   +          +    -0.05137362653166 * Marital_StatusSingle
1130544   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1130545   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1130546   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1130547   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1130548   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1130549   +END;
MPRINT(EM_DIAGRAM):   END;
1130550   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130551   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1130552   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1130553   +END;
MPRINT(EM_DIAGRAM):   END;
1130554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130555   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1130556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130557   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130558   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1130559   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1130560   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1130561   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1130562   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1130563   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1130564   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1130565   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1130566   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1130567   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1130568   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1130569   +END;
MPRINT(EM_DIAGRAM):   END;
1130570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130571   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1130572   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1130573   +END;
MPRINT(EM_DIAGRAM):   END;
1130574   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1130575   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1130576   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1130577   +END;
MPRINT(EM_DIAGRAM):   END;
1130578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130579   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1130580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130581   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1130582   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1130583   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1130584   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1130585   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1130586   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1130587   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1130588   +END;
MPRINT(EM_DIAGRAM):   END;
1130589   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1130590   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1130591   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1130592   +drop
1130593   +H11
1130594   +H12
1130595   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1130596   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1130597    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1130598    quit;
1130599    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1130600    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1130601    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1130602    retain ID 2 Node "Neural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural31";
1130603    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1130604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130605    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1130606    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130608    proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
1130609    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130611    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130612    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1130613    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1130614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130615    proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
1130616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1130617    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1130618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130620    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130621    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1130622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130623    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130624    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1130625    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1130625  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 786 rows and 5 columns.
 
1130626    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130627    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1130628    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 786 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 786 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130629    filename _pref
1130629  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1130630    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1130631    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1130632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130633   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1130634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1130635   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1130636   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1130637   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1130638    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1130639    quit;
1130640    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1130641    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1130642    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1130643    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1130644    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1130645    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130646    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1130647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130649    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1130650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130652    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130653    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1130654    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1130655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130656    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1130657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1130658    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1130659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130661    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130662    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1130663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130664    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1130666    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1130666  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1130667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130668    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1130669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130670    filename _pref
1130670  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1130671    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1130672    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1130673   +
1130674   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1130675   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1130675  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1130676   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1130677   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1130678   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1130679   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1130680   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1130681    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1130682    quit;
1130683    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1130684    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1130685    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1130686    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1130687    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1130688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130689    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1130690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130692    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1130693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130695    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130696    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1130697    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1130698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130699    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1130700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130701    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1130702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130704    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130705    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1130706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130707    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1130708    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1130709    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1130709  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1130710    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1130711    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1130712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 829 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130713    filename _pref
1130713  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1130714    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1130715    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1130716   +
1130717   +
1130718   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1130719   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1130720   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1130721   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1130722   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1130723   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130724   +
1130725   +
1130726   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1130727   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1130728   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1130729   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1130730   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1130731   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130732   +
1130733   +
1130734   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1130735   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1130736   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1130737   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1130738   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1130739   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130740   +
1130741   +
1130742   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1130743   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1130744   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1130745   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1130746   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1130747   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130748   +
1130749   +
1130750   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1130751   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1130752   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1130753   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1130754   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1130755   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130756   +
1130757   +
1130758   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1130759   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1130760   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1130761   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1130762   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1130763   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130764   +
1130765   +
1130766   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1130767   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1130768   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1130769   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1130770   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1130771   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130772   +
1130773   +
1130774   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1130775   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1130776   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1130777   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1130778   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1130779   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1130780   +if
1130781   +_FILTERNORM1 not in ( '.')
1130782   + and
1130783   +_FILTERNORM2 not in ( '.')
1130784   + and
1130785   +_FILTERNORM3 not in ( '.')
1130786   + and
1130787   +_FILTERNORM4 not in ( '.')
1130788   + and
1130789   +_FILTERNORM5 not in ( '.')
1130790   + and
1130791   +_FILTERNORM6 not in ( '.')
1130792   + and
1130793   +_FILTERNORM7 not in ( ' ')
1130794   + and
1130795   +_FILTERNORM8 not in ( ' ')
1130796   +and
1130797   +( Dt_Customer ne .)
1130798   +and ( Income ne . and (Income<=107000))
1130799   +and ( Kidhome ne .)
1130800   +and ( MntFishProducts ne .)
1130801   +and ( MntFruits ne .)
1130802   +and ( MntGoldProds ne .)
1130803   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1130804   +and ( MntSweetProducts ne .)
1130805   +and ( MntWines ne .)
1130806   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1130807   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1130808   +and ( NumStorePurchases ne .)
1130809   +and ( NumWebPurchases ne .)
1130810   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1130811   +and ( Recency ne .)
1130812   +and ( Teenhome ne .)
1130813   +and ( Year_Birth ne .)
1130814   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1130815   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1130816   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1130817   +end;
MPRINT(EM_DIAGRAM):   end;
1130818   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1130819   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1130820    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1130821    quit;
1130822    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1130823    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1130824    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1130825    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1130826    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1130827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130828    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1130829    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130831    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1130832    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130834    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130835    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1130836    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1130837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130838    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1130839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1130840    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1130841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130843    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1130844    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1130845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1130846    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130847    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1130848    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1130848  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1130849    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1130850    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1130851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1130852    %macro varDept(fcmpdata=,id=);
1130853    %global nobs&id scoreFlag&id;
1130854    %let scoreFlag&id = 0;
1130855    %if &id=1 or ^&fcmpStart %then %do;
1130856    proc sort data=&fcmpdata out=_temp&id nodupkey;
1130857    by NAME;
1130858    where id=&id and LHS in( %let j=1;
1130859    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1130860    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1130861    "&var" %let j = %eval(&j+1);
1130862    %end;
1130863    );
1130864    run;
1130865    %let dsid = %sysfunc(open(_temp&id));
1130866    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130867    %let dsid = %sysfunc(close(&dsid));
1130868    %if &&nobs&id %then %do;
1130869    %let scoreFlag&id = 1;
1130870    %let fcmpStart = 1;
1130871    %end;
1130872    %else %let fcmpStart = 0;
1130873    %end;
1130874    %else %do;
1130875    proc sort data=&fcmpdata out=_tempid;
1130876    where id=&id;
1130877    by LHS;
1130878    run;
1130879    %let dsid = %sysfunc(open(_tempid));
1130880    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130881    %let dsid = %sysfunc(close(&dsid));
1130882    %if ^&&nobs&id %then %do;
1130883    proc datasets lib=work nolist;
1130884    delete _tempid;
1130885    run;
1130886    quit;
1130887    %end;
1130888    %else %do;
1130889    data _tempAll;
1130890    set %let j=%eval(&id-1);
1130891    %do x=1 %to &j;
1130892    %if &&nobs&x %then %do;
1130893    _temp&x %end;
1130894    %end;
1130895    ;
1130896    run;
1130897    proc sql;
1130898    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1130898  ! work._tempid p2 where p.name=p2.lhs;
1130899    quit;
1130900    data _temp&id;
1130901    set _temp&id;
1130902    where LHS ne '' and NAME ne '' and Node ne '';
1130903    run;
1130904    proc datasets lib=work nolist;
1130905    delete _tempAll;
1130906    run;
1130907    %let dsid = %sysfunc(open(_temp&id));
1130908    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130909    %let dsid = %sysfunc(close(&dsid));
1130910    %if ^&&nobs&id %then %do;
1130911    proc datasets lib=work nolist;
1130912    delete _temp&id;
1130913    run;
1130914    quit;
1130915    %end;
1130916    %else %do;
1130917    %let scoreFlag&id = 1;
1130918    data _temp&id;
1130919    set _temp&id;
1130920    where LHS ne NAME and node ne '';
1130921    run;
1130922    %let dsid = %sysfunc(open(_temp&id));
1130923    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1130924    %let dsid = %sysfunc(close(&dsid));
1130925    %if ^&&nobs&id %then %do;
1130926    proc datasets lib=work nolist;
1130927    delete _temp&id;
1130928    run;
1130929    quit;
1130930    %end;
1130931    %else %do;
1130932    proc sort data=_temp&id nodupkey;
1130933    by LHS NAME;
1130934    run;
1130935    %end;
1130936    %end;
1130937    %end;
1130938    %end;
1130939    %mend varDept;
1130940    %macro optCode(outdata=fcmpdata);
1130941    %global fcmpStart;
1130942    %let fcmpStart = 0;
1130943    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1130944    %let NumNodes=9;
1130945    %do k=1 %to &NumNodes;
1130946    %vardept(fcmpdata=&outdata, id=&k);
1130947    %end;
1130948    %mend optCode;
1130949    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
The SAS System
 
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1130950    filename _pref
1130950  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
1130951    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1130952    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
1130953   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130954   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1130955   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1130956   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1130957   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1130958   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1130959   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1130960   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1130961   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1130962   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1130963   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1130964   +LENGTH _WARN_ $4
1130965   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1130966   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1130967   +
1130968   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1130969   +
1130970   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1130971   +
1130972   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1130973   +
1130974   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1130975   +
1130976   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1130977   +
1130978   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1130979   +
1130980   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1130981   +
1130982   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1130983   +
1130984   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1130985   +
1130986   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1130987   +
1130988   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1130989   +
1130990   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1130991   +
1130992   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1130993   +
1130994   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1130995   +
1130996   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1130997   +
1130998   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1130999   +
1131000   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1131001   +
1131002   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1131003   +
1131004   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1131005   +
1131006   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1131007   +
1131008   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1131009   +
1131010   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1131011   +
1131012   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1131013   +
1131014   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1131015   +
1131016   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1131017   +
1131018   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1131019   +
1131020   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1131021   +
1131022   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1131023   +
1131024   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1131025   +
1131026   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1131027   +
1131028   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1131029   +
1131030   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1131031   +
1131032   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1131033   +
1131034   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1131035   +
1131036   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1131037   +
1131038   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1131039   +
1131040   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1131041   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1131042   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1131043   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1131044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131046   +end;
MPRINT(EM_DIAGRAM):   end;
1131047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131049   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1131050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131051   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131052   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1131053   +   end;
MPRINT(EM_DIAGRAM):   end;
1131054   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131055   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1131056   +   end;
MPRINT(EM_DIAGRAM):   end;
1131057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131058   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1131059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131061   +   end;
MPRINT(EM_DIAGRAM):   end;
1131062   +end;
MPRINT(EM_DIAGRAM):   end;
1131063   +
1131064   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1131065   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1131066   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1131067   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1131068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131070   +end;
MPRINT(EM_DIAGRAM):   end;
1131071   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131072   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131073   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1131074   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131075   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131076   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1131077   +   end;
MPRINT(EM_DIAGRAM):   end;
1131078   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131079   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1131080   +   end;
MPRINT(EM_DIAGRAM):   end;
1131081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131082   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1131083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131085   +   end;
MPRINT(EM_DIAGRAM):   end;
1131086   +end;
MPRINT(EM_DIAGRAM):   end;
1131087   +
1131088   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1131089   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1131090   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1131091   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1131092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131094   +end;
MPRINT(EM_DIAGRAM):   end;
1131095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131097   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1131098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131099   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131100   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1131101   +   end;
MPRINT(EM_DIAGRAM):   end;
1131102   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131103   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1131104   +   end;
MPRINT(EM_DIAGRAM):   end;
1131105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131106   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1131107   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131108   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131109   +   end;
MPRINT(EM_DIAGRAM):   end;
1131110   +end;
MPRINT(EM_DIAGRAM):   end;
1131111   +
1131112   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1131113   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1131114   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1131115   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1131116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131118   +end;
MPRINT(EM_DIAGRAM):   end;
1131119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131121   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1131122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131124   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1131125   +   end;
MPRINT(EM_DIAGRAM):   end;
1131126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131127   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1131128   +   end;
MPRINT(EM_DIAGRAM):   end;
1131129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131130   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1131131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131133   +   end;
MPRINT(EM_DIAGRAM):   end;
1131134   +end;
MPRINT(EM_DIAGRAM):   end;
1131135   +
1131136   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1131137   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1131138   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1131139   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1131140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131142   +end;
MPRINT(EM_DIAGRAM):   end;
1131143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131145   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1131146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131148   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1131149   +   end;
MPRINT(EM_DIAGRAM):   end;
1131150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131151   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1131152   +   end;
MPRINT(EM_DIAGRAM):   end;
1131153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131154   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1131155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131157   +   end;
MPRINT(EM_DIAGRAM):   end;
1131158   +end;
MPRINT(EM_DIAGRAM):   end;
1131159   +
1131160   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1131161   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1131162   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1131163   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1131164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131166   +end;
MPRINT(EM_DIAGRAM):   end;
1131167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131169   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1131170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131172   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1131173   +   end;
MPRINT(EM_DIAGRAM):   end;
1131174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131175   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1131176   +   end;
MPRINT(EM_DIAGRAM):   end;
1131177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131178   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1131179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131181   +   end;
MPRINT(EM_DIAGRAM):   end;
1131182   +end;
MPRINT(EM_DIAGRAM):   end;
1131183   +
1131184   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1131185   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1131186   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1131187   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1131188   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1131189   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1131190   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1131191   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1131192   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1131193   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1131194   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1131195   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1131196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131198   +end;
MPRINT(EM_DIAGRAM):   end;
1131199   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131200   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1131201   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1131202   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131203   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1131204   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1131205   +   end;
MPRINT(EM_DIAGRAM):   end;
1131206   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1131207   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1131208   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1131209   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1131210   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1131211   +   end;
MPRINT(EM_DIAGRAM):   end;
1131212   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1131213   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1131214   +   end;
MPRINT(EM_DIAGRAM):   end;
1131215   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1131216   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1131217   +   end;
MPRINT(EM_DIAGRAM):   end;
1131218   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1131219   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1131220   +   end;
MPRINT(EM_DIAGRAM):   end;
1131221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131222   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1131223   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1131224   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1131225   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1131226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131228   +   end;
MPRINT(EM_DIAGRAM):   end;
1131229   +end;
MPRINT(EM_DIAGRAM):   end;
1131230   +
1131231   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1131232   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1131233   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1131234   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1131235   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1131236   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1131237   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1131238   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1131239   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1131240   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1131241   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1131242   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1131243   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1131244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131246   +end;
MPRINT(EM_DIAGRAM):   end;
1131247   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131248   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1131249   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1131250   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131251   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1131252   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1131253   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1131254   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1131255   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1131256   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131257   +         end;
MPRINT(EM_DIAGRAM):   end;
1131258   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1131259   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1131260   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1131261   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131262   +            end;
MPRINT(EM_DIAGRAM):   end;
1131263   +         end;
MPRINT(EM_DIAGRAM):   end;
1131264   +      end;
MPRINT(EM_DIAGRAM):   end;
1131265   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1131266   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1131267   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1131268   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131269   +         end;
MPRINT(EM_DIAGRAM):   end;
1131270   +      end;
MPRINT(EM_DIAGRAM):   end;
1131271   +   end;
MPRINT(EM_DIAGRAM):   end;
1131272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131273   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1131274   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1131275   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131276   +      end;
MPRINT(EM_DIAGRAM):   end;
1131277   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1131278   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1131279   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1131280   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1131281   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1131282   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1131283   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131284   +         end;
MPRINT(EM_DIAGRAM):   end;
1131285   +      end;
MPRINT(EM_DIAGRAM):   end;
1131286   +   end;
MPRINT(EM_DIAGRAM):   end;
1131287   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1131288   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1131289   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1131290   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1131291   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1131292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131294   +   end;
MPRINT(EM_DIAGRAM):   end;
1131295   +end;
MPRINT(EM_DIAGRAM):   end;
1131296   +
1131297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131298   +*** Checking missing input Interval
1131299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1131300   +
1131301   +IF NMISS(
1131302   +   Income ,
1131303   +   Kidhome ,
1131304   +   MntFishProducts ,
1131305   +   MntFruits ,
1131306   +   MntGoldProds ,
1131307   +   MntMeatProducts ,
1131308   +   MntSweetProducts ,
1131309   +   MntWines ,
1131310   +   NumCatalogPurchases ,
1131311   +   NumDealsPurchases ,
1131312   +   NumStorePurchases ,
1131313   +   NumWebPurchases ,
1131314   +   NumWebVisitsMonth ,
1131315   +   Recency ,
1131316   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1131317   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1131318   +
1131319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131320   +END;
MPRINT(EM_DIAGRAM):   END;
1131321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131322   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1131323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131324   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131325   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1131326   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1131327   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1131328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1131329   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1131330   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1131331   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1131332   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1131333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1131334   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1131335   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1131336   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1131337   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1131338   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1131339   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1131340   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1131341   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1131342   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1131343   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1131344   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1131345   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1131346   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1131347   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1131348   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1131349   +END;
MPRINT(EM_DIAGRAM):   END;
1131350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131351   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1131352   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1131353   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1131354   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1131355   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1131356   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1131357   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1131358   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1131359   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1131360   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1131361   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1131362   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1131363   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1131364   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1131365   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1131366   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1131367   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1131368   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1131369   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1131370   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1131371   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1131372   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1131373   +   ELSE S_NumCatalogPurchases
1131374   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1131375   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1131376   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1131377   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1131378   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1131379   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1131380   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1131381   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1131382   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1131383   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1131384   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1131385   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1131386   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1131387   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1131388   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1131389   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1131390   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1131391   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1131392   +END;
MPRINT(EM_DIAGRAM):   END;
1131393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131394   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1131395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131397   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1131398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131400   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1131401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131403   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1131404   +          +    -0.12974862644982 * S_MntFishProducts
1131405   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1131406   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1131407   +          +    -0.12290326901613 * S_MntSweetProducts
1131408   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1131409   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1131410   +          +     0.09738032540137 * S_NumStorePurchases
1131411   +          +     0.44459515215205 * S_NumWebPurchases
1131412   +          +      0.8471075994578 * S_NumWebVisitsMonth
1131413   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1131414   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1131415   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1131416   +          +     0.02406077596811 * S_MntFishProducts
1131417   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1131418   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1131419   +          +     -0.1147507059349 * S_MntSweetProducts
1131420   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1131421   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1131422   +          +    -0.23920969262322 * S_NumStorePurchases
1131423   +          +     -0.6008837862932 * S_NumWebPurchases
1131424   +          +     0.26759743722885 * S_NumWebVisitsMonth
1131425   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1131426   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1131427   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1131428   +          +     0.04398331533724 * S_MntFishProducts
1131429   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1131430   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1131431   +          +     0.00552488718744 * S_MntSweetProducts
1131432   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1131433   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1131434   +          +     0.60058189155105 * S_NumStorePurchases
1131435   +          +     0.51423374855856 * S_NumWebPurchases
1131436   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1131437   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1131438   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1131439   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1131440   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1131441   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1131442   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1131443   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1131444   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1131445   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1131446   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1131447   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1131448   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1131449   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1131450   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1131451   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1131452   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1131453   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1131454   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1131455   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1131456   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1131457   +          +     0.52129580188513 * Marital_StatusDivorced
1131458   +          +     -1.5224490339553 * Marital_StatusMarried
1131459   +          +     1.05062906057771 * Marital_StatusSingle
1131460   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1131461   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1131462   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1131463   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1131464   +          +    -0.14428158063317 * Marital_StatusDivorced
1131465   +          +     0.22396926143356 * Marital_StatusMarried
1131466   +          +    -0.12980854818876 * Marital_StatusSingle
1131467   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1131468   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1131469   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1131470   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1131471   +          +    -0.25615797303064 * Marital_StatusDivorced
1131472   +          +     0.18825506199046 * Marital_StatusMarried
1131473   +          +    -0.24607556819871 * Marital_StatusSingle
1131474   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1131475   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1131476   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1131477   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1131478   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1131479   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1131480   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1131481   +END;
MPRINT(EM_DIAGRAM):   END;
1131482   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131483   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1131484   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1131485   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1131486   +END;
MPRINT(EM_DIAGRAM):   END;
1131487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131488   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1131489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131490   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131491   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1131492   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1131493   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1131494   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1131495   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1131496   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131497   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1131498   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1131499   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1131500   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1131501   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1131502   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1131503   +END;
MPRINT(EM_DIAGRAM):   END;
1131504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131505   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1131506   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1131507   +END;
MPRINT(EM_DIAGRAM):   END;
1131508   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1131509   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1131510   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1131511   +END;
MPRINT(EM_DIAGRAM):   END;
1131512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131513   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1131514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131515   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1131516   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1131517   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1131518   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1131519   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1131520   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1131521   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1131522   +END;
MPRINT(EM_DIAGRAM):   END;
1131523   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131524   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1131525   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131526   +drop
1131527   +H11
1131528   +H12
1131529   +H13
1131530   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1131531   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1131532    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1131533    quit;
1131534    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1131535    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1131536    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1131537    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
1131538    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1131539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131540    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1131541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131543    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
1131544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131546    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131547    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1131548    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1131549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131550    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
1131551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1131552    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1131553    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131554    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131555    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131556    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1131557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131558    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131559    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1131560    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1131560  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.
 
1131561    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131562    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1131563    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131564    filename _pref
1131564  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1131565    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1131566    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1131567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131568   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1131569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131570   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1131571   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1131572   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1131573    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1131574    quit;
1131575    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1131576    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1131577    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1131578    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1131579    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1131580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131581    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1131582    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131584    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1131585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131587    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131588    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1131589    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1131590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131591    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1131592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1131593    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1131594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131596    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131597    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1131598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131599    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131600    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1131601    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1131601  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1131602    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131603    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1131604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131605    filename _pref
1131605  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1131606    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1131607    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1131608   +
1131609   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1131610   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1131610  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1131611   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1131612   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1131613   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1131614   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1131615   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1131616    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1131617    quit;
1131618    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1131619    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1131620    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1131621    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1131622    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1131623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131624    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1131625    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131627    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1131628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131630    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131631    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1131632    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1131633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131634    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1131635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131636    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1131637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131639    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131640    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1131641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131642    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131643    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1131644    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1131644  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1131645    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131646    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1131647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131648    filename _pref
1131648  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1131649    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1131650    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1131651   +
1131652   +
1131653   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1131654   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1131655   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1131656   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1131657   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1131658   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131659   +
1131660   +
1131661   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1131662   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1131663   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1131664   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1131665   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1131666   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131667   +
1131668   +
1131669   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1131670   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1131671   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1131672   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1131673   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1131674   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131675   +
1131676   +
1131677   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1131678   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1131679   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1131680   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1131681   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1131682   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131683   +
1131684   +
1131685   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1131686   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1131687   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1131688   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1131689   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1131690   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131691   +
1131692   +
1131693   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1131694   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1131695   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1131696   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1131697   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1131698   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131699   +
1131700   +
1131701   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1131702   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1131703   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1131704   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1131705   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1131706   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131707   +
1131708   +
1131709   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1131710   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1131711   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1131712   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1131713   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1131714   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1131715   +if
1131716   +_FILTERNORM1 not in ( '.')
1131717   + and
1131718   +_FILTERNORM2 not in ( '.')
1131719   + and
1131720   +_FILTERNORM3 not in ( '.')
1131721   + and
1131722   +_FILTERNORM4 not in ( '.')
1131723   + and
1131724   +_FILTERNORM5 not in ( '.')
1131725   + and
1131726   +_FILTERNORM6 not in ( '.')
1131727   + and
1131728   +_FILTERNORM7 not in ( ' ')
1131729   + and
1131730   +_FILTERNORM8 not in ( ' ')
1131731   +and
1131732   +( Dt_Customer ne .)
1131733   +and ( Income ne . and (Income<=107000))
1131734   +and ( Kidhome ne .)
1131735   +and ( MntFishProducts ne .)
1131736   +and ( MntFruits ne .)
1131737   +and ( MntGoldProds ne .)
1131738   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1131739   +and ( MntSweetProducts ne .)
1131740   +and ( MntWines ne .)
1131741   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1131742   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1131743   +and ( NumStorePurchases ne .)
1131744   +and ( NumWebPurchases ne .)
1131745   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1131746   +and ( Recency ne .)
1131747   +and ( Teenhome ne .)
1131748   +and ( Year_Birth ne .)
1131749   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1131750   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1131751   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1131752   +end;
MPRINT(EM_DIAGRAM):   end;
1131753   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1131754   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1131755    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1131756    quit;
1131757    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1131758    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1131759    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1131760    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1131761    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1131762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131763    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1131764    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131766    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1131767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131769    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131770    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1131771    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1131772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131773    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1131774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1131775    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1131776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131778    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1131779    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1131780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1131781    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131782    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1131783    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1131783  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1131784    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1131785    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1131786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1131787    %macro varDept(fcmpdata=,id=);
1131788    %global nobs&id scoreFlag&id;
1131789    %let scoreFlag&id = 0;
1131790    %if &id=1 or ^&fcmpStart %then %do;
1131791    proc sort data=&fcmpdata out=_temp&id nodupkey;
1131792    by NAME;
1131793    where id=&id and LHS in( %let j=1;
1131794    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1131795    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1131796    "&var" %let j = %eval(&j+1);
1131797    %end;
1131798    );
1131799    run;
1131800    %let dsid = %sysfunc(open(_temp&id));
1131801    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1131802    %let dsid = %sysfunc(close(&dsid));
1131803    %if &&nobs&id %then %do;
1131804    %let scoreFlag&id = 1;
1131805    %let fcmpStart = 1;
1131806    %end;
1131807    %else %let fcmpStart = 0;
1131808    %end;
1131809    %else %do;
1131810    proc sort data=&fcmpdata out=_tempid;
1131811    where id=&id;
1131812    by LHS;
1131813    run;
1131814    %let dsid = %sysfunc(open(_tempid));
1131815    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1131816    %let dsid = %sysfunc(close(&dsid));
1131817    %if ^&&nobs&id %then %do;
1131818    proc datasets lib=work nolist;
1131819    delete _tempid;
1131820    run;
1131821    quit;
1131822    %end;
1131823    %else %do;
1131824    data _tempAll;
1131825    set %let j=%eval(&id-1);
1131826    %do x=1 %to &j;
1131827    %if &&nobs&x %then %do;
1131828    _temp&x %end;
1131829    %end;
1131830    ;
1131831    run;
1131832    proc sql;
1131833    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1131833  ! work._tempid p2 where p.name=p2.lhs;
1131834    quit;
1131835    data _temp&id;
1131836    set _temp&id;
1131837    where LHS ne '' and NAME ne '' and Node ne '';
1131838    run;
1131839    proc datasets lib=work nolist;
1131840    delete _tempAll;
1131841    run;
1131842    %let dsid = %sysfunc(open(_temp&id));
1131843    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1131844    %let dsid = %sysfunc(close(&dsid));
1131845    %if ^&&nobs&id %then %do;
1131846    proc datasets lib=work nolist;
1131847    delete _temp&id;
1131848    run;
1131849    quit;
1131850    %end;
1131851    %else %do;
1131852    %let scoreFlag&id = 1;
1131853    data _temp&id;
1131854    set _temp&id;
1131855    where LHS ne NAME and node ne '';
1131856    run;
1131857    %let dsid = %sysfunc(open(_temp&id));
1131858    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1131859    %let dsid = %sysfunc(close(&dsid));
1131860    %if ^&&nobs&id %then %do;
1131861    proc datasets lib=work nolist;
1131862    delete _temp&id;
1131863    run;
1131864    quit;
1131865    %end;
1131866    %else %do;
1131867    proc sort data=_temp&id nodupkey;
1131868    by LHS NAME;
1131869    run;
1131870    %end;
1131871    %end;
1131872    %end;
1131873    %end;
1131874    %mend varDept;
1131875    %macro optCode(outdata=fcmpdata);
1131876    %global fcmpStart;
1131877    %let fcmpStart = 0;
1131878    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1131879    %let NumNodes=9;
1131880    %do k=1 %to &NumNodes;
1131881    %vardept(fcmpdata=&outdata, id=&k);
1131882    %end;
1131883    %mend optCode;
1131884    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1131885    filename _pref
1131885  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
1131886    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1131887    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
1131888   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131889   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1131890   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131891   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1131892   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1131893   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1131894   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1131895   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1131896   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1131897   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1131898   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1131899   +LENGTH _WARN_ $4
1131900   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1131901   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1131902   +
1131903   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1131904   +
1131905   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1131906   +
1131907   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1131908   +
1131909   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1131910   +
1131911   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1131912   +
1131913   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1131914   +
1131915   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1131916   +
1131917   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1131918   +
1131919   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1131920   +
1131921   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1131922   +
1131923   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1131924   +
1131925   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1131926   +
1131927   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1131928   +
1131929   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1131930   +
1131931   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1131932   +
1131933   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1131934   +
1131935   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1131936   +
1131937   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1131938   +
1131939   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1131940   +
1131941   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1131942   +
1131943   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1131944   +
1131945   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1131946   +
1131947   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1131948   +
1131949   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1131950   +
1131951   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1131952   +
1131953   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1131954   +
1131955   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1131956   +
1131957   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1131958   +
1131959   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1131960   +
1131961   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1131962   +
1131963   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1131964   +
1131965   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1131966   +
1131967   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1131968   +
1131969   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1131970   +
1131971   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1131972   +
1131973   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1131974   +
1131975   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1131976   +
1131977   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1131978   +
1131979   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1131980   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1131981   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1131982   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1131983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131985   +end;
MPRINT(EM_DIAGRAM):   end;
1131986   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131988   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1131989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1131991   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1131992   +   end;
MPRINT(EM_DIAGRAM):   end;
1131993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1131994   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1131995   +   end;
MPRINT(EM_DIAGRAM):   end;
1131996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131997   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1131998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132000   +   end;
MPRINT(EM_DIAGRAM):   end;
1132001   +end;
MPRINT(EM_DIAGRAM):   end;
1132002   +
1132003   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1132004   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1132005   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1132006   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1132007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132009   +end;
MPRINT(EM_DIAGRAM):   end;
1132010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132012   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1132013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132015   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1132016   +   end;
MPRINT(EM_DIAGRAM):   end;
1132017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132018   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1132019   +   end;
MPRINT(EM_DIAGRAM):   end;
1132020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132021   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1132022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132024   +   end;
MPRINT(EM_DIAGRAM):   end;
1132025   +end;
MPRINT(EM_DIAGRAM):   end;
1132026   +
1132027   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1132028   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1132029   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1132030   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1132031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132033   +end;
MPRINT(EM_DIAGRAM):   end;
1132034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132036   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1132037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132039   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1132040   +   end;
MPRINT(EM_DIAGRAM):   end;
1132041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132042   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1132043   +   end;
MPRINT(EM_DIAGRAM):   end;
1132044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132045   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1132046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132048   +   end;
MPRINT(EM_DIAGRAM):   end;
1132049   +end;
MPRINT(EM_DIAGRAM):   end;
1132050   +
1132051   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1132052   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1132053   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1132054   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1132055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132057   +end;
MPRINT(EM_DIAGRAM):   end;
1132058   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132060   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1132061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132063   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1132064   +   end;
MPRINT(EM_DIAGRAM):   end;
1132065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132066   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1132067   +   end;
MPRINT(EM_DIAGRAM):   end;
1132068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132069   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1132070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132072   +   end;
MPRINT(EM_DIAGRAM):   end;
1132073   +end;
MPRINT(EM_DIAGRAM):   end;
1132074   +
1132075   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1132076   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1132077   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1132078   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1132079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132081   +end;
MPRINT(EM_DIAGRAM):   end;
1132082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132084   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1132085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132087   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1132088   +   end;
MPRINT(EM_DIAGRAM):   end;
1132089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132090   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1132091   +   end;
MPRINT(EM_DIAGRAM):   end;
1132092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132093   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1132094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132096   +   end;
MPRINT(EM_DIAGRAM):   end;
1132097   +end;
MPRINT(EM_DIAGRAM):   end;
1132098   +
1132099   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1132100   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1132101   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1132102   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1132103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132105   +end;
MPRINT(EM_DIAGRAM):   end;
1132106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132108   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1132109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132111   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1132112   +   end;
MPRINT(EM_DIAGRAM):   end;
1132113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132114   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1132115   +   end;
MPRINT(EM_DIAGRAM):   end;
1132116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132117   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1132118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132120   +   end;
MPRINT(EM_DIAGRAM):   end;
1132121   +end;
MPRINT(EM_DIAGRAM):   end;
1132122   +
1132123   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1132124   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1132125   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132126   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1132127   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1132128   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1132129   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1132130   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1132131   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1132132   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1132133   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1132134   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1132135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132137   +end;
MPRINT(EM_DIAGRAM):   end;
1132138   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132139   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1132140   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1132141   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132142   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1132143   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1132144   +   end;
MPRINT(EM_DIAGRAM):   end;
1132145   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1132146   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1132147   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1132148   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1132149   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1132150   +   end;
MPRINT(EM_DIAGRAM):   end;
1132151   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1132152   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1132153   +   end;
MPRINT(EM_DIAGRAM):   end;
1132154   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1132155   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1132156   +   end;
MPRINT(EM_DIAGRAM):   end;
1132157   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1132158   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1132159   +   end;
MPRINT(EM_DIAGRAM):   end;
1132160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132161   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1132162   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1132163   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1132164   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1132165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132167   +   end;
MPRINT(EM_DIAGRAM):   end;
1132168   +end;
MPRINT(EM_DIAGRAM):   end;
1132169   +
1132170   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1132171   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1132172   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1132173   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132174   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1132175   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1132176   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1132177   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1132178   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1132179   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1132180   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1132181   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1132182   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1132183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132185   +end;
MPRINT(EM_DIAGRAM):   end;
1132186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132187   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1132188   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1132189   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132190   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132191   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1132192   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1132193   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1132194   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1132195   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132196   +         end;
MPRINT(EM_DIAGRAM):   end;
1132197   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132198   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1132199   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1132200   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132201   +            end;
MPRINT(EM_DIAGRAM):   end;
1132202   +         end;
MPRINT(EM_DIAGRAM):   end;
1132203   +      end;
MPRINT(EM_DIAGRAM):   end;
1132204   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132205   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1132206   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1132207   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132208   +         end;
MPRINT(EM_DIAGRAM):   end;
1132209   +      end;
MPRINT(EM_DIAGRAM):   end;
1132210   +   end;
MPRINT(EM_DIAGRAM):   end;
1132211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132212   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1132213   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1132214   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132215   +      end;
MPRINT(EM_DIAGRAM):   end;
1132216   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132217   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1132218   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1132219   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1132220   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1132221   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1132222   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132223   +         end;
MPRINT(EM_DIAGRAM):   end;
1132224   +      end;
MPRINT(EM_DIAGRAM):   end;
1132225   +   end;
MPRINT(EM_DIAGRAM):   end;
1132226   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132227   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1132228   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1132229   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1132230   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1132231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132233   +   end;
MPRINT(EM_DIAGRAM):   end;
1132234   +end;
MPRINT(EM_DIAGRAM):   end;
1132235   +
1132236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132237   +*** Checking missing input Interval
1132238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1132239   +
1132240   +IF NMISS(
1132241   +   Income ,
1132242   +   Kidhome ,
1132243   +   MntFishProducts ,
1132244   +   MntFruits ,
1132245   +   MntGoldProds ,
1132246   +   MntMeatProducts ,
1132247   +   MntSweetProducts ,
1132248   +   MntWines ,
1132249   +   NumCatalogPurchases ,
1132250   +   NumDealsPurchases ,
1132251   +   NumStorePurchases ,
1132252   +   NumWebPurchases ,
1132253   +   NumWebVisitsMonth ,
1132254   +   Recency ,
1132255   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1132256   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1132257   +
1132258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132259   +END;
MPRINT(EM_DIAGRAM):   END;
1132260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132261   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1132262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132263   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132264   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132265   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1132266   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1132267   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1132268   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1132269   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132270   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1132271   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132272   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1132273   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1132274   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1132275   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132276   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1132277   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1132278   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1132279   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1132280   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1132281   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1132282   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1132283   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1132284   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1132285   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1132286   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132287   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1132288   +END;
MPRINT(EM_DIAGRAM):   END;
1132289   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132290   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1132291   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1132292   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1132293   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1132294   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1132295   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1132296   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1132297   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1132298   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1132299   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1132300   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1132301   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1132302   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1132303   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1132304   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1132305   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1132306   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1132307   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1132308   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1132309   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1132310   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1132311   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1132312   +   ELSE S_NumCatalogPurchases
1132313   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1132314   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1132315   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1132316   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1132317   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1132318   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1132319   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1132320   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1132321   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1132322   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1132323   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1132324   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1132325   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1132326   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1132327   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1132328   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1132329   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1132330   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1132331   +END;
MPRINT(EM_DIAGRAM):   END;
1132332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132333   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1132334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132336   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1132337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132339   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1132340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132341   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132342   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1132343   +          +     0.24367603598167 * S_MntFishProducts
1132344   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1132345   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1132346   +          +     0.34054806441484 * S_MntSweetProducts
1132347   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1132348   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1132349   +          +     0.98942946974575 * S_NumStorePurchases
1132350   +          +     0.89701206630103 * S_NumWebPurchases
1132351   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1132352   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1132353   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1132354   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1132355   +          +     0.16683404689723 * S_MntFishProducts
1132356   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1132357   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1132358   +          +     0.20389084548968 * S_MntSweetProducts
1132359   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1132360   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1132361   +          +     1.27164659640366 * S_NumStorePurchases
1132362   +          +     1.02122194207802 * S_NumWebPurchases
1132363   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1132364   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1132365   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1132366   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1132367   +          +    -0.03345077166544 * S_MntFishProducts
1132368   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1132369   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1132370   +          +    -0.11948662500951 * S_MntSweetProducts
1132371   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1132372   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1132373   +          +     0.22401914357376 * S_NumStorePurchases
1132374   +          +     0.04219877865976 * S_NumWebPurchases
1132375   +          +     1.21753334166036 * S_NumWebVisitsMonth
1132376   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1132377   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1132378   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1132379   +          +     0.31175257038578 * S_MntFishProducts
1132380   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1132381   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1132382   +          +      0.0927253053382 * S_MntSweetProducts
1132383   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1132384   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1132385   +          +    -0.12667606349662 * S_NumStorePurchases
1132386   +          +     0.30148374518724 * S_NumWebPurchases
1132387   +          +     0.48934229701658 * S_NumWebVisitsMonth
1132388   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1132389   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1132390   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1132391   +          +     0.42646725119177 * S_MntFishProducts
1132392   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1132393   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1132394   +          +    -0.01493605582616 * S_MntSweetProducts
1132395   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1132396   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1132397   +          +     0.54256744091258 * S_NumStorePurchases
1132398   +          +     0.43065931458468 * S_NumWebPurchases
1132399   +          +      0.5935561420466 * S_NumWebVisitsMonth
1132400   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1132401   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1132402   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1132403   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1132404   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1132405   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1132406   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1132407   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1132408   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1132409   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1132410   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1132411   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1132412   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1132413   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1132414   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1132415   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1132416   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1132417   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1132418   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1132419   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1132420   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1132421   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1132422   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1132423   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1132424   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1132425   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1132426   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1132427   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1132428   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1132429   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1132430   +          +    -0.85912688909911 * Marital_StatusDivorced
1132431   +          +     0.81561401465875 * Marital_StatusMarried
1132432   +          +    -0.58324403081542 * Marital_StatusSingle
1132433   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1132434   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1132435   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1132436   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1132437   +          +    -0.34784695867287 * Marital_StatusDivorced
1132438   +          +    -0.18194022182247 * Marital_StatusMarried
1132439   +          +    -0.10633185904164 * Marital_StatusSingle
1132440   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1132441   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1132442   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1132443   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1132444   +          +     0.61058752124466 * Marital_StatusDivorced
1132445   +          +    -1.38793808025141 * Marital_StatusMarried
1132446   +          +     1.10060737810944 * Marital_StatusSingle
1132447   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1132448   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1132449   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1132450   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1132451   +          +     0.11973800573581 * Marital_StatusDivorced
1132452   +          +      -0.294635257911 * Marital_StatusMarried
1132453   +          +    -0.05399659601172 * Marital_StatusSingle
1132454   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1132455   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1132456   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1132457   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1132458   +          +     0.42838191659864 * Marital_StatusDivorced
1132459   +          +    -0.09150349181363 * Marital_StatusMarried
1132460   +          +    -0.33520164145276 * Marital_StatusSingle
1132461   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1132462   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1132463   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1132464   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1132465   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1132466   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1132467   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1132468   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1132469   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1132470   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1132471   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1132472   +END;
MPRINT(EM_DIAGRAM):   END;
1132473   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132474   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1132475   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1132476   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1132477   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1132478   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1132479   +END;
MPRINT(EM_DIAGRAM):   END;
1132480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132481   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1132482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1132484   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1132485   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1132486   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1132487   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1132488   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1132489   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1132490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1132491   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1132492   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1132493   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1132494   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1132495   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1132496   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1132497   +END;
MPRINT(EM_DIAGRAM):   END;
1132498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1132499   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1132500   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1132501   +END;
MPRINT(EM_DIAGRAM):   END;
1132502   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1132503   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1132504   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1132505   +END;
MPRINT(EM_DIAGRAM):   END;
1132506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132507   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1132508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1132509   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1132510   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1132511   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1132512   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1132513   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1132514   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1132515   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1132516   +END;
MPRINT(EM_DIAGRAM):   END;
1132517   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132518   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1132519   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1132520   +drop
1132521   +H11
1132522   +H12
1132523   +H13
1132524   +H14
1132525   +H15
1132526   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1132527   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1132528    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1132529    quit;
1132530    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1132531    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1132532    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1132533    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
1132534    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1132535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132536    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1132537    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132539    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
1132540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132543    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1132544    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1132545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132546    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
1132547    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1132548    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1132549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132551    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132552    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1132553    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132554    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132555    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1132556    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1132556  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.
 
1132557    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132558    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1132559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132560    filename _pref
1132560  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1132561    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1132562    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1132563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132564   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1132565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1132566   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1132567   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1132568   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1132569    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1132570    quit;
1132571    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1132572    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1132573    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1132574    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1132575    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1132576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132577    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1132578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132580    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1132581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132584    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1132585    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1132586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132587    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1132588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1132589    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1132590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132592    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132593    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1132594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132595    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132596    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1132597    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1132597  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1132598    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132599    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1132600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132601    filename _pref
1132601  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1132602    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1132603    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1132604   +
1132605   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1132606   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1132606  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1132607   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1132608   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1132609   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1132610   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1132611   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1132612    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1132613    quit;
1132614    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1132615    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1132616    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1132617    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1132618    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1132619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132620    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1132621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132623    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1132624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132627    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1132628    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1132629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132630    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1132631    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132632    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1132633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132635    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132636    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1132637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132638    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132639    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1132640    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1132640  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1132641    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132642    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1132643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132644    filename _pref
1132644  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1132645    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1132646    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1132647   +
1132648   +
1132649   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1132650   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1132651   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1132652   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1132653   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1132654   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132655   +
1132656   +
1132657   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1132658   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1132659   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1132660   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1132661   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1132662   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132663   +
1132664   +
1132665   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1132666   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1132667   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1132668   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1132669   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1132670   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132671   +
1132672   +
1132673   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1132674   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1132675   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1132676   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1132677   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1132678   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132679   +
1132680   +
1132681   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1132682   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1132683   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1132684   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1132685   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1132686   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132687   +
1132688   +
1132689   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1132690   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1132691   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1132692   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1132693   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1132694   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132695   +
1132696   +
1132697   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1132698   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1132699   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1132700   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1132701   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1132702   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132703   +
1132704   +
1132705   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1132706   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1132707   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1132708   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1132709   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1132710   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1132711   +if
1132712   +_FILTERNORM1 not in ( '.')
1132713   + and
1132714   +_FILTERNORM2 not in ( '.')
1132715   + and
1132716   +_FILTERNORM3 not in ( '.')
1132717   + and
1132718   +_FILTERNORM4 not in ( '.')
1132719   + and
1132720   +_FILTERNORM5 not in ( '.')
1132721   + and
1132722   +_FILTERNORM6 not in ( '.')
1132723   + and
1132724   +_FILTERNORM7 not in ( ' ')
1132725   + and
1132726   +_FILTERNORM8 not in ( ' ')
1132727   +and
1132728   +( Dt_Customer ne .)
1132729   +and ( Income ne . and (Income<=107000))
1132730   +and ( Kidhome ne .)
1132731   +and ( MntFishProducts ne .)
1132732   +and ( MntFruits ne .)
1132733   +and ( MntGoldProds ne .)
1132734   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1132735   +and ( MntSweetProducts ne .)
1132736   +and ( MntWines ne .)
1132737   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1132738   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1132739   +and ( NumStorePurchases ne .)
1132740   +and ( NumWebPurchases ne .)
1132741   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1132742   +and ( Recency ne .)
1132743   +and ( Teenhome ne .)
1132744   +and ( Year_Birth ne .)
1132745   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1132746   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1132747   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1132748   +end;
MPRINT(EM_DIAGRAM):   end;
1132749   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1132750   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1132751    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1132752    quit;
1132753    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1132754    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1132755    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1132756    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1132757    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1132758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132759    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1132760    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132762    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1132763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132765    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132766    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1132767    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1132768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132769    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1132770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1132771    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1132772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132774    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1132775    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1132776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1132777    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132778    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1132779    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1132779  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1132780    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1132781    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1132782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1132783    %macro varDept(fcmpdata=,id=);
1132784    %global nobs&id scoreFlag&id;
1132785    %let scoreFlag&id = 0;
1132786    %if &id=1 or ^&fcmpStart %then %do;
1132787    proc sort data=&fcmpdata out=_temp&id nodupkey;
1132788    by NAME;
1132789    where id=&id and LHS in( %let j=1;
1132790    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1132791    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1132792    "&var" %let j = %eval(&j+1);
1132793    %end;
1132794    );
1132795    run;
1132796    %let dsid = %sysfunc(open(_temp&id));
1132797    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1132798    %let dsid = %sysfunc(close(&dsid));
1132799    %if &&nobs&id %then %do;
1132800    %let scoreFlag&id = 1;
1132801    %let fcmpStart = 1;
1132802    %end;
1132803    %else %let fcmpStart = 0;
1132804    %end;
1132805    %else %do;
1132806    proc sort data=&fcmpdata out=_tempid;
1132807    where id=&id;
1132808    by LHS;
1132809    run;
1132810    %let dsid = %sysfunc(open(_tempid));
1132811    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1132812    %let dsid = %sysfunc(close(&dsid));
1132813    %if ^&&nobs&id %then %do;
1132814    proc datasets lib=work nolist;
1132815    delete _tempid;
1132816    run;
1132817    quit;
1132818    %end;
1132819    %else %do;
1132820    data _tempAll;
1132821    set %let j=%eval(&id-1);
1132822    %do x=1 %to &j;
1132823    %if &&nobs&x %then %do;
1132824    _temp&x %end;
1132825    %end;
1132826    ;
1132827    run;
1132828    proc sql;
1132829    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1132829  ! work._tempid p2 where p.name=p2.lhs;
1132830    quit;
1132831    data _temp&id;
1132832    set _temp&id;
1132833    where LHS ne '' and NAME ne '' and Node ne '';
1132834    run;
1132835    proc datasets lib=work nolist;
1132836    delete _tempAll;
1132837    run;
1132838    %let dsid = %sysfunc(open(_temp&id));
1132839    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1132840    %let dsid = %sysfunc(close(&dsid));
1132841    %if ^&&nobs&id %then %do;
1132842    proc datasets lib=work nolist;
1132843    delete _temp&id;
1132844    run;
1132845    quit;
1132846    %end;
1132847    %else %do;
1132848    %let scoreFlag&id = 1;
1132849    data _temp&id;
1132850    set _temp&id;
1132851    where LHS ne NAME and node ne '';
1132852    run;
1132853    %let dsid = %sysfunc(open(_temp&id));
1132854    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1132855    %let dsid = %sysfunc(close(&dsid));
1132856    %if ^&&nobs&id %then %do;
1132857    proc datasets lib=work nolist;
1132858    delete _temp&id;
1132859    run;
1132860    quit;
1132861    %end;
1132862    %else %do;
1132863    proc sort data=_temp&id nodupkey;
1132864    by LHS NAME;
1132865    run;
1132866    %end;
1132867    %end;
1132868    %end;
1132869    %end;
1132870    %mend varDept;
1132871    %macro optCode(outdata=fcmpdata);
1132872    %global fcmpStart;
1132873    %let fcmpStart = 0;
1132874    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1132875    %let NumNodes=9;
1132876    %do k=1 %to &NumNodes;
1132877    %vardept(fcmpdata=&outdata, id=&k);
1132878    %end;
1132879    %mend optCode;
1132880    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1132881    filename _pref
1132881  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
1132882    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1132883    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
1132884   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132885   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1132886   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1132887   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1132888   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1132889   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1132890   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1132891   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1132892   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1132893   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1132894   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1132895   +LENGTH _WARN_ $4
1132896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1132897   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1132898   +
1132899   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1132900   +
1132901   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1132902   +
1132903   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1132904   +
1132905   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1132906   +
1132907   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1132908   +
1132909   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1132910   +
1132911   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1132912   +
1132913   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1132914   +
1132915   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1132916   +
1132917   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1132918   +
1132919   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1132920   +
1132921   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1132922   +
1132923   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1132924   +
1132925   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1132926   +
1132927   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1132928   +
1132929   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1132930   +
1132931   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1132932   +
1132933   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1132934   +
1132935   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1132936   +
1132937   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1132938   +
1132939   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1132940   +
1132941   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1132942   +
1132943   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1132944   +
1132945   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1132946   +
1132947   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1132948   +
1132949   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1132950   +
1132951   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1132952   +
1132953   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1132954   +
1132955   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1132956   +
1132957   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1132958   +
1132959   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1132960   +
1132961   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1132962   +
1132963   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1132964   +
1132965   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1132966   +
1132967   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1132968   +
1132969   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1132970   +
1132971   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1132972   +
1132973   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1132974   +
1132975   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1132976   +
1132977   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1132978   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1132979   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1132980   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1132981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132983   +end;
MPRINT(EM_DIAGRAM):   end;
1132984   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132985   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132986   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1132987   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132988   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1132989   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1132990   +   end;
MPRINT(EM_DIAGRAM):   end;
1132991   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1132992   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1132993   +   end;
MPRINT(EM_DIAGRAM):   end;
1132994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132995   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1132996   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132997   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132998   +   end;
MPRINT(EM_DIAGRAM):   end;
1132999   +end;
MPRINT(EM_DIAGRAM):   end;
1133000   +
1133001   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1133002   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1133003   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1133004   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1133005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133007   +end;
MPRINT(EM_DIAGRAM):   end;
1133008   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133009   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133010   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1133011   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133012   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1133013   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1133014   +   end;
MPRINT(EM_DIAGRAM):   end;
1133015   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133016   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1133017   +   end;
MPRINT(EM_DIAGRAM):   end;
1133018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133019   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1133020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133022   +   end;
MPRINT(EM_DIAGRAM):   end;
1133023   +end;
MPRINT(EM_DIAGRAM):   end;
1133024   +
1133025   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1133026   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1133027   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1133028   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1133029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133031   +end;
MPRINT(EM_DIAGRAM):   end;
1133032   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133033   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133034   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1133035   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133036   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1133037   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1133038   +   end;
MPRINT(EM_DIAGRAM):   end;
1133039   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133040   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1133041   +   end;
MPRINT(EM_DIAGRAM):   end;
1133042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133043   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1133044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133046   +   end;
MPRINT(EM_DIAGRAM):   end;
1133047   +end;
MPRINT(EM_DIAGRAM):   end;
1133048   +
1133049   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1133050   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1133051   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1133052   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1133053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133055   +end;
MPRINT(EM_DIAGRAM):   end;
1133056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133058   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1133059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133060   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1133061   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1133062   +   end;
MPRINT(EM_DIAGRAM):   end;
1133063   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133064   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1133065   +   end;
MPRINT(EM_DIAGRAM):   end;
1133066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133067   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1133068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133070   +   end;
MPRINT(EM_DIAGRAM):   end;
1133071   +end;
MPRINT(EM_DIAGRAM):   end;
1133072   +
1133073   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1133074   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1133075   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1133076   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1133077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133079   +end;
MPRINT(EM_DIAGRAM):   end;
1133080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133082   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1133083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1133085   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1133086   +   end;
MPRINT(EM_DIAGRAM):   end;
1133087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133088   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1133089   +   end;
MPRINT(EM_DIAGRAM):   end;
1133090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133091   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1133092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133094   +   end;
MPRINT(EM_DIAGRAM):   end;
1133095   +end;
MPRINT(EM_DIAGRAM):   end;
1133096   +
1133097   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1133098   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1133099   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1133100   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1133101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133103   +end;
MPRINT(EM_DIAGRAM):   end;
1133104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133106   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1133107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133108   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1133109   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1133110   +   end;
MPRINT(EM_DIAGRAM):   end;
1133111   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1133112   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1133113   +   end;
MPRINT(EM_DIAGRAM):   end;
1133114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133115   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1133116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133118   +   end;
MPRINT(EM_DIAGRAM):   end;
1133119   +end;
MPRINT(EM_DIAGRAM):   end;
1133120   +
1133121   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1133122   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1133123   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133124   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1133125   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1133126   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1133127   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1133128   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1133129   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1133130   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1133131   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1133132   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1133133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133135   +end;
MPRINT(EM_DIAGRAM):   end;
1133136   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133137   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1133138   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1133139   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133140   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1133141   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1133142   +   end;
MPRINT(EM_DIAGRAM):   end;
1133143   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1133144   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1133145   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1133146   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1133147   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1133148   +   end;
MPRINT(EM_DIAGRAM):   end;
1133149   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1133150   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1133151   +   end;
MPRINT(EM_DIAGRAM):   end;
1133152   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1133153   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1133154   +   end;
MPRINT(EM_DIAGRAM):   end;
1133155   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1133156   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1133157   +   end;
MPRINT(EM_DIAGRAM):   end;
1133158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133159   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1133160   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1133161   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1133162   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1133163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133165   +   end;
MPRINT(EM_DIAGRAM):   end;
1133166   +end;
MPRINT(EM_DIAGRAM):   end;
1133167   +
1133168   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1133169   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1133170   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1133171   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133172   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1133173   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1133174   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1133175   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1133176   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1133177   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1133178   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1133179   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1133180   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1133181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133183   +end;
MPRINT(EM_DIAGRAM):   end;
1133184   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133185   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1133186   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1133187   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133188   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133189   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1133190   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1133191   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1133192   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1133193   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133194   +         end;
MPRINT(EM_DIAGRAM):   end;
1133195   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133196   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1133197   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1133198   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133199   +            end;
MPRINT(EM_DIAGRAM):   end;
1133200   +         end;
MPRINT(EM_DIAGRAM):   end;
1133201   +      end;
MPRINT(EM_DIAGRAM):   end;
1133202   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133203   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1133204   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1133205   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133206   +         end;
MPRINT(EM_DIAGRAM):   end;
1133207   +      end;
MPRINT(EM_DIAGRAM):   end;
1133208   +   end;
MPRINT(EM_DIAGRAM):   end;
1133209   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133210   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1133211   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1133212   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133213   +      end;
MPRINT(EM_DIAGRAM):   end;
1133214   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133215   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1133216   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1133217   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1133218   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1133219   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1133220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133221   +         end;
MPRINT(EM_DIAGRAM):   end;
1133222   +      end;
MPRINT(EM_DIAGRAM):   end;
1133223   +   end;
MPRINT(EM_DIAGRAM):   end;
1133224   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133225   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1133226   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1133227   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1133228   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1133229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133231   +   end;
MPRINT(EM_DIAGRAM):   end;
1133232   +end;
MPRINT(EM_DIAGRAM):   end;
1133233   +
1133234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133235   +*** Checking missing input Interval
1133236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1133237   +
1133238   +IF NMISS(
1133239   +   Income ,
1133240   +   Kidhome ,
1133241   +   MntFishProducts ,
1133242   +   MntFruits ,
1133243   +   MntGoldProds ,
1133244   +   MntMeatProducts ,
1133245   +   MntSweetProducts ,
1133246   +   MntWines ,
1133247   +   NumCatalogPurchases ,
1133248   +   NumDealsPurchases ,
1133249   +   NumStorePurchases ,
1133250   +   NumWebPurchases ,
1133251   +   NumWebVisitsMonth ,
1133252   +   Recency ,
1133253   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1133254   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1133255   +
1133256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133257   +END;
MPRINT(EM_DIAGRAM):   END;
1133258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133259   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1133260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133262   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133263   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1133264   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1133265   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1133266   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1133267   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133268   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1133269   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133270   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1133271   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1133272   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1133273   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133274   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1133275   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1133276   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1133277   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1133278   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1133279   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1133280   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1133281   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1133282   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1133283   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1133284   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133285   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1133286   +END;
MPRINT(EM_DIAGRAM):   END;
1133287   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133288   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1133289   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1133290   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1133291   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1133292   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1133293   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1133294   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1133295   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1133296   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1133297   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1133298   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1133299   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1133300   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1133301   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1133302   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1133303   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1133304   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1133305   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1133306   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1133307   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1133308   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1133309   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1133310   +   ELSE S_NumCatalogPurchases
1133311   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1133312   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1133313   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1133314   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1133315   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1133316   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1133317   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1133318   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1133319   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1133320   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1133321   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1133322   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1133323   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1133324   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1133325   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1133326   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1133327   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1133328   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1133329   +END;
MPRINT(EM_DIAGRAM):   END;
1133330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133331   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1133332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133334   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1133335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133337   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1133338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133339   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133340   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1133341   +          +    -0.08967295716195 * S_MntFishProducts
1133342   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1133343   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1133344   +          +    -0.02806094557115 * S_MntSweetProducts
1133345   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1133346   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1133347   +          +     0.25137876058262 * S_NumStorePurchases
1133348   +          +    -0.07865442401292 * S_NumWebPurchases
1133349   +          +     1.03197398967259 * S_NumWebVisitsMonth
1133350   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1133351   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1133352   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1133353   +          +     0.19312392388912 * S_MntFishProducts
1133354   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1133355   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1133356   +          +       0.204174263605 * S_MntSweetProducts
1133357   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1133358   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1133359   +          +     0.07747830335769 * S_NumStorePurchases
1133360   +          +     0.07960837555191 * S_NumWebPurchases
1133361   +          +     0.02351602389122 * S_NumWebVisitsMonth
1133362   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1133363   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1133364   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1133365   +          +     0.18733919794636 * S_MntFishProducts
1133366   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1133367   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1133368   +          +     0.42514606159239 * S_MntSweetProducts
1133369   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1133370   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1133371   +          +     0.36582106462789 * S_NumStorePurchases
1133372   +          +     0.04244777020435 * S_NumWebPurchases
1133373   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1133374   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1133375   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1133376   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1133377   +          +     0.05986489897572 * S_MntFishProducts
1133378   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1133379   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1133380   +          +    -0.05513370461072 * S_MntSweetProducts
1133381   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1133382   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1133383   +          +     0.64364674828841 * S_NumStorePurchases
1133384   +          +     0.15084748708424 * S_NumWebPurchases
1133385   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1133386   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1133387   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1133388   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1133389   +          +    -0.14543196273578 * S_MntFishProducts
1133390   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1133391   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1133392   +          +     0.49374793444169 * S_MntSweetProducts
1133393   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1133394   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1133395   +          +     1.23754786782746 * S_NumStorePurchases
1133396   +          +     1.11316667348511 * S_NumWebPurchases
1133397   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1133398   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1133399   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1133400   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1133401   +          +     0.29549884005341 * S_MntFishProducts
1133402   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1133403   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1133404   +          +    -0.11909215986981 * S_MntSweetProducts
1133405   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1133406   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1133407   +          +     0.30109334594548 * S_NumStorePurchases
1133408   +          +     0.01985762767489 * S_NumWebPurchases
1133409   +          +     0.44965133281333 * S_NumWebVisitsMonth
1133410   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1133411   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1133412   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1133413   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1133414   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1133415   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1133416   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1133417   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1133418   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1133419   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1133420   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1133421   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1133422   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1133423   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1133424   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1133425   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1133426   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1133427   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1133428   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1133429   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1133430   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1133431   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1133432   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1133433   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1133434   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1133435   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1133436   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1133437   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1133438   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1133439   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1133440   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1133441   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1133442   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1133443   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1133444   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1133445   +          +     0.51015833145636 * Marital_StatusDivorced
1133446   +          +     -1.1653662063616 * Marital_StatusMarried
1133447   +          +     1.19396547750441 * Marital_StatusSingle
1133448   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1133449   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1133450   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1133451   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1133452   +          +     0.09154288513995 * Marital_StatusDivorced
1133453   +          +     0.06725684628382 * Marital_StatusMarried
1133454   +          +     0.11327659191494 * Marital_StatusSingle
1133455   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1133456   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1133457   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1133458   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1133459   +          +     0.37591653615852 * Marital_StatusDivorced
1133460   +          +    -0.05024236790132 * Marital_StatusMarried
1133461   +          +    -0.28317154997144 * Marital_StatusSingle
1133462   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1133463   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1133464   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1133465   +        EducationGraduation  +       0.638986138084 * EducationMaster
1133466   +          +    -0.44885292450558 * Marital_StatusDivorced
1133467   +          +     0.78958791519299 * Marital_StatusMarried
1133468   +          +    -0.09688714431356 * Marital_StatusSingle
1133469   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1133470   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1133471   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1133472   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1133473   +          +    -0.30801073895989 * Marital_StatusDivorced
1133474   +          +     -0.1285150749223 * Marital_StatusMarried
1133475   +          +     0.06775542164414 * Marital_StatusSingle
1133476   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1133477   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1133478   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1133479   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1133480   +          +     0.22193599090368 * Marital_StatusDivorced
1133481   +          +    -0.54544672042168 * Marital_StatusMarried
1133482   +          +    -0.02237436019864 * Marital_StatusSingle
1133483   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1133484   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1133485   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1133486   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1133487   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1133488   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1133489   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1133490   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1133491   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1133492   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1133493   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1133494   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1133495   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1133496   +END;
MPRINT(EM_DIAGRAM):   END;
1133497   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133498   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1133499   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1133500   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1133501   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1133502   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1133503   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1133504   +END;
MPRINT(EM_DIAGRAM):   END;
1133505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133506   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1133507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133508   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133509   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1133510   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1133511   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1133512   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1133513   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1133514   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1133515   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1133516   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1133517   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1133518   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1133519   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1133520   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1133521   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1133522   +END;
MPRINT(EM_DIAGRAM):   END;
1133523   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133524   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1133525   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1133526   +END;
MPRINT(EM_DIAGRAM):   END;
1133527   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1133528   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1133529   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1133530   +END;
MPRINT(EM_DIAGRAM):   END;
1133531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133532   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1133533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133534   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1133535   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1133536   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1133537   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1133538   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1133539   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1133540   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1133541   +END;
MPRINT(EM_DIAGRAM):   END;
1133542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133543   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1133544   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1133545   +drop
1133546   +H11
1133547   +H12
1133548   +H13
1133549   +H14
1133550   +H15
1133551   +H16
1133552   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1133553   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1133554    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1133555    quit;
1133556    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1133557    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1133558    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1133559    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
1133560    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1133561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133562    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1133563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133565    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
1133566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133569    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1133570    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1133571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133572    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
1133573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1133574    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1133575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133577    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133578    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1133579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133580    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133581    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1133582    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1133582  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.
 
1133583    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133584    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1133585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133586    filename _pref
1133586  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1133587    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1133588    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1133589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133590   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1133591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1133592   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1133593   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1133594   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1133595    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1133596    quit;
1133597    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1133598    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1133599    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1133600    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1133601    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1133602    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133603    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1133604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133606    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1133607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133609    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133610    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1133611    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1133612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133613    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1133614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1133615    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1133616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133618    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133619    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1133620    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133621    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133622    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1133623    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1133623  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1133624    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133625    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1133626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133627    filename _pref
1133627  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1133628    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1133629    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1133630   +
1133631   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1133632   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1133632  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1133633   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1133634   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1133635   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1133636   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1133637   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1133638    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1133639    quit;
1133640    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1133641    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1133642    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1133643    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1133644    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1133645    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133646    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1133647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133649    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1133650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133652    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133653    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1133654    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1133655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133656    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1133657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133658    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1133659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133661    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133662    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1133663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133664    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1133666    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1133666  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1133667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133668    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1133669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133670    filename _pref
1133670  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1133671    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1133672    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1133673   +
1133674   +
1133675   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1133676   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1133677   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1133678   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1133679   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1133680   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133681   +
1133682   +
1133683   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1133684   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1133685   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1133686   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1133687   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1133688   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133689   +
1133690   +
1133691   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1133692   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1133693   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1133694   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1133695   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1133696   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133697   +
1133698   +
1133699   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1133700   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1133701   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1133702   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1133703   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1133704   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133705   +
1133706   +
1133707   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1133708   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1133709   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1133710   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1133711   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1133712   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133713   +
1133714   +
1133715   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1133716   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1133717   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1133718   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1133719   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1133720   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133721   +
1133722   +
1133723   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1133724   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1133725   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1133726   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1133727   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1133728   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133729   +
1133730   +
1133731   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1133732   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1133733   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1133734   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1133735   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1133736   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1133737   +if
1133738   +_FILTERNORM1 not in ( '.')
1133739   + and
1133740   +_FILTERNORM2 not in ( '.')
1133741   + and
1133742   +_FILTERNORM3 not in ( '.')
1133743   + and
1133744   +_FILTERNORM4 not in ( '.')
1133745   + and
1133746   +_FILTERNORM5 not in ( '.')
1133747   + and
1133748   +_FILTERNORM6 not in ( '.')
1133749   + and
1133750   +_FILTERNORM7 not in ( ' ')
1133751   + and
1133752   +_FILTERNORM8 not in ( ' ')
1133753   +and
1133754   +( Dt_Customer ne .)
1133755   +and ( Income ne . and (Income<=107000))
1133756   +and ( Kidhome ne .)
1133757   +and ( MntFishProducts ne .)
1133758   +and ( MntFruits ne .)
1133759   +and ( MntGoldProds ne .)
1133760   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1133761   +and ( MntSweetProducts ne .)
1133762   +and ( MntWines ne .)
1133763   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1133764   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1133765   +and ( NumStorePurchases ne .)
1133766   +and ( NumWebPurchases ne .)
1133767   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1133768   +and ( Recency ne .)
1133769   +and ( Teenhome ne .)
1133770   +and ( Year_Birth ne .)
1133771   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1133772   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1133773   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1133774   +end;
MPRINT(EM_DIAGRAM):   end;
1133775   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1133776   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1133777    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1133778    quit;
1133779    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1133780    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1133781    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1133782    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1133783    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1133784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133785    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1133786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133788    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1133789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133791    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133792    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1133793    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1133794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133795    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1133796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1133797    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1133798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1133801    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1133802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1133803    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1133804    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1133805    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1133805  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1133806    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133807    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1133808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1133809    %macro varDept(fcmpdata=,id=);
1133810    %global nobs&id scoreFlag&id;
1133811    %let scoreFlag&id = 0;
1133812    %if &id=1 or ^&fcmpStart %then %do;
1133813    proc sort data=&fcmpdata out=_temp&id nodupkey;
1133814    by NAME;
1133815    where id=&id and LHS in( %let j=1;
1133816    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1133817    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1133818    "&var" %let j = %eval(&j+1);
1133819    %end;
1133820    );
1133821    run;
1133822    %let dsid = %sysfunc(open(_temp&id));
1133823    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1133824    %let dsid = %sysfunc(close(&dsid));
1133825    %if &&nobs&id %then %do;
1133826    %let scoreFlag&id = 1;
1133827    %let fcmpStart = 1;
1133828    %end;
1133829    %else %let fcmpStart = 0;
1133830    %end;
1133831    %else %do;
1133832    proc sort data=&fcmpdata out=_tempid;
1133833    where id=&id;
1133834    by LHS;
1133835    run;
1133836    %let dsid = %sysfunc(open(_tempid));
1133837    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1133838    %let dsid = %sysfunc(close(&dsid));
1133839    %if ^&&nobs&id %then %do;
1133840    proc datasets lib=work nolist;
1133841    delete _tempid;
1133842    run;
1133843    quit;
1133844    %end;
1133845    %else %do;
1133846    data _tempAll;
1133847    set %let j=%eval(&id-1);
1133848    %do x=1 %to &j;
1133849    %if &&nobs&x %then %do;
1133850    _temp&x %end;
1133851    %end;
1133852    ;
1133853    run;
1133854    proc sql;
1133855    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1133855  ! work._tempid p2 where p.name=p2.lhs;
1133856    quit;
1133857    data _temp&id;
1133858    set _temp&id;
1133859    where LHS ne '' and NAME ne '' and Node ne '';
1133860    run;
1133861    proc datasets lib=work nolist;
1133862    delete _tempAll;
1133863    run;
1133864    %let dsid = %sysfunc(open(_temp&id));
1133865    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1133866    %let dsid = %sysfunc(close(&dsid));
1133867    %if ^&&nobs&id %then %do;
1133868    proc datasets lib=work nolist;
1133869    delete _temp&id;
1133870    run;
1133871    quit;
1133872    %end;
1133873    %else %do;
1133874    %let scoreFlag&id = 1;
1133875    data _temp&id;
1133876    set _temp&id;
1133877    where LHS ne NAME and node ne '';
1133878    run;
1133879    %let dsid = %sysfunc(open(_temp&id));
1133880    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1133881    %let dsid = %sysfunc(close(&dsid));
1133882    %if ^&&nobs&id %then %do;
1133883    proc datasets lib=work nolist;
1133884    delete _temp&id;
1133885    run;
1133886    quit;
1133887    %end;
1133888    %else %do;
1133889    proc sort data=_temp&id nodupkey;
1133890    by LHS NAME;
1133891    run;
1133892    %end;
1133893    %end;
1133894    %end;
1133895    %end;
1133896    %mend varDept;
1133897    %macro optCode(outdata=fcmpdata);
1133898    %global fcmpStart;
1133899    %let fcmpStart = 0;
1133900    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1133901    %let NumNodes=9;
1133902    %do k=1 %to &NumNodes;
1133903    %vardept(fcmpdata=&outdata, id=&k);
1133904    %end;
1133905    %mend optCode;
1133906    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.24 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1133907    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1133908    * Ensmbl10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing metadata for TRAIN data;
1133909    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl10_TRAIN out=WORK.M14D8W6T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M14D8W6T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M14D8W6T(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M14D8W6T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M14D8W6T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0CWGT97 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12O8GA_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CWGT97;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl10";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1134221    data EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMINFO;
1134222    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1134223    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1134224    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1134228    run;
1134229    proc sort data = EMWS8.Ensmbl10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl10_EMINFO NOTHREADS;
1134230    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL10_EMINFO.
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134232    proc sort data = EMWS8.Neural33_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural33_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1134233    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL33_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134235    proc sort data = EMWS8.Ensmbl10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1134236    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134238    data EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMINFO;
1134239    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1134240    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134242    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1134243    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1134244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1134245    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL10_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL10_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35IKP8R
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35IKP8R new;
MPRINT(EM_DIAGRAM):   run;
1134269    data EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMOUTFIT;
1134270    set EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMOUTFIT;
1134271    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1134272    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1134272  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1134273    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1134274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL10_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL10_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134275    proc sort data=EMWS8.Ensmbl10_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl10_EMREPORTFIT nothreads;
1134276    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1134277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL10_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL10_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134278    %let _EMwarndup = 0;
1134279    %let _EMtargetdup =;
1134280    %let _EMASEtargetdup =;
1134281    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1134282    set EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMOUTFIT;
1134283    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1134284    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1134285    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1134286    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1134287    end;
MPRINT(EM_DIAGRAM):   end;
1134288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL10_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134289    proc sort data=EMWS8.Neural33_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural33_CMeta_TRAIN out=WORK.SUBSETINMETA;
1134290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL33_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134292    proc sort data=EMWS8.Ensmbl10_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl10_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1134293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL10_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134295    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1134296    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1134297    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134299    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1134300    set EMWS8.Ensmbl10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_CMeta_TRAIN;
1134301    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1134301  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1134302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134303    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1134304    set EMWS8.Ensmbl10_TRAIN(keep=
1134305    F_DepVar
1134306    I_DepVar
1134307    P_DepVar0
1134308    P_DepVar1
1134309    R_DepVar0
1134310    R_DepVar1
1134311    U_DepVar
1134312    _WARN_
1134313    DepVar
1134314    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1134315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL10_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL33_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL10_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl10_25VP65V nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl10_25VP65V;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl10_25VP65V(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl10_25VP65V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl10_25VP65V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 5.2915742E-6 OVLMAX 0.9995037616 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1138581    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1138582    set EMWS8.Ensmbl10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_CMeta_TRAIN;
1138583    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1138583  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1138584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1138585    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1138586    set EMWS8.Ensmbl10_VALIDATE(keep=
1138587    F_DepVar
1138588    I_DepVar
1138589    P_DepVar0
1138590    P_DepVar1
1138591    R_DepVar0
1138592    R_DepVar1
1138593    U_DepVar
1138594    _WARN_
1138595    DepVar
1138596    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1138597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL10_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL33_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL10_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl10_2HM8MBI nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl10_2HM8MBI;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl10_2HM8MBI(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMCLASSIFICATION WORK.Ensmbl10_2HM8MBI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl10_2HM8MBI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 5.3248369E-6 OVLMAX 0.9994038796 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
The SAS System
 
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1142872    %let _cn = %sysfunc(getoption(CENTER));
1142873    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1142874    proc print data=EMWS8.Ensmbl10_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl10_EMREPORTFIT noobs label;
1142875    var STAT LABEL TRAIN
1142876    VALIDATE
1142877    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1142878    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1142879    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1142880    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1142881    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL10_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 945.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1142882    title10;
MPRINT(EM_DIAGRAM):   title10;
1142883    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1142884    proc sort data=EMWS8.Ensmbl10_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl10_EMCLASSIFICATION nothreads;
1142885    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1142886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL10_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL10_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1142887    %let _cn = %sysfunc(getoption(CENTER));
1142888    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1142889    proc print data=EMWS8.Ensmbl10_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl10_EMCLASSIFICATION noobs label;
1142890    var from into pct_row pct_col count percent
1142891    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1142892    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1142893    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1142894    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1142895    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1142896    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1142897    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1142898    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1142899    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1142900    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1142901    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1142902    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL10_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 946.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1142903    title9;
MPRINT(EM_DIAGRAM):   title9;
1142904    title10;
MPRINT(EM_DIAGRAM):   title10;
1142905    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1142906    %let _cn = %sysfunc(getoption(CENTER));
1142907    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1142908    data EMWS8.Ensmbl10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMEVENTREPORT;
1142909    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1142909  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1142910    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1142910  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1142910  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1142910  ! FALSEEVENT
1142911    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1142911  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1142911  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1142912       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1142913    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1142914    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1142915    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1142916    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1142917    set EMWS8.Ensmbl10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMEVENTREPORT;
1142918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL10_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL10_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1142919    proc print data=EMWS8.Ensmbl10_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl10_EMEVENTREPORT noobs label;
1142920    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1142921    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1142922    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1142923    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL10_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 947.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1142924    title10;
MPRINT(EM_DIAGRAM):   title10;
1142925    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1142926    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1142927    modify Ensmbl10_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl10_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1142928    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1142929    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1142929  ! ;
MPRINT(EM_DIAGRAM):   run;
1142930    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL10_EMRANK.DATA.
1142931    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
1142932    %let _cn = %sysfunc(getoption(CENTER));
1142933    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1142934    proc print data=EMWS8.Ensmbl10_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl10_EMRANK label noobs;
1142935    var
1142936    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1142937    by
1142938    notsorted DATAROLE
1142939    notsorted TARGET
1142940    notsorted TARGETLABEL
1142941    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1142942    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1142943    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1142944    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL10_EMRANK.
NOTE: The PROCEDURE PRINT printed page 948.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1142945    title10;
MPRINT(EM_DIAGRAM):   title10;
1142946    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1142947    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1142948    modify Ensmbl10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1142949    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1142949  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1142950    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1142950  ! ;
MPRINT(EM_DIAGRAM):   run;
1142951    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL10_EMSCOREDIST.DATA.
1142952    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl10_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
