MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YX6R91 "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YX6R91 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
26840      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
26841      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
26842      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

26843      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
26844      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
26845      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
26846      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
26847      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
26848      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

26849      title10;
MPRINT(EM_DIAGRAM):   title10;
26850      data WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):    data WORK.M35EJUCH;
26851      set WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):   set WORK.M35EJUCH;
26852      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
26853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M35EJUCH.
NOTE: The data set WORK.M35EJUCH has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26918      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
26919      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
26920      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26921      data WORK.M3QN6U1M;
MPRINT(EM_DIAGRAM):   data WORK.M3QN6U1M;
26922      set WORK.M3QN6U1M;
MPRINT(EM_DIAGRAM):   set WORK.M3QN6U1M;
26923      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
26924      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M3QN6U1M.
NOTE: The data set WORK.M3QN6U1M has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26925      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
26926      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
26927      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26928      %macro DMDBClass;
26929          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
26930         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
26931      %mend DMDBClass;
26932      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26933      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
26934      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26935      %macro DMDBVar;
26936          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
26937         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
26938         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
26939         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
26940      %mend DMDBVar;
26941      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26942      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
26943      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26944      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
26945      dmdbcat=WORK.EM_DMDB
26946      classout=WORK.Transclassout
26947      maxlevel = 513
26948      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
26949      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
26950      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases 
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
26951      target
26952      DepVar
26953      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
26954      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3392   Memory used = 511K.
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
26955      quit;
26956      *--- end code ---*;

26957      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
26958      set WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):   set WORK.M35EJUCH;
26959      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
26960      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M35EJUCH.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26961      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
26962      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
26963      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26964      data WORK.M1MXC3Y0;
MPRINT(EM_DIAGRAM):   data WORK.M1MXC3Y0;
26965      set WORK.M1MXC3Y0;
MPRINT(EM_DIAGRAM):   set WORK.M1MXC3Y0;
26966      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
26967      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M1MXC3Y0.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M1MXC3Y0 has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26970      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
26971     +/*------------------------------------------------------------------
26972     +  MACRO EXPLOREOBS
26974     +  SUPPORT:  SASDHD - David Duling
26975     +  PRODUCT:  Enterprise Miner
26977     +  DESCRIPTION:
26978     +  Generates maximum and default numbers of observations to
26979     +  download for visualization depending on the record length.
26981     +  Values were determined by trial and error using typical
26982     +  Windows workstation configurations.
26984     +  Discrete sets of values are returned so that user experience
26985     +  will be consitent with similar sized data sets.
26987     +  These macro variables are set:
26988     +  _exploreobs_max -- maximum number of obs downloadable
26989     +  _exploreobs_def -- default number of obs to be downloaded
26990     +  _exploreobs_recl - record length.  Might be useful for reporting.
26992     +  Use the _exploreobs_max to set limit the GUI selection of
26993     +  observations for downloading.  The GUI selection for obs
26994     +  could be reduced to "Default" and "Max".
26996     +  Parameters
26997     +  data=   libname.memname of input data
26998     +  vars=   subset list of variables.
26999     +          downloading 1 out of 500 really does work like downloading
27000     +          1 out of 1 vars.  Users may select a subset of vars for
27001     +                   visualizations.  Pass in the list as space delimited
27002     +          var names.  If vars is not specified, the record length
27003     +          of the entire data will be used.
27004     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
27006     +  Control
27007     +  Users may control the values by entering these macro variables.
27008     +            EM_EXPLOREOBS_MAX
27009     +            EM_EXPLOREOBS_DEFAULT
27010     +  These values override the computed values.
27012     +  Debugging
27013     +  %let _exploreobs_debug=1 ;
27014     +--------------------------------------------------------------------
27015     +  HISTORY: 20APR2004. sasdhd. pushed.
27016     +           18DEC2004. sasdhd. S0280556.
27017     +           07SEP2007. sasdhd. HK1009586
27018     +--------------------------------------------------------------------*/
27020     +%macro exploreobs(data=,vars=, nbytes=) ;
27022     +   /*--- variable definitions ---*/
27023     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
27024     +   %local xobs xvars xlen vlen xi vname vlist ;
27025     +   %local _exp_source _exp_notes ;
27027     +   /*--- USER definitions ---*/
27028     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
27030     +   /*--- variable intializations ---*/
27031     +   %let _exploreobs_max=0 ;
27032     +   %let _exploreobs_def=0 ;
27033     +   %let _exploreobs_recl=0 ;
27034     +   %let xvars= 0 ;
27035     +   %let xlen = 0 ;
27036     +   %let xobs = 0 ;
27038     +   /*--- data error checks ---*/
27039     +   %if "&data" eq "" %then %do ;
27040     +            %put NOTE: DATA is not specified. ;
27041     +            %goto term ;
27042     +      %end ;
27044     +   %let dsid=%sysfunc(open(&data)) ;
27045     +   %if not &dsid %then %do ;
27046     +            %put NOTE: DATA &data is not available. ;
27047     +            %goto term ;
27048     +      %end ;
27050     +   /*--- if a vars list exists generate a subset ---*/
27051     +   %if &vars ne %then %do ;
27052     +         %let dsid=%sysfunc(close(&dsid)) ;
27053     +         %if &_exploreobs_debug ne 1 %then %do ;
27054     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
27055     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
27056     +                  options nosource nonotes ;
27057     +         %end ;
27058     +         data _exploreobs_temp_data ;
27059     +         set &data(obs=0) ;
27060     +          keep &vars ;
27061     +         run;
27062     +         %if &_exploreobs_debug ne 1 %then %do ;
27063     +                  options &_exp_source &_exp_notes ;
27064     +         %end ;
27065     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
27066     +         %if &dsid eq 0 %then %do ;
27067     +                  %put NOTE: Sample is not available.;
27068     +                  %goto term ;
27069     +            %end ;
27070     +      %end ;
27072     +   /*--- get var attributes ---*/
27073     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
27074     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
27075     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
27076     +   %let dsid= %sysfunc(close(&dsid)) ;
27078     +   /*--- set default and max obs ---*/
27079     +   %let _exploreobs_recl=%eval(&xlen) ;
27080     +   %if &_exploreobs_recl eq 0 %then %do ;
27081     +             %let _exploreobs_max= 0 ;
27082     +             %let _exploreobs_def= 0 ;
27083     +             %goto term ;
27085     +   %end ;
27086     +   %else
27087     +   %if &_exploreobs_recl le 32 %then %do ;
27088     +             %let _exploreobs_max=100000 ;
27089     +             %let _exploreobs_def= 10000 ;
27090     +   %end ;
27091     +   %else
27092     +   %if &_exploreobs_recl le 128 %then %do ;
27093     +             %let _exploreobs_max=60000 ;
27094     +             %let _exploreobs_def= 6000 ;
27095     +   %end ;
27096     +   %else
27097     +   %if &_exploreobs_recl lt 1000 %then %do ;
27098     +             %let _exploreobs_max=20000 ;
27099     +             %let _exploreobs_def= 2000 ;
27100     +   %end ;
27101     +   %else
27102     +   %if &_exploreobs_recl lt 5000 %then %do ;
27103     +             %let _exploreobs_max= 10000 ;
27104     +             %let _exploreobs_def=  1000 ;
27105     +   %end ;
27106     +   %else
27107     +   %if &_exploreobs_recl lt 20000 %then %do ;
27108     +             %let _exploreobs_max= 5000 ;
27109     +             %let _exploreobs_def=  500 ;
27110     +   %end ;
27111     +   %else %do ;
27112     +             %let _exploreobs_max= 1000 ;
27113     +             %let _exploreobs_def=  200 ;
27114     +   %end ;
27116     +   /*--- Users options ---*/
27117     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
27118     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
27119     +   %end;
27120     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27121     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
27122     +   %end;
27124     +    /*--- S0868273 ---*/
27125     +    %if "&NBYTES" ne "" %then %do;
27126     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
27127     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
27128     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
27129     +       %end;
27131     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27132     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
27133     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
27134     +          %if ^&_exploreobs_def %then
27135     +              %let _exploreobs_def = 1;
27137     +       %end;
27138     +    %end;
27140     +   /*--- Terminate ---*/
27141     +   %term:
27143     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
27144     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
