MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12H18m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                10 de Março de 2016
Time:                12H18m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CD7I61 "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CD7I61 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12H18m" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12H18m" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
27183      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
27184      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
27185      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

27186      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
27187      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
27188      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
27189      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
27190      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
27191      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

27192      title10;
MPRINT(EM_DIAGRAM):   title10;
27193      data WORK.M0AY6MZX;
MPRINT(EM_DIAGRAM):    data WORK.M0AY6MZX;
27194      set WORK.M0AY6MZX;
MPRINT(EM_DIAGRAM):   set WORK.M0AY6MZX;
27195      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
27196      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK.M0AY6MZX.
NOTE: The data set WORK.M0AY6MZX has 22 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

27261      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
27262      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
27263      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27264      data WORK.M3EWHM4S;
MPRINT(EM_DIAGRAM):   data WORK.M3EWHM4S;
27265      set WORK.M3EWHM4S;
MPRINT(EM_DIAGRAM):   set WORK.M3EWHM4S;
27266      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
27267      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK.M3EWHM4S.
NOTE: The data set WORK.M3EWHM4S has 22 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

27268      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
27269      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
27270      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27271      %macro DMDBClass;
27272          DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
27273      %mend DMDBClass;
27274      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27275      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
27276      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
27277      %macro DMDBVar;
27278          Age CatPurchase Clothes Dt_Customer Frq HigherEducation HouseKeeping Income
27279         Kitchen Mnt NetPurchase RMntFrq Rcn Recomendation SmallAppliances Toys
27280         Year_Birth
27281      %mend DMDBVar;
27282      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27283      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
27284      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27285      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
27286      dmdbcat=WORK.EM_DMDB
27287      classout=WORK.Transclassout
27288      maxlevel = 513
27289      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
27290      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
27291      var %DMDBVar;
MPRINT(DMDBVAR):   Age CatPurchase Clothes Dt_Customer Frq HigherEducation HouseKeeping Income Kitchen Mnt NetPurchase RMntFrq Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(EM_DIAGRAM):  ;
27292      target
27293      DepVar
27294      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
27295      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2332   Memory used = 511K.
NOTE: There were 2332 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 16 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
27296      quit;
27297      *--- end code ---*;

27298      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
27299      set WORK.M0AY6MZX;
MPRINT(EM_DIAGRAM):   set WORK.M0AY6MZX;
27300      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
27301      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK.M0AY6MZX.
NOTE: The data set WORK.TRANSINTERVALMETA has 17 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

27302      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27303      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
27304      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27305      data WORK.M3W_YIKT;
MPRINT(EM_DIAGRAM):   data WORK.M3W_YIKT;
27306      set WORK.M3W_YIKT;
MPRINT(EM_DIAGRAM):   set WORK.M3W_YIKT;
27307      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
27308      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M3W_YIKT.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M3W_YIKT has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

27311      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
27312     +/*------------------------------------------------------------------
27313     +  MACRO EXPLOREOBS
27315     +  SUPPORT:  SASDHD - David Duling
27316     +  PRODUCT:  Enterprise Miner
27318     +  DESCRIPTION:
27319     +  Generates maximum and default numbers of observations to
27320     +  download for visualization depending on the record length.
27322     +  Values were determined by trial and error using typical
27323     +  Windows workstation configurations.
27325     +  Discrete sets of values are returned so that user experience
27326     +  will be consitent with similar sized data sets.
27328     +  These macro variables are set:
27329     +  _exploreobs_max -- maximum number of obs downloadable
27330     +  _exploreobs_def -- default number of obs to be downloaded
27331     +  _exploreobs_recl - record length.  Might be useful for reporting.
27333     +  Use the _exploreobs_max to set limit the GUI selection of
27334     +  observations for downloading.  The GUI selection for obs
27335     +  could be reduced to "Default" and "Max".
27337     +  Parameters
27338     +  data=   libname.memname of input data
27339     +  vars=   subset list of variables.
27340     +          downloading 1 out of 500 really does work like downloading
27341     +          1 out of 1 vars.  Users may select a subset of vars for
27342     +                   visualizations.  Pass in the list as space delimited
27343     +          var names.  If vars is not specified, the record length
27344     +          of the entire data will be used.
27345     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
27347     +  Control
27348     +  Users may control the values by entering these macro variables.
27349     +            EM_EXPLOREOBS_MAX
27350     +            EM_EXPLOREOBS_DEFAULT
27351     +  These values override the computed values.
27353     +  Debugging
27354     +  %let _exploreobs_debug=1 ;
27355     +--------------------------------------------------------------------
27356     +  HISTORY: 20APR2004. sasdhd. pushed.
27357     +           18DEC2004. sasdhd. S0280556.
27358     +           07SEP2007. sasdhd. HK1009586
27359     +--------------------------------------------------------------------*/
27361     +%macro exploreobs(data=,vars=, nbytes=) ;
27363     +   /*--- variable definitions ---*/
27364     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
27365     +   %local xobs xvars xlen vlen xi vname vlist ;
27366     +   %local _exp_source _exp_notes ;
27368     +   /*--- USER definitions ---*/
27369     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
27371     +   /*--- variable intializations ---*/
27372     +   %let _exploreobs_max=0 ;
27373     +   %let _exploreobs_def=0 ;
27374     +   %let _exploreobs_recl=0 ;
27375     +   %let xvars= 0 ;
27376     +   %let xlen = 0 ;
27377     +   %let xobs = 0 ;
27379     +   /*--- data error checks ---*/
27380     +   %if "&data" eq "" %then %do ;
27381     +            %put NOTE: DATA is not specified. ;
27382     +            %goto term ;
27383     +      %end ;
27385     +   %let dsid=%sysfunc(open(&data)) ;
27386     +   %if not &dsid %then %do ;
27387     +            %put NOTE: DATA &data is not available. ;
27388     +            %goto term ;
27389     +      %end ;
27391     +   /*--- if a vars list exists generate a subset ---*/
27392     +   %if &vars ne %then %do ;
27393     +         %let dsid=%sysfunc(close(&dsid)) ;
27394     +         %if &_exploreobs_debug ne 1 %then %do ;
27395     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
27396     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
27397     +                  options nosource nonotes ;
27398     +         %end ;
27399     +         data _exploreobs_temp_data ;
27400     +         set &data(obs=0) ;
27401     +          keep &vars ;
27402     +         run;
27403     +         %if &_exploreobs_debug ne 1 %then %do ;
27404     +                  options &_exp_source &_exp_notes ;
27405     +         %end ;
27406     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
27407     +         %if &dsid eq 0 %then %do ;
27408     +                  %put NOTE: Sample is not available.;
27409     +                  %goto term ;
27410     +            %end ;
27411     +      %end ;
27413     +   /*--- get var attributes ---*/
27414     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
27415     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
27416     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
27417     +   %let dsid= %sysfunc(close(&dsid)) ;
27419     +   /*--- set default and max obs ---*/
27420     +   %let _exploreobs_recl=%eval(&xlen) ;
27421     +   %if &_exploreobs_recl eq 0 %then %do ;
27422     +             %let _exploreobs_max= 0 ;
27423     +             %let _exploreobs_def= 0 ;
27424     +             %goto term ;
27426     +   %end ;
27427     +   %else
27428     +   %if &_exploreobs_recl le 32 %then %do ;
27429     +             %let _exploreobs_max=100000 ;
27430     +             %let _exploreobs_def= 10000 ;
27431     +   %end ;
27432     +   %else
27433     +   %if &_exploreobs_recl le 128 %then %do ;
27434     +             %let _exploreobs_max=60000 ;
27435     +             %let _exploreobs_def= 6000 ;
27436     +   %end ;
27437     +   %else
27438     +   %if &_exploreobs_recl lt 1000 %then %do ;
27439     +             %let _exploreobs_max=20000 ;
27440     +             %let _exploreobs_def= 2000 ;
27441     +   %end ;
27442     +   %else
27443     +   %if &_exploreobs_recl lt 5000 %then %do ;
27444     +             %let _exploreobs_max= 10000 ;
27445     +             %let _exploreobs_def=  1000 ;
27446     +   %end ;
27447     +   %else
27448     +   %if &_exploreobs_recl lt 20000 %then %do ;
27449     +             %let _exploreobs_max= 5000 ;
27450     +             %let _exploreobs_def=  500 ;
27451     +   %end ;
27452     +   %else %do ;
27453     +             %let _exploreobs_max= 1000 ;
27454     +             %let _exploreobs_def=  200 ;
27455     +   %end ;
27457     +   /*--- Users options ---*/
27458     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
27459     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
27460     +   %end;
27461     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27462     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
27463     +   %end;
27465     +    /*--- S0868273 ---*/
27466     +    %if "&NBYTES" ne "" %then %do;
27467     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
27468     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
27469     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
27470     +       %end;
27472     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27473     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
27474     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
27475     +          %if ^&_exploreobs_def %then
27476     +              %let _exploreobs_def = 1;
27478     +       %end;
27479     +    %end;
27481     +   /*--- Terminate ---*/
27482     +   %term:
27484     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
27485     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 25 : recl= 200 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
