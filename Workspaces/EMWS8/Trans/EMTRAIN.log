MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                11. April 2016
Time:                17.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O010GD_1 "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O010GD_1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
26847      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
26848      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
26849      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26850      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
26851      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
26852      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
26853      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
26854      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
26855      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26856      title10;
MPRINT(EM_DIAGRAM):   title10;
26857      data WORK.M0IVM82R;
MPRINT(EM_DIAGRAM):    data WORK.M0IVM82R;
26858      set WORK.M0IVM82R;
MPRINT(EM_DIAGRAM):   set WORK.M0IVM82R;
26859      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
26860      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M0IVM82R.
NOTE: The data set WORK.M0IVM82R has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26925      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
26926      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
26927      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26928      data WORK.M2J99IFI;
MPRINT(EM_DIAGRAM):   data WORK.M2J99IFI;
26929      set WORK.M2J99IFI;
MPRINT(EM_DIAGRAM):   set WORK.M2J99IFI;
26930      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
26931      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M2J99IFI.
NOTE: The data set WORK.M2J99IFI has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26932      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
26933      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
26934      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26935      %macro DMDBClass;
26936          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
26937         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
26938      %mend DMDBClass;
26939      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26940      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
26941      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26942      %macro DMDBVar;
26943          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
26944         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
26945         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
26946         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
26947      %mend DMDBVar;
26948      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26949      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
26950      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26951      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
26952      dmdbcat=WORK.EM_DMDB
26953      classout=WORK.Transclassout
26954      maxlevel = 513
26955      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
26956      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
26957      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases 
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
26958      target
26959      DepVar
26960      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
26961      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3105   Memory used = 511K.
NOTE: There were 3105 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
26962      quit;
26963      *--- end code ---*;

26964      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
26965      set WORK.M0IVM82R;
MPRINT(EM_DIAGRAM):   set WORK.M0IVM82R;
26966      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
26967      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M0IVM82R.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26968      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
26969      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
26970      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26971      data WORK.M1W7GZX6;
MPRINT(EM_DIAGRAM):   data WORK.M1W7GZX6;
26972      set WORK.M1W7GZX6;
MPRINT(EM_DIAGRAM):   set WORK.M1W7GZX6;
26973      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
26974      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M1W7GZX6.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M1W7GZX6 has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26977      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
26978     +/*------------------------------------------------------------------
26979     +  MACRO EXPLOREOBS
26981     +  SUPPORT:  SASDHD - David Duling
26982     +  PRODUCT:  Enterprise Miner
26984     +  DESCRIPTION:
26985     +  Generates maximum and default numbers of observations to
26986     +  download for visualization depending on the record length.
26988     +  Values were determined by trial and error using typical
26989     +  Windows workstation configurations.
26991     +  Discrete sets of values are returned so that user experience
26992     +  will be consitent with similar sized data sets.
26994     +  These macro variables are set:
26995     +  _exploreobs_max -- maximum number of obs downloadable
26996     +  _exploreobs_def -- default number of obs to be downloaded
26997     +  _exploreobs_recl - record length.  Might be useful for reporting.
26999     +  Use the _exploreobs_max to set limit the GUI selection of
27000     +  observations for downloading.  The GUI selection for obs
27001     +  could be reduced to "Default" and "Max".
27003     +  Parameters
27004     +  data=   libname.memname of input data
27005     +  vars=   subset list of variables.
27006     +          downloading 1 out of 500 really does work like downloading
27007     +          1 out of 1 vars.  Users may select a subset of vars for
27008     +                   visualizations.  Pass in the list as space delimited
27009     +          var names.  If vars is not specified, the record length
27010     +          of the entire data will be used.
27011     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
27013     +  Control
27014     +  Users may control the values by entering these macro variables.
27015     +            EM_EXPLOREOBS_MAX
27016     +            EM_EXPLOREOBS_DEFAULT
27017     +  These values override the computed values.
27019     +  Debugging
27020     +  %let _exploreobs_debug=1 ;
27021     +--------------------------------------------------------------------
27022     +  HISTORY: 20APR2004. sasdhd. pushed.
27023     +           18DEC2004. sasdhd. S0280556.
27024     +           07SEP2007. sasdhd. HK1009586
27025     +--------------------------------------------------------------------*/
27027     +%macro exploreobs(data=,vars=, nbytes=) ;
27029     +   /*--- variable definitions ---*/
27030     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
27031     +   %local xobs xvars xlen vlen xi vname vlist ;
27032     +   %local _exp_source _exp_notes ;
27034     +   /*--- USER definitions ---*/
27035     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
27037     +   /*--- variable intializations ---*/
27038     +   %let _exploreobs_max=0 ;
27039     +   %let _exploreobs_def=0 ;
27040     +   %let _exploreobs_recl=0 ;
27041     +   %let xvars= 0 ;
27042     +   %let xlen = 0 ;
27043     +   %let xobs = 0 ;
27045     +   /*--- data error checks ---*/
27046     +   %if "&data" eq "" %then %do ;
27047     +            %put NOTE: DATA is not specified. ;
27048     +            %goto term ;
27049     +      %end ;
27051     +   %let dsid=%sysfunc(open(&data)) ;
27052     +   %if not &dsid %then %do ;
27053     +            %put NOTE: DATA &data is not available. ;
27054     +            %goto term ;
27055     +      %end ;
27057     +   /*--- if a vars list exists generate a subset ---*/
27058     +   %if &vars ne %then %do ;
27059     +         %let dsid=%sysfunc(close(&dsid)) ;
27060     +         %if &_exploreobs_debug ne 1 %then %do ;
27061     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
27062     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
27063     +                  options nosource nonotes ;
27064     +         %end ;
27065     +         data _exploreobs_temp_data ;
27066     +         set &data(obs=0) ;
27067     +          keep &vars ;
27068     +         run;
27069     +         %if &_exploreobs_debug ne 1 %then %do ;
27070     +                  options &_exp_source &_exp_notes ;
27071     +         %end ;
27072     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
27073     +         %if &dsid eq 0 %then %do ;
27074     +                  %put NOTE: Sample is not available.;
27075     +                  %goto term ;
27076     +            %end ;
27077     +      %end ;
27079     +   /*--- get var attributes ---*/
27080     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
27081     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
27082     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
27083     +   %let dsid= %sysfunc(close(&dsid)) ;
27085     +   /*--- set default and max obs ---*/
27086     +   %let _exploreobs_recl=%eval(&xlen) ;
27087     +   %if &_exploreobs_recl eq 0 %then %do ;
27088     +             %let _exploreobs_max= 0 ;
27089     +             %let _exploreobs_def= 0 ;
27090     +             %goto term ;
27092     +   %end ;
27093     +   %else
27094     +   %if &_exploreobs_recl le 32 %then %do ;
27095     +             %let _exploreobs_max=100000 ;
27096     +             %let _exploreobs_def= 10000 ;
27097     +   %end ;
27098     +   %else
27099     +   %if &_exploreobs_recl le 128 %then %do ;
27100     +             %let _exploreobs_max=60000 ;
27101     +             %let _exploreobs_def= 6000 ;
27102     +   %end ;
27103     +   %else
27104     +   %if &_exploreobs_recl lt 1000 %then %do ;
27105     +             %let _exploreobs_max=20000 ;
27106     +             %let _exploreobs_def= 2000 ;
27107     +   %end ;
27108     +   %else
27109     +   %if &_exploreobs_recl lt 5000 %then %do ;
27110     +             %let _exploreobs_max= 10000 ;
27111     +             %let _exploreobs_def=  1000 ;
27112     +   %end ;
27113     +   %else
27114     +   %if &_exploreobs_recl lt 20000 %then %do ;
27115     +             %let _exploreobs_max= 5000 ;
27116     +             %let _exploreobs_def=  500 ;
27117     +   %end ;
27118     +   %else %do ;
27119     +             %let _exploreobs_max= 1000 ;
27120     +             %let _exploreobs_def=  200 ;
27121     +   %end ;
27123     +   /*--- Users options ---*/
27124     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
27125     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
27126     +   %end;
27127     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27128     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
27129     +   %end;
27131     +    /*--- S0868273 ---*/
27132     +    %if "&NBYTES" ne "" %then %do;
27133     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
27134     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
27135     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
27136     +       %end;
27138     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27139     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
27140     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
27141     +          %if ^&_exploreobs_def %then
27142     +              %let _exploreobs_def = 1;
27144     +       %end;
27145     +    %end;
27147     +   /*--- Terminate ---*/
27148     +   %term:
27150     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
27151     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
