MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.27 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                18.27 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0C3QYQK "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0C3QYQK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.27 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.27 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
47945      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
47946      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
47947      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

47948      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
47949      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
47950      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
47951      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47952      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
47953      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

47954      title10;
MPRINT(EM_DIAGRAM):   title10;
47955      data WORK.M0QPGCGM;
MPRINT(EM_DIAGRAM):    data WORK.M0QPGCGM;
47956      set WORK.M0QPGCGM;
MPRINT(EM_DIAGRAM):   set WORK.M0QPGCGM;
47957      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
47958      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M0QPGCGM.
NOTE: The data set WORK.M0QPGCGM has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

48023      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
48024      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
48025      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48026      data WORK.M3HB2PE2;
MPRINT(EM_DIAGRAM):   data WORK.M3HB2PE2;
48027      set WORK.M3HB2PE2;
MPRINT(EM_DIAGRAM):   set WORK.M3HB2PE2;
48028      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
48029      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M3HB2PE2.
NOTE: The data set WORK.M3HB2PE2 has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

48030      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
48031      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
48032      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48033      %macro DMDBClass;
48034          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
48035         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
48036      %mend DMDBClass;
48037      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48038      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
48039      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48040      %macro DMDBVar;
48041          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
48042         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
48043         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
48044         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
48045      %mend DMDBVar;
48046      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48047      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
48048      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48049      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
48050      dmdbcat=WORK.EM_DMDB
48051      classout=WORK.Transclassout
48052      maxlevel = 513
48053      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
48054      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
48055      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases 
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
48056      target
48057      DepVar
48058      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
48059      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3392   Memory used = 511K.
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
48060      quit;
48061      *--- end code ---*;

48062      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
48063      set WORK.M0QPGCGM;
MPRINT(EM_DIAGRAM):   set WORK.M0QPGCGM;
48064      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
48065      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M0QPGCGM.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

48066      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48067      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
48068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48069      data WORK.M0ZMGM8A;
MPRINT(EM_DIAGRAM):   data WORK.M0ZMGM8A;
48070      set WORK.M0ZMGM8A;
MPRINT(EM_DIAGRAM):   set WORK.M0ZMGM8A;
48071      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
48072      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M0ZMGM8A.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M0ZMGM8A has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

48075      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
48076     +/*------------------------------------------------------------------
48077     +  MACRO EXPLOREOBS
48079     +  SUPPORT:  SASDHD - David Duling
48080     +  PRODUCT:  Enterprise Miner
48082     +  DESCRIPTION:
48083     +  Generates maximum and default numbers of observations to
48084     +  download for visualization depending on the record length.
48086     +  Values were determined by trial and error using typical
48087     +  Windows workstation configurations.
48089     +  Discrete sets of values are returned so that user experience
48090     +  will be consitent with similar sized data sets.
48092     +  These macro variables are set:
48093     +  _exploreobs_max -- maximum number of obs downloadable
48094     +  _exploreobs_def -- default number of obs to be downloaded
48095     +  _exploreobs_recl - record length.  Might be useful for reporting.
48097     +  Use the _exploreobs_max to set limit the GUI selection of
48098     +  observations for downloading.  The GUI selection for obs
48099     +  could be reduced to "Default" and "Max".
48101     +  Parameters
48102     +  data=   libname.memname of input data
48103     +  vars=   subset list of variables.
48104     +          downloading 1 out of 500 really does work like downloading
48105     +          1 out of 1 vars.  Users may select a subset of vars for
48106     +                   visualizations.  Pass in the list as space delimited
48107     +          var names.  If vars is not specified, the record length
48108     +          of the entire data will be used.
48109     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
48111     +  Control
48112     +  Users may control the values by entering these macro variables.
48113     +            EM_EXPLOREOBS_MAX
48114     +            EM_EXPLOREOBS_DEFAULT
48115     +  These values override the computed values.
48117     +  Debugging
48118     +  %let _exploreobs_debug=1 ;
48119     +--------------------------------------------------------------------
48120     +  HISTORY: 20APR2004. sasdhd. pushed.
48121     +           18DEC2004. sasdhd. S0280556.
48122     +           07SEP2007. sasdhd. HK1009586
48123     +--------------------------------------------------------------------*/
48125     +%macro exploreobs(data=,vars=, nbytes=) ;
48127     +   /*--- variable definitions ---*/
48128     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
48129     +   %local xobs xvars xlen vlen xi vname vlist ;
48130     +   %local _exp_source _exp_notes ;
48132     +   /*--- USER definitions ---*/
48133     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
48135     +   /*--- variable intializations ---*/
48136     +   %let _exploreobs_max=0 ;
48137     +   %let _exploreobs_def=0 ;
48138     +   %let _exploreobs_recl=0 ;
48139     +   %let xvars= 0 ;
48140     +   %let xlen = 0 ;
48141     +   %let xobs = 0 ;
48143     +   /*--- data error checks ---*/
48144     +   %if "&data" eq "" %then %do ;
48145     +            %put NOTE: DATA is not specified. ;
48146     +            %goto term ;
48147     +      %end ;
48149     +   %let dsid=%sysfunc(open(&data)) ;
48150     +   %if not &dsid %then %do ;
48151     +            %put NOTE: DATA &data is not available. ;
48152     +            %goto term ;
48153     +      %end ;
48155     +   /*--- if a vars list exists generate a subset ---*/
48156     +   %if &vars ne %then %do ;
48157     +         %let dsid=%sysfunc(close(&dsid)) ;
48158     +         %if &_exploreobs_debug ne 1 %then %do ;
48159     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
48160     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
48161     +                  options nosource nonotes ;
48162     +         %end ;
48163     +         data _exploreobs_temp_data ;
48164     +         set &data(obs=0) ;
48165     +          keep &vars ;
48166     +         run;
48167     +         %if &_exploreobs_debug ne 1 %then %do ;
48168     +                  options &_exp_source &_exp_notes ;
48169     +         %end ;
48170     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
48171     +         %if &dsid eq 0 %then %do ;
48172     +                  %put NOTE: Sample is not available.;
48173     +                  %goto term ;
48174     +            %end ;
48175     +      %end ;
48177     +   /*--- get var attributes ---*/
48178     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
48179     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
48180     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
48181     +   %let dsid= %sysfunc(close(&dsid)) ;
48183     +   /*--- set default and max obs ---*/
48184     +   %let _exploreobs_recl=%eval(&xlen) ;
48185     +   %if &_exploreobs_recl eq 0 %then %do ;
48186     +             %let _exploreobs_max= 0 ;
48187     +             %let _exploreobs_def= 0 ;
48188     +             %goto term ;
48190     +   %end ;
48191     +   %else
48192     +   %if &_exploreobs_recl le 32 %then %do ;
48193     +             %let _exploreobs_max=100000 ;
48194     +             %let _exploreobs_def= 10000 ;
48195     +   %end ;
48196     +   %else
48197     +   %if &_exploreobs_recl le 128 %then %do ;
48198     +             %let _exploreobs_max=60000 ;
48199     +             %let _exploreobs_def= 6000 ;
48200     +   %end ;
48201     +   %else
48202     +   %if &_exploreobs_recl lt 1000 %then %do ;
48203     +             %let _exploreobs_max=20000 ;
48204     +             %let _exploreobs_def= 2000 ;
48205     +   %end ;
48206     +   %else
48207     +   %if &_exploreobs_recl lt 5000 %then %do ;
48208     +             %let _exploreobs_max= 10000 ;
48209     +             %let _exploreobs_def=  1000 ;
48210     +   %end ;
48211     +   %else
48212     +   %if &_exploreobs_recl lt 20000 %then %do ;
48213     +             %let _exploreobs_max= 5000 ;
48214     +             %let _exploreobs_def=  500 ;
48215     +   %end ;
48216     +   %else %do ;
48217     +             %let _exploreobs_max= 1000 ;
48218     +             %let _exploreobs_def=  200 ;
48219     +   %end ;
48221     +   /*--- Users options ---*/
48222     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
48223     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
48224     +   %end;
48225     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
48226     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
48227     +   %end;
48229     +    /*--- S0868273 ---*/
48230     +    %if "&NBYTES" ne "" %then %do;
48231     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
48232     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
48233     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
48234     +       %end;
48236     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
48237     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
48238     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
48239     +          %if ^&_exploreobs_def %then
48240     +              %let _exploreobs_def = 1;
48242     +       %end;
48243     +    %end;
48245     +   /*--- Terminate ---*/
48246     +   %term:
48248     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
48249     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
