MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.21 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                17.21 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WLXAAB "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WLXAAB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.21 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.21 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
41901      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
41902      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
41903      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

41904      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
41905      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
41906      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
41907      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
41908      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
41909      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

41910      title10;
MPRINT(EM_DIAGRAM):   title10;
41911      data WORK.M3VGPZHQ;
MPRINT(EM_DIAGRAM):    data WORK.M3VGPZHQ;
41912      set WORK.M3VGPZHQ;
MPRINT(EM_DIAGRAM):   set WORK.M3VGPZHQ;
41913      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
41914      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M3VGPZHQ.
NOTE: The data set WORK.M3VGPZHQ has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

41979      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
41980      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
41981      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41982      data WORK.M0PFL_HF;
MPRINT(EM_DIAGRAM):   data WORK.M0PFL_HF;
41983      set WORK.M0PFL_HF;
MPRINT(EM_DIAGRAM):   set WORK.M0PFL_HF;
41984      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
41985      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M0PFL_HF.
NOTE: The data set WORK.M0PFL_HF has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

41986      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
41987      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
41988      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41989      %macro DMDBClass;
41990          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
41991         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
41992      %mend DMDBClass;
41993      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41994      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
41995      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41996      %macro DMDBVar;
41997          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
41998         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
41999         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
42000         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
42001      %mend DMDBVar;
42002      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42003      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
42004      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42005      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
42006      dmdbcat=WORK.EM_DMDB
42007      classout=WORK.Transclassout
42008      maxlevel = 513
42009      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
42010      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
42011      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases 
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
42012      target
42013      DepVar
42014      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
42015      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3392   Memory used = 511K.
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
42016      quit;
42017      *--- end code ---*;

42018      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
42019      set WORK.M3VGPZHQ;
MPRINT(EM_DIAGRAM):   set WORK.M3VGPZHQ;
42020      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
42021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M3VGPZHQ.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

42022      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42023      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
42024      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42025      data WORK.M2WV8OIH;
MPRINT(EM_DIAGRAM):   data WORK.M2WV8OIH;
42026      set WORK.M2WV8OIH;
MPRINT(EM_DIAGRAM):   set WORK.M2WV8OIH;
42027      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
42028      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M2WV8OIH.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M2WV8OIH has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

42031      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
42032     +/*------------------------------------------------------------------
42033     +  MACRO EXPLOREOBS
42035     +  SUPPORT:  SASDHD - David Duling
42036     +  PRODUCT:  Enterprise Miner
42038     +  DESCRIPTION:
42039     +  Generates maximum and default numbers of observations to
42040     +  download for visualization depending on the record length.
42042     +  Values were determined by trial and error using typical
42043     +  Windows workstation configurations.
42045     +  Discrete sets of values are returned so that user experience
42046     +  will be consitent with similar sized data sets.
42048     +  These macro variables are set:
42049     +  _exploreobs_max -- maximum number of obs downloadable
42050     +  _exploreobs_def -- default number of obs to be downloaded
42051     +  _exploreobs_recl - record length.  Might be useful for reporting.
42053     +  Use the _exploreobs_max to set limit the GUI selection of
42054     +  observations for downloading.  The GUI selection for obs
42055     +  could be reduced to "Default" and "Max".
42057     +  Parameters
42058     +  data=   libname.memname of input data
42059     +  vars=   subset list of variables.
42060     +          downloading 1 out of 500 really does work like downloading
42061     +          1 out of 1 vars.  Users may select a subset of vars for
42062     +                   visualizations.  Pass in the list as space delimited
42063     +          var names.  If vars is not specified, the record length
42064     +          of the entire data will be used.
42065     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
42067     +  Control
42068     +  Users may control the values by entering these macro variables.
42069     +            EM_EXPLOREOBS_MAX
42070     +            EM_EXPLOREOBS_DEFAULT
42071     +  These values override the computed values.
42073     +  Debugging
42074     +  %let _exploreobs_debug=1 ;
42075     +--------------------------------------------------------------------
42076     +  HISTORY: 20APR2004. sasdhd. pushed.
42077     +           18DEC2004. sasdhd. S0280556.
42078     +           07SEP2007. sasdhd. HK1009586
42079     +--------------------------------------------------------------------*/
42081     +%macro exploreobs(data=,vars=, nbytes=) ;
42083     +   /*--- variable definitions ---*/
42084     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
42085     +   %local xobs xvars xlen vlen xi vname vlist ;
42086     +   %local _exp_source _exp_notes ;
42088     +   /*--- USER definitions ---*/
42089     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
42091     +   /*--- variable intializations ---*/
42092     +   %let _exploreobs_max=0 ;
42093     +   %let _exploreobs_def=0 ;
42094     +   %let _exploreobs_recl=0 ;
42095     +   %let xvars= 0 ;
42096     +   %let xlen = 0 ;
42097     +   %let xobs = 0 ;
42099     +   /*--- data error checks ---*/
42100     +   %if "&data" eq "" %then %do ;
42101     +            %put NOTE: DATA is not specified. ;
42102     +            %goto term ;
42103     +      %end ;
42105     +   %let dsid=%sysfunc(open(&data)) ;
42106     +   %if not &dsid %then %do ;
42107     +            %put NOTE: DATA &data is not available. ;
42108     +            %goto term ;
42109     +      %end ;
42111     +   /*--- if a vars list exists generate a subset ---*/
42112     +   %if &vars ne %then %do ;
42113     +         %let dsid=%sysfunc(close(&dsid)) ;
42114     +         %if &_exploreobs_debug ne 1 %then %do ;
42115     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
42116     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
42117     +                  options nosource nonotes ;
42118     +         %end ;
42119     +         data _exploreobs_temp_data ;
42120     +         set &data(obs=0) ;
42121     +          keep &vars ;
42122     +         run;
42123     +         %if &_exploreobs_debug ne 1 %then %do ;
42124     +                  options &_exp_source &_exp_notes ;
42125     +         %end ;
42126     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
42127     +         %if &dsid eq 0 %then %do ;
42128     +                  %put NOTE: Sample is not available.;
42129     +                  %goto term ;
42130     +            %end ;
42131     +      %end ;
42133     +   /*--- get var attributes ---*/
42134     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
42135     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
42136     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
42137     +   %let dsid= %sysfunc(close(&dsid)) ;
42139     +   /*--- set default and max obs ---*/
42140     +   %let _exploreobs_recl=%eval(&xlen) ;
42141     +   %if &_exploreobs_recl eq 0 %then %do ;
42142     +             %let _exploreobs_max= 0 ;
42143     +             %let _exploreobs_def= 0 ;
42144     +             %goto term ;
42146     +   %end ;
42147     +   %else
42148     +   %if &_exploreobs_recl le 32 %then %do ;
42149     +             %let _exploreobs_max=100000 ;
42150     +             %let _exploreobs_def= 10000 ;
42151     +   %end ;
42152     +   %else
42153     +   %if &_exploreobs_recl le 128 %then %do ;
42154     +             %let _exploreobs_max=60000 ;
42155     +             %let _exploreobs_def= 6000 ;
42156     +   %end ;
42157     +   %else
42158     +   %if &_exploreobs_recl lt 1000 %then %do ;
42159     +             %let _exploreobs_max=20000 ;
42160     +             %let _exploreobs_def= 2000 ;
42161     +   %end ;
42162     +   %else
42163     +   %if &_exploreobs_recl lt 5000 %then %do ;
42164     +             %let _exploreobs_max= 10000 ;
42165     +             %let _exploreobs_def=  1000 ;
42166     +   %end ;
42167     +   %else
42168     +   %if &_exploreobs_recl lt 20000 %then %do ;
42169     +             %let _exploreobs_max= 5000 ;
42170     +             %let _exploreobs_def=  500 ;
42171     +   %end ;
42172     +   %else %do ;
42173     +             %let _exploreobs_max= 1000 ;
42174     +             %let _exploreobs_def=  200 ;
42175     +   %end ;
42177     +   /*--- Users options ---*/
42178     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
42179     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
42180     +   %end;
42181     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
42182     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
42183     +   %end;
42185     +    /*--- S0868273 ---*/
42186     +    %if "&NBYTES" ne "" %then %do;
42187     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
42188     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
42189     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
42190     +       %end;
42192     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
42193     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
42194     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
42195     +          %if ^&_exploreobs_def %then
42196     +              %let _exploreobs_def = 1;
42198     +       %end;
42199     +    %end;
42201     +   /*--- Terminate ---*/
42202     +   %term:
42204     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
42205     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
