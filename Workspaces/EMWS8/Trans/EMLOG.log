*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                16.22 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                16.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3E03WIB "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3E03WIB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.22 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.22 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
47945      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
47946      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
47947      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
47948      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
47949      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
47950      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
47951      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
47952      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
47953      run;
 
NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
47954      title10;
MPRINT(EM_DIAGRAM):   title10;
47955      data WORK.M3CJJNQ_;
MPRINT(EM_DIAGRAM):    data WORK.M3CJJNQ_;
47956      set WORK.M3CJJNQ_;
MPRINT(EM_DIAGRAM):   set WORK.M3CJJNQ_;
47957      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
47958      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M3CJJNQ_.
NOTE: The data set WORK.M3CJJNQ_ has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48023      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
48024      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
48025      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48026      data WORK.M328CCZ2;
MPRINT(EM_DIAGRAM):   data WORK.M328CCZ2;
48027      set WORK.M328CCZ2;
MPRINT(EM_DIAGRAM):   set WORK.M328CCZ2;
48028      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
48029      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M328CCZ2.
NOTE: The data set WORK.M328CCZ2 has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48030      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
48031      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
48032      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48033      %macro DMDBClass;
48034          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
48035         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
48036      %mend DMDBClass;
48037      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48038      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
48039      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
48040      %macro DMDBVar;
48041          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
48042         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
48043         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
48044         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
48045      %mend DMDBVar;
48046      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48047      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
48048      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48049      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
48050      dmdbcat=WORK.EM_DMDB
48051      classout=WORK.Transclassout
48052      maxlevel = 513
48053      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
48054      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
48055      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
48056      target
48057      DepVar
48058      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
48059      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3392   Memory used = 511K.
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
48060      quit;
48061      *--- end code ---*;
 
48062      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
48063      set WORK.M3CJJNQ_;
MPRINT(EM_DIAGRAM):   set WORK.M3CJJNQ_;
48064      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
48065      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M3CJJNQ_.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48066      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48067      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
48068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48069      data WORK.M0XITWS7;
MPRINT(EM_DIAGRAM):   data WORK.M0XITWS7;
48070      set WORK.M0XITWS7;
MPRINT(EM_DIAGRAM):   set WORK.M0XITWS7;
48071      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
48072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M0XITWS7.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M0XITWS7 has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48075      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
48076     +/*------------------------------------------------------------------
48077     +  MACRO EXPLOREOBS
48079     +  SUPPORT:  SASDHD - David Duling
48080     +  PRODUCT:  Enterprise Miner
48082     +  DESCRIPTION:
48083     +  Generates maximum and default numbers of observations to
48084     +  download for visualization depending on the record length.
48086     +  Values were determined by trial and error using typical
48087     +  Windows workstation configurations.
48089     +  Discrete sets of values are returned so that user experience
48090     +  will be consitent with similar sized data sets.
48092     +  These macro variables are set:
48093     +  _exploreobs_max -- maximum number of obs downloadable
48094     +  _exploreobs_def -- default number of obs to be downloaded
48095     +  _exploreobs_recl - record length.  Might be useful for reporting.
48097     +  Use the _exploreobs_max to set limit the GUI selection of
48098     +  observations for downloading.  The GUI selection for obs
48099     +  could be reduced to "Default" and "Max".
48101     +  Parameters
48102     +  data=   libname.memname of input data
48103     +  vars=   subset list of variables.
48104     +          downloading 1 out of 500 really does work like downloading
48105     +          1 out of 1 vars.  Users may select a subset of vars for
48106     +                   visualizations.  Pass in the list as space delimited
48107     +          var names.  If vars is not specified, the record length
48108     +          of the entire data will be used.
48109     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
48111     +  Control
48112     +  Users may control the values by entering these macro variables.
48113     +            EM_EXPLOREOBS_MAX
48114     +            EM_EXPLOREOBS_DEFAULT
48115     +  These values override the computed values.
48117     +  Debugging
48118     +  %let _exploreobs_debug=1 ;
48119     +--------------------------------------------------------------------
48120     +  HISTORY: 20APR2004. sasdhd. pushed.
48121     +           18DEC2004. sasdhd. S0280556.
48122     +           07SEP2007. sasdhd. HK1009586
48123     +--------------------------------------------------------------------*/
48125     +%macro exploreobs(data=,vars=, nbytes=) ;
48127     +   /*--- variable definitions ---*/
48128     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
48129     +   %local xobs xvars xlen vlen xi vname vlist ;
48130     +   %local _exp_source _exp_notes ;
48132     +   /*--- USER definitions ---*/
48133     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
48135     +   /*--- variable intializations ---*/
48136     +   %let _exploreobs_max=0 ;
48137     +   %let _exploreobs_def=0 ;
48138     +   %let _exploreobs_recl=0 ;
48139     +   %let xvars= 0 ;
48140     +   %let xlen = 0 ;
48141     +   %let xobs = 0 ;
48143     +   /*--- data error checks ---*/
48144     +   %if "&data" eq "" %then %do ;
48145     +            %put NOTE: DATA is not specified. ;
48146     +            %goto term ;
48147     +      %end ;
48149     +   %let dsid=%sysfunc(open(&data)) ;
48150     +   %if not &dsid %then %do ;
48151     +            %put NOTE: DATA &data is not available. ;
48152     +            %goto term ;
48153     +      %end ;
48155     +   /*--- if a vars list exists generate a subset ---*/
48156     +   %if &vars ne %then %do ;
48157     +         %let dsid=%sysfunc(close(&dsid)) ;
48158     +         %if &_exploreobs_debug ne 1 %then %do ;
48159     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
48160     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
48161     +                  options nosource nonotes ;
48162     +         %end ;
48163     +         data _exploreobs_temp_data ;
48164     +         set &data(obs=0) ;
48165     +          keep &vars ;
48166     +         run;
48167     +         %if &_exploreobs_debug ne 1 %then %do ;
48168     +                  options &_exp_source &_exp_notes ;
48169     +         %end ;
48170     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
48171     +         %if &dsid eq 0 %then %do ;
48172     +                  %put NOTE: Sample is not available.;
48173     +                  %goto term ;
48174     +            %end ;
48175     +      %end ;
48177     +   /*--- get var attributes ---*/
48178     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
48179     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
48180     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
48181     +   %let dsid= %sysfunc(close(&dsid)) ;
48183     +   /*--- set default and max obs ---*/
48184     +   %let _exploreobs_recl=%eval(&xlen) ;
48185     +   %if &_exploreobs_recl eq 0 %then %do ;
48186     +             %let _exploreobs_max= 0 ;
48187     +             %let _exploreobs_def= 0 ;
48188     +             %goto term ;
48190     +   %end ;
48191     +   %else
48192     +   %if &_exploreobs_recl le 32 %then %do ;
48193     +             %let _exploreobs_max=100000 ;
48194     +             %let _exploreobs_def= 10000 ;
48195     +   %end ;
48196     +   %else
48197     +   %if &_exploreobs_recl le 128 %then %do ;
48198     +             %let _exploreobs_max=60000 ;
48199     +             %let _exploreobs_def= 6000 ;
48200     +   %end ;
48201     +   %else
48202     +   %if &_exploreobs_recl lt 1000 %then %do ;
48203     +             %let _exploreobs_max=20000 ;
48204     +             %let _exploreobs_def= 2000 ;
48205     +   %end ;
48206     +   %else
48207     +   %if &_exploreobs_recl lt 5000 %then %do ;
48208     +             %let _exploreobs_max= 10000 ;
48209     +             %let _exploreobs_def=  1000 ;
48210     +   %end ;
48211     +   %else
48212     +   %if &_exploreobs_recl lt 20000 %then %do ;
48213     +             %let _exploreobs_max= 5000 ;
48214     +             %let _exploreobs_def=  500 ;
48215     +   %end ;
48216     +   %else %do ;
48217     +             %let _exploreobs_max= 1000 ;
48218     +             %let _exploreobs_def=  200 ;
48219     +   %end ;
48221     +   /*--- Users options ---*/
48222     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
48223     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
48224     +   %end;
48225     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
48226     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
48227     +   %end;
48229     +    /*--- S0868273 ---*/
48230     +    %if "&NBYTES" ne "" %then %do;
48231     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
48232     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
48233     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
48234     +       %end;
48236     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
48237     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
48238     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
48239     +          %if ^&_exploreobs_def %then
48240     +              %let _exploreobs_def = 1;
48242     +       %end;
48243     +    %end;
48245     +   /*--- Terminate ---*/
48246     +   %term:
48248     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
48249     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;
 
NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O28L6VJ5 "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O28L6VJ5 new;
MPRINT(EM_DIAGRAM):   run;
48353      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
48354      MonthsAsCustomer = int((today()-Dt_Customer)/12);
MPRINT(EM_DIAGRAM):   MonthsAsCustomer = int((today()-Dt_Customer)/12);
48355      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT1.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
48356      quit;
 
48357      data WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT1;
48358      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
48359      retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
48360      set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
48361      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK._CODEINPUT1 has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48362      proc sort data=WORK._CODEINPUT1 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT1 NODUPKEY;
48363      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
48364      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT1 has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48365      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
48366      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT1 to WORK.TRANS_FORMULAVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK.TRANS_FORMULAVARS has 1 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48367      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
48368      HigherEducationBinary = HigherEducation;
MPRINT(EM_DIAGRAM):   HigherEducationBinary = HigherEducation;
48369      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT2.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
48370      quit;
 
48371      data WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT2;
48372      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
48373      retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "BINARY";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "BINARY";
48374      set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
48375      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48376      proc sort data=WORK._CODEINPUT2 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT2 NODUPKEY;
48377      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
48378      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48379      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
48380      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT2 to WORK.TRANS_FORMULAVARS.
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 1 observations added.
NOTE: The data set WORK.TRANS_FORMULAVARS has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48381      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT3;
48382      NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
MPRINT(EM_DIAGRAM):   NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
48383      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT3.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
48384      quit;
 
48385      data WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT3;
48386      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
48387      retain _FormulaNum 3 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 3 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
48388      set WORK._CODEINPUT3(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT3(keep=RHS rename=(RHS=INPUTNAME));
48389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: The data set WORK._CODEINPUT3 has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48390      proc sort data=WORK._CODEINPUT3 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT3 NODUPKEY;
48391      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
48392      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT3 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48393      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT3;
48394      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT3 to WORK.TRANS_FORMULAVARS.
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: 2 observations added.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48395      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):    data WORK.TRANS_FORMULAVARS;
48396      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
48397      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
48398      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
48399      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48400      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
48401      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48402      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48403      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
48404      set EMWS8.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
48405      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
48406      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
48407      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 33 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48408      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
48409      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48410      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 33 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48411      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS;
48412      merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
48413      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48414      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
48415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48416      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
48417      by _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   by _FormulaNum UNAME;
48418      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48419      data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
48420      length ROLE $32 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 REPORT $1;
48421      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
48422      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
48423      if INPUTROLE = 'TARGET' then output _target;
MPRINT(EM_DIAGRAM):   if INPUTROLE = 'TARGET' then output _target;
48424      if first._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if first._FormulaNum then do;
48425      if ^last._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if ^last._FormulaNum then do;
48426      INPUTNAME='';
MPRINT(EM_DIAGRAM):   INPUTNAME='';
48427      INPUTROLE='';
MPRINT(EM_DIAGRAM):   INPUTROLE='';
48428      INPUTTYPE='';
MPRINT(EM_DIAGRAM):   INPUTTYPE='';
48429      INPUTREPORT='';
MPRINT(EM_DIAGRAM):   INPUTREPORT='';
48430      end;
MPRINT(EM_DIAGRAM):   end;
48431      output WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   output WORK.TRANS_FORMULAVARS;
48432      end;
MPRINT(EM_DIAGRAM):   end;
48433      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 3 observations and 10 variables.
NOTE: The data set WORK._TARGET has 0 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48434      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
48435      set EMWS8.Trans_FORMULA;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_FORMULA;
48436      _FormulaNum = _N_;
MPRINT(EM_DIAGRAM):   _FormulaNum = _N_;
48437      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The data set WORK._TEMP has 3 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48438      data WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CODEFORMULA;
48439      length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
MPRINT(EM_DIAGRAM):   length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
48440      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA = "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,  NOQUOTE))" LEVEL =
48441         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,  NOQUOTE))" REPORT = "%sysfunc(sasmsg(sashelp.dmine, meta_report_vlabel,  NOQUOTE))" _targetFlag = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetbased_vlabel,  NOQUOTE))" INPUTNAME =
48442         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputname_vlabel,  NOQUOTE))" INPUTLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputlevel_vlabel,  NOQUOTE))" INPUTROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputrole_vlabel,  NOQUOTE))" INPUTTYPE =
48443         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputtype_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FORMULA = "Formula" ROLE = "Role" LEVEL = "Measurement Level" REPORT = "Report" _targetFlag = "Target Based" INPUTNAME = "Input Name" INPUTLEVEL = "Input Level" INPUTROLE = "Input Role" INPUTTYPE = "Input
Type";
48444      drop _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   drop _FormulaNum UNAME;
48445      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
48446      merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
MPRINT(EM_DIAGRAM):   merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
48447      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
48448      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
48449      if _c then _targetFlag=1;
MPRINT(EM_DIAGRAM):   if _c then _targetFlag=1;
48450      if INPUT ne '' then if _a and ^_b then delete;
MPRINT(EM_DIAGRAM):   if INPUT ne '' then if _a and ^_b then delete;
48451      if ROLE = '' then do;
MPRINT(EM_DIAGRAM):   if ROLE = '' then do;
48452      if INPUTROLE = '' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if INPUTROLE = '' then ROLE='INPUT';
48453      else ROLE = INPUTROLE;
MPRINT(EM_DIAGRAM):   else ROLE = INPUTROLE;
48454      end;
MPRINT(EM_DIAGRAM):   end;
48455      if REPORT = '' then do;
MPRINT(EM_DIAGRAM):   if REPORT = '' then do;
48456      if INPUTREPORT = '' then REPORT='N';
MPRINT(EM_DIAGRAM):   if INPUTREPORT = '' then REPORT='N';
48457      else REPORT = INPUTREPORT;
MPRINT(EM_DIAGRAM):   else REPORT = INPUTREPORT;
48458      end;
MPRINT(EM_DIAGRAM):   end;
48459      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INPUT is uninitialized.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: There were 3 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 0 observations read from the data set WORK._TARGET.
NOTE: The data set WORK.TRANS_CODEFORMULA has 3 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
48460      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas";
48461      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
48462      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
48463      file _code;
MPRINT(EM_DIAGRAM):   file _code;
48464      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
48465      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
48466      end;
MPRINT(EM_DIAGRAM):   end;
48467      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
48468      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
48469      end;
MPRINT(EM_DIAGRAM):   end;
48470      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
48471      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
48472      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
48473      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
48474      end;
MPRINT(EM_DIAGRAM):   end;
48475      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
48476      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
48477      end;
MPRINT(EM_DIAGRAM):   end;
48478      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=20. April 2016 16.22 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 3 records were written to the file _CODE.
      The minimum record length was 40.
      The maximum record length was 57.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48479      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
48480      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas";
48481      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
48482      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
48483      file _code;
MPRINT(EM_DIAGRAM):   file _code;
48484      if _targetFlag eq 0 then do;
MPRINT(EM_DIAGRAM):   if _targetFlag eq 0 then do;
48485      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
48486      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
48487      end;
MPRINT(EM_DIAGRAM):   end;
48488      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
48489      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
48490      end;
MPRINT(EM_DIAGRAM):   end;
48491      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
48492      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
48493      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
48494      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
48495      end;
MPRINT(EM_DIAGRAM):   end;
48496      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
48497      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
48498      end;
MPRINT(EM_DIAGRAM):   end;
48499      end;
MPRINT(EM_DIAGRAM):   end;
48500      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=20. April 2016 16.22 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 3 records were written to the file _CODE.
      The minimum record length was 40.
      The maximum record length was 57.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48501      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
48502      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas";
48503      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
48504      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
48505      file _code;
MPRINT(EM_DIAGRAM):   file _code;
48506      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
48507      if ROLE eq '' then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if ROLE eq '' then ROLE = 'REJECTED';
48508      if REPORT eq '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   if REPORT eq '' then REPORT = 'N';
48509      String = 'if NAME="'!!strip(name)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(name)!!'" then do;';
48510      put / string;
MPRINT(EM_DIAGRAM):   put / string;
48511      String = '   ROLE ="'!!strip(role)!!'";';
MPRINT(EM_DIAGRAM):   String = '   ROLE ="'!!strip(role)!!'";';
48512      put string;
MPRINT(EM_DIAGRAM):   put string;
48513      String = '   REPORT ="'!!strip(report)!!'";';
MPRINT(EM_DIAGRAM):   String = '   REPORT ="'!!strip(report)!!'";';
48514      put string;
MPRINT(EM_DIAGRAM):   put string;
48515      if LEVEL ne '' then do;
MPRINT(EM_DIAGRAM):   if LEVEL ne '' then do;
48516      String = '   LEVEL ="'!!strip(level)!!'";';
MPRINT(EM_DIAGRAM):   String = '   LEVEL ="'!!strip(level)!!'";';
48517      put string;
MPRINT(EM_DIAGRAM):   put string;
48518      end;
MPRINT(EM_DIAGRAM):   end;
48519      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
48520      if INPUTNAME ne '' then do;
MPRINT(EM_DIAGRAM):   if INPUTNAME ne '' then do;
48521      String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
48522      put String;
MPRINT(EM_DIAGRAM):   put String;
48523      end;
MPRINT(EM_DIAGRAM):   end;
48524      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=20. April 2016 16.22 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 20 records were written to the file _CODE.
      The minimum record length was 0.
      The maximum record length was 40.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48525      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
48526      proc print data = EMWS8.Trans_FORMULA(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Trans_FORMULA(obs=500) noobs label;
48527      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_formulatransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Formula Transformations";
48528      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name ROLE LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
48529      var Name ROLE LEVEL FORMULA;
48530      run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48531      title9;
MPRINT(EM_DIAGRAM):   title9;
48532      title10;
MPRINT(EM_DIAGRAM):   title10;
48533      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48534      *------------------------------------------------------------*;
48535      * Trans: Scoring DATA data;
48536      *------------------------------------------------------------*;
48537      data EMWS8.Trans_TRAIN
48538      / view=EMWS8.Trans_TRAIN
48539      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_TRAIN / view=EMWS8.Trans_TRAIN ;
48540      set EMWS8.EMCODE4_TRAIN
48541      ;
MPRINT(EM_DIAGRAM):   set EMWS8.EMCODE4_TRAIN ;
48542      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas.
48543     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48544     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
48545     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48546     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
48547     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
48548     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
48549      run;
 
NOTE: DATA STEP view saved on file EMWS8.TRANS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
48550      quit;
48551      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
48552      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48553      * Trans: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Trans: Computing metadata for TRAIN data;
48554      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\Trans\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Trans_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Trans_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Trans_TRAIN out=WORK.M29SU7HH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29SU7HH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M29SU7HH(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29SU7HH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M29SU7HH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0FNP01E NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PRITIB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FNP01E;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Trans";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="MonthsAsCustomer" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Dt_Customer" then delete;
MPRINT(EM_DIAGRAM):   if NAME="HigherEducationBinary" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="HigherEducation" then delete;
MPRINT(EM_DIAGRAM):   if NAME="NumDistPurchases" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                16.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1XUNOIO "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1XUNOIO new;
MPRINT(EM_DIAGRAM):   run;
48899      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48900      * &msgString;
MPRINT(EM_DIAGRAM):   * &msgString;
48901      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48902      filename _flowref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   filename _flowref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
48903      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
48904      %INCLUDE _flowref;
NOTE: %INCLUDE (level 1) file _FLOWREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas.
48905     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48906     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
48907     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48908     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
48909     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
48910     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
48911      run;
 
NOTE: Dependency structure written to data set WORK.TRANS_SCOREINPUTS.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
48912      quit;
48913      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
48914      set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
48915      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
48916      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
48917      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48918      proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
48919      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48920      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48921      filename _flowref;
MPRINT(EM_DIAGRAM):   filename _flowref;
NOTE: Fileref _FLOWREF has been deassigned.
48922      %let SYSCC = 0;
48923      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48924      * transformcombinevariables;
MPRINT(EM_DIAGRAM):   * transformcombinevariables;
48925      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48926      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
48927      length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
MPRINT(EM_DIAGRAM):   length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
48928      set
48929      EMWS8.Trans_FORMULA
48930      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_FORMULA ;
48931      _MetaFlag=0;
MPRINT(EM_DIAGRAM):   _MetaFlag=0;
48932      uname = upcase(name);
MPRINT(EM_DIAGRAM):   uname = upcase(name);
48933      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable inputName is uninitialized.
NOTE: Variable inputLevel is uninitialized.
NOTE: Variable inputType is uninitialized.
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48934      data _temp;
MPRINT(EM_DIAGRAM):    data _temp;
48935      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
48936      set EMWS8.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
48937      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
48938      where upcase(CREATOR) = upcase("Trans");
MPRINT(EM_DIAGRAM):   where upcase(CREATOR) = upcase("Trans");
48939      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_CMETA_TRAIN.
      WHERE UPCASE(CREATOR)='TRANS';
NOTE: The data set WORK._TEMP has 3 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48940      proc sort data=_temp(drop=CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=_temp(drop=CREATOR);
48941      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48942      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48943      proc sort data=WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.TRANS_OUTPUTVARS;
48944      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48946      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
48947      merge WORK.TRANS_OUTPUTVARS _temp;
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_OUTPUTVARS _temp;
48948      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48949      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48950      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48951      * Trans: Get Metadata for the Score Inputs Variables;
MPRINT(EM_DIAGRAM):   * Trans: Get Metadata for the Score Inputs Variables;
48952      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48953      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
48954      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
48955      set EMWS8.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
48956      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
48957      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
48958      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
48959      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48961      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
48962      merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
48963      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
48964      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
48965      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48966      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48967      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
48968      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48969      proc dmdb data=EMWS8.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS8.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
48970      class
48971      HigherEducationBinary
48972      ;
MPRINT(EM_DIAGRAM):   class HigherEducationBinary ;
48973      var
48974      Dt_Customer
48975      HigherEducation
48976      NumCatalogPurchases
48977      NumWebPurchases
48978      MonthsAsCustomer
48979      NumDistPurchases
48980      ;
MPRINT(EM_DIAGRAM):   var Dt_Customer HigherEducation NumCatalogPurchases NumWebPurchases MonthsAsCustomer NumDistPurchases ;
48981      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3392   Memory used = 511K.
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: There were 3392 observations read from the data set EMWS8.TRANS_TRAIN.
NOTE: The data set WORK.TRANS_CLASSSTATS has 2 observations and 9 variables.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
48982      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
48983      * Trans: Combine Information and Statistics for Class Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Class Variables;
48984      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
48985      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
48986      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
48987      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48988      proc sort data=WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_CLASSSTATS;
48989      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
48990      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
48991      data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
48992      retain nlevel nmiss;
MPRINT(EM_DIAGRAM):   retain nlevel nmiss;
48993      set WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS;
48994      by Name;
MPRINT(EM_DIAGRAM):   by Name;
48995      if first.Name then do;
MPRINT(EM_DIAGRAM):   if first.Name then do;
48996      nlevel= 0;
MPRINT(EM_DIAGRAM):   nlevel= 0;
48997      nmiss= 0;
MPRINT(EM_DIAGRAM):   nmiss= 0;
48998      end;
MPRINT(EM_DIAGRAM):   end;
48999      if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
MPRINT(EM_DIAGRAM):   if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
49000      else nlevel + 1;
MPRINT(EM_DIAGRAM):   else nlevel + 1;
49001      if last.name then output;
MPRINT(EM_DIAGRAM):   if last.name then output;
49002      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49003      /*Merge Statistics for Class Output Vars */
49004      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
49005      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
49006      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
49007      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49008      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
49009      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
49010      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
49011      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
49012      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
49013      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
49014      if Formula = '' then Formula = "User Code";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "User Code";
49015      end;
MPRINT(EM_DIAGRAM):   end;
49016      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
49017      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
49018      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49019      /*Merge Statistics for Class Input Vars */
49020      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
49021      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49022      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
49023      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
49024      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
49025      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49026      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
49027      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
49028      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
49029      end;
MPRINT(EM_DIAGRAM):   end;
49030      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
49031      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49032      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
49033      * Trans: Combine Information and Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Interval Variables;
49034      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49035      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
49036      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49037      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49038      proc sort data=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_VARSTATS;
49039      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49040      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Output Vars;
49041      *Merge Statistics for Output Vars;
49042      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
49043      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
49044      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
49045      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49046      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
49047      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
49048      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
49049      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
49050      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
49051      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
49052      if Formula = '' then Formula = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "Mixture of variables";
49053      end;
MPRINT(EM_DIAGRAM):   end;
49054      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
49055      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
49056      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Input Vars;
49057      *Merge Statistics for Input Vars;
49058      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
49059      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49060      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
49061      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
49062      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
49063      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
49064      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
49065      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
49066      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
49067      end;
MPRINT(EM_DIAGRAM):   end;
49068      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
49069      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49070      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
49071      * Trans: Combine statistics for class and interval variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine statistics for class and interval variables;
49072      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
49073      data EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_STATISTICS;
49074      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
49075      label SOURCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_source_vlabel,  NOQUOTE))" _METHOD_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_method_vlabel,  NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA =
49076         "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,   NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel, NOQUOTE))" NMISS =
49077         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
49078         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
49079         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" _METHOD_ = "Method" NAME = "Variable Name" FORMULA = "Formula" NLEVEL = "Number of Levels" N = "Non Missing" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS
= "Skewness" KURTOSIS = "Kurtosis" LABEL = "Label";
49080      set
49081      WORK.TRANS_CLASSSTATS
49082      WORK.TRANS_VARSTATS
49083      ;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS WORK.TRANS_VARSTATS ;
49084      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
49085      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
49086      proc sort data=EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_STATISTICS;
49087      by SOURCE _METHOD_ NAME;
MPRINT(EM_DIAGRAM):   by SOURCE _METHOD_ NAME;
49088      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.TRANS_STATISTICS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49089      proc sort data = EMWS8.Trans_STATISTICS NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Trans_STATISTICS NOTHREADS;
49090      by SOURCE NAME;
MPRINT(EM_DIAGRAM):   by SOURCE NAME;
49091      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.TRANS_STATISTICS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49092      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
49093      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
49094      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Interval Variables";
49095      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
49096      var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
49097      where SOURCE eq 'INPUT' and mean ne .;
49098      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49099      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
49100      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervaloutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Interval Variables";
49101      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
49102      var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
49103      where SOURCE eq 'OUTPUT' and mean ne .;
49104      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
49105      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
49106      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Class Variables";
49107      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
49108      var Name NLEVEL NMISS;
49109      where SOURCE eq 'INPUT' and nlevel ne .;
49110      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49111      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
49112      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classoutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Class Variables";
49113      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
49114      var Name _METHOD_ NLEVEL NMISS;
49115      where SOURCE eq 'OUTPUT' and nlevel ne .;
49116      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
49117      title9;
MPRINT(EM_DIAGRAM):   title9;
49118      title10;
MPRINT(EM_DIAGRAM):   title10;
49119      data EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS8.Trans_EMSCOREVAR;
49120      length Name $32 formula $300 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $300 file $200;
49121      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
49122      set EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_STATISTICS;
49123      where SOURCE='Output';
MPRINT(EM_DIAGRAM):   where SOURCE='Output';
49124      select( _METHOD_);
MPRINT(EM_DIAGRAM):   select( _METHOD_);
49125      when('Computed') do;
MPRINT(EM_DIAGRAM):   when('Computed') do;
49126      file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
49127      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
49128      end;
MPRINT(EM_DIAGRAM):   end;
49129      when('Formula') do;
MPRINT(EM_DIAGRAM):   when('Formula') do;
49130      if Formula eq 'Mixture of variables' then do;
MPRINT(EM_DIAGRAM):   if Formula eq 'Mixture of variables' then do;
49131      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
49132      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
49133      end;
MPRINT(EM_DIAGRAM):   end;
49134      if Formula = 'User Code' then do;
MPRINT(EM_DIAGRAM):   if Formula = 'User Code' then do;
49135      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
49136      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
49137      end;
MPRINT(EM_DIAGRAM):   end;
49138      end;
MPRINT(EM_DIAGRAM):   end;
49139      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
49140      end;
MPRINT(EM_DIAGRAM):   end;
49141      output;
MPRINT(EM_DIAGRAM):   output;
49142      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE SOURCE='Output';
NOTE: The data set EMWS8.TRANS_EMSCOREVAR has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
