*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.01 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YX6R91 "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YX6R91 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
26840      proc freq data=EMWS8.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Trans_VariableSet noprint;
26841      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
26842      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
26843      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
26844      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
26845      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
26846      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
26847      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
26848      run;
 
NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
26849      title10;
MPRINT(EM_DIAGRAM):   title10;
26850      data WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):    data WORK.M35EJUCH;
26851      set WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):   set WORK.M35EJUCH;
26852      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
26853      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M35EJUCH.
NOTE: The data set WORK.M35EJUCH has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26918      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
26919      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
26920      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26921      data WORK.M3QN6U1M;
MPRINT(EM_DIAGRAM):   data WORK.M3QN6U1M;
26922      set WORK.M3QN6U1M;
MPRINT(EM_DIAGRAM):   set WORK.M3QN6U1M;
26923      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
26924      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M3QN6U1M.
NOTE: The data set WORK.M3QN6U1M has 33 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
26925      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
26926      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
26927      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26928      %macro DMDBClass;
26929          AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
26930         AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
26931      %mend DMDBClass;
26932      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26933      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
26934      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
26935      %macro DMDBVar;
26936          AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt
26937         MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
26938         MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases
26939         NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
26940      %mend DMDBVar;
26941      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26942      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
26943      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26944      proc dmdb batch data=EMWS8.EMCODE4_TRAIN
26945      dmdbcat=WORK.EM_DMDB
26946      classout=WORK.Transclassout
26947      maxlevel = 513
26948      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.EMCODE4_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
26949      class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC) AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
26950      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Dt_Customer Frq HigherEducation Income Kidhome Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases
NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
26951      target
26952      DepVar
26953      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
26954      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3392   Memory used = 511K.
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 24 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
26955      quit;
26956      *--- end code ---*;
 
26957      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
26958      set WORK.M35EJUCH;
MPRINT(EM_DIAGRAM):   set WORK.M35EJUCH;
26959      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
26960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M35EJUCH.
NOTE: The data set WORK.TRANSINTERVALMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
26961      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
26962      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
26963      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26964      data WORK.M1MXC3Y0;
MPRINT(EM_DIAGRAM):   data WORK.M1MXC3Y0;
26965      set WORK.M1MXC3Y0;
MPRINT(EM_DIAGRAM):   set WORK.M1MXC3Y0;
26966      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
26967      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M1MXC3Y0.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M1MXC3Y0 has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
26970      %exploreSample(DATA=EMWS8.EMCODE4_TRAIN, OUTPUT=EMWS8.Trans_SAMPLE_DATA, METADATA=EMWS8.EMCODE4_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
26971     +/*------------------------------------------------------------------
26972     +  MACRO EXPLOREOBS
26974     +  SUPPORT:  SASDHD - David Duling
26975     +  PRODUCT:  Enterprise Miner
26977     +  DESCRIPTION:
26978     +  Generates maximum and default numbers of observations to
26979     +  download for visualization depending on the record length.
26981     +  Values were determined by trial and error using typical
26982     +  Windows workstation configurations.
26984     +  Discrete sets of values are returned so that user experience
26985     +  will be consitent with similar sized data sets.
26987     +  These macro variables are set:
26988     +  _exploreobs_max -- maximum number of obs downloadable
26989     +  _exploreobs_def -- default number of obs to be downloaded
26990     +  _exploreobs_recl - record length.  Might be useful for reporting.
26992     +  Use the _exploreobs_max to set limit the GUI selection of
26993     +  observations for downloading.  The GUI selection for obs
26994     +  could be reduced to "Default" and "Max".
26996     +  Parameters
26997     +  data=   libname.memname of input data
26998     +  vars=   subset list of variables.
26999     +          downloading 1 out of 500 really does work like downloading
27000     +          1 out of 1 vars.  Users may select a subset of vars for
27001     +                   visualizations.  Pass in the list as space delimited
27002     +          var names.  If vars is not specified, the record length
27003     +          of the entire data will be used.
27004     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
27006     +  Control
27007     +  Users may control the values by entering these macro variables.
27008     +            EM_EXPLOREOBS_MAX
27009     +            EM_EXPLOREOBS_DEFAULT
27010     +  These values override the computed values.
27012     +  Debugging
27013     +  %let _exploreobs_debug=1 ;
27014     +--------------------------------------------------------------------
27015     +  HISTORY: 20APR2004. sasdhd. pushed.
27016     +           18DEC2004. sasdhd. S0280556.
27017     +           07SEP2007. sasdhd. HK1009586
27018     +--------------------------------------------------------------------*/
27020     +%macro exploreobs(data=,vars=, nbytes=) ;
27022     +   /*--- variable definitions ---*/
27023     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
27024     +   %local xobs xvars xlen vlen xi vname vlist ;
27025     +   %local _exp_source _exp_notes ;
27027     +   /*--- USER definitions ---*/
27028     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
27030     +   /*--- variable intializations ---*/
27031     +   %let _exploreobs_max=0 ;
27032     +   %let _exploreobs_def=0 ;
27033     +   %let _exploreobs_recl=0 ;
27034     +   %let xvars= 0 ;
27035     +   %let xlen = 0 ;
27036     +   %let xobs = 0 ;
27038     +   /*--- data error checks ---*/
27039     +   %if "&data" eq "" %then %do ;
27040     +            %put NOTE: DATA is not specified. ;
27041     +            %goto term ;
27042     +      %end ;
27044     +   %let dsid=%sysfunc(open(&data)) ;
27045     +   %if not &dsid %then %do ;
27046     +            %put NOTE: DATA &data is not available. ;
27047     +            %goto term ;
27048     +      %end ;
27050     +   /*--- if a vars list exists generate a subset ---*/
27051     +   %if &vars ne %then %do ;
27052     +         %let dsid=%sysfunc(close(&dsid)) ;
27053     +         %if &_exploreobs_debug ne 1 %then %do ;
27054     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
27055     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
27056     +                  options nosource nonotes ;
27057     +         %end ;
27058     +         data _exploreobs_temp_data ;
27059     +         set &data(obs=0) ;
27060     +          keep &vars ;
27061     +         run;
27062     +         %if &_exploreobs_debug ne 1 %then %do ;
27063     +                  options &_exp_source &_exp_notes ;
27064     +         %end ;
27065     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
27066     +         %if &dsid eq 0 %then %do ;
27067     +                  %put NOTE: Sample is not available.;
27068     +                  %goto term ;
27069     +            %end ;
27070     +      %end ;
27072     +   /*--- get var attributes ---*/
27073     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
27074     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
27075     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
27076     +   %let dsid= %sysfunc(close(&dsid)) ;
27078     +   /*--- set default and max obs ---*/
27079     +   %let _exploreobs_recl=%eval(&xlen) ;
27080     +   %if &_exploreobs_recl eq 0 %then %do ;
27081     +             %let _exploreobs_max= 0 ;
27082     +             %let _exploreobs_def= 0 ;
27083     +             %goto term ;
27085     +   %end ;
27086     +   %else
27087     +   %if &_exploreobs_recl le 32 %then %do ;
27088     +             %let _exploreobs_max=100000 ;
27089     +             %let _exploreobs_def= 10000 ;
27090     +   %end ;
27091     +   %else
27092     +   %if &_exploreobs_recl le 128 %then %do ;
27093     +             %let _exploreobs_max=60000 ;
27094     +             %let _exploreobs_def= 6000 ;
27095     +   %end ;
27096     +   %else
27097     +   %if &_exploreobs_recl lt 1000 %then %do ;
27098     +             %let _exploreobs_max=20000 ;
27099     +             %let _exploreobs_def= 2000 ;
27100     +   %end ;
27101     +   %else
27102     +   %if &_exploreobs_recl lt 5000 %then %do ;
27103     +             %let _exploreobs_max= 10000 ;
27104     +             %let _exploreobs_def=  1000 ;
27105     +   %end ;
27106     +   %else
27107     +   %if &_exploreobs_recl lt 20000 %then %do ;
27108     +             %let _exploreobs_max= 5000 ;
27109     +             %let _exploreobs_def=  500 ;
27110     +   %end ;
27111     +   %else %do ;
27112     +             %let _exploreobs_max= 1000 ;
27113     +             %let _exploreobs_def=  200 ;
27114     +   %end ;
27116     +   /*--- Users options ---*/
27117     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
27118     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
27119     +   %end;
27120     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27121     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
27122     +   %end;
27124     +    /*--- S0868273 ---*/
27125     +    %if "&NBYTES" ne "" %then %do;
27126     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
27127     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
27128     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
27129     +       %end;
27131     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
27132     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
27133     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
27134     +          %if ^&_exploreobs_def %then
27135     +              %let _exploreobs_def = 1;
27137     +       %end;
27138     +    %end;
27140     +   /*--- Terminate ---*/
27141     +   %term:
27143     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
27144     +%mend ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS8.EMCODE4_TRAIN : vars= 41 : recl= 328 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS8.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS8.EMCODE4_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;
 
NOTE: There were 2000 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: The data set EMWS8.TRANS_SAMPLE_DATA has 2000 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FO2640 "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FO2640 new;
MPRINT(EM_DIAGRAM):   run;
27248      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT1;
27249      MonthsAsCustomer = int((today()-Dt_Customer)/12);
MPRINT(EM_DIAGRAM):   MonthsAsCustomer = int((today()-Dt_Customer)/12);
27250      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT1.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27251      quit;
 
27252      data WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT1;
27253      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
27254      retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 1 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
27255      set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT1(keep=RHS rename=(RHS=INPUTNAME));
27256      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK._CODEINPUT1 has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27257      proc sort data=WORK._CODEINPUT1 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT1 NODUPKEY;
27258      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
27259      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT1 has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27260      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT1;
27261      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT1 to WORK.TRANS_FORMULAVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK._CODEINPUT1.
NOTE: The data set WORK.TRANS_FORMULAVARS has 1 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27262      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT2;
27263      HigherEducationBinary = HigherEducation;
MPRINT(EM_DIAGRAM):   HigherEducationBinary = HigherEducation;
27264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT2.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27265      quit;
 
27266      data WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT2;
27267      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
27268      retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "BINARY";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 2 ROLE "INPUT" REPORT "N" LEVEL "BINARY";
27269      set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT2(keep=RHS rename=(RHS=INPUTNAME));
27270      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27271      proc sort data=WORK._CODEINPUT2 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT2 NODUPKEY;
27272      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
27273      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT2 has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27274      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT2;
27275      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT2 to WORK.TRANS_FORMULAVARS.
NOTE: There were 1 observations read from the data set WORK._CODEINPUT2.
NOTE: 1 observations added.
NOTE: The data set WORK.TRANS_FORMULAVARS has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27276      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK._CODEINPUT3;
27277      NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
MPRINT(EM_DIAGRAM):   NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
27278      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK._CODEINPUT3.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27279      quit;
 
27280      data WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):    data WORK._CODEINPUT3;
27281      length ROLE $32 LEVEL $8 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 LEVEL $8 REPORT $1;
27282      retain _FormulaNum 3 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
MPRINT(EM_DIAGRAM):   retain _FormulaNum 3 ROLE "INPUT" REPORT "N" LEVEL "INTERVAL";
27283      set WORK._CODEINPUT3(keep=RHS rename=(RHS=INPUTNAME));
MPRINT(EM_DIAGRAM):   set WORK._CODEINPUT3(keep=RHS rename=(RHS=INPUTNAME));
27284      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: The data set WORK._CODEINPUT3 has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27285      proc sort data=WORK._CODEINPUT3 NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._CODEINPUT3 NODUPKEY;
27286      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
27287      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._CODEINPUT3 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27288      proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT3;
MPRINT(EM_DIAGRAM):   proc append base=WORK.TRANS_FORMULAVARS data=WORK._CODEINPUT3;
27289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._CODEINPUT3 to WORK.TRANS_FORMULAVARS.
NOTE: There were 2 observations read from the data set WORK._CODEINPUT3.
NOTE: 2 observations added.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27290      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):    data WORK.TRANS_FORMULAVARS;
27291      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
27292      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
27293      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
27294      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27295      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
27296      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27297      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27298      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
27299      set EMWS8.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_VariableSet(keep=NAME LEVEL ROLE TYPE REPORT rename=(NAME=INPUTNAME LEVEL=INPUTLEVEL ROLE=INPUTROLE TYPE=INPUTTYPE REPORT=INPUTREPORT));
27300      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
27301      UNAME = upcase(INPUTNAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(INPUTNAME);
27302      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 33 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27303      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
27304      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27305      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 33 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27306      data WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS;
27307      merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_FORMULAVARS(in=_a) _temp(in=_b);
27308      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27309      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
27310      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27311      proc sort data=WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_FORMULAVARS;
27312      by _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   by _FormulaNum UNAME;
27313      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 4 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27314      data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_FORMULAVARS _target(keep=_FormulaNum);
27315      length ROLE $32 REPORT $1;
MPRINT(EM_DIAGRAM):   length ROLE $32 REPORT $1;
27316      set WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_FORMULAVARS;
27317      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
27318      if INPUTROLE = 'TARGET' then output _target;
MPRINT(EM_DIAGRAM):   if INPUTROLE = 'TARGET' then output _target;
27319      if first._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if first._FormulaNum then do;
27320      if ^last._FormulaNum then do;
MPRINT(EM_DIAGRAM):   if ^last._FormulaNum then do;
27321      INPUTNAME='';
MPRINT(EM_DIAGRAM):   INPUTNAME='';
27322      INPUTROLE='';
MPRINT(EM_DIAGRAM):   INPUTROLE='';
27323      INPUTTYPE='';
MPRINT(EM_DIAGRAM):   INPUTTYPE='';
27324      INPUTREPORT='';
MPRINT(EM_DIAGRAM):   INPUTREPORT='';
27325      end;
MPRINT(EM_DIAGRAM):   end;
27326      output WORK.TRANS_FORMULAVARS;
MPRINT(EM_DIAGRAM):   output WORK.TRANS_FORMULAVARS;
27327      end;
MPRINT(EM_DIAGRAM):   end;
27328      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: The data set WORK.TRANS_FORMULAVARS has 3 observations and 10 variables.
NOTE: The data set WORK._TARGET has 0 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27329      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
27330      set EMWS8.Trans_FORMULA;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_FORMULA;
27331      _FormulaNum = _N_;
MPRINT(EM_DIAGRAM):   _FormulaNum = _N_;
27332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The data set WORK._TEMP has 3 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27333      data WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CODEFORMULA;
27334      length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
MPRINT(EM_DIAGRAM):   length Name $32 Formula $300 Role $32 Level $10 REPORT $1;
27335      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA = "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,  NOQUOTE))" LEVEL =
27336         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,  NOQUOTE))" REPORT = "%sysfunc(sasmsg(sashelp.dmine, meta_report_vlabel,  NOQUOTE))" _targetFlag = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetbased_vlabel,  NOQUOTE))" INPUTNAME =
27337         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputname_vlabel,  NOQUOTE))" INPUTLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputlevel_vlabel,  NOQUOTE))" INPUTROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_inputrole_vlabel,  NOQUOTE))" INPUTTYPE =
27338         "%sysfunc(sasmsg(sashelp.dmine, rpt_inputtype_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FORMULA = "Formula" ROLE = "Role" LEVEL = "Measurement Level" REPORT = "Report" _targetFlag = "Target Based" INPUTNAME = "Input Name" INPUTLEVEL = "Input Level" INPUTROLE = "Input Role" INPUTTYPE = "Input
Type";
27339      drop _FormulaNum UNAME;
MPRINT(EM_DIAGRAM):   drop _FormulaNum UNAME;
27340      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
27341      merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
MPRINT(EM_DIAGRAM):   merge _temp(in=_a) WORK.TRANS_FORMULAVARS(in=_b) _target(in=_c);
27342      by _FormulaNum;
MPRINT(EM_DIAGRAM):   by _FormulaNum;
27343      _targetFlag = 0;
MPRINT(EM_DIAGRAM):   _targetFlag = 0;
27344      if _c then _targetFlag=1;
MPRINT(EM_DIAGRAM):   if _c then _targetFlag=1;
27345      if INPUT ne '' then if _a and ^_b then delete;
MPRINT(EM_DIAGRAM):   if INPUT ne '' then if _a and ^_b then delete;
27346      if ROLE = '' then do;
MPRINT(EM_DIAGRAM):   if ROLE = '' then do;
27347      if INPUTROLE = '' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if INPUTROLE = '' then ROLE='INPUT';
27348      else ROLE = INPUTROLE;
MPRINT(EM_DIAGRAM):   else ROLE = INPUTROLE;
27349      end;
MPRINT(EM_DIAGRAM):   end;
27350      if REPORT = '' then do;
MPRINT(EM_DIAGRAM):   if REPORT = '' then do;
27351      if INPUTREPORT = '' then REPORT='N';
MPRINT(EM_DIAGRAM):   if INPUTREPORT = '' then REPORT='N';
27352      else REPORT = INPUTREPORT;
MPRINT(EM_DIAGRAM):   else REPORT = INPUTREPORT;
27353      end;
MPRINT(EM_DIAGRAM):   end;
27354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable INPUT is uninitialized.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: There were 3 observations read from the data set WORK.TRANS_FORMULAVARS.
NOTE: There were 0 observations read from the data set WORK._TARGET.
NOTE: The data set WORK.TRANS_CODEFORMULA has 3 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
27355      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas";
27356      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27357      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
27358      file _code;
MPRINT(EM_DIAGRAM):   file _code;
27359      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
27360      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
27361      end;
MPRINT(EM_DIAGRAM):   end;
27362      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
27363      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
27364      end;
MPRINT(EM_DIAGRAM):   end;
27365      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
27366      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
27367      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
27368      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
27369      end;
MPRINT(EM_DIAGRAM):   end;
27370      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
27371      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
27372      end;
MPRINT(EM_DIAGRAM):   end;
27373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAFLOWCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=19. April 2016 11.01 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 3 records were written to the file _CODE.
      The minimum record length was 40.
      The maximum record length was 57.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27374      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
27375      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas";
27376      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27377      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
27378      file _code;
MPRINT(EM_DIAGRAM):   file _code;
27379      if _targetFlag eq 0 then do;
MPRINT(EM_DIAGRAM):   if _targetFlag eq 0 then do;
27380      if type eq 'C' and length > 0 then do;
MPRINT(EM_DIAGRAM):   if type eq 'C' and length > 0 then do;
27381      put 'length ' name ' $' length ';';
MPRINT(EM_DIAGRAM):   put 'length ' name ' $' length ';';
27382      end;
MPRINT(EM_DIAGRAM):   end;
27383      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
27384      put 'format ' name format ';';
MPRINT(EM_DIAGRAM):   put 'format ' name format ';';
27385      end;
MPRINT(EM_DIAGRAM):   end;
27386      length deqLabel $202;
MPRINT(EM_DIAGRAM):   length deqLabel $202;
27387      if label ne '' then do;
MPRINT(EM_DIAGRAM):   if label ne '' then do;
27388      deqlabel = tranwrd(label, '"', '""');
MPRINT(EM_DIAGRAM):   deqlabel = tranwrd(label, '"', '""');
27389      put 'label ' name '="' deqlabel '";';
MPRINT(EM_DIAGRAM):   put 'label ' name '="' deqlabel '";';
27390      end;
MPRINT(EM_DIAGRAM):   end;
27391      if name ne '' and formula ne '' then do;
MPRINT(EM_DIAGRAM):   if name ne '' and formula ne '' then do;
27392      put name '=' formula ';';
MPRINT(EM_DIAGRAM):   put name '=' formula ';';
27393      end;
MPRINT(EM_DIAGRAM):   end;
27394      end;
MPRINT(EM_DIAGRAM):   end;
27395      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULAPUBLISHCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=19. April 2016 11.01 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 3 records were written to the file _CODE.
      The minimum record length was 40.
      The maximum record length was 57.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27396      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
27397      filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas";
MPRINT(EM_DIAGRAM):    filename _code "C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas";
27398      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
27399      set WORK.TRANS_CODEFORMULA;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CODEFORMULA;
27400      file _code;
MPRINT(EM_DIAGRAM):   file _code;
27401      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
27402      if ROLE eq '' then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if ROLE eq '' then ROLE = 'REJECTED';
27403      if REPORT eq '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   if REPORT eq '' then REPORT = 'N';
27404      String = 'if NAME="'!!strip(name)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(name)!!'" then do;';
27405      put / string;
MPRINT(EM_DIAGRAM):   put / string;
27406      String = '   ROLE ="'!!strip(role)!!'";';
MPRINT(EM_DIAGRAM):   String = '   ROLE ="'!!strip(role)!!'";';
27407      put string;
MPRINT(EM_DIAGRAM):   put string;
27408      String = '   REPORT ="'!!strip(report)!!'";';
MPRINT(EM_DIAGRAM):   String = '   REPORT ="'!!strip(report)!!'";';
27409      put string;
MPRINT(EM_DIAGRAM):   put string;
27410      if LEVEL ne '' then do;
MPRINT(EM_DIAGRAM):   if LEVEL ne '' then do;
27411      String = '   LEVEL ="'!!strip(level)!!'";';
MPRINT(EM_DIAGRAM):   String = '   LEVEL ="'!!strip(level)!!'";';
27412      put string;
MPRINT(EM_DIAGRAM):   put string;
27413      end;
MPRINT(EM_DIAGRAM):   end;
27414      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
27415      if INPUTNAME ne '' then do;
MPRINT(EM_DIAGRAM):   if INPUTNAME ne '' then do;
27416      String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
27417      put String;
MPRINT(EM_DIAGRAM):   put String;
27418      end;
MPRINT(EM_DIAGRAM):   end;
27419      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _CODE is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Trans\FORMULADELTACODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=19. April 2016 11.01 Uhr,
      Create Time=11. April 2016 17.34 Uhr
 
NOTE: 20 records were written to the file _CODE.
      The minimum record length was 0.
      The maximum record length was 40.
NOTE: There were 3 observations read from the data set WORK.TRANS_CODEFORMULA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27420      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
27421      proc print data = EMWS8.Trans_FORMULA(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Trans_FORMULA(obs=500) noobs label;
27422      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_formulatransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Formula Transformations";
27423      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name ROLE LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
27424      var Name ROLE LEVEL FORMULA;
27425      run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27426      title9;
MPRINT(EM_DIAGRAM):   title9;
27427      title10;
MPRINT(EM_DIAGRAM):   title10;
27428      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27429      *------------------------------------------------------------*;
27430      * Trans: Scoring DATA data;
27431      *------------------------------------------------------------*;
27432      data EMWS8.Trans_TRAIN
27433      / view=EMWS8.Trans_TRAIN
27434      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_TRAIN / view=EMWS8.Trans_TRAIN ;
27435      set EMWS8.EMCODE4_TRAIN
27436      ;
MPRINT(EM_DIAGRAM):   set EMWS8.EMCODE4_TRAIN ;
27437      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas.
27438     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27439     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
27440     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27441     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
27442     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
27443     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
27444      run;
 
NOTE: DATA STEP view saved on file EMWS8.TRANS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27445      quit;
27446      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
27447      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27448      * Trans: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Trans: Computing metadata for TRAIN data;
27449      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\Trans\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Trans_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Trans_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Trans_TRAIN out=WORK.M0R_8QEU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_8QEU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_8QEU(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_8QEU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_8QEU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0AH56XC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3NNJ_84(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AH56XC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Trans";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="MonthsAsCustomer" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Dt_Customer" then delete;
MPRINT(EM_DIAGRAM):   if NAME="HigherEducationBinary" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="HigherEducation" then delete;
MPRINT(EM_DIAGRAM):   if NAME="NumDistPurchases" then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="INTERVAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3ATQZXK "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3ATQZXK new;
MPRINT(EM_DIAGRAM):   run;
27794      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27795      * &msgString;
MPRINT(EM_DIAGRAM):   * &msgString;
27796      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27797      filename _flowref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   filename _flowref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas";
27798      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
27799      %INCLUDE _flowref;
NOTE: %INCLUDE (level 1) file _FLOWREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMFLOWSCORE.sas.
27800     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27801     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
27802     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27803     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
27804     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
27805     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
27806      run;
 
NOTE: Dependency structure written to data set WORK.TRANS_SCOREINPUTS.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
27807      quit;
27808      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
27809      set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
27810      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
27811      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
27812      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27813      proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
27814      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27816      filename _flowref;
MPRINT(EM_DIAGRAM):   filename _flowref;
NOTE: Fileref _FLOWREF has been deassigned.
27817      %let SYSCC = 0;
27818      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27819      * transformcombinevariables;
MPRINT(EM_DIAGRAM):   * transformcombinevariables;
27820      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27821      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
27822      length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
MPRINT(EM_DIAGRAM):   length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
27823      set
27824      EMWS8.Trans_FORMULA
27825      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_FORMULA ;
27826      _MetaFlag=0;
MPRINT(EM_DIAGRAM):   _MetaFlag=0;
27827      uname = upcase(name);
MPRINT(EM_DIAGRAM):   uname = upcase(name);
27828      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable inputName is uninitialized.
NOTE: Variable inputLevel is uninitialized.
NOTE: Variable inputType is uninitialized.
NOTE: There were 3 observations read from the data set EMWS8.TRANS_FORMULA.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27829      data _temp;
MPRINT(EM_DIAGRAM):    data _temp;
27830      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
27831      set EMWS8.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
27832      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
27833      where upcase(CREATOR) = upcase("Trans");
MPRINT(EM_DIAGRAM):   where upcase(CREATOR) = upcase("Trans");
27834      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_CMETA_TRAIN.
      WHERE UPCASE(CREATOR)='TRANS';
NOTE: The data set WORK._TEMP has 3 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27835      proc sort data=_temp(drop=CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=_temp(drop=CREATOR);
27836      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27837      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
27838      proc sort data=WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.TRANS_OUTPUTVARS;
27839      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27841      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
27842      merge WORK.TRANS_OUTPUTVARS _temp;
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_OUTPUTVARS _temp;
27843      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 3 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27845      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27846      * Trans: Get Metadata for the Score Inputs Variables;
MPRINT(EM_DIAGRAM):   * Trans: Get Metadata for the Score Inputs Variables;
27847      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27848      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
27849      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
27850      set EMWS8.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
27851      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
27852      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27853      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
27854      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27855      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27856      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
27857      merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
27858      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
27859      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
27860      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: There were 33 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27861      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27862      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
27863      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27864      proc dmdb data=EMWS8.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS8.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
27865      class
27866      HigherEducationBinary
27867      ;
MPRINT(EM_DIAGRAM):   class HigherEducationBinary ;
27868      var
27869      Dt_Customer
27870      HigherEducation
27871      NumCatalogPurchases
27872      NumWebPurchases
27873      MonthsAsCustomer
27874      NumDistPurchases
27875      ;
MPRINT(EM_DIAGRAM):   var Dt_Customer HigherEducation NumCatalogPurchases NumWebPurchases MonthsAsCustomer NumDistPurchases ;
27876      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3392   Memory used = 511K.
NOTE: View EMWS8.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 3392 observations read from the data set EMWS8.EMCODE4_TRAIN.
NOTE: There were 3392 observations read from the data set EMWS8.TRANS_TRAIN.
NOTE: The data set WORK.TRANS_CLASSSTATS has 2 observations and 9 variables.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
27877      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27878      * Trans: Combine Information and Statistics for Class Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Class Variables;
27879      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27880      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
27881      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27882      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27883      proc sort data=WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_CLASSSTATS;
27884      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27885      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27886      data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
27887      retain nlevel nmiss;
MPRINT(EM_DIAGRAM):   retain nlevel nmiss;
27888      set WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS;
27889      by Name;
MPRINT(EM_DIAGRAM):   by Name;
27890      if first.Name then do;
MPRINT(EM_DIAGRAM):   if first.Name then do;
27891      nlevel= 0;
MPRINT(EM_DIAGRAM):   nlevel= 0;
27892      nmiss= 0;
MPRINT(EM_DIAGRAM):   nmiss= 0;
27893      end;
MPRINT(EM_DIAGRAM):   end;
27894      if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
MPRINT(EM_DIAGRAM):   if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
27895      else nlevel + 1;
MPRINT(EM_DIAGRAM):   else nlevel + 1;
27896      if last.name then output;
MPRINT(EM_DIAGRAM):   if last.name then output;
27897      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27898      /*Merge Statistics for Class Output Vars */
27899      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
27900      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
27901      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
27902      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27903      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
27904      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
27905      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
27906      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
27907      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
27908      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
27909      if Formula = '' then Formula = "User Code";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "User Code";
27910      end;
MPRINT(EM_DIAGRAM):   end;
27911      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
27912      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
27913      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
27914      /*Merge Statistics for Class Input Vars */
27915      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
27916      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27917      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27918      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
27919      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
27920      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27921      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
27922      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
27923      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
27924      end;
MPRINT(EM_DIAGRAM):   end;
27925      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
27926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27927      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27928      * Trans: Combine Information and Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Interval Variables;
27929      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27930      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
27931      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27932      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 3 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27933      proc sort data=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_VARSTATS;
27934      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27935      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Output Vars;
27936      *Merge Statistics for Output Vars;
27937      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
27938      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
27939      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
27940      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27941      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
27942      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
27943      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
27944      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
27945      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
27946      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
27947      if Formula = '' then Formula = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "Mixture of variables";
27948      end;
MPRINT(EM_DIAGRAM):   end;
27949      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
27950      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
27951      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Input Vars;
27952      *Merge Statistics for Input Vars;
27953      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
27954      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27955      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
27956      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
27957      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
27958      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
27959      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
27960      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
27961      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
27962      end;
MPRINT(EM_DIAGRAM):   end;
27963      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
27964      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 6 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27965      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
27966      * Trans: Combine statistics for class and interval variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine statistics for class and interval variables;
27967      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
27968      data EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   data EMWS8.Trans_STATISTICS;
27969      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
27970      label SOURCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_source_vlabel,  NOQUOTE))" _METHOD_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_method_vlabel,  NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA =
27971         "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,   NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel, NOQUOTE))" NMISS =
27972         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
27973         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
27974         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" _METHOD_ = "Method" NAME = "Variable Name" FORMULA = "Formula" NLEVEL = "Number of Levels" N = "Non Missing" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS
= "Skewness" KURTOSIS = "Kurtosis" LABEL = "Label";
27975      set
27976      WORK.TRANS_CLASSSTATS
27977      WORK.TRANS_VARSTATS
27978      ;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS WORK.TRANS_VARSTATS ;
27979      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
27980      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 6 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
27981      proc sort data=EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_STATISTICS;
27982      by SOURCE _METHOD_ NAME;
MPRINT(EM_DIAGRAM):   by SOURCE _METHOD_ NAME;
27983      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.TRANS_STATISTICS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27984      proc sort data = EMWS8.Trans_STATISTICS NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Trans_STATISTICS NOTHREADS;
27985      by SOURCE NAME;
MPRINT(EM_DIAGRAM):   by SOURCE NAME;
27986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.TRANS_STATISTICS.
NOTE: The data set EMWS8.TRANS_STATISTICS has 7 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27987      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
27988      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
27989      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Interval Variables";
27990      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
27991      var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
27992      where SOURCE eq 'INPUT' and mean ne .;
27993      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
27994      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
27995      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervaloutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Interval Variables";
27996      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
27997      var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
27998      where SOURCE eq 'OUTPUT' and mean ne .;
27999      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28000      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
28001      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Class Variables";
28002      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
28003      var Name NLEVEL NMISS;
28004      where SOURCE eq 'INPUT' and nlevel ne .;
28005      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
28006      proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Trans_STATISTICS(obs=500) noobs label;
28007      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classoutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Class Variables";
28008      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
28009      var Name _METHOD_ NLEVEL NMISS;
28010      where SOURCE eq 'OUTPUT' and nlevel ne .;
28011      run;
 
NOTE: No observations were selected from data set EMWS8.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
28012      title9;
MPRINT(EM_DIAGRAM):   title9;
28013      title10;
MPRINT(EM_DIAGRAM):   title10;
28014      data EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS8.Trans_EMSCOREVAR;
28015      length Name $32 formula $300 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $300 file $200;
28016      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
28017      set EMWS8.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_STATISTICS;
28018      where SOURCE='Output';
MPRINT(EM_DIAGRAM):   where SOURCE='Output';
28019      select( _METHOD_);
MPRINT(EM_DIAGRAM):   select( _METHOD_);
28020      when('Computed') do;
MPRINT(EM_DIAGRAM):   when('Computed') do;
28021      file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
28022      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
28023      end;
MPRINT(EM_DIAGRAM):   end;
28024      when('Formula') do;
MPRINT(EM_DIAGRAM):   when('Formula') do;
28025      if Formula eq 'Mixture of variables' then do;
MPRINT(EM_DIAGRAM):   if Formula eq 'Mixture of variables' then do;
28026      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
28027      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
28028      end;
MPRINT(EM_DIAGRAM):   end;
28029      if Formula = 'User Code' then do;
MPRINT(EM_DIAGRAM):   if Formula = 'User Code' then do;
28030      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
28031      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
28032      end;
MPRINT(EM_DIAGRAM):   end;
28033      end;
MPRINT(EM_DIAGRAM):   end;
28034      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
28035      end;
MPRINT(EM_DIAGRAM):   end;
28036      output;
MPRINT(EM_DIAGRAM):   output;
28037      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.TRANS_STATISTICS.
      WHERE SOURCE='Output';
NOTE: The data set EMWS8.TRANS_EMSCOREVAR has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
