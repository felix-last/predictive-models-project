*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                19.05 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                19.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1CF01PE
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1CF01PE new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[287101] MAX=1 EXCEEDMAXVALUE='' )[287105] )[287099]
VALIDCHOICES=(CHOICE1='Y' )[287103] )[287387] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[287109]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[287113] )[287111] )[287107] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[287117]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[287123] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[287121] )[287119] )[287115] )[287097]
2268639    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
2268640    table ROLE*LEVEL/out=WORK.Ensmbl37META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl37META;
2268641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.ENSMBL37META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2268642    proc print data=WORK.Ensmbl37META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37META label noobs;
2268643    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2268644    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2268644  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2268644  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2268645    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2268646    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2268647    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL37META.
NOTE: The PROCEDURE PRINT printed page 1567.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268648    title10;
MPRINT(EM_DIAGRAM):   title10;
2268649    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural6_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2268678    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2268679    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2268680    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2268680  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2268680  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2268681       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2268681  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2268681  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2268682    set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
2268683    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2268684    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2268685    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2268686    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2268687    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2268688    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2268689    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2268690    end;
MPRINT(EM_DIAGRAM):   end;
2268691    output;
MPRINT(EM_DIAGRAM):   output;
2268692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL37_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2268693    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2268694    proc print data=WORK.Ensmbl37_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37_EVENT noobs label;
2268695    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2268696    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2268697    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2268698    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL37_EVENT.
NOTE: The PROCEDURE PRINT printed page 1568.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268699    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2268700    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
2268701    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2268702    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2268703    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2268703  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2268703  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2268704    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2268705    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2268706    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1569.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268707    title10;
MPRINT(EM_DIAGRAM):   title10;
2268708    %let groupid =;
2268709    %let endGroupid =;
2268710    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268711    set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
2268712    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268712  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268713    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268714    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268716    %let groupid =;
2268717    %let endGroupid =;
2268718    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268719    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2268720    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268720  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268721    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268722    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268723    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268724    %let groupid =;
2268725    %let endGroupid =;
2268726    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268727    set EMWS8.AutoNeural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural8_EMINFO;
2268728    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268728  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268729    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268730    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268732    %let groupid =;
2268733    %let endGroupid =;
2268734    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268735    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2268736    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268736  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268737    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268738    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268740    %let groupid =;
2268741    %let endGroupid =;
2268742    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268743    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2268744    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268744  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268745    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268746    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268747    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268748    %let groupid =;
2268749    %let endGroupid =;
2268750    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268751    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2268752    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268752  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268753    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268754    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268756    %let groupid =;
2268757    %let endGroupid =;
2268758    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2268759    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2268760    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2268760  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2268761    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2268762    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2268763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268764    data WORK.Ensmbl37;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37;
2268765    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2268766    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2268766  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2268767    nodeid="AUTONEURAL6";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL6";
2268768    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268769    output;
MPRINT(EM_DIAGRAM):   output;
2268770    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2268771    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268772    output;
MPRINT(EM_DIAGRAM):   output;
2268773    nodeid="AUTONEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL8";
2268774    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268775    output;
MPRINT(EM_DIAGRAM):   output;
2268776    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2268777    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268778    output;
MPRINT(EM_DIAGRAM):   output;
2268779    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2268780    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268781    output;
MPRINT(EM_DIAGRAM):   output;
2268782    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2268783    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268784    output;
MPRINT(EM_DIAGRAM):   output;
2268785    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2268786    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2268787    output;
MPRINT(EM_DIAGRAM):   output;
2268788    ;
MPRINT(EM_DIAGRAM):   ;
2268789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL37 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2268790    title;
MPRINT(EM_DIAGRAM):   title;
2268791    proc print data=WORK.Ensmbl37 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37 label noobs;
2268792    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2268793    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
2268794    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL37.
NOTE: The PROCEDURE PRINT printed page 1570.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2268795    title9;
MPRINT(EM_DIAGRAM):   title9;
2268796    title10;
MPRINT(EM_DIAGRAM):   title10;
2268797    data WORK.M2L8XR49;
MPRINT(EM_DIAGRAM):    data WORK.M2L8XR49;
2268798    set WORK.M2L8XR49;
MPRINT(EM_DIAGRAM):   set WORK.M2L8XR49;
2268799    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2268800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2L8XR49.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2L8XR49 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2268801    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2268802    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2268803    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2268804    %macro DMDBClass;
2268805        DepVar(DESC)
2268806    %mend DMDBClass;
2268807    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2268808    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2268809    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2268810    %macro DMDBVar;
2268811
2268812    %mend DMDBVar;
2268813    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268814    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2268815    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268816    proc dmdb batch data=EMWS8.AutoNeural6_TRAIN
2268817    dmdbcat=WORK.EM_DMDB
2268818    maxlevel = 513
2268819    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural6_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2268820    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2268821    target
2268822    DepVar
2268823    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2268824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2268825    quit;
2268826    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O320SONV
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O320SONV new;
MPRINT(EM_DIAGRAM):   run;
2268928    filename emflow
2268928  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268929    *------------------------------------------------------------*;
2268930    * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
2268931    *------------------------------------------------------------*;
2268932    data EMWS8.Ensmbl37_TRAIN
2268933    / view=EMWS8.Ensmbl37_TRAIN
2268934    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_TRAIN / view=EMWS8.Ensmbl37_TRAIN ;
2268935    set EMWS8.AutoNeural6_TRAIN
2268936    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
2268937    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
2268938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268939   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
2268940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268941   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
2268942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268944   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2268945   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2268946   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2268947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268949   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2268950   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2268951   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2268952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268954   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2268955   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2268956   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2268957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268959   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2268960   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2268961   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2268962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268963   +
2268964   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2268965   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2268965  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2268966   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2268967   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2268968   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2268969   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2268970   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2268971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268972   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2268973   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2268974   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2268975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268977   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2268978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268979   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2268980   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2268981   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2268982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268983   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2268984   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2268985   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2268986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268988   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2268989   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2268990   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2268991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268993   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2268994   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2268995   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2268996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268997   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2268998   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2268999   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2269000   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2269001   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2269002   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2269003   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2269004   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2269005   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2269006   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2269007   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2269008   +LENGTH _WARN_ $4
2269009   +      F_DepVar  $ 12
2269010   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2269011   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2269012   +
2269013   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2269014   +
2269015   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2269016   +
2269017   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2269018   +
2269019   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2269020   +
2269021   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2269022   +
2269023   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2269024   +
2269025   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2269026   +
2269027   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2269028   +
2269029   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2269030   +
2269031   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2269032   +
2269033   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2269034   +
2269035   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2269036   +
2269037   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2269038   +
2269039   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2269040   +
2269041   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2269042   +
2269043   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2269044   +
2269045   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2269046   +
2269047   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2269048   +
2269049   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2269050   +
2269051   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2269052   +
2269053   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2269054   +
2269055   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2269056   +
2269057   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2269058   +
2269059   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2269060   +
2269061   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2269062   +
2269063   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2269064   +
2269065   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2269066   +
2269067   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2269068   +
2269069   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2269070   +
2269071   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2269072   +
2269073   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2269074   +
2269075   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2269076   +
2269077   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2269078   +
2269079   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2269080   +
2269081   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2269082   +
2269083   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2269084   +
2269085   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2269086   +
2269087   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2269088   +
2269089   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2269090   +
2269091   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2269092   +
2269093   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2269094   +
2269095   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2269096   +
2269097   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2269098   +
2269099   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2269100   +
2269101   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2269102   +
2269103   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2269104   +
2269105   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2269106   +
2269107   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2269108   +
2269109   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2269110   +
2269111   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2269112   +
2269113   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2269114   +
2269115   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2269116   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2269117   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2269118   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2269119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269121   +end;
MPRINT(EM_DIAGRAM):   end;
2269122   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269124   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2269125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269127   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2269128   +   end;
MPRINT(EM_DIAGRAM):   end;
2269129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269130   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2269131   +   end;
MPRINT(EM_DIAGRAM):   end;
2269132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269133   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2269134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269136   +   end;
MPRINT(EM_DIAGRAM):   end;
2269137   +end;
MPRINT(EM_DIAGRAM):   end;
2269138   +
2269139   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2269140   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2269141   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2269142   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2269143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269145   +end;
MPRINT(EM_DIAGRAM):   end;
2269146   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269148   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2269149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269151   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2269152   +   end;
MPRINT(EM_DIAGRAM):   end;
2269153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269154   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2269155   +   end;
MPRINT(EM_DIAGRAM):   end;
2269156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269157   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2269158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269160   +   end;
MPRINT(EM_DIAGRAM):   end;
2269161   +end;
MPRINT(EM_DIAGRAM):   end;
2269162   +
2269163   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2269164   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2269165   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2269166   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2269167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269169   +end;
MPRINT(EM_DIAGRAM):   end;
2269170   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269172   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2269173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269174   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269175   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2269176   +   end;
MPRINT(EM_DIAGRAM):   end;
2269177   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269178   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2269179   +   end;
MPRINT(EM_DIAGRAM):   end;
2269180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269181   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2269182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269184   +   end;
MPRINT(EM_DIAGRAM):   end;
2269185   +end;
MPRINT(EM_DIAGRAM):   end;
2269186   +
2269187   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2269188   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2269189   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2269190   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2269191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269193   +end;
MPRINT(EM_DIAGRAM):   end;
2269194   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269196   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2269197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269198   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269199   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2269200   +   end;
MPRINT(EM_DIAGRAM):   end;
2269201   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269202   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2269203   +   end;
MPRINT(EM_DIAGRAM):   end;
2269204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269205   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2269206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269208   +   end;
MPRINT(EM_DIAGRAM):   end;
2269209   +end;
MPRINT(EM_DIAGRAM):   end;
2269210   +
2269211   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2269212   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2269213   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2269214   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2269215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269217   +end;
MPRINT(EM_DIAGRAM):   end;
2269218   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269219   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269220   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2269221   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269222   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269223   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2269224   +   end;
MPRINT(EM_DIAGRAM):   end;
2269225   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269226   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2269227   +   end;
MPRINT(EM_DIAGRAM):   end;
2269228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269229   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2269230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269232   +   end;
MPRINT(EM_DIAGRAM):   end;
2269233   +end;
MPRINT(EM_DIAGRAM):   end;
2269234   +
2269235   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2269236   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2269237   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2269238   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2269239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269241   +end;
MPRINT(EM_DIAGRAM):   end;
2269242   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269244   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2269245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269246   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269247   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2269248   +   end;
MPRINT(EM_DIAGRAM):   end;
2269249   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269250   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2269251   +   end;
MPRINT(EM_DIAGRAM):   end;
2269252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269253   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2269254   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269255   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269256   +   end;
MPRINT(EM_DIAGRAM):   end;
2269257   +end;
MPRINT(EM_DIAGRAM):   end;
2269258   +
2269259   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2269260   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2269261   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2269262   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2269263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269265   +end;
MPRINT(EM_DIAGRAM):   end;
2269266   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269267   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269268   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2269269   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269270   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2269271   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2269272   +   end;
MPRINT(EM_DIAGRAM):   end;
2269273   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2269274   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2269275   +   end;
MPRINT(EM_DIAGRAM):   end;
2269276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269277   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2269278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269280   +   end;
MPRINT(EM_DIAGRAM):   end;
2269281   +end;
MPRINT(EM_DIAGRAM):   end;
2269282   +
2269283   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2269284   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2269285   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2269286   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2269287   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2269288   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2269289   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2269290   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2269291   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2269292   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2269293   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2269294   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2269295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269297   +end;
MPRINT(EM_DIAGRAM):   end;
2269298   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269299   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2269300   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2269301   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269302   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2269303   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2269304   +   end;
MPRINT(EM_DIAGRAM):   end;
2269305   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2269306   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2269307   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2269308   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2269309   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2269310   +   end;
MPRINT(EM_DIAGRAM):   end;
2269311   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2269312   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2269313   +   end;
MPRINT(EM_DIAGRAM):   end;
2269314   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2269315   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2269316   +   end;
MPRINT(EM_DIAGRAM):   end;
2269317   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2269318   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2269319   +   end;
MPRINT(EM_DIAGRAM):   end;
2269320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269321   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2269322   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2269323   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2269324   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2269325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269327   +   end;
MPRINT(EM_DIAGRAM):   end;
2269328   +end;
MPRINT(EM_DIAGRAM):   end;
2269329   +
2269330   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2269331   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2269332   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2269333   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2269334   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2269335   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2269336   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2269337   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2269338   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2269339   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2269340   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2269341   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2269342   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2269343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269345   +end;
MPRINT(EM_DIAGRAM):   end;
2269346   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269347   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2269348   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2269349   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269350   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2269351   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2269352   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2269353   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2269354   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2269355   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2269356   +         end;
MPRINT(EM_DIAGRAM):   end;
2269357   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2269358   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2269359   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2269360   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2269361   +            end;
MPRINT(EM_DIAGRAM):   end;
2269362   +         end;
MPRINT(EM_DIAGRAM):   end;
2269363   +      end;
MPRINT(EM_DIAGRAM):   end;
2269364   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2269365   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2269366   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2269367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2269368   +         end;
MPRINT(EM_DIAGRAM):   end;
2269369   +      end;
MPRINT(EM_DIAGRAM):   end;
2269370   +   end;
MPRINT(EM_DIAGRAM):   end;
2269371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269372   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2269373   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2269374   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2269375   +      end;
MPRINT(EM_DIAGRAM):   end;
2269376   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2269377   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2269378   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2269379   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2269380   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2269381   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2269382   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2269383   +         end;
MPRINT(EM_DIAGRAM):   end;
2269384   +      end;
MPRINT(EM_DIAGRAM):   end;
2269385   +   end;
MPRINT(EM_DIAGRAM):   end;
2269386   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2269387   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2269388   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2269389   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2269390   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2269391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269393   +   end;
MPRINT(EM_DIAGRAM):   end;
2269394   +end;
MPRINT(EM_DIAGRAM):   end;
2269395   +
2269396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269397   +*** Checking missing input Interval
2269398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2269399   +
2269400   +IF NMISS(
2269401   +   AcceptedCmpTotal ,
2269402   +   Age ,
2269403   +   Frq ,
2269404   +   Income ,
2269405   +   Kidhome ,
2269406   +   Mnt ,
2269407   +   MntFishProducts ,
2269408   +   MntFruits ,
2269409   +   MntGoldProds ,
2269410   +   MntMeatProducts ,
2269411   +   MntSweetProducts ,
2269412   +   MntWines ,
2269413   +   MonthsAsCustomer ,
2269414   +   NumCatalogPurchases ,
2269415   +   NumDealsPurchases ,
2269416   +   NumDistPurchases ,
2269417   +   NumStorePurchases ,
2269418   +   NumWebPurchases ,
2269419   +   NumWebVisitsMonth ,
2269420   +   RFMstat ,
2269421   +   RMntFrq ,
2269422   +   Recency ,
2269423   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2269424   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2269425   +
2269426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269427   +END;
MPRINT(EM_DIAGRAM):   END;
2269428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269429   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2269430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269432   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2269433   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2269434   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2269435   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2269436   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2269437   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2269438   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2269439   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2269440   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2269441   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2269442   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2269443   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2269444   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2269445   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2269446   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2269447   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2269448   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2269449   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2269450   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2269451   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2269452   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2269453   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2269454   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2269455   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2269456   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2269457   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2269458   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2269459   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2269460   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2269461   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2269462   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2269463   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2269464   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2269465   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2269466   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2269467   +END;
MPRINT(EM_DIAGRAM):   END;
2269468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269469   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2269470   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2269471   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2269472   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2269473   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2269474   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2269475   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2269476   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2269477   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2269478   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2269479   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2269480   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2269481   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2269482   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2269483   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2269484   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2269485   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2269486   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2269487   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2269488   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2269489   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2269490   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2269491   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2269492   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2269493   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2269494   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2269495   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2269496   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2269497   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2269498   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2269499   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2269500   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2269501   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2269502   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2269503   +   ELSE S_NumCatalogPurchases
2269504   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2269505   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2269506   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2269507   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2269508   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2269509   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2269510   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2269511   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2269512   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2269513   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2269514   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2269515   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2269516   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2269517   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2269518   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2269519   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2269520   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2269521   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2269522   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2269523   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2269524   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2269525   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2269526   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2269527   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2269528   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2269529   +END;
MPRINT(EM_DIAGRAM):   END;
2269530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269531   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2269532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269534   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2269535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269537   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2269538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269539   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269540   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2269541   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2269542   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2269543   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2269544   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2269545   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2269546   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2269547   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2269548   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2269549   +          +    -1.19682864242203 * S_NumDealsPurchases
2269550   +          +     0.18491015618084 * S_NumDistPurchases
2269551   +          +     1.22999585210812 * S_NumStorePurchases
2269552   +          +     1.21627782358382 * S_NumWebPurchases
2269553   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2269554   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2269555   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2269556   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 *
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 *
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts +
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 *
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 *
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 *
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 *
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq +
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2269557   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2269558   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2269559   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2269560   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2269561   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 *
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 +
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 *
HigherEducationBinary0 ;
2269562   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2269563   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2269564   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2269565   +          +     0.22010007588989 * Marital_StatusDivorced
2269566   +          +    -0.15233151420698 * Marital_StatusMarried
2269567   +          +    -0.03753447021411 * Marital_StatusSingle
2269568   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle +
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation +
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced +
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle +
-0.12393264098828 * Marital_StatusTogether ;
2269569   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2269570   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269571   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269572   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2269573   +END;
MPRINT(EM_DIAGRAM):   END;
2269574   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269575   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2269576   +END;
MPRINT(EM_DIAGRAM):   END;
2269577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269578   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2269579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269580   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269581   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2269582   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2269583   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2269584   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2269585   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2269586   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2269587   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2269588   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2269589   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2269590   +          +    -0.66146733174161 * S_NumDealsPurchases
2269591   +          +     1.52784459399302 * S_NumDistPurchases
2269592   +          +     1.49997699453958 * S_NumStorePurchases
2269593   +          +     0.63969125024997 * S_NumWebPurchases
2269594   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2269595   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2269596   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2269597   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 *
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 *
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts +
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 *
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 *
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 *
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 *
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq +
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2269598   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2269599   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2269600   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2269601   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2269602   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 +
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 *
HigherEducationBinary0 ;
2269603   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2269604   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2269605   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2269606   +          +    -0.26556711862055 * Marital_StatusDivorced
2269607   +          +     1.14529440208202 * Marital_StatusMarried
2269608   +          +    -1.05822467297368 * Marital_StatusSingle
2269609   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle +
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 *
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 *
Marital_StatusTogether ;
2269610   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2269611   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269612   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269613   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2269614   +END;
MPRINT(EM_DIAGRAM):   END;
2269615   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269616   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2269617   +END;
MPRINT(EM_DIAGRAM):   END;
2269618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269619   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2269620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269622   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2269623   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2269624   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2269625   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2269626   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2269627   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2269628   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2269629   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2269630   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2269631   +          +    -1.65571629915953 * S_NumDealsPurchases
2269632   +          +     0.44850418598185 * S_NumDistPurchases
2269633   +          +    -1.85103994085543 * S_NumStorePurchases
2269634   +          +    -1.98087140874692 * S_NumWebPurchases
2269635   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2269636   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2269637   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2269638   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 *
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 *
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts +
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 *
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 *
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 *
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 *
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq +
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2269639   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2269640   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2269641   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2269642   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2269643   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 *
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 +
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 *
HigherEducationBinary0 ;
2269644   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2269645   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2269646   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2269647   +          +     0.50400969719731 * Marital_StatusDivorced
2269648   +          +    -1.34220391092458 * Marital_StatusMarried
2269649   +          +    -0.55428853923129 * Marital_StatusSingle
2269650   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle +
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 *
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 *
Marital_StatusTogether ;
2269651   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2269652   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269653   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269654   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2269655   +END;
MPRINT(EM_DIAGRAM):   END;
2269656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269657   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2269658   +END;
MPRINT(EM_DIAGRAM):   END;
2269659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269660   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2269661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269663   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2269664   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2269665   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2269666   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2269667   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269668   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269669   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2269670   +END;
MPRINT(EM_DIAGRAM):   END;
2269671   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269672   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2269673   +END;
MPRINT(EM_DIAGRAM):   END;
2269674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269675   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2269676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269678   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2269679   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2269680   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2269681   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2269682   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269683   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269684   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2269685   +END;
MPRINT(EM_DIAGRAM):   END;
2269686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269687   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2269688   +END;
MPRINT(EM_DIAGRAM):   END;
2269689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269690   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2269691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269693   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2269694   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2269695   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2269696   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2269697   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2269698   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2269699   +END;
MPRINT(EM_DIAGRAM):   END;
2269700   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269701   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2269702   +END;
MPRINT(EM_DIAGRAM):   END;
2269703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269704   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2269705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269706   +
2269707   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2269708   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2269709   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2269710   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2269711   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2269712   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269713   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2269714   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2269715   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2269716   +end;
MPRINT(EM_DIAGRAM):   end;
2269717   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269718   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2269719   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2269720   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2269721   +   end;
MPRINT(EM_DIAGRAM):   end;
2269722   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2269723   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2269724   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2269725   +   end;
MPRINT(EM_DIAGRAM):   end;
2269726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269727   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2269728   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2269729   +   end;
MPRINT(EM_DIAGRAM):   end;
2269730   +end;
MPRINT(EM_DIAGRAM):   end;
2269731   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2269732   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2269733   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2269734   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2269735   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2269736   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2269737   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2269738   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2269739   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2269740   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2269741   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2269742   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2269743   +END;
MPRINT(EM_DIAGRAM):   END;
2269744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2269745   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2269746   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2269747   +END;
MPRINT(EM_DIAGRAM):   END;
2269748   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2269749   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2269750   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2269751   +END;
MPRINT(EM_DIAGRAM):   END;
2269752   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2269753   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2269754   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2269755   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2269756   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2269757   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2269758   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2269759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269760   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2269761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2269762   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2269763   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2269764   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2269765   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2269766   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2269767   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2269768   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2269769   +END;
MPRINT(EM_DIAGRAM):   END;
2269770   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2269771   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2269772   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2269773   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2269774   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2269775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269776   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2269777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269778   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2269779   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2269780   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2269781   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2269782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269783   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2269784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269785   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2269786   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2269787   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2269788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269789   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
2269790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269792   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2269793   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2269794   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2269795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2269796   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2269797   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2269798   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2269799   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2269800   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2269801   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2269802   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2269803   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2269804   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2269805   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2269806   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2269807   +LENGTH _WARN_ $4
2269808   +      F_DepVar  $ 12
2269809   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2269810   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2269811   +
2269812   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2269813   +
2269814   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2269815   +
2269816   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2269817   +
2269818   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2269819   +
2269820   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2269821   +
2269822   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2269823   +
2269824   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2269825   +
2269826   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2269827   +
2269828   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2269829   +
2269830   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2269831   +
2269832   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2269833   +
2269834   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2269835   +
2269836   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2269837   +
2269838   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2269839   +
2269840   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2269841   +
2269842   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2269843   +
2269844   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2269845   +
2269846   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2269847   +
2269848   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2269849   +
2269850   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2269851   +
2269852   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2269853   +
2269854   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2269855   +
2269856   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2269857   +
2269858   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2269859   +
2269860   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2269861   +
2269862   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2269863   +
2269864   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2269865   +
2269866   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2269867   +
2269868   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2269869   +
2269870   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2269871   +
2269872   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2269873   +
2269874   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2269875   +
2269876   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2269877   +
2269878   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2269879   +
2269880   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2269881   +
2269882   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2269883   +
2269884   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2269885   +
2269886   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2269887   +
2269888   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2269889   +
2269890   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2269891   +
2269892   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2269893   +
2269894   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2269895   +
2269896   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2269897   +
2269898   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2269899   +
2269900   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2269901   +
2269902   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2269903   +
2269904   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2269905   +
2269906   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2269907   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2269908   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2269909   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2269910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269912   +end;
MPRINT(EM_DIAGRAM):   end;
2269913   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269915   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2269916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269918   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2269919   +   end;
MPRINT(EM_DIAGRAM):   end;
2269920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269921   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2269922   +   end;
MPRINT(EM_DIAGRAM):   end;
2269923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269924   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2269925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269927   +   end;
MPRINT(EM_DIAGRAM):   end;
2269928   +end;
MPRINT(EM_DIAGRAM):   end;
2269929   +
2269930   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2269931   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2269932   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2269933   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2269934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269936   +end;
MPRINT(EM_DIAGRAM):   end;
2269937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269939   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2269940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269942   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2269943   +   end;
MPRINT(EM_DIAGRAM):   end;
2269944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269945   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2269946   +   end;
MPRINT(EM_DIAGRAM):   end;
2269947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269948   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2269949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269951   +   end;
MPRINT(EM_DIAGRAM):   end;
2269952   +end;
MPRINT(EM_DIAGRAM):   end;
2269953   +
2269954   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2269955   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2269956   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2269957   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2269958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269960   +end;
MPRINT(EM_DIAGRAM):   end;
2269961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269963   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2269964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269966   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2269967   +   end;
MPRINT(EM_DIAGRAM):   end;
2269968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269969   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2269970   +   end;
MPRINT(EM_DIAGRAM):   end;
2269971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269972   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2269973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269975   +   end;
MPRINT(EM_DIAGRAM):   end;
2269976   +end;
MPRINT(EM_DIAGRAM):   end;
2269977   +
2269978   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2269979   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2269980   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2269981   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2269982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2269983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269984   +end;
MPRINT(EM_DIAGRAM):   end;
2269985   +else do;
MPRINT(EM_DIAGRAM):   else do;
2269986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2269987   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2269988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2269989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2269990   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2269991   +   end;
MPRINT(EM_DIAGRAM):   end;
2269992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2269993   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2269994   +   end;
MPRINT(EM_DIAGRAM):   end;
2269995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2269996   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2269997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2269998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2269999   +   end;
MPRINT(EM_DIAGRAM):   end;
2270000   +end;
MPRINT(EM_DIAGRAM):   end;
2270001   +
2270002   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2270003   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2270004   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2270005   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2270006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270008   +end;
MPRINT(EM_DIAGRAM):   end;
2270009   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270011   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2270012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270014   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2270015   +   end;
MPRINT(EM_DIAGRAM):   end;
2270016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270017   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2270018   +   end;
MPRINT(EM_DIAGRAM):   end;
2270019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270020   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2270021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270023   +   end;
MPRINT(EM_DIAGRAM):   end;
2270024   +end;
MPRINT(EM_DIAGRAM):   end;
2270025   +
2270026   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2270027   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2270028   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2270029   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2270030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270032   +end;
MPRINT(EM_DIAGRAM):   end;
2270033   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270035   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2270036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270038   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2270039   +   end;
MPRINT(EM_DIAGRAM):   end;
2270040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270041   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2270042   +   end;
MPRINT(EM_DIAGRAM):   end;
2270043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270044   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2270045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270047   +   end;
MPRINT(EM_DIAGRAM):   end;
2270048   +end;
MPRINT(EM_DIAGRAM):   end;
2270049   +
2270050   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2270051   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2270052   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2270053   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2270054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270056   +end;
MPRINT(EM_DIAGRAM):   end;
2270057   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270059   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2270060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270061   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2270062   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2270063   +   end;
MPRINT(EM_DIAGRAM):   end;
2270064   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2270065   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2270066   +   end;
MPRINT(EM_DIAGRAM):   end;
2270067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270068   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2270069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270071   +   end;
MPRINT(EM_DIAGRAM):   end;
2270072   +end;
MPRINT(EM_DIAGRAM):   end;
2270073   +
2270074   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2270075   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2270076   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2270077   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2270078   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2270079   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2270080   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2270081   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2270082   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2270083   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2270084   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2270085   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2270086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270088   +end;
MPRINT(EM_DIAGRAM):   end;
2270089   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270090   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2270091   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2270092   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270093   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2270094   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2270095   +   end;
MPRINT(EM_DIAGRAM):   end;
2270096   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2270097   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2270098   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2270099   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2270100   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2270101   +   end;
MPRINT(EM_DIAGRAM):   end;
2270102   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2270103   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2270104   +   end;
MPRINT(EM_DIAGRAM):   end;
2270105   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2270106   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2270107   +   end;
MPRINT(EM_DIAGRAM):   end;
2270108   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2270109   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2270110   +   end;
MPRINT(EM_DIAGRAM):   end;
2270111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270112   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2270113   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2270114   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2270115   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2270116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270118   +   end;
MPRINT(EM_DIAGRAM):   end;
2270119   +end;
MPRINT(EM_DIAGRAM):   end;
2270120   +
2270121   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2270122   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2270123   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2270124   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2270125   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2270126   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2270127   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2270128   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2270129   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2270130   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2270131   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2270132   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2270133   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2270134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270136   +end;
MPRINT(EM_DIAGRAM):   end;
2270137   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270138   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2270139   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2270140   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270141   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2270142   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2270143   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2270144   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2270145   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2270146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270147   +         end;
MPRINT(EM_DIAGRAM):   end;
2270148   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2270149   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2270150   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2270151   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270152   +            end;
MPRINT(EM_DIAGRAM):   end;
2270153   +         end;
MPRINT(EM_DIAGRAM):   end;
2270154   +      end;
MPRINT(EM_DIAGRAM):   end;
2270155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2270156   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2270157   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2270158   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270159   +         end;
MPRINT(EM_DIAGRAM):   end;
2270160   +      end;
MPRINT(EM_DIAGRAM):   end;
2270161   +   end;
MPRINT(EM_DIAGRAM):   end;
2270162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270163   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2270164   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2270165   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270166   +      end;
MPRINT(EM_DIAGRAM):   end;
2270167   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2270168   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2270169   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2270170   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2270171   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2270172   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2270173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270174   +         end;
MPRINT(EM_DIAGRAM):   end;
2270175   +      end;
MPRINT(EM_DIAGRAM):   end;
2270176   +   end;
MPRINT(EM_DIAGRAM):   end;
2270177   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2270178   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2270179   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2270180   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2270181   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2270182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270184   +   end;
MPRINT(EM_DIAGRAM):   end;
2270185   +end;
MPRINT(EM_DIAGRAM):   end;
2270186   +
2270187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270188   +*** Checking missing input Interval
2270189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2270190   +
2270191   +IF NMISS(
2270192   +   AcceptedCmpTotal ,
2270193   +   Age ,
2270194   +   Frq ,
2270195   +   Income ,
2270196   +   Kidhome ,
2270197   +   Mnt ,
2270198   +   MntFishProducts ,
2270199   +   MntFruits ,
2270200   +   MntGoldProds ,
2270201   +   MntMeatProducts ,
2270202   +   MntSweetProducts ,
2270203   +   MntWines ,
2270204   +   MonthsAsCustomer ,
2270205   +   NumCatalogPurchases ,
2270206   +   NumDealsPurchases ,
2270207   +   NumDistPurchases ,
2270208   +   NumStorePurchases ,
2270209   +   NumWebPurchases ,
2270210   +   NumWebVisitsMonth ,
2270211   +   RFMstat ,
2270212   +   RMntFrq ,
2270213   +   Recency ,
2270214   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2270215   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2270216   +
2270217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270218   +END;
MPRINT(EM_DIAGRAM):   END;
2270219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270220   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2270221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270222   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2270223   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2270224   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2270225   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2270226   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2270227   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2270228   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2270229   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2270230   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2270231   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2270232   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2270233   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2270234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2270235   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2270236   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2270237   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2270238   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2270239   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2270240   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2270241   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2270242   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2270243   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2270244   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2270245   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2270246   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2270247   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2270248   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2270249   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2270250   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2270251   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2270252   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2270253   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2270254   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2270255   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2270256   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2270257   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2270258   +END;
MPRINT(EM_DIAGRAM):   END;
2270259   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2270260   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2270261   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2270262   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2270263   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2270264   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2270265   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2270266   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2270267   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2270268   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2270269   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2270270   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2270271   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2270272   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2270273   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2270274   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2270275   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2270276   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2270277   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2270278   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2270279   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2270280   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2270281   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2270282   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2270283   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2270284   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2270285   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2270286   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2270287   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2270288   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2270289   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2270290   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2270291   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2270292   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2270293   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2270294   +   ELSE S_NumCatalogPurchases
2270295   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2270296   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2270297   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2270298   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2270299   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2270300   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2270301   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2270302   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2270303   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2270304   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2270305   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2270306   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2270307   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2270308   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2270309   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2270310   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2270311   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2270312   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2270313   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2270314   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2270315   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2270316   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2270317   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2270318   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2270319   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2270320   +END;
MPRINT(EM_DIAGRAM):   END;
2270321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270322   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2270323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270325   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2270326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270328   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2270329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270330   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2270331   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2270332   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2270333   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2270334   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2270335   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2270336   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2270337   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2270338   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2270339   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2270340   +          +     0.09634439105648 * S_NumDealsPurchases
2270341   +          +     -0.2727389064287 * S_NumDistPurchases
2270342   +          +    -0.14179871978162 * S_NumStorePurchases
2270343   +          +     0.11008049559527 * S_NumWebPurchases
2270344   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2270345   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2270346   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2270347   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2270348   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2270349   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2270350   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2270351   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2270352   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2270353   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2270354   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2270355   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2270356   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2270357   +          +     0.15835936877168 * S_NumDealsPurchases
2270358   +          +     0.04229992769587 * S_NumDistPurchases
2270359   +          +    -0.04051362547639 * S_NumStorePurchases
2270360   +          +    -0.01791546488406 * S_NumWebPurchases
2270361   +          +     0.28833008597045 * S_NumWebVisitsMonth
2270362   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2270363   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2270364   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2270365   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2270366   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2270367   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2270368   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2270369   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2270370   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2270371   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2270372   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2270373   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2270374   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2270375   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2270376   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2270377   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2270378   +          +     -0.0504367274898 * Marital_StatusDivorced
2270379   +          +     0.28345714390306 * Marital_StatusMarried
2270380   +          +     -0.2012923780435 * Marital_StatusSingle
2270381   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2270382   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2270383   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2270384   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2270385   +          +     0.06828937261262 * Marital_StatusDivorced
2270386   +          +     -0.1520862543536 * Marital_StatusMarried
2270387   +          +      0.1392808464716 * Marital_StatusSingle
2270388   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2270389   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2270390   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2270391   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2270392   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2270393   +END;
MPRINT(EM_DIAGRAM):   END;
2270394   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2270395   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2270396   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2270397   +END;
MPRINT(EM_DIAGRAM):   END;
2270398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270399   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2270400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270401   +
2270402   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2270403   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2270404   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2270405   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2270406   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2270407   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270408   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2270409   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2270410   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2270411   +end;
MPRINT(EM_DIAGRAM):   end;
2270412   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270413   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2270414   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2270415   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2270416   +   end;
MPRINT(EM_DIAGRAM):   end;
2270417   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2270418   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2270419   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2270420   +   end;
MPRINT(EM_DIAGRAM):   end;
2270421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270422   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2270423   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2270424   +   end;
MPRINT(EM_DIAGRAM):   end;
2270425   +end;
MPRINT(EM_DIAGRAM):   end;
2270426   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2270427   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2270428   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2270429   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2270430   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2270431   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2270432   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2270433   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2270434   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2270435   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2270436   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2270437   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2270438   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2270439   +END;
MPRINT(EM_DIAGRAM):   END;
2270440   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2270441   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2270442   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2270443   +END;
MPRINT(EM_DIAGRAM):   END;
2270444   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2270445   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2270446   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2270447   +END;
MPRINT(EM_DIAGRAM):   END;
2270448   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2270449   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2270450   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2270451   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2270452   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2270453   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2270454   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2270455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270456   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2270457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270458   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2270459   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2270460   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2270461   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2270462   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2270463   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2270464   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2270465   +END;
MPRINT(EM_DIAGRAM):   END;
2270466   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2270467   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2270468   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2270469   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2270470   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2270471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270472   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2270473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270474   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2270475   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2270476   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2270477   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2270478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270479   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2270480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270481   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2270482   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2270483   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2270484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270485   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
2270486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270488   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2270489   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2270490   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2270491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2270492   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2270493   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2270494   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2270495   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2270496   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2270497   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2270498   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2270499   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2270500   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2270501   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2270502   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2270503   +LENGTH _WARN_ $4
2270504   +      F_DepVar  $ 12
2270505   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2270506   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2270507   +
2270508   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2270509   +
2270510   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2270511   +
2270512   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2270513   +
2270514   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2270515   +
2270516   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2270517   +
2270518   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2270519   +
2270520   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2270521   +
2270522   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2270523   +
2270524   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2270525   +
2270526   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2270527   +
2270528   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2270529   +
2270530   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2270531   +
2270532   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2270533   +
2270534   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2270535   +
2270536   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2270537   +
2270538   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2270539   +
2270540   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2270541   +
2270542   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2270543   +
2270544   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2270545   +
2270546   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2270547   +
2270548   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2270549   +
2270550   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2270551   +
2270552   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2270553   +
2270554   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2270555   +
2270556   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2270557   +
2270558   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2270559   +
2270560   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2270561   +
2270562   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2270563   +
2270564   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2270565   +
2270566   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2270567   +
2270568   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2270569   +
2270570   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2270571   +
2270572   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2270573   +
2270574   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2270575   +
2270576   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2270577   +
2270578   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2270579   +
2270580   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2270581   +
2270582   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2270583   +
2270584   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2270585   +
2270586   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2270587   +
2270588   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2270589   +
2270590   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2270591   +
2270592   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2270593   +
2270594   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2270595   +
2270596   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2270597   +
2270598   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2270599   +
2270600   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2270601   +
2270602   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2270603   +
2270604   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2270605   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2270606   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2270607   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2270608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270610   +end;
MPRINT(EM_DIAGRAM):   end;
2270611   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270613   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2270614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270616   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2270617   +   end;
MPRINT(EM_DIAGRAM):   end;
2270618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270619   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2270620   +   end;
MPRINT(EM_DIAGRAM):   end;
2270621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270622   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2270623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270625   +   end;
MPRINT(EM_DIAGRAM):   end;
2270626   +end;
MPRINT(EM_DIAGRAM):   end;
2270627   +
2270628   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2270629   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2270630   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2270631   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2270632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270634   +end;
MPRINT(EM_DIAGRAM):   end;
2270635   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270637   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2270638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270640   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2270641   +   end;
MPRINT(EM_DIAGRAM):   end;
2270642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270643   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2270644   +   end;
MPRINT(EM_DIAGRAM):   end;
2270645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270646   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2270647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270649   +   end;
MPRINT(EM_DIAGRAM):   end;
2270650   +end;
MPRINT(EM_DIAGRAM):   end;
2270651   +
2270652   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2270653   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2270654   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2270655   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2270656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270658   +end;
MPRINT(EM_DIAGRAM):   end;
2270659   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270661   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2270662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270663   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270664   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2270665   +   end;
MPRINT(EM_DIAGRAM):   end;
2270666   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270667   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2270668   +   end;
MPRINT(EM_DIAGRAM):   end;
2270669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270670   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2270671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270673   +   end;
MPRINT(EM_DIAGRAM):   end;
2270674   +end;
MPRINT(EM_DIAGRAM):   end;
2270675   +
2270676   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2270677   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2270678   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2270679   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2270680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270682   +end;
MPRINT(EM_DIAGRAM):   end;
2270683   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270685   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2270686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270688   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2270689   +   end;
MPRINT(EM_DIAGRAM):   end;
2270690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270691   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2270692   +   end;
MPRINT(EM_DIAGRAM):   end;
2270693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270694   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2270695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270697   +   end;
MPRINT(EM_DIAGRAM):   end;
2270698   +end;
MPRINT(EM_DIAGRAM):   end;
2270699   +
2270700   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2270701   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2270702   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2270703   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2270704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270706   +end;
MPRINT(EM_DIAGRAM):   end;
2270707   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270709   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2270710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270712   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2270713   +   end;
MPRINT(EM_DIAGRAM):   end;
2270714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270715   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2270716   +   end;
MPRINT(EM_DIAGRAM):   end;
2270717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270718   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2270719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270721   +   end;
MPRINT(EM_DIAGRAM):   end;
2270722   +end;
MPRINT(EM_DIAGRAM):   end;
2270723   +
2270724   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2270725   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2270726   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2270727   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2270728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270730   +end;
MPRINT(EM_DIAGRAM):   end;
2270731   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270733   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2270734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270735   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2270736   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2270737   +   end;
MPRINT(EM_DIAGRAM):   end;
2270738   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2270739   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2270740   +   end;
MPRINT(EM_DIAGRAM):   end;
2270741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270742   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2270743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270745   +   end;
MPRINT(EM_DIAGRAM):   end;
2270746   +end;
MPRINT(EM_DIAGRAM):   end;
2270747   +
2270748   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2270749   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2270750   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2270751   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2270752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270754   +end;
MPRINT(EM_DIAGRAM):   end;
2270755   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2270757   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2270758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270759   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2270760   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2270761   +   end;
MPRINT(EM_DIAGRAM):   end;
2270762   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2270763   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2270764   +   end;
MPRINT(EM_DIAGRAM):   end;
2270765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270766   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2270767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270769   +   end;
MPRINT(EM_DIAGRAM):   end;
2270770   +end;
MPRINT(EM_DIAGRAM):   end;
2270771   +
2270772   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2270773   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2270774   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2270775   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2270776   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2270777   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2270778   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2270779   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2270780   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2270781   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2270782   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2270783   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2270784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270786   +end;
MPRINT(EM_DIAGRAM):   end;
2270787   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270788   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2270789   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2270790   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270791   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2270792   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2270793   +   end;
MPRINT(EM_DIAGRAM):   end;
2270794   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2270795   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2270796   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2270797   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2270798   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2270799   +   end;
MPRINT(EM_DIAGRAM):   end;
2270800   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2270801   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2270802   +   end;
MPRINT(EM_DIAGRAM):   end;
2270803   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2270804   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2270805   +   end;
MPRINT(EM_DIAGRAM):   end;
2270806   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2270807   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2270808   +   end;
MPRINT(EM_DIAGRAM):   end;
2270809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270810   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2270811   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2270812   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2270813   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2270814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270816   +   end;
MPRINT(EM_DIAGRAM):   end;
2270817   +end;
MPRINT(EM_DIAGRAM):   end;
2270818   +
2270819   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2270820   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2270821   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2270822   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2270823   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2270824   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2270825   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2270826   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2270827   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2270828   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2270829   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2270830   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2270831   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2270832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2270833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270834   +end;
MPRINT(EM_DIAGRAM):   end;
2270835   +else do;
MPRINT(EM_DIAGRAM):   else do;
2270836   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2270837   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2270838   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2270839   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2270840   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2270841   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2270842   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2270843   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2270844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270845   +         end;
MPRINT(EM_DIAGRAM):   end;
2270846   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2270847   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2270848   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2270849   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270850   +            end;
MPRINT(EM_DIAGRAM):   end;
2270851   +         end;
MPRINT(EM_DIAGRAM):   end;
2270852   +      end;
MPRINT(EM_DIAGRAM):   end;
2270853   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2270854   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2270855   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2270856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270857   +         end;
MPRINT(EM_DIAGRAM):   end;
2270858   +      end;
MPRINT(EM_DIAGRAM):   end;
2270859   +   end;
MPRINT(EM_DIAGRAM):   end;
2270860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2270861   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2270862   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2270863   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270864   +      end;
MPRINT(EM_DIAGRAM):   end;
2270865   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2270866   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2270867   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2270868   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2270869   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2270870   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2270871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2270872   +         end;
MPRINT(EM_DIAGRAM):   end;
2270873   +      end;
MPRINT(EM_DIAGRAM):   end;
2270874   +   end;
MPRINT(EM_DIAGRAM):   end;
2270875   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2270876   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2270877   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2270878   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2270879   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2270880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2270881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270882   +   end;
MPRINT(EM_DIAGRAM):   end;
2270883   +end;
MPRINT(EM_DIAGRAM):   end;
2270884   +
2270885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270886   +*** Checking missing input Interval
2270887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2270888   +
2270889   +IF NMISS(
2270890   +   AcceptedCmpTotal ,
2270891   +   Age ,
2270892   +   Frq ,
2270893   +   Income ,
2270894   +   Kidhome ,
2270895   +   Mnt ,
2270896   +   MntFishProducts ,
2270897   +   MntFruits ,
2270898   +   MntGoldProds ,
2270899   +   MntMeatProducts ,
2270900   +   MntSweetProducts ,
2270901   +   MntWines ,
2270902   +   MonthsAsCustomer ,
2270903   +   NumCatalogPurchases ,
2270904   +   NumDealsPurchases ,
2270905   +   NumDistPurchases ,
2270906   +   NumStorePurchases ,
2270907   +   NumWebPurchases ,
2270908   +   NumWebVisitsMonth ,
2270909   +   RFMstat ,
2270910   +   RMntFrq ,
2270911   +   Recency ,
2270912   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2270913   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2270914   +
2270915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2270916   +END;
MPRINT(EM_DIAGRAM):   END;
2270917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270918   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2270919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2270920   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2270921   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2270922   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2270923   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2270924   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2270925   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2270926   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2270927   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2270928   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2270929   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2270930   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2270931   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2270932   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2270933   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2270934   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2270935   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2270936   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2270937   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2270938   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2270939   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2270940   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2270941   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2270942   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2270943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2270944   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2270945   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2270946   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2270947   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2270948   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2270949   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2270950   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2270951   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2270952   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2270953   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2270954   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2270955   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2270956   +END;
MPRINT(EM_DIAGRAM):   END;
2270957   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2270958   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2270959   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2270960   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2270961   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2270962   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2270963   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2270964   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2270965   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2270966   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2270967   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2270968   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2270969   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2270970   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2270971   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2270972   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2270973   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2270974   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2270975   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2270976   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2270977   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2270978   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2270979   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2270980   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2270981   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2270982   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2270983   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2270984   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2270985   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2270986   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2270987   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2270988   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2270989   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2270990   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2270991   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2270992   +   ELSE S_NumCatalogPurchases
2270993   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2270994   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2270995   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2270996   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2270997   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2270998   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2270999   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2271000   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2271001   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2271002   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2271003   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2271004   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2271005   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2271006   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2271007   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2271008   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2271009   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2271010   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2271011   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2271012   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2271013   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2271014   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2271015   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2271016   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2271017   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2271018   +END;
MPRINT(EM_DIAGRAM):   END;
2271019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271020   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2271021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271023   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2271024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271026   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2271027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271028   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2271029   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2271030   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2271031   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2271032   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2271033   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2271034   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2271035   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2271036   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2271037   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2271038   +          +     0.10832450413796 * S_NumDealsPurchases
2271039   +          +     0.17985750884741 * S_NumDistPurchases
2271040   +          +     0.45794093255577 * S_NumStorePurchases
2271041   +          +     0.37000538836801 * S_NumWebPurchases
2271042   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2271043   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2271044   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2271045   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 *
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 *
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts +
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 *
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines +
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases +
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases +
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases +
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 *
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2271046   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2271047   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2271048   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2271049   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2271050   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2271051   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2271052   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2271053   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2271054   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2271055   +          +    -1.14287651740452 * S_NumDealsPurchases
2271056   +          +    -0.03763726936438 * S_NumDistPurchases
2271057   +          +     0.87545461519128 * S_NumStorePurchases
2271058   +          +     1.40430622837706 * S_NumWebPurchases
2271059   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2271060   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2271061   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2271062   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome +
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 *
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts +
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 *
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 *
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 *
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 *
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq +
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2271063   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2271064   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2271065   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2271066   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2271067   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 +
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 *
HigherEducationBinary0 ;
2271068   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2271069   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2271070   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2271071   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2271072   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 *
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 +
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 *
HigherEducationBinary0 ;
2271073   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2271074   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2271075   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2271076   +          +    -0.73074769535078 * Marital_StatusDivorced
2271077   +          +     1.30761047614007 * Marital_StatusMarried
2271078   +          +    -0.89398481770909 * Marital_StatusSingle
2271079   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle +
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation +
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced +
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle +
1.23033906473946 * Marital_StatusTogether ;
2271080   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2271081   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2271082   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2271083   +          +     0.18252613160517 * Marital_StatusDivorced
2271084   +          +     0.12434140806967 * Marital_StatusMarried
2271085   +          +    -0.30167854485292 * Marital_StatusSingle
2271086   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle +
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation +
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced +
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle +
0.17039487484346 * Marital_StatusTogether ;
2271087   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2271088   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2271089   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2271090   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2271091   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2271092   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2271093   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2271094   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2271095   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2271096   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2271097   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2271098   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2271099   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2271100   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2271101   +END;
MPRINT(EM_DIAGRAM):   END;
2271102   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2271103   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2271104   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2271105   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2271106   +END;
MPRINT(EM_DIAGRAM):   END;
2271107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271108   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2271109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271110   +
2271111   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2271112   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2271113   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2271114   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2271115   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2271116   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271117   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2271118   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2271119   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2271120   +end;
MPRINT(EM_DIAGRAM):   end;
2271121   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271122   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2271123   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2271124   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2271125   +   end;
MPRINT(EM_DIAGRAM):   end;
2271126   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2271127   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2271128   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2271129   +   end;
MPRINT(EM_DIAGRAM):   end;
2271130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271131   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2271132   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2271133   +   end;
MPRINT(EM_DIAGRAM):   end;
2271134   +end;
MPRINT(EM_DIAGRAM):   end;
2271135   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2271136   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2271137   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 +
22.9468369203579 * H1x1_3 ;
2271138   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2271139   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2271140   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2271141   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2271142   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2271143   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2271144   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2271145   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2271146   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2271147   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2271148   +END;
MPRINT(EM_DIAGRAM):   END;
2271149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2271150   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2271151   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2271152   +END;
MPRINT(EM_DIAGRAM):   END;
2271153   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2271154   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2271155   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2271156   +END;
MPRINT(EM_DIAGRAM):   END;
2271157   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2271158   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2271159   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2271160   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2271161   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2271162   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2271163   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2271164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271165   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2271166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271167   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2271168   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2271169   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2271170   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2271171   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2271172   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2271173   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2271174   +END;
MPRINT(EM_DIAGRAM):   END;
2271175   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2271176   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2271177   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2271178   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2271179   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2271180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271181   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2271182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271183   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2271184   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2271185   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2271186   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2271187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271188   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2271189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271190   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2271191   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2271192   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2271193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271194   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
2271195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271197   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2271198   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2271199   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2271200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2271201   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2271202   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2271203   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2271204   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2271205   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2271206   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2271207   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2271208   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2271209   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2271210   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2271211   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2271212   +LENGTH _WARN_ $4
2271213   +      F_DepVar  $ 12
2271214   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2271215   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2271216   +
2271217   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2271218   +
2271219   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2271220   +
2271221   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2271222   +
2271223   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2271224   +
2271225   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2271226   +
2271227   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2271228   +
2271229   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2271230   +
2271231   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2271232   +
2271233   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2271234   +
2271235   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2271236   +
2271237   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2271238   +
2271239   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2271240   +
2271241   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2271242   +
2271243   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2271244   +
2271245   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2271246   +
2271247   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2271248   +
2271249   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2271250   +
2271251   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2271252   +
2271253   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2271254   +
2271255   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2271256   +
2271257   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2271258   +
2271259   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2271260   +
2271261   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2271262   +
2271263   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2271264   +
2271265   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2271266   +
2271267   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2271268   +
2271269   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2271270   +
2271271   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2271272   +
2271273   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2271274   +
2271275   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2271276   +
2271277   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2271278   +
2271279   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2271280   +
2271281   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2271282   +
2271283   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2271284   +
2271285   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2271286   +
2271287   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2271288   +
2271289   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2271290   +
2271291   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2271292   +
2271293   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2271294   +
2271295   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2271296   +
2271297   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2271298   +
2271299   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2271300   +
2271301   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2271302   +
2271303   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2271304   +
2271305   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2271306   +
2271307   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2271308   +
2271309   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2271310   +
2271311   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2271312   +
2271313   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2271314   +
2271315   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2271316   +
2271317   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2271318   +
2271319   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2271320   +
2271321   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2271322   +
2271323   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2271324   +
2271325   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2271326   +
2271327   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2271328   +
2271329   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2271330   +
2271331   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2271332   +
2271333   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2271334   +
2271335   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2271336   +
2271337   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2271338   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2271339   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2271340   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2271341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271343   +end;
MPRINT(EM_DIAGRAM):   end;
2271344   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271346   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2271347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271348   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271349   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2271350   +   end;
MPRINT(EM_DIAGRAM):   end;
2271351   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271352   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2271353   +   end;
MPRINT(EM_DIAGRAM):   end;
2271354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271355   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2271356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271358   +   end;
MPRINT(EM_DIAGRAM):   end;
2271359   +end;
MPRINT(EM_DIAGRAM):   end;
2271360   +
2271361   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2271362   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2271363   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2271364   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2271365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271367   +end;
MPRINT(EM_DIAGRAM):   end;
2271368   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271370   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2271371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271372   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271373   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2271374   +   end;
MPRINT(EM_DIAGRAM):   end;
2271375   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271376   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2271377   +   end;
MPRINT(EM_DIAGRAM):   end;
2271378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271379   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2271380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271382   +   end;
MPRINT(EM_DIAGRAM):   end;
2271383   +end;
MPRINT(EM_DIAGRAM):   end;
2271384   +
2271385   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2271386   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2271387   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2271388   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2271389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271391   +end;
MPRINT(EM_DIAGRAM):   end;
2271392   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271394   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2271395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271396   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271397   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2271398   +   end;
MPRINT(EM_DIAGRAM):   end;
2271399   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271400   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2271401   +   end;
MPRINT(EM_DIAGRAM):   end;
2271402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271403   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2271404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271406   +   end;
MPRINT(EM_DIAGRAM):   end;
2271407   +end;
MPRINT(EM_DIAGRAM):   end;
2271408   +
2271409   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2271410   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2271411   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2271412   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2271413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271415   +end;
MPRINT(EM_DIAGRAM):   end;
2271416   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271418   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2271419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271420   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271421   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2271422   +   end;
MPRINT(EM_DIAGRAM):   end;
2271423   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271424   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2271425   +   end;
MPRINT(EM_DIAGRAM):   end;
2271426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271427   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2271428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271430   +   end;
MPRINT(EM_DIAGRAM):   end;
2271431   +end;
MPRINT(EM_DIAGRAM):   end;
2271432   +
2271433   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2271434   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2271435   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2271436   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2271437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271439   +end;
MPRINT(EM_DIAGRAM):   end;
2271440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271442   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2271443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271445   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2271446   +   end;
MPRINT(EM_DIAGRAM):   end;
2271447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271448   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2271449   +   end;
MPRINT(EM_DIAGRAM):   end;
2271450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271451   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2271452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271454   +   end;
MPRINT(EM_DIAGRAM):   end;
2271455   +end;
MPRINT(EM_DIAGRAM):   end;
2271456   +
2271457   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2271458   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2271459   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2271460   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2271461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271463   +end;
MPRINT(EM_DIAGRAM):   end;
2271464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271466   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2271467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2271469   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2271470   +   end;
MPRINT(EM_DIAGRAM):   end;
2271471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2271472   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2271473   +   end;
MPRINT(EM_DIAGRAM):   end;
2271474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271475   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2271476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271478   +   end;
MPRINT(EM_DIAGRAM):   end;
2271479   +end;
MPRINT(EM_DIAGRAM):   end;
2271480   +
2271481   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2271482   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2271483   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2271484   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2271485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271487   +end;
MPRINT(EM_DIAGRAM):   end;
2271488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2271490   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2271491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271492   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2271493   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2271494   +   end;
MPRINT(EM_DIAGRAM):   end;
2271495   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2271496   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2271497   +   end;
MPRINT(EM_DIAGRAM):   end;
2271498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271499   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2271500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271502   +   end;
MPRINT(EM_DIAGRAM):   end;
2271503   +end;
MPRINT(EM_DIAGRAM):   end;
2271504   +
2271505   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2271506   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2271507   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2271508   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2271509   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2271510   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2271511   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2271512   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2271513   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2271514   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2271515   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2271516   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2271517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271519   +end;
MPRINT(EM_DIAGRAM):   end;
2271520   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271521   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2271522   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2271523   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271524   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2271525   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2271526   +   end;
MPRINT(EM_DIAGRAM):   end;
2271527   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2271528   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2271529   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2271530   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2271531   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2271532   +   end;
MPRINT(EM_DIAGRAM):   end;
2271533   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2271534   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2271535   +   end;
MPRINT(EM_DIAGRAM):   end;
2271536   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2271537   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2271538   +   end;
MPRINT(EM_DIAGRAM):   end;
2271539   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2271540   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2271541   +   end;
MPRINT(EM_DIAGRAM):   end;
2271542   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271543   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2271544   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2271545   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2271546   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2271547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271549   +   end;
MPRINT(EM_DIAGRAM):   end;
2271550   +end;
MPRINT(EM_DIAGRAM):   end;
2271551   +
2271552   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2271553   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2271554   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2271555   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2271556   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2271557   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2271558   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2271559   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2271560   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2271561   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2271562   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2271563   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2271564   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2271565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2271566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271567   +end;
MPRINT(EM_DIAGRAM):   end;
2271568   +else do;
MPRINT(EM_DIAGRAM):   else do;
2271569   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2271570   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2271571   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2271572   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2271573   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2271574   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2271575   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2271576   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2271577   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2271578   +         end;
MPRINT(EM_DIAGRAM):   end;
2271579   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2271580   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2271581   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2271582   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2271583   +            end;
MPRINT(EM_DIAGRAM):   end;
2271584   +         end;
MPRINT(EM_DIAGRAM):   end;
2271585   +      end;
MPRINT(EM_DIAGRAM):   end;
2271586   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2271587   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2271588   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2271589   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2271590   +         end;
MPRINT(EM_DIAGRAM):   end;
2271591   +      end;
MPRINT(EM_DIAGRAM):   end;
2271592   +   end;
MPRINT(EM_DIAGRAM):   end;
2271593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2271594   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2271595   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2271596   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2271597   +      end;
MPRINT(EM_DIAGRAM):   end;
2271598   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2271599   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2271600   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2271601   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2271602   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2271603   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2271604   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2271605   +         end;
MPRINT(EM_DIAGRAM):   end;
2271606   +      end;
MPRINT(EM_DIAGRAM):   end;
2271607   +   end;
MPRINT(EM_DIAGRAM):   end;
2271608   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2271609   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2271610   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2271611   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2271612   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2271613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2271614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271615   +   end;
MPRINT(EM_DIAGRAM):   end;
2271616   +end;
MPRINT(EM_DIAGRAM):   end;
2271617   +
2271618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271619   +*** Checking missing input Interval
2271620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2271621   +
2271622   +IF NMISS(
2271623   +   AcceptedCmpTotal ,
2271624   +   Age ,
2271625   +   Frq ,
2271626   +   Income ,
2271627   +   Kidhome ,
2271628   +   Mnt ,
2271629   +   MntFishProducts ,
2271630   +   MntFruits ,
2271631   +   MntGoldProds ,
2271632   +   MntMeatProducts ,
2271633   +   MntSweetProducts ,
2271634   +   MntWines ,
2271635   +   MonthsAsCustomer ,
2271636   +   NumCatalogPurchases ,
2271637   +   NumDealsPurchases ,
2271638   +   NumDistPurchases ,
2271639   +   NumStorePurchases ,
2271640   +   NumWebPurchases ,
2271641   +   NumWebVisitsMonth ,
2271642   +   RFMstat ,
2271643   +   RMntFrq ,
2271644   +   Recency ,
2271645   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2271646   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2271647   +
2271648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2271649   +END;
MPRINT(EM_DIAGRAM):   END;
2271650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271651   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2271652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2271654   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2271655   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2271656   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2271657   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2271658   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2271659   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2271660   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2271661   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2271662   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2271663   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2271664   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2271665   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2271666   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2271667   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2271668   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2271669   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2271670   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2271671   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2271672   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2271673   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2271674   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2271675   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2271676   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2271677   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2271678   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2271679   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2271680   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2271681   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2271682   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2271683   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2271684   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2271685   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2271686   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2271687   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2271688   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2271689   +END;
MPRINT(EM_DIAGRAM):   END;
2271690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2271691   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2271692   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2271693   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2271694   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2271695   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2271696   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2271697   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2271698   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2271699   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2271700   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2271701   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2271702   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2271703   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2271704   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2271705   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2271706   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2271707   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2271708   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2271709   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2271710   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2271711   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2271712   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2271713   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2271714   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2271715   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2271716   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2271717   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2271718   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2271719   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2271720   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2271721   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2271722   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2271723   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2271724   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2271725   +   ELSE S_NumCatalogPurchases
2271726   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2271727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2271728   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2271729   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2271730   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2271731   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2271732   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2271733   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2271734   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2271735   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2271736   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2271737   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2271738   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2271739   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2271740   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2271741   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2271742   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2271743   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2271744   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2271745   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2271746   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2271747   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2271748   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2271749   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2271750   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2271751   +END;
MPRINT(EM_DIAGRAM):   END;
2271752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271753   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2271754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271756   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2271757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271759   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2271760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2271762   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2271763   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2271764   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2271765   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2271766   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2271767   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2271768   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2271769   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2271770   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2271771   +          +      3.4758215776031 * S_NumDealsPurchases
2271772   +          +     0.17094021755289 * S_NumDistPurchases
2271773   +          +    -2.72090095694641 * S_NumStorePurchases
2271774   +          +    -0.31877935826328 * S_NumWebPurchases
2271775   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2271776   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2271777   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2271778   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2271779   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2271780   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2271781   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2271782   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2271783   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2271784   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2271785   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2271786   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2271787   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2271788   +          +    -1.21013804197082 * S_NumDealsPurchases
2271789   +          +     0.59974279122188 * S_NumDistPurchases
2271790   +          +     1.92425710681156 * S_NumStorePurchases
2271791   +          +     1.02413182452324 * S_NumWebPurchases
2271792   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2271793   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2271794   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2271795   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2271796   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2271797   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2271798   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2271799   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2271800   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2271801   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2271802   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2271803   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2271804   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2271805   +          +      0.4928343071801 * S_NumDealsPurchases
2271806   +          +     -0.0196677325409 * S_NumDistPurchases
2271807   +          +     0.44395828164873 * S_NumStorePurchases
2271808   +          +     0.86947051591224 * S_NumWebPurchases
2271809   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2271810   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2271811   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2271812   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2271813   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2271814   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2271815   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2271816   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2271817   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2271818   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2271819   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2271820   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2271821   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2271822   +          +     1.10280977051932 * S_NumDealsPurchases
2271823   +          +     0.99310057404036 * S_NumDistPurchases
2271824   +          +    -0.05647459609331 * S_NumStorePurchases
2271825   +          +    -0.89852483938631 * S_NumWebPurchases
2271826   +          +     2.63022480227445 * S_NumWebVisitsMonth
2271827   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2271828   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2271829   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2271830   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2271831   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2271832   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2271833   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2271834   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2271835   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2271836   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2271837   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2271838   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2271839   +          +    -2.62220616180571 * S_NumDealsPurchases
2271840   +          +    -0.51737930835331 * S_NumDistPurchases
2271841   +          +     0.88655783158133 * S_NumStorePurchases
2271842   +          +     0.35132468809969 * S_NumWebPurchases
2271843   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2271844   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2271845   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2271846   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2271847   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2271848   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2271849   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2271850   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2271851   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2271852   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2271853   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2271854   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2271855   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2271856   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2271857   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2271858   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2271859   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2271860   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2271861   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2271862   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2271863   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2271864   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2271865   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2271866   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2271867   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2271868   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2271869   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2271870   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2271871   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2271872   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2271873   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2271874   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2271875   +          +     0.34809919741136 * Marital_StatusDivorced
2271876   +          +    -0.26594093535929 * Marital_StatusMarried
2271877   +          +     0.70249715999987 * Marital_StatusSingle
2271878   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2271879   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2271880   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2271881   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2271882   +          +    -0.20448765627193 * Marital_StatusDivorced
2271883   +          +     1.73231344674733 * Marital_StatusMarried
2271884   +          +    -0.70956480480373 * Marital_StatusSingle
2271885   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2271886   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2271887   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2271888   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2271889   +          +     0.30333818684353 * Marital_StatusDivorced
2271890   +          +    -1.44603535988199 * Marital_StatusMarried
2271891   +          +     0.48409598426383 * Marital_StatusSingle
2271892   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2271893   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2271894   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2271895   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2271896   +          +     -1.5342907846297 * Marital_StatusDivorced
2271897   +          +    -1.79544684592172 * Marital_StatusMarried
2271898   +          +     0.65604313645117 * Marital_StatusSingle
2271899   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2271900   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2271901   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2271902   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2271903   +          +    -3.97940893560267 * Marital_StatusDivorced
2271904   +          +      3.5880254142663 * Marital_StatusMarried
2271905   +          +     -2.9897737730927 * Marital_StatusSingle
2271906   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2271907   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2271908   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2271909   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2271910   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2271911   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2271912   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2271913   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2271914   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2271915   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2271916   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2271917   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2271918   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2271919   +END;
MPRINT(EM_DIAGRAM):   END;
2271920   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2271921   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2271922   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2271923   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2271924   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2271925   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2271926   +END;
MPRINT(EM_DIAGRAM):   END;
2271927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271928   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2271929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2271930   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2271931   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2271932   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2271933   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2271934   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2271935   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2271936   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2271937   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2271938   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2271939   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2271940   +          +     0.07279889333775 * S_NumDealsPurchases
2271941   +          +     0.07542203992452 * S_NumDistPurchases
2271942   +          +     0.16296239303342 * S_NumStorePurchases
2271943   +          +     1.59193921229231 * S_NumWebPurchases
2271944   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2271945   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2271946   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2271947   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2271948   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2271949   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2271950   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2271951   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2271952   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2271953   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2271954   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2271955   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2271956   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2271957   +          +    -0.37456959251084 * S_NumDealsPurchases
2271958   +          +    -1.15252469975668 * S_NumDistPurchases
2271959   +          +    -1.39822501888899 * S_NumStorePurchases
2271960   +          +    -0.32777847360723 * S_NumWebPurchases
2271961   +          +     0.84026499832926 * S_NumWebVisitsMonth
2271962   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2271963   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2271964   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2271965   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2271966   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2271967   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2271968   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2271969   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2271970   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2271971   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2271972   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2271973   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2271974   +          +     1.14090099538367 * S_NumDealsPurchases
2271975   +          +     -0.2600155774492 * S_NumDistPurchases
2271976   +          +     1.31362002392113 * S_NumStorePurchases
2271977   +          +     1.31465307763555 * S_NumWebPurchases
2271978   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2271979   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2271980   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2271981   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2271982   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2271983   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2271984   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2271985   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2271986   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2271987   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2271988   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2271989   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2271990   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2271991   +          +     1.06486073796679 * S_NumDealsPurchases
2271992   +          +    -0.04890191247577 * S_NumDistPurchases
2271993   +          +     0.86871320720698 * S_NumStorePurchases
2271994   +          +     0.03183587281884 * S_NumWebPurchases
2271995   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2271996   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2271997   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2271998   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2271999   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2272000   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2272001   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2272002   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2272003   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2272004   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2272005   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2272006   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2272007   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2272008   +          +    -0.01160267590349 * S_NumDealsPurchases
2272009   +          +    -0.92773075463083 * S_NumDistPurchases
2272010   +          +    -0.83326680533995 * S_NumStorePurchases
2272011   +          +    -1.16991058954473 * S_NumWebPurchases
2272012   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2272013   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2272014   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2272015   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2272016   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2272017   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2272018   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2272019   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2272020   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2272021   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2272022   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2272023   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2272024   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2272025   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2272026   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2272027   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2272028   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2272029   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2272030   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2272031   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2272032   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2272033   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2272034   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2272035   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2272036   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2272037   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2272038   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2272039   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2272040   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2272041   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2272042   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2272043   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2272044   +          +    -0.10361472385198 * Marital_StatusDivorced
2272045   +          +     0.05574820877885 * Marital_StatusMarried
2272046   +          +     0.13130988205279 * Marital_StatusSingle
2272047   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2272048   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2272049   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2272050   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2272051   +          +      0.0059353523794 * Marital_StatusDivorced
2272052   +          +    -0.59379435051653 * Marital_StatusMarried
2272053   +          +    -1.93587108708999 * Marital_StatusSingle
2272054   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2272055   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2272056   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2272057   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2272058   +          +    -0.74333797840386 * Marital_StatusDivorced
2272059   +          +    -0.93061135117658 * Marital_StatusMarried
2272060   +          +     1.04024182655844 * Marital_StatusSingle
2272061   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2272062   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2272063   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2272064   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2272065   +          +    -3.01050675344463 * Marital_StatusDivorced
2272066   +          +      0.1638723582239 * Marital_StatusMarried
2272067   +          +     0.94548468360304 * Marital_StatusSingle
2272068   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2272069   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2272070   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2272071   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2272072   +          +    -1.37013926274158 * Marital_StatusDivorced
2272073   +          +    -0.34168970042779 * Marital_StatusMarried
2272074   +          +     0.63383683543962 * Marital_StatusSingle
2272075   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2272076   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2272077   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2272078   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2272079   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2272080   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2272081   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2272082   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2272083   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2272084   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2272085   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2272086   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2272087   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2272088   +END;
MPRINT(EM_DIAGRAM):   END;
2272089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272090   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2272091   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2272092   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2272093   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2272094   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2272095   +END;
MPRINT(EM_DIAGRAM):   END;
2272096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272097   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2272098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2272100   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2272101   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2272102   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2272103   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2272104   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2272105   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2272106   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2272107   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2272108   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2272109   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2272110   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2272111   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2272112   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2272113   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2272114   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2272115   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2272116   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2272117   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2272118   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2272119   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2272120   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2272121   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2272122   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2272123   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2272124   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2272125   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2272126   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2272127   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2272128   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2272129   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2272130   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2272131   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2272132   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2272133   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2272134   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2272135   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2272136   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2272137   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2272138   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2272139   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2272140   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2272141   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2272142   +END;
MPRINT(EM_DIAGRAM):   END;
2272143   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272144   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2272145   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2272146   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2272147   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2272148   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2272149   +END;
MPRINT(EM_DIAGRAM):   END;
2272150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272151   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2272152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272153   +
2272154   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2272155   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2272156   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2272157   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2272158   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2272159   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272160   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2272161   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2272162   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2272163   +end;
MPRINT(EM_DIAGRAM):   end;
2272164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272165   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2272166   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2272167   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2272168   +   end;
MPRINT(EM_DIAGRAM):   end;
2272169   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2272170   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2272171   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2272172   +   end;
MPRINT(EM_DIAGRAM):   end;
2272173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272174   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2272175   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2272176   +   end;
MPRINT(EM_DIAGRAM):   end;
2272177   +end;
MPRINT(EM_DIAGRAM):   end;
2272178   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2272179   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2272180   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2272181   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2272182   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2272183   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2272184   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2272185   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2272186   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2272187   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2272188   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2272189   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2272190   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2272191   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2272192   +END;
MPRINT(EM_DIAGRAM):   END;
2272193   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272194   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2272195   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2272196   +END;
MPRINT(EM_DIAGRAM):   END;
2272197   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2272198   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2272199   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2272200   +END;
MPRINT(EM_DIAGRAM):   END;
2272201   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2272202   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2272203   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2272204   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2272205   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2272206   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2272207   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2272208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272209   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2272210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272211   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2272212   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2272213   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2272214   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2272215   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2272216   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2272217   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2272218   +END;
MPRINT(EM_DIAGRAM):   END;
2272219   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2272220   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2272221   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2272222   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2272223   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2272224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272225   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2272226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272227   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2272228   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2272229   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2272230   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2272231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272232   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2272233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272234   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2272235   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2272236   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2272237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272238   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
2272239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272241   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2272242   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2272243   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2272244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272245   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2272246   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2272247   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2272248   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2272249   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2272250   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2272251   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2272252   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2272253   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2272254   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2272255   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2272256   +LENGTH _WARN_ $4
2272257   +      F_DepVar  $ 12
2272258   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2272259   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2272260   +
2272261   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2272262   +
2272263   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2272264   +
2272265   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2272266   +
2272267   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2272268   +
2272269   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2272270   +
2272271   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2272272   +
2272273   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2272274   +
2272275   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2272276   +
2272277   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2272278   +
2272279   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2272280   +
2272281   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2272282   +
2272283   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2272284   +
2272285   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2272286   +
2272287   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2272288   +
2272289   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2272290   +
2272291   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2272292   +
2272293   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2272294   +
2272295   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2272296   +
2272297   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2272298   +
2272299   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2272300   +
2272301   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2272302   +
2272303   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2272304   +
2272305   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2272306   +
2272307   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2272308   +
2272309   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2272310   +
2272311   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2272312   +
2272313   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2272314   +
2272315   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2272316   +
2272317   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2272318   +
2272319   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2272320   +
2272321   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2272322   +
2272323   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2272324   +
2272325   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2272326   +
2272327   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2272328   +
2272329   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2272330   +
2272331   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2272332   +
2272333   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2272334   +
2272335   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2272336   +
2272337   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2272338   +
2272339   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2272340   +
2272341   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2272342   +
2272343   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2272344   +
2272345   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2272346   +
2272347   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2272348   +
2272349   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2272350   +
2272351   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2272352   +
2272353   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2272354   +
2272355   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2272356   +
2272357   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2272358   +
2272359   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2272360   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2272361   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2272362   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2272363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272365   +end;
MPRINT(EM_DIAGRAM):   end;
2272366   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272367   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272368   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2272369   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272370   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272371   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2272372   +   end;
MPRINT(EM_DIAGRAM):   end;
2272373   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272374   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2272375   +   end;
MPRINT(EM_DIAGRAM):   end;
2272376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272377   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2272378   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272379   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272380   +   end;
MPRINT(EM_DIAGRAM):   end;
2272381   +end;
MPRINT(EM_DIAGRAM):   end;
2272382   +
2272383   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2272384   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2272385   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2272386   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2272387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272389   +end;
MPRINT(EM_DIAGRAM):   end;
2272390   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272392   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2272393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272394   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272395   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2272396   +   end;
MPRINT(EM_DIAGRAM):   end;
2272397   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272398   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2272399   +   end;
MPRINT(EM_DIAGRAM):   end;
2272400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272401   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2272402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272404   +   end;
MPRINT(EM_DIAGRAM):   end;
2272405   +end;
MPRINT(EM_DIAGRAM):   end;
2272406   +
2272407   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2272408   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2272409   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2272410   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2272411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272413   +end;
MPRINT(EM_DIAGRAM):   end;
2272414   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272416   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2272417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272418   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272419   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2272420   +   end;
MPRINT(EM_DIAGRAM):   end;
2272421   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272422   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2272423   +   end;
MPRINT(EM_DIAGRAM):   end;
2272424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272425   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2272426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272428   +   end;
MPRINT(EM_DIAGRAM):   end;
2272429   +end;
MPRINT(EM_DIAGRAM):   end;
2272430   +
2272431   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2272432   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2272433   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2272434   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2272435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272437   +end;
MPRINT(EM_DIAGRAM):   end;
2272438   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272440   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2272441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272442   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272443   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2272444   +   end;
MPRINT(EM_DIAGRAM):   end;
2272445   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272446   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2272447   +   end;
MPRINT(EM_DIAGRAM):   end;
2272448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272449   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2272450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272452   +   end;
MPRINT(EM_DIAGRAM):   end;
2272453   +end;
MPRINT(EM_DIAGRAM):   end;
2272454   +
2272455   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2272456   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2272457   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2272458   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2272459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272461   +end;
MPRINT(EM_DIAGRAM):   end;
2272462   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272464   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2272465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272467   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2272468   +   end;
MPRINT(EM_DIAGRAM):   end;
2272469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272470   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2272471   +   end;
MPRINT(EM_DIAGRAM):   end;
2272472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272473   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2272474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272476   +   end;
MPRINT(EM_DIAGRAM):   end;
2272477   +end;
MPRINT(EM_DIAGRAM):   end;
2272478   +
2272479   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2272480   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2272481   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2272482   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2272483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272485   +end;
MPRINT(EM_DIAGRAM):   end;
2272486   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272488   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2272489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2272491   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2272492   +   end;
MPRINT(EM_DIAGRAM):   end;
2272493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2272494   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2272495   +   end;
MPRINT(EM_DIAGRAM):   end;
2272496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272497   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2272498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272500   +   end;
MPRINT(EM_DIAGRAM):   end;
2272501   +end;
MPRINT(EM_DIAGRAM):   end;
2272502   +
2272503   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2272504   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2272505   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2272506   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2272507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272509   +end;
MPRINT(EM_DIAGRAM):   end;
2272510   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2272512   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2272513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272514   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2272515   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2272516   +   end;
MPRINT(EM_DIAGRAM):   end;
2272517   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2272518   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2272519   +   end;
MPRINT(EM_DIAGRAM):   end;
2272520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272521   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2272522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272524   +   end;
MPRINT(EM_DIAGRAM):   end;
2272525   +end;
MPRINT(EM_DIAGRAM):   end;
2272526   +
2272527   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2272528   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2272529   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2272530   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2272531   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2272532   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2272533   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2272534   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2272535   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2272536   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2272537   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2272538   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2272539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272541   +end;
MPRINT(EM_DIAGRAM):   end;
2272542   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272543   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2272544   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2272545   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272546   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2272547   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2272548   +   end;
MPRINT(EM_DIAGRAM):   end;
2272549   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2272550   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2272551   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2272552   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2272553   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2272554   +   end;
MPRINT(EM_DIAGRAM):   end;
2272555   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2272556   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2272557   +   end;
MPRINT(EM_DIAGRAM):   end;
2272558   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2272559   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2272560   +   end;
MPRINT(EM_DIAGRAM):   end;
2272561   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2272562   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2272563   +   end;
MPRINT(EM_DIAGRAM):   end;
2272564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272565   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2272566   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2272567   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2272568   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2272569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272571   +   end;
MPRINT(EM_DIAGRAM):   end;
2272572   +end;
MPRINT(EM_DIAGRAM):   end;
2272573   +
2272574   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2272575   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2272576   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2272577   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2272578   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2272579   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2272580   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2272581   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2272582   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2272583   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2272584   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2272585   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2272586   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2272587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2272588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272589   +end;
MPRINT(EM_DIAGRAM):   end;
2272590   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272591   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2272592   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2272593   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272594   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2272595   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2272596   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2272597   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2272598   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2272599   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2272600   +         end;
MPRINT(EM_DIAGRAM):   end;
2272601   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2272602   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2272603   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2272604   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2272605   +            end;
MPRINT(EM_DIAGRAM):   end;
2272606   +         end;
MPRINT(EM_DIAGRAM):   end;
2272607   +      end;
MPRINT(EM_DIAGRAM):   end;
2272608   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2272609   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2272610   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2272611   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2272612   +         end;
MPRINT(EM_DIAGRAM):   end;
2272613   +      end;
MPRINT(EM_DIAGRAM):   end;
2272614   +   end;
MPRINT(EM_DIAGRAM):   end;
2272615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272616   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2272617   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2272618   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2272619   +      end;
MPRINT(EM_DIAGRAM):   end;
2272620   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2272621   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2272622   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2272623   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2272624   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2272625   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2272626   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2272627   +         end;
MPRINT(EM_DIAGRAM):   end;
2272628   +      end;
MPRINT(EM_DIAGRAM):   end;
2272629   +   end;
MPRINT(EM_DIAGRAM):   end;
2272630   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2272631   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2272632   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2272633   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2272634   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2272635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2272636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272637   +   end;
MPRINT(EM_DIAGRAM):   end;
2272638   +end;
MPRINT(EM_DIAGRAM):   end;
2272639   +
2272640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272641   +*** Checking missing input Interval
2272642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2272643   +
2272644   +IF NMISS(
2272645   +   AcceptedCmpTotal ,
2272646   +   Age ,
2272647   +   Frq ,
2272648   +   Income ,
2272649   +   Kidhome ,
2272650   +   Mnt ,
2272651   +   MntFishProducts ,
2272652   +   MntFruits ,
2272653   +   MntGoldProds ,
2272654   +   MntMeatProducts ,
2272655   +   MntSweetProducts ,
2272656   +   MntWines ,
2272657   +   MonthsAsCustomer ,
2272658   +   NumCatalogPurchases ,
2272659   +   NumDealsPurchases ,
2272660   +   NumDistPurchases ,
2272661   +   NumStorePurchases ,
2272662   +   NumWebPurchases ,
2272663   +   NumWebVisitsMonth ,
2272664   +   RFMstat ,
2272665   +   RMntFrq ,
2272666   +   Recency ,
2272667   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2272668   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2272669   +
2272670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2272671   +END;
MPRINT(EM_DIAGRAM):   END;
2272672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272673   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2272674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2272676   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2272677   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2272678   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2272679   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2272680   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2272681   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2272682   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2272683   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2272684   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2272685   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2272686   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2272687   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2272688   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2272689   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2272690   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2272691   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2272692   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2272693   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2272694   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2272695   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2272696   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2272697   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2272698   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2272699   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2272700   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2272701   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2272702   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2272703   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2272704   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2272705   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2272706   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2272707   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2272708   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2272709   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2272710   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2272711   +END;
MPRINT(EM_DIAGRAM):   END;
2272712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272713   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2272714   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2272715   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2272716   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2272717   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2272718   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2272719   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2272720   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2272721   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2272722   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2272723   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2272724   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2272725   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2272726   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2272727   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2272728   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2272729   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2272730   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2272731   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2272732   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2272733   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2272734   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2272735   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2272736   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2272737   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2272738   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2272739   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2272740   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2272741   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2272742   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2272743   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2272744   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2272745   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2272746   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2272747   +   ELSE S_NumCatalogPurchases
2272748   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2272749   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2272750   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2272751   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2272752   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2272753   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2272754   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2272755   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2272756   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2272757   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2272758   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2272759   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2272760   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2272761   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2272762   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2272763   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2272764   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2272765   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2272766   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2272767   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2272768   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2272769   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2272770   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2272771   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2272772   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2272773   +END;
MPRINT(EM_DIAGRAM):   END;
2272774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272775   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2272776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272778   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2272779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272781   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2272782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272783   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2272784   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2272785   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2272786   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2272787   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2272788   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2272789   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2272790   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2272791   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2272792   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2272793   +          +    -1.12130210731541 * S_NumDealsPurchases
2272794   +          +    -0.12343505299726 * S_NumDistPurchases
2272795   +          +     0.11863092868196 * S_NumStorePurchases
2272796   +          +       0.583917993314 * S_NumWebPurchases
2272797   +          +     0.75529732848146 * S_NumWebVisitsMonth
2272798   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2272799   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2272800   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2272801   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2272802   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2272803   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2272804   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2272805   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2272806   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2272807   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2272808   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2272809   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2272810   +          +    -0.84113790640734 * S_NumDealsPurchases
2272811   +          +    -0.10512672747147 * S_NumDistPurchases
2272812   +          +     0.07268711782494 * S_NumStorePurchases
2272813   +          +     0.57578331257439 * S_NumWebPurchases
2272814   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2272815   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2272816   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2272817   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2272818   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2272819   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2272820   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2272821   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2272822   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2272823   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2272824   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2272825   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2272826   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2272827   +          +     0.45924983504762 * S_NumDealsPurchases
2272828   +          +    -0.25508041581692 * S_NumDistPurchases
2272829   +          +    -1.34901283858526 * S_NumStorePurchases
2272830   +          +    -0.86388975031663 * S_NumWebPurchases
2272831   +          +     1.86136110391797 * S_NumWebVisitsMonth
2272832   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2272833   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2272834   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2272835   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2272836   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2272837   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2272838   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2272839   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2272840   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2272841   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2272842   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2272843   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2272844   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2272845   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2272846   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2272847   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2272848   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2272849   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2272850   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2272851   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2272852   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2272853   +          +     0.48853068455666 * Marital_StatusDivorced
2272854   +          +    -0.54903474026465 * Marital_StatusMarried
2272855   +          +    -0.34079188373939 * Marital_StatusSingle
2272856   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2272857   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2272858   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2272859   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2272860   +          +    -1.03547689902027 * Marital_StatusDivorced
2272861   +          +     2.42164864610471 * Marital_StatusMarried
2272862   +          +    -1.95342561304942 * Marital_StatusSingle
2272863   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2272864   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2272865   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2272866   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2272867   +          +      0.4337638747935 * Marital_StatusDivorced
2272868   +          +    -0.38508657017615 * Marital_StatusMarried
2272869   +          +     -0.0160269708326 * Marital_StatusSingle
2272870   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2272871   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2272872   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2272873   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2272874   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2272875   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2272876   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2272877   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2272878   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2272879   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2272880   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2272881   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2272882   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2272883   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2272884   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2272885   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2272886   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2272887   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2272888   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2272889   +END;
MPRINT(EM_DIAGRAM):   END;
2272890   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272891   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2272892   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2272893   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2272894   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2272895   +END;
MPRINT(EM_DIAGRAM):   END;
2272896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272897   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2272898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272899   +
2272900   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2272901   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2272902   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2272903   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2272904   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2272905   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2272906   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2272907   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2272908   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2272909   +end;
MPRINT(EM_DIAGRAM):   end;
2272910   +else do;
MPRINT(EM_DIAGRAM):   else do;
2272911   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2272912   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2272913   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2272914   +   end;
MPRINT(EM_DIAGRAM):   end;
2272915   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2272916   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2272917   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2272918   +   end;
MPRINT(EM_DIAGRAM):   end;
2272919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2272920   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2272921   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2272922   +   end;
MPRINT(EM_DIAGRAM):   end;
2272923   +end;
MPRINT(EM_DIAGRAM):   end;
2272924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2272925   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2272926   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2272927   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2272928   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2272929   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2272930   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2272931   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2272932   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2272933   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2272934   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2272935   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2272936   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2272937   +END;
MPRINT(EM_DIAGRAM):   END;
2272938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2272939   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2272940   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2272941   +END;
MPRINT(EM_DIAGRAM):   END;
2272942   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2272943   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2272944   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2272945   +END;
MPRINT(EM_DIAGRAM):   END;
2272946   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2272947   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2272948   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2272949   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2272950   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2272951   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2272952   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2272953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272954   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2272955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2272956   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2272957   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2272958   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2272959   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2272960   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2272961   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2272962   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2272963   +END;
MPRINT(EM_DIAGRAM):   END;
2272964   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2272965   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2272966   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2272967   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2272968   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2272969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272970   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2272971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272972   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2272973   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2272974   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2272975   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2272976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272977   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2272978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272979   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2272980   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2272981   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2272982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272983   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
2272984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272986   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2272987   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2272988   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2272989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2272990   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2272991   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2272992   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2272993   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2272994   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2272995   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2272996   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2272997   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2272998   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2272999   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2273000   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2273001   +LENGTH _WARN_ $4
2273002   +      F_DepVar  $ 12
2273003   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2273004   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2273005   +
2273006   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2273007   +
2273008   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2273009   +
2273010   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2273011   +
2273012   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2273013   +
2273014   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2273015   +
2273016   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2273017   +
2273018   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2273019   +
2273020   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2273021   +
2273022   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2273023   +
2273024   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2273025   +
2273026   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2273027   +
2273028   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2273029   +
2273030   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2273031   +
2273032   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2273033   +
2273034   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2273035   +
2273036   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2273037   +
2273038   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2273039   +
2273040   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2273041   +
2273042   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2273043   +
2273044   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2273045   +
2273046   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2273047   +
2273048   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2273049   +
2273050   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2273051   +
2273052   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2273053   +
2273054   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2273055   +
2273056   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2273057   +
2273058   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2273059   +
2273060   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2273061   +
2273062   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2273063   +
2273064   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2273065   +
2273066   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2273067   +
2273068   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2273069   +
2273070   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2273071   +
2273072   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2273073   +
2273074   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2273075   +
2273076   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2273077   +
2273078   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2273079   +
2273080   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2273081   +
2273082   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2273083   +
2273084   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2273085   +
2273086   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2273087   +
2273088   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2273089   +
2273090   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2273091   +
2273092   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2273093   +
2273094   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2273095   +
2273096   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2273097   +
2273098   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2273099   +
2273100   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2273101   +
2273102   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2273103   +
2273104   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2273105   +
2273106   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2273107   +
2273108   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2273109   +
2273110   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2273111   +
2273112   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2273113   +
2273114   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2273115   +
2273116   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2273117   +
2273118   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2273119   +
2273120   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2273121   +
2273122   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2273123   +
2273124   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2273125   +
2273126   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2273127   +
2273128   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2273129   +
2273130   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2273131   +
2273132   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2273133   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2273134   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2273135   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2273136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273138   +end;
MPRINT(EM_DIAGRAM):   end;
2273139   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273140   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273141   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2273142   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273143   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273144   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2273145   +   end;
MPRINT(EM_DIAGRAM):   end;
2273146   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273147   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2273148   +   end;
MPRINT(EM_DIAGRAM):   end;
2273149   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273150   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2273151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273153   +   end;
MPRINT(EM_DIAGRAM):   end;
2273154   +end;
MPRINT(EM_DIAGRAM):   end;
2273155   +
2273156   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2273157   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2273158   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2273159   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2273160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273162   +end;
MPRINT(EM_DIAGRAM):   end;
2273163   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273164   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273165   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2273166   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273167   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273168   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2273169   +   end;
MPRINT(EM_DIAGRAM):   end;
2273170   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273171   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2273172   +   end;
MPRINT(EM_DIAGRAM):   end;
2273173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273174   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2273175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273177   +   end;
MPRINT(EM_DIAGRAM):   end;
2273178   +end;
MPRINT(EM_DIAGRAM):   end;
2273179   +
2273180   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2273181   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2273182   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2273183   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2273184   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273186   +end;
MPRINT(EM_DIAGRAM):   end;
2273187   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273188   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273189   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2273190   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273191   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273192   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2273193   +   end;
MPRINT(EM_DIAGRAM):   end;
2273194   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273195   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2273196   +   end;
MPRINT(EM_DIAGRAM):   end;
2273197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273198   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2273199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273201   +   end;
MPRINT(EM_DIAGRAM):   end;
2273202   +end;
MPRINT(EM_DIAGRAM):   end;
2273203   +
2273204   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2273205   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2273206   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2273207   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2273208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273210   +end;
MPRINT(EM_DIAGRAM):   end;
2273211   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273213   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2273214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273215   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273216   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2273217   +   end;
MPRINT(EM_DIAGRAM):   end;
2273218   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273219   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2273220   +   end;
MPRINT(EM_DIAGRAM):   end;
2273221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273222   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2273223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273225   +   end;
MPRINT(EM_DIAGRAM):   end;
2273226   +end;
MPRINT(EM_DIAGRAM):   end;
2273227   +
2273228   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2273229   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2273230   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2273231   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2273232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273234   +end;
MPRINT(EM_DIAGRAM):   end;
2273235   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273236   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273237   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2273238   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273239   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273240   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2273241   +   end;
MPRINT(EM_DIAGRAM):   end;
2273242   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273243   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2273244   +   end;
MPRINT(EM_DIAGRAM):   end;
2273245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273246   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2273247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273249   +   end;
MPRINT(EM_DIAGRAM):   end;
2273250   +end;
MPRINT(EM_DIAGRAM):   end;
2273251   +
2273252   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2273253   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2273254   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2273255   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2273256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273258   +end;
MPRINT(EM_DIAGRAM):   end;
2273259   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273261   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2273262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273263   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2273264   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2273265   +   end;
MPRINT(EM_DIAGRAM):   end;
2273266   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2273267   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2273268   +   end;
MPRINT(EM_DIAGRAM):   end;
2273269   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273270   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2273271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273273   +   end;
MPRINT(EM_DIAGRAM):   end;
2273274   +end;
MPRINT(EM_DIAGRAM):   end;
2273275   +
2273276   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2273277   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2273278   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2273279   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2273280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273282   +end;
MPRINT(EM_DIAGRAM):   end;
2273283   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273284   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2273285   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2273286   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273287   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2273288   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2273289   +   end;
MPRINT(EM_DIAGRAM):   end;
2273290   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2273291   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2273292   +   end;
MPRINT(EM_DIAGRAM):   end;
2273293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273294   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2273295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273297   +   end;
MPRINT(EM_DIAGRAM):   end;
2273298   +end;
MPRINT(EM_DIAGRAM):   end;
2273299   +
2273300   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2273301   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2273302   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2273303   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2273304   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2273305   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2273306   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2273307   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2273308   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2273309   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2273310   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2273311   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2273312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273314   +end;
MPRINT(EM_DIAGRAM):   end;
2273315   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273316   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2273317   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2273318   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273319   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2273320   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2273321   +   end;
MPRINT(EM_DIAGRAM):   end;
2273322   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2273323   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2273324   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2273325   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2273326   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2273327   +   end;
MPRINT(EM_DIAGRAM):   end;
2273328   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2273329   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2273330   +   end;
MPRINT(EM_DIAGRAM):   end;
2273331   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2273332   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2273333   +   end;
MPRINT(EM_DIAGRAM):   end;
2273334   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2273335   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2273336   +   end;
MPRINT(EM_DIAGRAM):   end;
2273337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273338   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2273339   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2273340   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2273341   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2273342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273344   +   end;
MPRINT(EM_DIAGRAM):   end;
2273345   +end;
MPRINT(EM_DIAGRAM):   end;
2273346   +
2273347   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2273348   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2273349   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2273350   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2273351   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2273352   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2273353   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2273354   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2273355   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2273356   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2273357   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2273358   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2273359   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2273360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2273361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273362   +end;
MPRINT(EM_DIAGRAM):   end;
2273363   +else do;
MPRINT(EM_DIAGRAM):   else do;
2273364   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2273365   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2273366   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2273367   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2273368   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2273369   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2273370   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2273371   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2273372   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2273373   +         end;
MPRINT(EM_DIAGRAM):   end;
2273374   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2273375   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2273376   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2273377   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2273378   +            end;
MPRINT(EM_DIAGRAM):   end;
2273379   +         end;
MPRINT(EM_DIAGRAM):   end;
2273380   +      end;
MPRINT(EM_DIAGRAM):   end;
2273381   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2273382   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2273383   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2273384   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2273385   +         end;
MPRINT(EM_DIAGRAM):   end;
2273386   +      end;
MPRINT(EM_DIAGRAM):   end;
2273387   +   end;
MPRINT(EM_DIAGRAM):   end;
2273388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2273389   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2273390   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2273391   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2273392   +      end;
MPRINT(EM_DIAGRAM):   end;
2273393   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2273394   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2273395   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2273396   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2273397   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2273398   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2273399   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2273400   +         end;
MPRINT(EM_DIAGRAM):   end;
2273401   +      end;
MPRINT(EM_DIAGRAM):   end;
2273402   +   end;
MPRINT(EM_DIAGRAM):   end;
2273403   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2273404   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2273405   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2273406   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2273407   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2273408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2273409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273410   +   end;
MPRINT(EM_DIAGRAM):   end;
2273411   +end;
MPRINT(EM_DIAGRAM):   end;
2273412   +
2273413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273414   +*** Checking missing input Interval
2273415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2273416   +
2273417   +IF NMISS(
2273418   +   AcceptedCmpTotal ,
2273419   +   Age ,
2273420   +   Frq ,
2273421   +   Income ,
2273422   +   Kidhome ,
2273423   +   Mnt ,
2273424   +   MntFishProducts ,
2273425   +   MntFruits ,
2273426   +   MntGoldProds ,
2273427   +   MntMeatProducts ,
2273428   +   MntSweetProducts ,
2273429   +   MntWines ,
2273430   +   MonthsAsCustomer ,
2273431   +   NumCatalogPurchases ,
2273432   +   NumDealsPurchases ,
2273433   +   NumDistPurchases ,
2273434   +   NumStorePurchases ,
2273435   +   NumWebPurchases ,
2273436   +   NumWebVisitsMonth ,
2273437   +   RFMstat ,
2273438   +   RMntFrq ,
2273439   +   Recency ,
2273440   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2273441   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2273442   +
2273443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2273444   +END;
MPRINT(EM_DIAGRAM):   END;
2273445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273446   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2273447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2273449   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2273450   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2273451   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2273452   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2273453   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2273454   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2273455   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2273456   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2273457   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2273458   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2273459   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2273460   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2273461   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2273462   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2273463   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2273464   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2273465   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2273466   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2273467   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2273468   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2273469   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2273470   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2273471   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2273472   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2273473   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2273474   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2273475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2273476   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2273477   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2273478   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2273479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2273480   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2273481   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2273482   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2273483   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2273484   +END;
MPRINT(EM_DIAGRAM):   END;
2273485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2273486   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2273487   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2273488   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2273489   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2273490   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2273491   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2273492   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2273493   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2273494   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2273495   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2273496   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2273497   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2273498   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2273499   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2273500   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2273501   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2273502   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2273503   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2273504   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2273505   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2273506   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2273507   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2273508   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2273509   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2273510   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2273511   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2273512   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2273513   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2273514   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2273515   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2273516   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2273517   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2273518   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2273519   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2273520   +   ELSE S_NumCatalogPurchases
2273521   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2273522   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2273523   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2273524   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2273525   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2273526   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2273527   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2273528   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2273529   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2273530   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2273531   +        NumStorePurchases ;
The SAS System
 
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2273532   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2273533   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2273534   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2273535   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2273536   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2273537   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2273538   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2273539   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2273540   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2273541   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2273542   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2273543   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2273544   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2273545   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2273546   +END;
MPRINT(EM_DIAGRAM):   END;
2273547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273548   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2273549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273551   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2273552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273554   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2273555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273556   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2273557   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2273558   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2273559   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2273560   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2273561   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2273562   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2273563   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2273564   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2273565   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2273566   +          +     1.32037113020393 * S_NumDealsPurchases
2273567   +          +     0.42879249227132 * S_NumDistPurchases
2273568   +          +    -0.89190172778783 * S_NumStorePurchases
2273569   +          +    -0.87975442613962 * S_NumWebPurchases
2273570   +          +     2.98977282825831 * S_NumWebVisitsMonth
2273571   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2273572   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2273573   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2273574   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2273575   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2273576   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2273577   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2273578   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2273579   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2273580   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2273581   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2273582   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2273583   +          +    -1.16737670931605 * S_NumDealsPurchases
2273584   +          +     0.08205195039242 * S_NumDistPurchases
2273585   +          +    -0.65367044520084 * S_NumStorePurchases
2273586   +          +     2.39693083674757 * S_NumWebPurchases
2273587   +          +     0.18432526469897 * S_NumWebVisitsMonth
2273588   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2273589   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2273590   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2273591   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2273592   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2273593   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2273594   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2273595   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2273596   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2273597   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2273598   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2273599   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2273600   +          +     0.76616480025024 * S_NumDealsPurchases
2273601   +          +     0.42823368706255 * S_NumDistPurchases
2273602   +          +    -1.16998364854907 * S_NumStorePurchases
2273603   +          +     -1.0841896541746 * S_NumWebPurchases
2273604   +          +     2.74837744375079 * S_NumWebVisitsMonth
2273605   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2273606   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2273607   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2273608   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2273609   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2273610   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2273611   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2273612   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2273613   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2273614   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2273615   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2273616   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2273617   +          +     0.78421010501058 * S_NumDealsPurchases
2273618   +          +     0.01075885160671 * S_NumDistPurchases
2273619   +          +    -1.99395040717832 * S_NumStorePurchases
2273620   +          +    -1.02908330834262 * S_NumWebPurchases
2273621   +          +     2.79163466516477 * S_NumWebVisitsMonth
2273622   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2273623   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2273624   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2273625   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2273626   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2273627   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2273628   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2273629   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2273630   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2273631   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2273632   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2273633   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2273634   +          +    -1.04219068390022 * S_NumDealsPurchases
2273635   +          +    -0.45770204483973 * S_NumDistPurchases
2273636   +          +    -0.04941442229195 * S_NumStorePurchases
2273637   +          +     0.67187353161183 * S_NumWebPurchases
2273638   +          +     2.01907760553871 * S_NumWebVisitsMonth
2273639   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2273640   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2273641   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2273642   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2273643   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2273644   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2273645   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2273646   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2273647   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2273648   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2273649   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2273650   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2273651   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2273652   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2273653   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2273654   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2273655   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2273656   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2273657   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2273658   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2273659   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2273660   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2273661   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2273662   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2273663   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2273664   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2273665   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2273666   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2273667   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2273668   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2273669   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2273670   +          +     2.58907527032049 * Marital_StatusDivorced
2273671   +          +    -2.45549008158921 * Marital_StatusMarried
2273672   +          +     2.56223650840768 * Marital_StatusSingle
2273673   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2273674   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2273675   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2273676   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2273677   +          +     0.83917299191368 * Marital_StatusDivorced
2273678   +          +    -0.62624692699191 * Marital_StatusMarried
2273679   +          +    -0.22585060624911 * Marital_StatusSingle
2273680   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2273681   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2273682   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2273683   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2273684   +          +    -0.65063506696715 * Marital_StatusDivorced
2273685   +          +    -2.37495865381256 * Marital_StatusMarried
2273686   +          +    -0.54954654146904 * Marital_StatusSingle
2273687   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2273688   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2273689   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2273690   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2273691   +          +     0.16185824798364 * Marital_StatusDivorced
2273692   +          +    -0.08142416735136 * Marital_StatusMarried
2273693   +          +    -0.20392270385969 * Marital_StatusSingle
2273694   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2273695   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2273696   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2273697   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2273698   +          +      -0.516522631078 * Marital_StatusDivorced
2273699   +          +    -0.61661247789976 * Marital_StatusMarried
2273700   +          +    -0.99533130308294 * Marital_StatusSingle
2273701   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2273702   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2273703   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2273704   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2273705   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2273706   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2273707   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2273708   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2273709   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2273710   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2273711   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2273712   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2273713   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2273714   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2273715   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2273716   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2273717   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2273718   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2273719   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2273720   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2273721   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2273722   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2273723   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2273724   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2273725   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2273726   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2273727   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2273728   +END;
MPRINT(EM_DIAGRAM):   END;
2273729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2273730   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2273731   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2273732   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2273733   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2273734   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2273735   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2273736   +END;
MPRINT(EM_DIAGRAM):   END;
2273737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273738   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2273739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2273741   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2273742   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2273743   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2273744   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2273745   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2273746   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2273747   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2273748   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2273749   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2273750   +          +    -0.03801022287706 * S_NumDealsPurchases
2273751   +          +    -1.50723574966419 * S_NumDistPurchases
2273752   +          +    -0.21514545448485 * S_NumStorePurchases
2273753   +          +    -0.50179555233865 * S_NumWebPurchases
2273754   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2273755   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2273756   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2273757   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2273758   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2273759   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2273760   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2273761   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2273762   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2273763   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2273764   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2273765   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2273766   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2273767   +          +     0.70551335536975 * S_NumDealsPurchases
2273768   +          +     0.02824488988803 * S_NumDistPurchases
2273769   +          +    -0.47958123842808 * S_NumStorePurchases
2273770   +          +     1.04559003239583 * S_NumWebPurchases
2273771   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2273772   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2273773   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2273774   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2273775   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2273776   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2273777   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2273778   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2273779   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2273780   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2273781   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2273782   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2273783   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2273784   +          +    -0.28907339261907 * S_NumDealsPurchases
2273785   +          +     0.04310505858352 * S_NumDistPurchases
2273786   +          +    -0.99594604666889 * S_NumStorePurchases
2273787   +          +    -0.58870940220114 * S_NumWebPurchases
2273788   +          +     0.84018399925148 * S_NumWebVisitsMonth
2273789   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2273790   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2273791   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2273792   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2273793   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2273794   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2273795   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2273796   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2273797   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2273798   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2273799   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2273800   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2273801   +          +     0.52917289878604 * S_NumDealsPurchases
2273802   +          +     0.30974142545809 * S_NumDistPurchases
2273803   +          +    -0.36081450643799 * S_NumStorePurchases
2273804   +          +    -0.28418053386759 * S_NumWebPurchases
2273805   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2273806   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2273807   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2273808   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2273809   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2273810   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2273811   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2273812   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2273813   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2273814   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2273815   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2273816   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2273817   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2273818   +          +    -0.47500053723253 * S_NumDealsPurchases
2273819   +          +     0.41421086319635 * S_NumDistPurchases
2273820   +          +     0.69664835428137 * S_NumStorePurchases
2273821   +          +     0.66359306812968 * S_NumWebPurchases
2273822   +          +     0.77931462528741 * S_NumWebVisitsMonth
2273823   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2273824   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2273825   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2273826   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2273827   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2273828   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2273829   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2273830   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2273831   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2273832   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2273833   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2273834   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2273835   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2273836   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2273837   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2273838   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2273839   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2273840   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2273841   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2273842   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2273843   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2273844   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2273845   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2273846   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2273847   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2273848   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2273849   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2273850   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2273851   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2273852   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2273853   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2273854   +          +    -1.34742914042312 * Marital_StatusDivorced
2273855   +          +    -0.75378934918763 * Marital_StatusMarried
2273856   +          +    -1.85411678929217 * Marital_StatusSingle
2273857   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2273858   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2273859   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2273860   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2273861   +          +     0.47958659206261 * Marital_StatusDivorced
2273862   +          +     -0.9665584294045 * Marital_StatusMarried
2273863   +          +      0.9733784530538 * Marital_StatusSingle
2273864   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2273865   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2273866   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2273867   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2273868   +          +    -0.56894207908284 * Marital_StatusDivorced
2273869   +          +    -0.96715106987195 * Marital_StatusMarried
2273870   +          +     1.18678144721443 * Marital_StatusSingle
2273871   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2273872   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2273873   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2273874   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2273875   +          +     -0.6061959224661 * Marital_StatusDivorced
2273876   +          +     0.03495844244684 * Marital_StatusMarried
2273877   +          +    -0.63896361063244 * Marital_StatusSingle
2273878   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2273879   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2273880   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2273881   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2273882   +          +     0.82178907301319 * Marital_StatusDivorced
2273883   +          +     1.69543553114589 * Marital_StatusMarried
2273884   +          +     -2.1272067363559 * Marital_StatusSingle
2273885   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2273886   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2273887   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2273888   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2273889   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2273890   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2273891   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2273892   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2273893   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2273894   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2273895   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2273896   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2273897   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2273898   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2273899   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2273900   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2273901   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2273902   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2273903   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2273904   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2273905   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2273906   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2273907   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2273908   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2273909   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2273910   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2273911   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2273912   +END;
MPRINT(EM_DIAGRAM):   END;
2273913   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2273914   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2273915   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2273916   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2273917   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2273918   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2273919   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2273920   +END;
MPRINT(EM_DIAGRAM):   END;
2273921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273922   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2273923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2273925   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2273926   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2273927   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2273928   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2273929   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2273930   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2273931   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2273932   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2273933   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2273934   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2273935   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2273936   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2273937   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2273938   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2273939   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2273940   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2273941   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2273942   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2273943   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2273944   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2273945   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2273946   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2273947   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2273948   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2273949   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2273950   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2273951   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2273952   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2273953   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2273954   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2273955   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2273956   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2273957   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2273958   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2273959   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2273960   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2273961   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2273962   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2273963   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2273964   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2273965   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2273966   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2273967   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2273968   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2273969   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2273970   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2273971   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2273972   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2273973   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2273974   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2273975   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2273976   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2273977   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2273978   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2273979   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2273980   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2273981   +END;
MPRINT(EM_DIAGRAM):   END;
2273982   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2273983   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2273984   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2273985   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2273986   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2273987   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2273988   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2273989   +END;
MPRINT(EM_DIAGRAM):   END;
2273990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273991   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2273992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2273993   +
2273994   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2273995   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2273996   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2273997   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2273998   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2273999   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274000   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2274001   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2274002   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2274003   +end;
MPRINT(EM_DIAGRAM):   end;
2274004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274005   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2274006   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2274007   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2274008   +   end;
MPRINT(EM_DIAGRAM):   end;
2274009   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2274010   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2274011   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2274012   +   end;
MPRINT(EM_DIAGRAM):   end;
2274013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274014   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2274015   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2274016   +   end;
MPRINT(EM_DIAGRAM):   end;
2274017   +end;
MPRINT(EM_DIAGRAM):   end;
2274018   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2274019   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2274020   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2274021   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2274022   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2274023   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2274024   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2274025   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2274026   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2274027   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2274028   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2274029   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2274030   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2274031   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2274032   +END;
MPRINT(EM_DIAGRAM):   END;
2274033   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2274034   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2274035   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2274036   +END;
MPRINT(EM_DIAGRAM):   END;
2274037   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2274038   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2274039   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2274040   +END;
MPRINT(EM_DIAGRAM):   END;
2274041   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2274042   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2274043   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2274044   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2274045   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2274046   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2274047   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2274048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274049   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2274050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274051   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2274052   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2274053   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2274054   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2274055   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2274056   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2274057   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2274058   +END;
MPRINT(EM_DIAGRAM):   END;
2274059   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2274060   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2274061   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2274062   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2274063   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2274064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274065   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2274066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274067   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2274068   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2274069   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2274070   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2274071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274072   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2274073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274074   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2274075   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2274076   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2274077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274078   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
2274079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274081   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2274082   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2274083   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2274084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2274085   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2274086   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2274087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2274088   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2274089   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2274090   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2274091   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2274092   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2274093   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2274094   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2274095   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2274096   +LENGTH _WARN_ $4
2274097   +      F_DepVar  $ 12
2274098   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2274099   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2274100   +
2274101   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2274102   +
2274103   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2274104   +
2274105   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2274106   +
2274107   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2274108   +
2274109   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2274110   +
2274111   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2274112   +
2274113   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2274114   +
2274115   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2274116   +
2274117   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2274118   +
2274119   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2274120   +
2274121   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2274122   +
2274123   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2274124   +
2274125   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2274126   +
2274127   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2274128   +
2274129   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2274130   +
2274131   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2274132   +
2274133   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2274134   +
2274135   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2274136   +
2274137   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2274138   +
2274139   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2274140   +
2274141   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2274142   +
2274143   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2274144   +
2274145   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2274146   +
2274147   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2274148   +
2274149   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2274150   +
2274151   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2274152   +
2274153   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2274154   +
2274155   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2274156   +
2274157   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2274158   +
2274159   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2274160   +
2274161   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2274162   +
2274163   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2274164   +
2274165   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2274166   +
2274167   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2274168   +
2274169   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2274170   +
2274171   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2274172   +
2274173   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2274174   +
2274175   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2274176   +
2274177   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2274178   +
2274179   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2274180   +
2274181   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2274182   +
2274183   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2274184   +
2274185   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2274186   +
2274187   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2274188   +
2274189   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2274190   +
2274191   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2274192   +
2274193   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2274194   +
2274195   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2274196   +
2274197   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2274198   +
2274199   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2274200   +
2274201   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2274202   +
2274203   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2274204   +
2274205   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2274206   +
2274207   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2274208   +
2274209   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2274210   +
2274211   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2274212   +
2274213   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2274214   +
2274215   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2274216   +
2274217   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2274218   +
2274219   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2274220   +
2274221   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2274222   +
2274223   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2274224   +
2274225   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2274226   +
2274227   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2274228   +
2274229   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2274230   +
2274231   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2274232   +
2274233   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2274234   +
2274235   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2274236   +
2274237   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2274238   +
2274239   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2274240   +
2274241   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2274242   +
2274243   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2274244   +
2274245   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2274246   +
2274247   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2274248   +
2274249   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2274250   +
2274251   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2274252   +
2274253   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2274254   +
2274255   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2274256   +
2274257   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2274258   +
2274259   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2274260   +
2274261   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2274262   +
2274263   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2274264   +
2274265   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2274266   +
2274267   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2274268   +
2274269   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2274270   +
2274271   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2274272   +
2274273   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2274274   +
2274275   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2274276   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2274277   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2274278   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2274279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274281   +end;
MPRINT(EM_DIAGRAM):   end;
2274282   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274283   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274284   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2274285   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274286   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274287   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2274288   +   end;
MPRINT(EM_DIAGRAM):   end;
2274289   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274290   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2274291   +   end;
MPRINT(EM_DIAGRAM):   end;
2274292   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274293   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2274294   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274295   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274296   +   end;
MPRINT(EM_DIAGRAM):   end;
2274297   +end;
MPRINT(EM_DIAGRAM):   end;
2274298   +
2274299   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2274300   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2274301   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2274302   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2274303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274305   +end;
MPRINT(EM_DIAGRAM):   end;
2274306   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274307   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274308   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2274309   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274310   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274311   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2274312   +   end;
MPRINT(EM_DIAGRAM):   end;
2274313   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274314   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2274315   +   end;
MPRINT(EM_DIAGRAM):   end;
2274316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274317   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2274318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274320   +   end;
MPRINT(EM_DIAGRAM):   end;
2274321   +end;
MPRINT(EM_DIAGRAM):   end;
2274322   +
2274323   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2274324   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2274325   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2274326   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2274327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274329   +end;
MPRINT(EM_DIAGRAM):   end;
2274330   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274331   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274332   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2274333   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274334   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274335   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2274336   +   end;
MPRINT(EM_DIAGRAM):   end;
2274337   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274338   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2274339   +   end;
MPRINT(EM_DIAGRAM):   end;
2274340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274341   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2274342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274344   +   end;
MPRINT(EM_DIAGRAM):   end;
2274345   +end;
MPRINT(EM_DIAGRAM):   end;
2274346   +
2274347   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2274348   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2274349   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2274350   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2274351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274353   +end;
MPRINT(EM_DIAGRAM):   end;
2274354   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274355   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274356   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2274357   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274358   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274359   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2274360   +   end;
MPRINT(EM_DIAGRAM):   end;
2274361   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274362   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2274363   +   end;
MPRINT(EM_DIAGRAM):   end;
2274364   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274365   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2274366   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274367   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274368   +   end;
MPRINT(EM_DIAGRAM):   end;
2274369   +end;
MPRINT(EM_DIAGRAM):   end;
2274370   +
2274371   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2274372   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2274373   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2274374   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2274375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274377   +end;
MPRINT(EM_DIAGRAM):   end;
2274378   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274380   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2274381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274382   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274383   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2274384   +   end;
MPRINT(EM_DIAGRAM):   end;
2274385   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274386   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2274387   +   end;
MPRINT(EM_DIAGRAM):   end;
2274388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274389   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2274390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274392   +   end;
MPRINT(EM_DIAGRAM):   end;
2274393   +end;
MPRINT(EM_DIAGRAM):   end;
2274394   +
2274395   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2274396   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2274397   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2274398   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2274399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274401   +end;
MPRINT(EM_DIAGRAM):   end;
2274402   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274403   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274404   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2274405   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274406   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2274407   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2274408   +   end;
MPRINT(EM_DIAGRAM):   end;
2274409   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2274410   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2274411   +   end;
MPRINT(EM_DIAGRAM):   end;
2274412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274413   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2274414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274416   +   end;
MPRINT(EM_DIAGRAM):   end;
2274417   +end;
MPRINT(EM_DIAGRAM):   end;
2274418   +
2274419   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2274420   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2274421   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2274422   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2274423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274425   +end;
MPRINT(EM_DIAGRAM):   end;
2274426   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2274428   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2274429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274430   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2274431   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2274432   +   end;
MPRINT(EM_DIAGRAM):   end;
2274433   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2274434   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2274435   +   end;
MPRINT(EM_DIAGRAM):   end;
2274436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274437   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2274438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274440   +   end;
MPRINT(EM_DIAGRAM):   end;
2274441   +end;
MPRINT(EM_DIAGRAM):   end;
2274442   +
2274443   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2274444   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2274445   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2274446   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2274447   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2274448   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2274449   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2274450   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2274451   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2274452   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2274453   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2274454   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2274455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274457   +end;
MPRINT(EM_DIAGRAM):   end;
2274458   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274459   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2274460   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2274461   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274462   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2274463   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2274464   +   end;
MPRINT(EM_DIAGRAM):   end;
2274465   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2274466   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2274467   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2274468   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2274469   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2274470   +   end;
MPRINT(EM_DIAGRAM):   end;
2274471   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2274472   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2274473   +   end;
MPRINT(EM_DIAGRAM):   end;
2274474   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2274475   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2274476   +   end;
MPRINT(EM_DIAGRAM):   end;
2274477   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2274478   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2274479   +   end;
MPRINT(EM_DIAGRAM):   end;
2274480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274481   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2274482   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2274483   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2274484   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2274485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274487   +   end;
MPRINT(EM_DIAGRAM):   end;
2274488   +end;
MPRINT(EM_DIAGRAM):   end;
2274489   +
2274490   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2274491   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2274492   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2274493   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2274494   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2274495   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2274496   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2274497   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2274498   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2274499   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2274500   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2274501   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2274502   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2274503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2274504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274505   +end;
MPRINT(EM_DIAGRAM):   end;
2274506   +else do;
MPRINT(EM_DIAGRAM):   else do;
2274507   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2274508   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2274509   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2274510   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2274511   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2274512   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2274513   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2274514   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2274515   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2274516   +         end;
MPRINT(EM_DIAGRAM):   end;
2274517   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2274518   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2274519   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2274520   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2274521   +            end;
MPRINT(EM_DIAGRAM):   end;
2274522   +         end;
MPRINT(EM_DIAGRAM):   end;
2274523   +      end;
MPRINT(EM_DIAGRAM):   end;
2274524   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2274525   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2274526   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2274527   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2274528   +         end;
MPRINT(EM_DIAGRAM):   end;
2274529   +      end;
MPRINT(EM_DIAGRAM):   end;
2274530   +   end;
MPRINT(EM_DIAGRAM):   end;
2274531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2274532   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2274533   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2274534   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2274535   +      end;
MPRINT(EM_DIAGRAM):   end;
2274536   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2274537   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2274538   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2274539   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2274540   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2274541   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2274542   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2274543   +         end;
MPRINT(EM_DIAGRAM):   end;
2274544   +      end;
MPRINT(EM_DIAGRAM):   end;
2274545   +   end;
MPRINT(EM_DIAGRAM):   end;
2274546   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2274547   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2274548   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2274549   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2274550   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2274551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2274552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274553   +   end;
MPRINT(EM_DIAGRAM):   end;
2274554   +end;
MPRINT(EM_DIAGRAM):   end;
2274555   +
2274556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274557   +*** Checking missing input Interval
2274558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2274559   +
2274560   +IF NMISS(
2274561   +   AcceptedCmpTotal ,
2274562   +   Age ,
2274563   +   Frq ,
2274564   +   Income ,
2274565   +   Kidhome ,
2274566   +   Mnt ,
2274567   +   MntFishProducts ,
2274568   +   MntFruits ,
2274569   +   MntGoldProds ,
2274570   +   MntMeatProducts ,
2274571   +   MntSweetProducts ,
2274572   +   MntWines ,
2274573   +   MonthsAsCustomer ,
2274574   +   NumCatalogPurchases ,
2274575   +   NumDealsPurchases ,
2274576   +   NumDistPurchases ,
2274577   +   NumStorePurchases ,
2274578   +   NumWebPurchases ,
2274579   +   NumWebVisitsMonth ,
2274580   +   RFMstat ,
2274581   +   RMntFrq ,
2274582   +   Recency ,
2274583   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2274584   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2274585   +
2274586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2274587   +END;
MPRINT(EM_DIAGRAM):   END;
2274588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274589   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2274590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2274592   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2274593   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2274594   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2274595   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2274596   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2274597   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2274598   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2274599   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2274600   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2274601   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2274602   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2274603   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2274604   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2274605   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2274606   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2274607   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2274608   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2274609   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2274610   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2274611   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2274612   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2274613   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2274614   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2274615   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2274616   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2274617   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2274618   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2274619   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2274620   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2274621   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2274622   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2274623   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2274624   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2274625   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2274626   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2274627   +END;
MPRINT(EM_DIAGRAM):   END;
2274628   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2274629   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2274630   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2274631   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2274632   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2274633   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2274634   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2274635   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2274636   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2274637   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2274638   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2274639   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2274640   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2274641   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2274642   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2274643   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2274644   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2274645   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2274646   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2274647   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2274648   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2274649   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2274650   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2274651   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2274652   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2274653   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2274654   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2274655   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2274656   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2274657   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2274658   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2274659   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2274660   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2274661   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2274662   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2274663   +   ELSE S_NumCatalogPurchases
2274664   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2274665   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2274666   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2274667   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2274668   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2274669   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2274670   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2274671   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2274672   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2274673   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2274674   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2274675   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2274676   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2274677   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2274678   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2274679   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2274680   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2274681   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2274682   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2274683   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2274684   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2274685   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2274686   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2274687   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2274688   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2274689   +END;
MPRINT(EM_DIAGRAM):   END;
2274690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274691   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2274692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274694   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2274695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274697   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2274698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274699   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2274700   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2274701   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2274702   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2274703   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2274704   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2274705   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2274706   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2274707   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2274708   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2274709   +          +    -1.18466001117424 * S_NumDealsPurchases
2274710   +          +     -0.1371252133567 * S_NumDistPurchases
2274711   +          +     1.92719775731123 * S_NumStorePurchases
2274712   +          +     1.23184249192116 * S_NumWebPurchases
2274713   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2274714   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2274715   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2274716   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2274717   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2274718   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2274719   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2274720   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2274721   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2274722   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2274723   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2274724   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2274725   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2274726   +          +     0.63616523425865 * S_NumDealsPurchases
2274727   +          +     0.45460056261546 * S_NumDistPurchases
2274728   +          +    -0.61009999017225 * S_NumStorePurchases
2274729   +          +     1.85193755731081 * S_NumWebPurchases
2274730   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2274731   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2274732   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2274733   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2274734   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2274735   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2274736   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2274737   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2274738   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2274739   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2274740   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2274741   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2274742   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2274743   +          +      1.8907968580473 * S_NumDealsPurchases
2274744   +          +     0.01244124801764 * S_NumDistPurchases
2274745   +          +    -2.34409118104622 * S_NumStorePurchases
2274746   +          +    -1.80820043087435 * S_NumWebPurchases
2274747   +          +     2.40219682136039 * S_NumWebVisitsMonth
2274748   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2274749   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2274750   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2274751   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2274752   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2274753   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2274754   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2274755   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2274756   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2274757   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2274758   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2274759   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2274760   +          +     0.28209537604198 * S_NumDealsPurchases
2274761   +          +      0.6450277971767 * S_NumDistPurchases
2274762   +          +     0.85050092520609 * S_NumStorePurchases
2274763   +          +    -0.53920307215941 * S_NumWebPurchases
2274764   +          +     3.01106015100147 * S_NumWebVisitsMonth
2274765   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2274766   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2274767   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2274768   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2274769   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2274770   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2274771   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2274772   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2274773   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2274774   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2274775   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2274776   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2274777   +          +    -0.36642526324451 * S_NumDealsPurchases
2274778   +          +     -0.6091014843932 * S_NumDistPurchases
2274779   +          +    -0.21154626182088 * S_NumStorePurchases
2274780   +          +    -0.10361347071364 * S_NumWebPurchases
2274781   +          +     1.36358817627784 * S_NumWebVisitsMonth
2274782   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2274783   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2274784   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2274785   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2274786   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2274787   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2274788   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2274789   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2274790   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2274791   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2274792   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2274793   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2274794   +          +    -0.14868505161718 * S_NumDealsPurchases
2274795   +          +    -0.08395384711805 * S_NumDistPurchases
2274796   +          +     0.60525238179245 * S_NumStorePurchases
2274797   +          +     0.04555100214276 * S_NumWebPurchases
2274798   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2274799   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2274800   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2274801   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2274802   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2274803   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2274804   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2274805   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2274806   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2274807   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2274808   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2274809   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2274810   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2274811   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2274812   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2274813   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2274814   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2274815   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2274816   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2274817   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2274818   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2274819   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2274820   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2274821   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2274822   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2274823   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2274824   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2274825   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2274826   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2274827   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2274828   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2274829   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2274830   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2274831   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2274832   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2274833   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2274834   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2274835   +          +     -0.7180104021039 * Marital_StatusDivorced
2274836   +          +      0.5957373170744 * Marital_StatusMarried
2274837   +          +    -0.86183942803988 * Marital_StatusSingle
2274838   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2274839   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2274840   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2274841   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2274842   +          +     0.84772700244021 * Marital_StatusDivorced
2274843   +          +    -0.37049970188511 * Marital_StatusMarried
2274844   +          +     1.54291641732063 * Marital_StatusSingle
2274845   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2274846   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2274847   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2274848   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2274849   +          +     0.73222548496385 * Marital_StatusDivorced
2274850   +          +    -0.50102202656102 * Marital_StatusMarried
2274851   +          +    -0.07207130428422 * Marital_StatusSingle
2274852   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2274853   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2274854   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2274855   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2274856   +          +     0.25894719464799 * Marital_StatusDivorced
2274857   +          +    -1.95576501275834 * Marital_StatusMarried
2274858   +          +     2.65422185276746 * Marital_StatusSingle
2274859   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2274860   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2274861   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2274862   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2274863   +          +     0.60936191204707 * Marital_StatusDivorced
2274864   +          +    -0.52190111190458 * Marital_StatusMarried
2274865   +          +    -0.60982305233136 * Marital_StatusSingle
2274866   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2274867   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2274868   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2274869   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2274870   +          +    -1.44614502228294 * Marital_StatusDivorced
2274871   +          +      2.9001493892928 * Marital_StatusMarried
2274872   +          +    -2.60467399972513 * Marital_StatusSingle
2274873   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2274874   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2274875   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2274876   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2274877   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2274878   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2274879   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2274880   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2274881   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2274882   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2274883   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2274884   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2274885   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2274886   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2274887   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2274888   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2274889   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2274890   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2274891   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2274892   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2274893   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2274894   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2274895   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2274896   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2274897   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2274898   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2274899   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2274900   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2274901   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2274902   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2274903   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2274904   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2274905   +END;
MPRINT(EM_DIAGRAM):   END;
2274906   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2274907   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2274908   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2274909   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2274910   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2274911   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2274912   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2274913   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2274914   +END;
MPRINT(EM_DIAGRAM):   END;
2274915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274916   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2274917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2274918   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2274919   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2274920   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2274921   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2274922   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2274923   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2274924   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2274925   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2274926   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2274927   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2274928   +          +    -0.46483717253931 * S_NumDealsPurchases
2274929   +          +    -0.53329008421157 * S_NumDistPurchases
2274930   +          +      0.2490774300193 * S_NumStorePurchases
2274931   +          +    -0.82755150673885 * S_NumWebPurchases
2274932   +          +     0.04007223822389 * S_NumWebVisitsMonth
2274933   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2274934   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2274935   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2274936   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2274937   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2274938   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2274939   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2274940   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2274941   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2274942   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2274943   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2274944   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2274945   +          +     0.75855101382458 * S_NumDealsPurchases
2274946   +          +     1.61754951768262 * S_NumDistPurchases
2274947   +          +    -0.48146714929729 * S_NumStorePurchases
2274948   +          +    -0.76460728035552 * S_NumWebPurchases
2274949   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2274950   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2274951   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2274952   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2274953   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2274954   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2274955   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2274956   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2274957   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2274958   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2274959   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2274960   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2274961   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2274962   +          +     0.75255317965748 * S_NumDealsPurchases
2274963   +          +     1.34900588315783 * S_NumDistPurchases
2274964   +          +    -0.17717469778048 * S_NumStorePurchases
2274965   +          +    -0.01560551546553 * S_NumWebPurchases
2274966   +          +     1.24315988674343 * S_NumWebVisitsMonth
2274967   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2274968   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2274969   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2274970   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2274971   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2274972   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2274973   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2274974   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2274975   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2274976   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2274977   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2274978   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2274979   +          +    -1.71127148178768 * S_NumDealsPurchases
2274980   +          +    -1.77527355221308 * S_NumDistPurchases
2274981   +          +    -1.40009594349363 * S_NumStorePurchases
2274982   +          +    -0.46471012062697 * S_NumWebPurchases
2274983   +          +     0.04619891083228 * S_NumWebVisitsMonth
2274984   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2274985   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2274986   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2274987   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2274988   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2274989   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2274990   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2274991   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2274992   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2274993   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2274994   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2274995   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2274996   +          +    -0.22204470395056 * S_NumDealsPurchases
2274997   +          +    -1.74490476011984 * S_NumDistPurchases
2274998   +          +     1.93538420108324 * S_NumStorePurchases
2274999   +          +     1.04892631742152 * S_NumWebPurchases
2275000   +          +     1.50717841566047 * S_NumWebVisitsMonth
2275001   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2275002   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2275003   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2275004   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2275005   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2275006   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2275007   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2275008   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2275009   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2275010   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2275011   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2275012   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2275013   +          +    -0.94690420785776 * S_NumDealsPurchases
2275014   +          +     1.87932706342204 * S_NumDistPurchases
2275015   +          +     0.31232717416487 * S_NumStorePurchases
2275016   +          +     1.51889492693355 * S_NumWebPurchases
2275017   +          +     0.04376853689795 * S_NumWebVisitsMonth
2275018   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2275019   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2275020   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2275021   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2275022   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2275023   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2275024   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2275025   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2275026   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2275027   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2275028   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2275029   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2275030   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2275031   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2275032   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2275033   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2275034   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2275035   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2275036   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2275037   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2275038   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2275039   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2275040   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2275041   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2275042   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2275043   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2275044   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2275045   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2275046   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2275047   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2275048   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2275049   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2275050   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2275051   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2275052   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2275053   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2275054   +          +     0.56030871857835 * Marital_StatusDivorced
2275055   +          +    -1.22448534379831 * Marital_StatusMarried
2275056   +          +     0.78141783495855 * Marital_StatusSingle
2275057   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2275058   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2275059   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2275060   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2275061   +          +    -2.63452071552997 * Marital_StatusDivorced
2275062   +          +     0.61829054779121 * Marital_StatusMarried
2275063   +          +    -2.20743370246315 * Marital_StatusSingle
2275064   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2275065   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2275066   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2275067   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2275068   +          +      -1.454102516731 * Marital_StatusDivorced
2275069   +          +     0.71488291465759 * Marital_StatusMarried
2275070   +          +     0.96038830049792 * Marital_StatusSingle
2275071   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2275072   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2275073   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2275074   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2275075   +          +    -0.01160394891598 * Marital_StatusDivorced
2275076   +          +    -1.09054636482951 * Marital_StatusMarried
2275077   +          +      0.7793855479379 * Marital_StatusSingle
2275078   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2275079   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2275080   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2275081   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2275082   +          +    -0.73414854875115 * Marital_StatusDivorced
2275083   +          +     0.46421425621114 * Marital_StatusMarried
2275084   +          +    -0.54512730625469 * Marital_StatusSingle
2275085   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2275086   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2275087   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2275088   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2275089   +          +     0.25131188683384 * Marital_StatusDivorced
2275090   +          +     2.38279806963807 * Marital_StatusMarried
2275091   +          +     0.28897706448348 * Marital_StatusSingle
2275092   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2275093   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2275094   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2275095   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2275096   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2275097   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2275098   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2275099   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2275100   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2275101   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2275102   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2275103   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2275104   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2275105   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2275106   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2275107   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2275108   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2275109   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2275110   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2275111   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2275112   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2275113   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2275114   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2275115   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2275116   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2275117   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2275118   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2275119   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2275120   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2275121   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2275122   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2275123   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2275124   +END;
MPRINT(EM_DIAGRAM):   END;
2275125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275126   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2275127   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2275128   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2275129   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2275130   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2275131   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2275132   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2275133   +END;
MPRINT(EM_DIAGRAM):   END;
2275134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275135   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2275136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2275138   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2275139   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2275140   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2275141   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2275142   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2275143   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2275144   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2275145   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2275146   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2275147   +          +     1.11855402225797 * S_NumDealsPurchases
2275148   +          +     0.39150287442005 * S_NumDistPurchases
2275149   +          +     0.00160244551627 * S_NumStorePurchases
2275150   +          +     1.54380043731879 * S_NumWebPurchases
2275151   +          +      0.6462755347813 * S_NumWebVisitsMonth
2275152   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2275153   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2275154   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2275155   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2275156   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2275157   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2275158   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2275159   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2275160   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2275161   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2275162   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2275163   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2275164   +          +     0.01911815525287 * S_NumDealsPurchases
2275165   +          +    -1.07196707915227 * S_NumDistPurchases
2275166   +          +      0.6452048321682 * S_NumStorePurchases
2275167   +          +    -0.15818575353955 * S_NumWebPurchases
2275168   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2275169   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2275170   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2275171   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2275172   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2275173   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2275174   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2275175   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2275176   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2275177   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2275178   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2275179   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2275180   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2275181   +          +     1.56893739271853 * S_NumDealsPurchases
2275182   +          +      0.6745865425238 * S_NumDistPurchases
2275183   +          +    -0.26848765783548 * S_NumStorePurchases
2275184   +          +     0.79227081430227 * S_NumWebPurchases
2275185   +          +     0.83054874267768 * S_NumWebVisitsMonth
2275186   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2275187   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2275188   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2275189   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2275190   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2275191   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2275192   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2275193   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2275194   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2275195   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2275196   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2275197   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2275198   +          +    -0.23954856030467 * S_NumDealsPurchases
2275199   +          +    -1.61914390483829 * S_NumDistPurchases
2275200   +          +      -1.014570623016 * S_NumStorePurchases
2275201   +          +    -0.36828642098701 * S_NumWebPurchases
2275202   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2275203   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2275204   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2275205   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2275206   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2275207   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2275208   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2275209   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2275210   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2275211   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2275212   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2275213   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2275214   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2275215   +          +     1.00094082424204 * S_NumDealsPurchases
2275216   +          +      0.2724785290725 * S_NumDistPurchases
2275217   +          +     0.13170237783486 * S_NumStorePurchases
2275218   +          +    -1.31447792523743 * S_NumWebPurchases
2275219   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2275220   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2275221   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2275222   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2275223   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2275224   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2275225   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2275226   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2275227   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2275228   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2275229   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2275230   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2275231   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2275232   +          +    -0.73198872336344 * S_NumDealsPurchases
2275233   +          +     0.29368958872361 * S_NumDistPurchases
2275234   +          +     1.52772046446908 * S_NumStorePurchases
2275235   +          +    -1.75065469134874 * S_NumWebPurchases
2275236   +          +      0.0264954621772 * S_NumWebVisitsMonth
2275237   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2275238   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2275239   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2275240   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2275241   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2275242   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2275243   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2275244   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2275245   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2275246   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2275247   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2275248   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2275249   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2275250   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2275251   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2275252   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2275253   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2275254   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2275255   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2275256   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2275257   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2275258   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2275259   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2275260   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2275261   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2275262   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2275263   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2275264   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2275265   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2275266   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2275267   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2275268   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2275269   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2275270   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2275271   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2275272   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2275273   +          +     0.32207432513904 * Marital_StatusDivorced
2275274   +          +      0.6397913221395 * Marital_StatusMarried
2275275   +          +    -0.25330032559918 * Marital_StatusSingle
2275276   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2275277   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2275278   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2275279   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2275280   +          +     0.79430904713493 * Marital_StatusDivorced
2275281   +          +     2.54456429102799 * Marital_StatusMarried
2275282   +          +     0.59410742352499 * Marital_StatusSingle
2275283   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2275284   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2275285   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2275286   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2275287   +          +    -0.43081775693595 * Marital_StatusDivorced
2275288   +          +    -0.78485102174552 * Marital_StatusMarried
2275289   +          +    -1.56581090110813 * Marital_StatusSingle
2275290   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2275291   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2275292   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2275293   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2275294   +          +     0.38226706522151 * Marital_StatusDivorced
2275295   +          +     0.96666958079914 * Marital_StatusMarried
2275296   +          +    -0.07771259761555 * Marital_StatusSingle
2275297   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2275298   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2275299   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2275300   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2275301   +          +    -0.38325393606947 * Marital_StatusDivorced
2275302   +          +    -1.43303056163299 * Marital_StatusMarried
2275303   +          +     0.11571941757387 * Marital_StatusSingle
2275304   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2275305   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2275306   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2275307   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2275308   +          +    -0.36491799765765 * Marital_StatusDivorced
2275309   +          +     0.14142786767503 * Marital_StatusMarried
2275310   +          +     0.22643970468805 * Marital_StatusSingle
2275311   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2275312   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2275313   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2275314   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2275315   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2275316   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2275317   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2275318   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2275319   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2275320   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2275321   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2275322   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2275323   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2275324   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2275325   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2275326   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2275327   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2275328   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2275329   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2275330   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2275331   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2275332   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2275333   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2275334   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2275335   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2275336   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2275337   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2275338   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2275339   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2275340   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2275341   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2275342   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2275343   +END;
MPRINT(EM_DIAGRAM):   END;
2275344   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275345   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2275346   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2275347   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2275348   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2275349   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2275350   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2275351   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2275352   +END;
MPRINT(EM_DIAGRAM):   END;
2275353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275354   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2275355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275356   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2275357   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2275358   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2275359   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2275360   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2275361   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2275362   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2275363   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2275364   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2275365   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2275366   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2275367   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2275368   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2275369   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2275370   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2275371   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2275372   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2275373   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2275374   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2275375   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2275376   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2275377   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2275378   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2275379   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2275380   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2275381   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2275382   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2275383   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2275384   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2275385   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2275386   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2275387   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2275388   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2275389   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2275390   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2275391   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2275392   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2275393   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2275394   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2275395   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2275396   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2275397   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2275398   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2275399   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2275400   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2275401   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2275402   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2275403   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2275404   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2275405   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2275406   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2275407   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2275408   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2275409   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2275410   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2275411   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2275412   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2275413   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2275414   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2275415   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2275416   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2275417   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2275418   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2275419   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2275420   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2275421   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2275422   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2275423   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2275424   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2275425   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2275426   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2275427   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2275428   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2275429   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2275430   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2275431   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2275432   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2275433   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2275434   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2275435   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2275436   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2275437   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2275438   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2275439   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2275440   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2275441   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2275442   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2275443   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2275444   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2275445   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2275446   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2275447   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2275448   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2275449   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2275450   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2275451   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2275452   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2275453   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2275454   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2275455   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2275456   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2275457   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2275458   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2275459   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2275460   +END;
MPRINT(EM_DIAGRAM):   END;
2275461   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275462   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2275463   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2275464   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2275465   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2275466   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2275467   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2275468   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2275469   +END;
MPRINT(EM_DIAGRAM):   END;
2275470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275471   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2275472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2275474   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2275475   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2275476   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2275477   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2275478   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2275479   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2275480   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2275481   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2275482   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2275483   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2275484   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2275485   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2275486   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2275487   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2275488   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2275489   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2275490   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2275491   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2275492   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2275493   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2275494   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2275495   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2275496   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2275497   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2275498   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2275499   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2275500   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2275501   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2275502   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2275503   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2275504   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2275505   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2275506   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2275507   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2275508   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2275509   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2275510   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2275511   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2275512   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2275513   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2275514   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2275515   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2275516   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2275517   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2275518   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2275519   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2275520   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2275521   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2275522   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2275523   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2275524   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2275525   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2275526   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2275527   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2275528   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2275529   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2275530   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2275531   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2275532   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2275533   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2275534   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2275535   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2275536   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2275537   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2275538   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2275539   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2275540   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2275541   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2275542   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2275543   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2275544   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2275545   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2275546   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2275547   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2275548   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2275549   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2275550   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2275551   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2275552   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2275553   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2275554   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2275555   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2275556   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2275557   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2275558   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2275559   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2275560   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2275561   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2275562   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2275563   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2275564   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2275565   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2275566   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2275567   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2275568   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2275569   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2275570   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2275571   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2275572   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2275573   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2275574   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2275575   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2275576   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2275577   +END;
MPRINT(EM_DIAGRAM):   END;
2275578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275579   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2275580   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2275581   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2275582   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2275583   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2275584   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2275585   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2275586   +END;
MPRINT(EM_DIAGRAM):   END;
2275587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275588   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2275589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275590   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2275591   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2275592   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2275593   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2275594   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2275595   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2275596   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2275597   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2275598   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2275599   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2275600   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2275601   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2275602   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2275603   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2275604   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2275605   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2275606   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2275607   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2275608   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2275609   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2275610   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2275611   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2275612   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2275613   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2275614   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2275615   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2275616   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2275617   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2275618   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2275619   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2275620   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2275621   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2275622   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2275623   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2275624   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2275625   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2275626   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2275627   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2275628   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2275629   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2275630   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2275631   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2275632   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2275633   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2275634   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2275635   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2275636   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2275637   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2275638   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2275639   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2275640   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2275641   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2275642   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2275643   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2275644   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2275645   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2275646   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2275647   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2275648   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2275649   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2275650   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2275651   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2275652   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2275653   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2275654   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2275655   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2275656   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2275657   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2275658   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2275659   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2275660   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2275661   +END;
MPRINT(EM_DIAGRAM):   END;
2275662   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275663   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2275664   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2275665   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2275666   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2275667   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2275668   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2275669   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2275670   +END;
MPRINT(EM_DIAGRAM):   END;
2275671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275672   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2275673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275674   +
2275675   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2275676   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2275677   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2275678   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2275679   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2275680   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2275681   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2275682   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2275683   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2275684   +end;
MPRINT(EM_DIAGRAM):   end;
2275685   +else do;
MPRINT(EM_DIAGRAM):   else do;
2275686   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2275687   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2275688   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2275689   +   end;
MPRINT(EM_DIAGRAM):   end;
2275690   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2275691   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2275692   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2275693   +   end;
MPRINT(EM_DIAGRAM):   end;
2275694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2275695   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2275696   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2275697   +   end;
MPRINT(EM_DIAGRAM):   end;
2275698   +end;
MPRINT(EM_DIAGRAM):   end;
2275699   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2275700   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2275701   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2275702   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2275703   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2275704   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2275705   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2275706   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2275707   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2275708   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2275709   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2275710   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2275711   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2275712   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2275713   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2275714   +END;
MPRINT(EM_DIAGRAM):   END;
2275715   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2275716   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2275717   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2275718   +END;
MPRINT(EM_DIAGRAM):   END;
2275719   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2275720   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2275721   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2275722   +END;
MPRINT(EM_DIAGRAM):   END;
2275723   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2275724   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2275725   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2275726   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2275727   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2275728   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2275729   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2275730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275731   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2275732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2275733   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2275734   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2275735   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2275736   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2275737   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2275738   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2275739   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2275740   +END;
MPRINT(EM_DIAGRAM):   END;
2275741   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2275742   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2275743   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2275744   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2275745   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2275746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275747   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2275748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275749   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2275750   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2275751   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2275752   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2275753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275754   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2275755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275756   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2275757   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2275758   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2275759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275760   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
2275761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275762   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2275763   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2275764   +P_DepVar1 = max(
2275765   +AutoNeural6_P_DepVar1 ,
2275766   +AutoNeural7_P_DepVar1 ,
2275767   +AutoNeural8_P_DepVar1 ,
2275768   +AutoNeural10_P_DepVar1 ,
2275769   +AutoNeural9_P_DepVar1 ,
2275770   +AutoNeural11_P_DepVar1 ,
2275771   +AutoNeural12_P_DepVar1
2275772   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
2275773   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2275774   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2275775   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2275776   +end;
MPRINT(EM_DIAGRAM):   end;
2275777   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2275778   +P_DepVar0 = max(
2275779   +AutoNeural6_P_DepVar0 ,
2275780   +AutoNeural7_P_DepVar0 ,
2275781   +AutoNeural8_P_DepVar0 ,
2275782   +AutoNeural10_P_DepVar0 ,
2275783   +AutoNeural9_P_DepVar0 ,
2275784   +AutoNeural11_P_DepVar0 ,
2275785   +AutoNeural12_P_DepVar0
2275786   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
2275787   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2275788   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2275789   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2275790   +end;
MPRINT(EM_DIAGRAM):   end;
2275791   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2275792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275793   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
2275794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275795   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2275796   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2275797   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2275798   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2275799   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2275800   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2275801   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2275802   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2275803   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2275804   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2275805   +end;
MPRINT(EM_DIAGRAM):   end;
2275806   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2275807   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2275808   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2275809   +end;
MPRINT(EM_DIAGRAM):   end;
2275810   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2275811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275812   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
2275813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275814   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2275815   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2275816   +else
2275817   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2275818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275819   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
2275820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275821   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2275822   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2275823   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2275824   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275824  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275825   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275825  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275826   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275826  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275827   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275827  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275828   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275828  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275829   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275829  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275830   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275830  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275831   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275831  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275832   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275832  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275833   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275833  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275834   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275834  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275835   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275835  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275836   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275836  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275837   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275837  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275838   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275838  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275839   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275839  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275840   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275840  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275841   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275841  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275842   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275842  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275843   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275843  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275844   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275844  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275845   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275845  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275846   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275846  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275847   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275847  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275848   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2275848  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2275849   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2275849  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2275850   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2275850  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2275851   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2275851  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2275852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275853   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
2275854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275855   +if
2275856   +F_DepVar NE '1'
2275857   +AND F_DepVar NE '0'
2275858   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2275859   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2275860   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2275861   +end;
MPRINT(EM_DIAGRAM):   end;
2275862   +else do;
MPRINT(EM_DIAGRAM):   else do;
2275863   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2275864   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2275865   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2275866   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2275867   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2275868   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2275869   +END;
MPRINT(EM_DIAGRAM):   END;
2275870   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2275871    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2275872    quit;
2275873    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2275874    filename emflow
2275874  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275875    *------------------------------------------------------------*;
2275876    * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
2275877    *------------------------------------------------------------*;
2275878    data EMWS8.Ensmbl37_VALIDATE
2275879    / view=EMWS8.Ensmbl37_VALIDATE
2275880    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_VALIDATE / view=EMWS8.Ensmbl37_VALIDATE ;
2275881    set EMWS8.AutoNeural6_VALIDATE
2275882    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
2275883    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
2275884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275885   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
2275886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275887   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
2275888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275890   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2275891   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2275892   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2275893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275895   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2275896   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2275897   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2275898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275900   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2275901   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2275902   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2275903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275905   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2275906   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2275907   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2275908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275909   +
2275910   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2275911   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2275911  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2275912   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2275913   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2275914   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2275915   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2275916   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2275917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275918   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2275919   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2275920   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2275921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275923   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2275924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275925   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2275926   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2275927   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2275928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275929   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2275930   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2275931   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2275932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275934   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2275935   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2275936   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2275937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275939   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2275940   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2275941   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2275942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2275943   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2275944   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2275945   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2275946   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2275947   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2275948   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2275949   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2275950   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2275951   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2275952   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2275953   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2275954   +LENGTH _WARN_ $4
2275955   +      F_DepVar  $ 12
2275956   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2275957   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2275958   +
2275959   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2275960   +
2275961   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2275962   +
2275963   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2275964   +
2275965   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2275966   +
2275967   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2275968   +
2275969   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2275970   +
2275971   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2275972   +
2275973   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2275974   +
2275975   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2275976   +
2275977   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2275978   +
2275979   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2275980   +
2275981   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2275982   +
2275983   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2275984   +
2275985   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2275986   +
2275987   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2275988   +
2275989   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2275990   +
2275991   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2275992   +
2275993   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2275994   +
2275995   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2275996   +
2275997   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2275998   +
2275999   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2276000   +
2276001   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2276002   +
2276003   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2276004   +
2276005   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2276006   +
2276007   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2276008   +
2276009   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2276010   +
2276011   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2276012   +
2276013   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2276014   +
2276015   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2276016   +
2276017   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2276018   +
2276019   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2276020   +
2276021   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2276022   +
2276023   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2276024   +
2276025   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2276026   +
2276027   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2276028   +
2276029   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2276030   +
2276031   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2276032   +
2276033   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2276034   +
2276035   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2276036   +
2276037   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2276038   +
2276039   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2276040   +
2276041   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2276042   +
2276043   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2276044   +
2276045   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2276046   +
2276047   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2276048   +
2276049   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2276050   +
2276051   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2276052   +
2276053   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2276054   +
2276055   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2276056   +
2276057   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2276058   +
2276059   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2276060   +
2276061   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2276062   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2276063   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2276064   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2276065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276067   +end;
MPRINT(EM_DIAGRAM):   end;
2276068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276070   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2276071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276073   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2276074   +   end;
MPRINT(EM_DIAGRAM):   end;
2276075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276076   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2276077   +   end;
MPRINT(EM_DIAGRAM):   end;
2276078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276079   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2276080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276082   +   end;
MPRINT(EM_DIAGRAM):   end;
2276083   +end;
MPRINT(EM_DIAGRAM):   end;
2276084   +
2276085   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2276086   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2276087   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2276088   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2276089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276091   +end;
MPRINT(EM_DIAGRAM):   end;
2276092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276094   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2276095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276097   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2276098   +   end;
MPRINT(EM_DIAGRAM):   end;
2276099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276100   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2276101   +   end;
MPRINT(EM_DIAGRAM):   end;
2276102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276103   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2276104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276106   +   end;
MPRINT(EM_DIAGRAM):   end;
2276107   +end;
MPRINT(EM_DIAGRAM):   end;
2276108   +
2276109   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2276110   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2276111   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2276112   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2276113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276115   +end;
MPRINT(EM_DIAGRAM):   end;
2276116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276118   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2276119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276121   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2276122   +   end;
MPRINT(EM_DIAGRAM):   end;
2276123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276124   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2276125   +   end;
MPRINT(EM_DIAGRAM):   end;
2276126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276127   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2276128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276130   +   end;
MPRINT(EM_DIAGRAM):   end;
2276131   +end;
MPRINT(EM_DIAGRAM):   end;
2276132   +
2276133   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2276134   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2276135   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2276136   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2276137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276139   +end;
MPRINT(EM_DIAGRAM):   end;
2276140   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276142   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2276143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276145   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2276146   +   end;
MPRINT(EM_DIAGRAM):   end;
2276147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276148   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2276149   +   end;
MPRINT(EM_DIAGRAM):   end;
2276150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276151   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2276152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276154   +   end;
MPRINT(EM_DIAGRAM):   end;
2276155   +end;
MPRINT(EM_DIAGRAM):   end;
2276156   +
2276157   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2276158   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2276159   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2276160   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2276161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276163   +end;
MPRINT(EM_DIAGRAM):   end;
2276164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276166   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2276167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276169   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2276170   +   end;
MPRINT(EM_DIAGRAM):   end;
2276171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276172   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2276173   +   end;
MPRINT(EM_DIAGRAM):   end;
2276174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276175   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2276176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276178   +   end;
MPRINT(EM_DIAGRAM):   end;
2276179   +end;
MPRINT(EM_DIAGRAM):   end;
2276180   +
2276181   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2276182   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2276183   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2276184   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2276185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276187   +end;
MPRINT(EM_DIAGRAM):   end;
2276188   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276190   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2276191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276193   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2276194   +   end;
MPRINT(EM_DIAGRAM):   end;
2276195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276196   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2276197   +   end;
MPRINT(EM_DIAGRAM):   end;
2276198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276199   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2276200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276202   +   end;
MPRINT(EM_DIAGRAM):   end;
2276203   +end;
MPRINT(EM_DIAGRAM):   end;
2276204   +
2276205   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2276206   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2276207   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2276208   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2276209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276211   +end;
MPRINT(EM_DIAGRAM):   end;
2276212   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276214   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2276215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276216   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2276217   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2276218   +   end;
MPRINT(EM_DIAGRAM):   end;
2276219   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2276220   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2276221   +   end;
MPRINT(EM_DIAGRAM):   end;
2276222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276223   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2276224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276226   +   end;
MPRINT(EM_DIAGRAM):   end;
2276227   +end;
MPRINT(EM_DIAGRAM):   end;
2276228   +
2276229   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2276230   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2276231   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2276232   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2276233   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2276234   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2276235   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2276236   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2276237   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2276238   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2276239   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2276240   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2276241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276243   +end;
MPRINT(EM_DIAGRAM):   end;
2276244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276245   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2276246   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2276247   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276248   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2276249   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2276250   +   end;
MPRINT(EM_DIAGRAM):   end;
2276251   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2276252   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2276253   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2276254   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2276255   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2276256   +   end;
MPRINT(EM_DIAGRAM):   end;
2276257   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2276258   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2276259   +   end;
MPRINT(EM_DIAGRAM):   end;
2276260   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2276261   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2276262   +   end;
MPRINT(EM_DIAGRAM):   end;
2276263   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2276264   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2276265   +   end;
MPRINT(EM_DIAGRAM):   end;
2276266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276267   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2276268   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2276269   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2276270   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2276271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276273   +   end;
MPRINT(EM_DIAGRAM):   end;
2276274   +end;
MPRINT(EM_DIAGRAM):   end;
2276275   +
2276276   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2276277   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2276278   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2276279   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2276280   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2276281   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2276282   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2276283   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2276284   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2276285   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2276286   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2276287   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2276288   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2276289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276291   +end;
MPRINT(EM_DIAGRAM):   end;
2276292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276293   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2276294   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2276295   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276296   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2276297   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2276298   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2276299   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2276300   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2276301   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2276302   +         end;
MPRINT(EM_DIAGRAM):   end;
2276303   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2276304   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2276305   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2276306   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2276307   +            end;
MPRINT(EM_DIAGRAM):   end;
2276308   +         end;
MPRINT(EM_DIAGRAM):   end;
2276309   +      end;
MPRINT(EM_DIAGRAM):   end;
2276310   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2276311   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2276312   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2276313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2276314   +         end;
MPRINT(EM_DIAGRAM):   end;
2276315   +      end;
MPRINT(EM_DIAGRAM):   end;
2276316   +   end;
MPRINT(EM_DIAGRAM):   end;
2276317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276318   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2276319   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2276320   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2276321   +      end;
MPRINT(EM_DIAGRAM):   end;
2276322   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2276323   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2276324   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2276325   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2276326   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2276327   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2276328   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2276329   +         end;
MPRINT(EM_DIAGRAM):   end;
2276330   +      end;
MPRINT(EM_DIAGRAM):   end;
2276331   +   end;
MPRINT(EM_DIAGRAM):   end;
2276332   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2276333   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2276334   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2276335   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2276336   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2276337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276339   +   end;
MPRINT(EM_DIAGRAM):   end;
2276340   +end;
MPRINT(EM_DIAGRAM):   end;
2276341   +
2276342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276343   +*** Checking missing input Interval
2276344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2276345   +
2276346   +IF NMISS(
2276347   +   AcceptedCmpTotal ,
2276348   +   Age ,
2276349   +   Frq ,
2276350   +   Income ,
2276351   +   Kidhome ,
2276352   +   Mnt ,
2276353   +   MntFishProducts ,
2276354   +   MntFruits ,
2276355   +   MntGoldProds ,
2276356   +   MntMeatProducts ,
2276357   +   MntSweetProducts ,
2276358   +   MntWines ,
2276359   +   MonthsAsCustomer ,
2276360   +   NumCatalogPurchases ,
2276361   +   NumDealsPurchases ,
2276362   +   NumDistPurchases ,
2276363   +   NumStorePurchases ,
2276364   +   NumWebPurchases ,
2276365   +   NumWebVisitsMonth ,
2276366   +   RFMstat ,
2276367   +   RMntFrq ,
2276368   +   Recency ,
2276369   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2276370   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2276371   +
2276372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276373   +END;
MPRINT(EM_DIAGRAM):   END;
2276374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276375   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2276376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276378   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2276379   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2276380   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2276381   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2276382   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2276383   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2276384   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2276385   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2276386   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2276387   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2276388   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2276389   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2276390   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2276391   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2276392   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2276393   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2276394   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2276395   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2276396   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2276397   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2276398   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2276399   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2276400   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2276401   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2276402   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2276403   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2276404   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2276405   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2276406   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2276407   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2276408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2276409   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2276410   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2276411   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2276412   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2276413   +END;
MPRINT(EM_DIAGRAM):   END;
2276414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276415   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2276416   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2276417   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2276418   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2276419   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2276420   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2276421   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2276422   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2276423   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2276424   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2276425   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2276426   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2276427   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2276428   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2276429   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2276430   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2276431   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2276432   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2276433   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2276434   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2276435   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2276436   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2276437   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2276438   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2276439   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2276440   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2276441   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2276442   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2276443   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2276444   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2276445   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2276446   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2276447   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2276448   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2276449   +   ELSE S_NumCatalogPurchases
2276450   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2276451   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2276452   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2276453   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2276454   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2276455   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2276456   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2276457   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2276458   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2276459   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2276460   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2276461   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2276462   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2276463   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2276464   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2276465   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2276466   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2276467   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2276468   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2276469   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2276470   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2276471   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2276472   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2276473   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2276474   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2276475   +END;
MPRINT(EM_DIAGRAM):   END;
2276476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276477   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2276478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276480   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2276481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276483   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2276484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276486   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2276487   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2276488   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2276489   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2276490   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2276491   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2276492   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2276493   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2276494   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2276495   +          +    -1.19682864242203 * S_NumDealsPurchases
2276496   +          +     0.18491015618084 * S_NumDistPurchases
2276497   +          +     1.22999585210812 * S_NumStorePurchases
2276498   +          +     1.21627782358382 * S_NumWebPurchases
2276499   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2276500   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2276501   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2276502   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 *
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 *
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts +
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 *
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 *
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 *
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 *
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq +
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2276503   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2276504   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2276505   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2276506   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2276507   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 *
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 +
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 *
HigherEducationBinary0 ;
2276508   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2276509   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2276510   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2276511   +          +     0.22010007588989 * Marital_StatusDivorced
2276512   +          +    -0.15233151420698 * Marital_StatusMarried
2276513   +          +    -0.03753447021411 * Marital_StatusSingle
2276514   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle +
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation +
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced +
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle +
-0.12393264098828 * Marital_StatusTogether ;
2276515   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2276516   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276517   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276518   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2276519   +END;
MPRINT(EM_DIAGRAM):   END;
2276520   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276521   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2276522   +END;
MPRINT(EM_DIAGRAM):   END;
2276523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276524   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2276525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276527   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2276528   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2276529   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2276530   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2276531   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2276532   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2276533   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2276534   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2276535   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2276536   +          +    -0.66146733174161 * S_NumDealsPurchases
2276537   +          +     1.52784459399302 * S_NumDistPurchases
2276538   +          +     1.49997699453958 * S_NumStorePurchases
2276539   +          +     0.63969125024997 * S_NumWebPurchases
2276540   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2276541   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2276542   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2276543   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 *
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 *
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts +
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 *
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 *
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 *
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 *
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq +
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2276544   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2276545   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2276546   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2276547   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2276548   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 +
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 *
HigherEducationBinary0 ;
2276549   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2276550   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2276551   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2276552   +          +    -0.26556711862055 * Marital_StatusDivorced
2276553   +          +     1.14529440208202 * Marital_StatusMarried
2276554   +          +    -1.05822467297368 * Marital_StatusSingle
2276555   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle +
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 *
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 *
Marital_StatusTogether ;
2276556   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2276557   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276558   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276559   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2276560   +END;
MPRINT(EM_DIAGRAM):   END;
2276561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276562   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2276563   +END;
MPRINT(EM_DIAGRAM):   END;
2276564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276565   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2276566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276568   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2276569   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2276570   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2276571   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2276572   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2276573   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2276574   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2276575   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2276576   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2276577   +          +    -1.65571629915953 * S_NumDealsPurchases
2276578   +          +     0.44850418598185 * S_NumDistPurchases
2276579   +          +    -1.85103994085543 * S_NumStorePurchases
2276580   +          +    -1.98087140874692 * S_NumWebPurchases
2276581   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2276582   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2276583   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2276584   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 *
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 *
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts +
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 *
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 *
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 *
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 *
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq +
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2276585   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2276586   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2276587   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2276588   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2276589   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 *
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 +
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 *
HigherEducationBinary0 ;
2276590   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2276591   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2276592   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2276593   +          +     0.50400969719731 * Marital_StatusDivorced
2276594   +          +    -1.34220391092458 * Marital_StatusMarried
2276595   +          +    -0.55428853923129 * Marital_StatusSingle
2276596   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle +
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 *
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 *
Marital_StatusTogether ;
2276597   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2276598   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276599   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276600   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2276601   +END;
MPRINT(EM_DIAGRAM):   END;
2276602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276603   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2276604   +END;
MPRINT(EM_DIAGRAM):   END;
2276605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276606   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2276607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276608   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276609   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2276610   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2276611   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2276612   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2276613   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276614   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276615   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2276616   +END;
MPRINT(EM_DIAGRAM):   END;
2276617   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276618   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2276619   +END;
MPRINT(EM_DIAGRAM):   END;
2276620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276621   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2276622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276623   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276624   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2276625   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2276626   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2276627   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2276628   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276629   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276630   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2276631   +END;
MPRINT(EM_DIAGRAM):   END;
2276632   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276633   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2276634   +END;
MPRINT(EM_DIAGRAM):   END;
2276635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276636   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2276637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276638   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276639   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2276640   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2276641   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2276642   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2276643   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2276644   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2276645   +END;
MPRINT(EM_DIAGRAM):   END;
2276646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276647   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2276648   +END;
MPRINT(EM_DIAGRAM):   END;
2276649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276650   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2276651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276652   +
2276653   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2276654   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2276655   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2276656   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2276657   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2276658   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276659   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2276660   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2276661   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2276662   +end;
MPRINT(EM_DIAGRAM):   end;
2276663   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276664   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2276665   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2276666   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2276667   +   end;
MPRINT(EM_DIAGRAM):   end;
2276668   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2276669   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2276670   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2276671   +   end;
MPRINT(EM_DIAGRAM):   end;
2276672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276673   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2276674   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2276675   +   end;
MPRINT(EM_DIAGRAM):   end;
2276676   +end;
MPRINT(EM_DIAGRAM):   end;
2276677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2276678   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2276679   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2276680   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2276681   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2276682   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2276683   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2276684   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2276685   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2276686   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2276687   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2276688   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2276689   +END;
MPRINT(EM_DIAGRAM):   END;
2276690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2276691   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2276692   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2276693   +END;
MPRINT(EM_DIAGRAM):   END;
2276694   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2276695   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2276696   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2276697   +END;
MPRINT(EM_DIAGRAM):   END;
2276698   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2276699   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2276700   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2276701   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2276702   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2276703   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2276704   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2276705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276706   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2276707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2276708   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2276709   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2276710   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2276711   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2276712   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2276713   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2276714   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2276715   +END;
MPRINT(EM_DIAGRAM):   END;
2276716   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2276717   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2276718   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2276719   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2276720   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2276721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276722   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2276723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276724   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2276725   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2276726   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2276727   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2276728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276729   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2276730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276731   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2276732   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2276733   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2276734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276735   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
2276736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276738   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2276739   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2276740   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2276741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2276742   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2276743   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2276744   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2276745   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2276746   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2276747   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2276748   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2276749   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2276750   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2276751   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2276752   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2276753   +LENGTH _WARN_ $4
2276754   +      F_DepVar  $ 12
2276755   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2276756   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2276757   +
2276758   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2276759   +
2276760   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2276761   +
2276762   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2276763   +
2276764   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2276765   +
2276766   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2276767   +
2276768   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2276769   +
2276770   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2276771   +
2276772   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2276773   +
2276774   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2276775   +
2276776   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2276777   +
2276778   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2276779   +
2276780   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2276781   +
2276782   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2276783   +
2276784   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2276785   +
2276786   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2276787   +
2276788   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2276789   +
2276790   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2276791   +
2276792   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2276793   +
2276794   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2276795   +
2276796   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2276797   +
2276798   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2276799   +
2276800   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2276801   +
2276802   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2276803   +
2276804   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2276805   +
2276806   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2276807   +
2276808   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2276809   +
2276810   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2276811   +
2276812   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2276813   +
2276814   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2276815   +
2276816   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2276817   +
2276818   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2276819   +
2276820   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2276821   +
2276822   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2276823   +
2276824   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2276825   +
2276826   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2276827   +
2276828   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2276829   +
2276830   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2276831   +
2276832   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2276833   +
2276834   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2276835   +
2276836   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2276837   +
2276838   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2276839   +
2276840   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2276841   +
2276842   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2276843   +
2276844   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2276845   +
2276846   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2276847   +
2276848   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2276849   +
2276850   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2276851   +
2276852   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2276853   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2276854   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2276855   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2276856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276858   +end;
MPRINT(EM_DIAGRAM):   end;
2276859   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276860   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276861   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2276862   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276863   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276864   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2276865   +   end;
MPRINT(EM_DIAGRAM):   end;
2276866   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276867   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2276868   +   end;
MPRINT(EM_DIAGRAM):   end;
2276869   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276870   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2276871   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276872   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276873   +   end;
MPRINT(EM_DIAGRAM):   end;
2276874   +end;
MPRINT(EM_DIAGRAM):   end;
2276875   +
2276876   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2276877   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2276878   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2276879   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2276880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276882   +end;
MPRINT(EM_DIAGRAM):   end;
2276883   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276884   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276885   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2276886   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276887   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276888   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2276889   +   end;
MPRINT(EM_DIAGRAM):   end;
2276890   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276891   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2276892   +   end;
MPRINT(EM_DIAGRAM):   end;
2276893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276894   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2276895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276897   +   end;
MPRINT(EM_DIAGRAM):   end;
2276898   +end;
MPRINT(EM_DIAGRAM):   end;
2276899   +
2276900   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2276901   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2276902   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2276903   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2276904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276906   +end;
MPRINT(EM_DIAGRAM):   end;
2276907   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276908   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276909   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2276910   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276911   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276912   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2276913   +   end;
MPRINT(EM_DIAGRAM):   end;
2276914   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276915   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2276916   +   end;
MPRINT(EM_DIAGRAM):   end;
2276917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276918   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2276919   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276920   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276921   +   end;
MPRINT(EM_DIAGRAM):   end;
2276922   +end;
MPRINT(EM_DIAGRAM):   end;
2276923   +
2276924   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2276925   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2276926   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2276927   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2276928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276930   +end;
MPRINT(EM_DIAGRAM):   end;
2276931   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276933   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2276934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276935   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276936   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2276937   +   end;
MPRINT(EM_DIAGRAM):   end;
2276938   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276939   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2276940   +   end;
MPRINT(EM_DIAGRAM):   end;
2276941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276942   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2276943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276945   +   end;
MPRINT(EM_DIAGRAM):   end;
2276946   +end;
MPRINT(EM_DIAGRAM):   end;
2276947   +
2276948   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2276949   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2276950   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2276951   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2276952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276954   +end;
MPRINT(EM_DIAGRAM):   end;
2276955   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276957   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2276958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276959   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276960   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2276961   +   end;
MPRINT(EM_DIAGRAM):   end;
2276962   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276963   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2276964   +   end;
MPRINT(EM_DIAGRAM):   end;
2276965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276966   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2276967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276969   +   end;
MPRINT(EM_DIAGRAM):   end;
2276970   +end;
MPRINT(EM_DIAGRAM):   end;
2276971   +
2276972   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2276973   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2276974   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2276975   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2276976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2276977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276978   +end;
MPRINT(EM_DIAGRAM):   end;
2276979   +else do;
MPRINT(EM_DIAGRAM):   else do;
2276980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2276981   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2276982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2276983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2276984   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2276985   +   end;
MPRINT(EM_DIAGRAM):   end;
2276986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2276987   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2276988   +   end;
MPRINT(EM_DIAGRAM):   end;
2276989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2276990   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2276991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2276992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2276993   +   end;
MPRINT(EM_DIAGRAM):   end;
2276994   +end;
MPRINT(EM_DIAGRAM):   end;
2276995   +
2276996   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2276997   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2276998   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2276999   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2277000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277002   +end;
MPRINT(EM_DIAGRAM):   end;
2277003   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277005   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2277006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277007   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2277008   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2277009   +   end;
MPRINT(EM_DIAGRAM):   end;
2277010   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2277011   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2277012   +   end;
MPRINT(EM_DIAGRAM):   end;
2277013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277014   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2277015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277017   +   end;
MPRINT(EM_DIAGRAM):   end;
2277018   +end;
MPRINT(EM_DIAGRAM):   end;
2277019   +
2277020   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2277021   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2277022   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2277023   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2277024   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2277025   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2277026   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2277027   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2277028   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2277029   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2277030   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2277031   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2277032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277034   +end;
MPRINT(EM_DIAGRAM):   end;
2277035   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277036   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2277037   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2277038   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277039   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2277040   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2277041   +   end;
MPRINT(EM_DIAGRAM):   end;
2277042   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2277043   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2277044   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2277045   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2277046   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2277047   +   end;
MPRINT(EM_DIAGRAM):   end;
2277048   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2277049   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2277050   +   end;
MPRINT(EM_DIAGRAM):   end;
2277051   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2277052   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2277053   +   end;
MPRINT(EM_DIAGRAM):   end;
2277054   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2277055   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2277056   +   end;
MPRINT(EM_DIAGRAM):   end;
2277057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277058   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2277059   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2277060   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2277061   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2277062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277064   +   end;
MPRINT(EM_DIAGRAM):   end;
2277065   +end;
MPRINT(EM_DIAGRAM):   end;
2277066   +
2277067   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2277068   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2277069   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2277070   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2277071   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2277072   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2277073   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2277074   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2277075   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2277076   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2277077   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2277078   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2277079   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2277080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277082   +end;
MPRINT(EM_DIAGRAM):   end;
2277083   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277084   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2277085   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2277086   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277087   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2277088   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2277089   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2277090   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2277091   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2277092   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277093   +         end;
MPRINT(EM_DIAGRAM):   end;
2277094   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2277095   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2277096   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2277097   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277098   +            end;
MPRINT(EM_DIAGRAM):   end;
2277099   +         end;
MPRINT(EM_DIAGRAM):   end;
2277100   +      end;
MPRINT(EM_DIAGRAM):   end;
2277101   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2277102   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2277103   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2277104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277105   +         end;
MPRINT(EM_DIAGRAM):   end;
2277106   +      end;
MPRINT(EM_DIAGRAM):   end;
2277107   +   end;
MPRINT(EM_DIAGRAM):   end;
2277108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277109   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2277110   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2277111   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277112   +      end;
MPRINT(EM_DIAGRAM):   end;
2277113   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2277114   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2277115   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2277116   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2277117   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2277118   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2277119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277120   +         end;
MPRINT(EM_DIAGRAM):   end;
2277121   +      end;
MPRINT(EM_DIAGRAM):   end;
2277122   +   end;
MPRINT(EM_DIAGRAM):   end;
2277123   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2277124   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2277125   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2277126   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2277127   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2277128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277130   +   end;
MPRINT(EM_DIAGRAM):   end;
2277131   +end;
MPRINT(EM_DIAGRAM):   end;
2277132   +
2277133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277134   +*** Checking missing input Interval
2277135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2277136   +
2277137   +IF NMISS(
2277138   +   AcceptedCmpTotal ,
2277139   +   Age ,
2277140   +   Frq ,
2277141   +   Income ,
2277142   +   Kidhome ,
2277143   +   Mnt ,
2277144   +   MntFishProducts ,
2277145   +   MntFruits ,
2277146   +   MntGoldProds ,
2277147   +   MntMeatProducts ,
2277148   +   MntSweetProducts ,
2277149   +   MntWines ,
2277150   +   MonthsAsCustomer ,
2277151   +   NumCatalogPurchases ,
2277152   +   NumDealsPurchases ,
2277153   +   NumDistPurchases ,
2277154   +   NumStorePurchases ,
2277155   +   NumWebPurchases ,
2277156   +   NumWebVisitsMonth ,
2277157   +   RFMstat ,
2277158   +   RMntFrq ,
2277159   +   Recency ,
2277160   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2277161   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2277162   +
2277163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277164   +END;
MPRINT(EM_DIAGRAM):   END;
2277165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277166   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2277167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277168   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2277169   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2277170   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2277171   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2277172   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2277173   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2277174   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2277175   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2277176   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2277177   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2277178   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2277179   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2277180   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2277181   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2277182   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2277183   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2277184   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2277185   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2277186   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2277187   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2277188   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2277189   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2277190   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2277191   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2277192   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2277193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2277194   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2277195   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2277196   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2277197   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2277198   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2277199   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2277200   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2277201   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2277202   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2277203   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2277204   +END;
MPRINT(EM_DIAGRAM):   END;
2277205   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2277206   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2277207   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2277208   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2277209   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2277210   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2277211   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2277212   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2277213   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2277214   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2277215   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2277216   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2277217   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2277218   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2277219   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2277220   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2277221   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2277222   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2277223   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2277224   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2277225   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2277226   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2277227   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2277228   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2277229   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2277230   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2277231   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2277232   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2277233   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2277234   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2277235   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2277236   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2277237   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2277238   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2277239   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2277240   +   ELSE S_NumCatalogPurchases
2277241   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2277242   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2277243   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2277244   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2277245   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2277246   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2277247   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2277248   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2277249   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2277250   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2277251   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2277252   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2277253   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2277254   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2277255   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2277256   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2277257   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2277258   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2277259   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2277260   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2277261   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2277262   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2277263   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2277264   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2277265   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2277266   +END;
MPRINT(EM_DIAGRAM):   END;
2277267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277268   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2277269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277271   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2277272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277274   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2277275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2277277   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2277278   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2277279   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2277280   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2277281   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2277282   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2277283   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2277284   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2277285   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2277286   +          +     0.09634439105648 * S_NumDealsPurchases
2277287   +          +     -0.2727389064287 * S_NumDistPurchases
2277288   +          +    -0.14179871978162 * S_NumStorePurchases
2277289   +          +     0.11008049559527 * S_NumWebPurchases
2277290   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2277291   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2277292   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2277293   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2277294   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2277295   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2277296   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2277297   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2277298   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2277299   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2277300   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2277301   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2277302   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2277303   +          +     0.15835936877168 * S_NumDealsPurchases
2277304   +          +     0.04229992769587 * S_NumDistPurchases
2277305   +          +    -0.04051362547639 * S_NumStorePurchases
2277306   +          +    -0.01791546488406 * S_NumWebPurchases
2277307   +          +     0.28833008597045 * S_NumWebVisitsMonth
2277308   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2277309   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2277310   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2277311   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2277312   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2277313   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2277314   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2277315   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2277316   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2277317   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2277318   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2277319   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2277320   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2277321   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2277322   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2277323   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2277324   +          +     -0.0504367274898 * Marital_StatusDivorced
2277325   +          +     0.28345714390306 * Marital_StatusMarried
2277326   +          +     -0.2012923780435 * Marital_StatusSingle
2277327   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2277328   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2277329   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2277330   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2277331   +          +     0.06828937261262 * Marital_StatusDivorced
2277332   +          +     -0.1520862543536 * Marital_StatusMarried
2277333   +          +      0.1392808464716 * Marital_StatusSingle
2277334   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2277335   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2277336   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2277337   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2277338   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2277339   +END;
MPRINT(EM_DIAGRAM):   END;
2277340   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2277341   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2277342   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2277343   +END;
MPRINT(EM_DIAGRAM):   END;
2277344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277345   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2277346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277347   +
2277348   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2277349   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2277350   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2277351   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2277352   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2277353   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277354   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2277355   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2277356   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2277357   +end;
MPRINT(EM_DIAGRAM):   end;
2277358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277359   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2277360   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2277361   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2277362   +   end;
MPRINT(EM_DIAGRAM):   end;
2277363   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2277364   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2277365   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2277366   +   end;
MPRINT(EM_DIAGRAM):   end;
2277367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277368   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2277369   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2277370   +   end;
MPRINT(EM_DIAGRAM):   end;
2277371   +end;
MPRINT(EM_DIAGRAM):   end;
2277372   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2277373   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2277374   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2277375   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2277376   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2277377   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2277378   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2277379   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2277380   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2277381   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2277382   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2277383   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2277384   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2277385   +END;
MPRINT(EM_DIAGRAM):   END;
2277386   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2277387   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2277388   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2277389   +END;
MPRINT(EM_DIAGRAM):   END;
2277390   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2277391   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2277392   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2277393   +END;
MPRINT(EM_DIAGRAM):   END;
2277394   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2277395   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2277396   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2277397   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2277398   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2277399   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2277400   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2277401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277402   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2277403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277404   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2277405   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2277406   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2277407   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2277408   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2277409   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2277410   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2277411   +END;
MPRINT(EM_DIAGRAM):   END;
2277412   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2277413   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2277414   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2277415   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2277416   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2277417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277418   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2277419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277420   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2277421   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2277422   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2277423   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2277424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277425   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2277426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277427   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2277428   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2277429   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2277430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277431   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
2277432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277434   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2277435   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2277436   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2277437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2277438   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2277439   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2277440   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2277441   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2277442   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2277443   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2277444   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2277445   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2277446   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2277447   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2277448   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2277449   +LENGTH _WARN_ $4
2277450   +      F_DepVar  $ 12
2277451   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2277452   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2277453   +
2277454   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2277455   +
2277456   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2277457   +
2277458   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2277459   +
2277460   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2277461   +
2277462   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2277463   +
2277464   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2277465   +
2277466   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2277467   +
2277468   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2277469   +
2277470   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2277471   +
2277472   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2277473   +
2277474   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2277475   +
2277476   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2277477   +
2277478   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2277479   +
2277480   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2277481   +
2277482   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2277483   +
2277484   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2277485   +
2277486   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2277487   +
2277488   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2277489   +
2277490   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2277491   +
2277492   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2277493   +
2277494   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2277495   +
2277496   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2277497   +
2277498   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2277499   +
2277500   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2277501   +
2277502   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2277503   +
2277504   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2277505   +
2277506   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2277507   +
2277508   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2277509   +
2277510   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2277511   +
2277512   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2277513   +
2277514   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2277515   +
2277516   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2277517   +
2277518   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2277519   +
2277520   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2277521   +
2277522   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2277523   +
2277524   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2277525   +
2277526   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2277527   +
2277528   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2277529   +
2277530   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2277531   +
2277532   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2277533   +
2277534   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2277535   +
2277536   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2277537   +
2277538   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2277539   +
2277540   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2277541   +
2277542   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2277543   +
2277544   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2277545   +
2277546   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2277547   +
2277548   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2277549   +
2277550   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2277551   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2277552   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2277553   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2277554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277556   +end;
MPRINT(EM_DIAGRAM):   end;
2277557   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277559   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2277560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277562   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2277563   +   end;
MPRINT(EM_DIAGRAM):   end;
2277564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277565   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2277566   +   end;
MPRINT(EM_DIAGRAM):   end;
2277567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277568   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2277569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277571   +   end;
MPRINT(EM_DIAGRAM):   end;
2277572   +end;
MPRINT(EM_DIAGRAM):   end;
2277573   +
2277574   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2277575   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2277576   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2277577   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2277578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277580   +end;
MPRINT(EM_DIAGRAM):   end;
2277581   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277583   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2277584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277586   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2277587   +   end;
MPRINT(EM_DIAGRAM):   end;
2277588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277589   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2277590   +   end;
MPRINT(EM_DIAGRAM):   end;
2277591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277592   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2277593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277595   +   end;
MPRINT(EM_DIAGRAM):   end;
2277596   +end;
MPRINT(EM_DIAGRAM):   end;
2277597   +
2277598   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2277599   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2277600   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2277601   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2277602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277604   +end;
MPRINT(EM_DIAGRAM):   end;
2277605   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277607   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2277608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277610   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2277611   +   end;
MPRINT(EM_DIAGRAM):   end;
2277612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277613   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2277614   +   end;
MPRINT(EM_DIAGRAM):   end;
2277615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277616   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2277617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277619   +   end;
MPRINT(EM_DIAGRAM):   end;
2277620   +end;
MPRINT(EM_DIAGRAM):   end;
2277621   +
2277622   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2277623   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2277624   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2277625   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2277626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277628   +end;
MPRINT(EM_DIAGRAM):   end;
2277629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277631   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2277632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277634   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2277635   +   end;
MPRINT(EM_DIAGRAM):   end;
2277636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277637   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2277638   +   end;
MPRINT(EM_DIAGRAM):   end;
2277639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277640   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2277641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277643   +   end;
MPRINT(EM_DIAGRAM):   end;
2277644   +end;
MPRINT(EM_DIAGRAM):   end;
2277645   +
2277646   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2277647   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2277648   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2277649   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2277650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277652   +end;
MPRINT(EM_DIAGRAM):   end;
2277653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277655   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2277656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277658   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2277659   +   end;
MPRINT(EM_DIAGRAM):   end;
2277660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277661   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2277662   +   end;
MPRINT(EM_DIAGRAM):   end;
2277663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277664   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2277665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277667   +   end;
MPRINT(EM_DIAGRAM):   end;
2277668   +end;
MPRINT(EM_DIAGRAM):   end;
2277669   +
2277670   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2277671   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2277672   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2277673   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2277674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277676   +end;
MPRINT(EM_DIAGRAM):   end;
2277677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277679   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2277680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2277682   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2277683   +   end;
MPRINT(EM_DIAGRAM):   end;
2277684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2277685   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2277686   +   end;
MPRINT(EM_DIAGRAM):   end;
2277687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277688   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2277689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277691   +   end;
MPRINT(EM_DIAGRAM):   end;
2277692   +end;
MPRINT(EM_DIAGRAM):   end;
2277693   +
2277694   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2277695   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2277696   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2277697   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2277698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277700   +end;
MPRINT(EM_DIAGRAM):   end;
2277701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2277703   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2277704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277705   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2277706   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2277707   +   end;
MPRINT(EM_DIAGRAM):   end;
2277708   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2277709   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2277710   +   end;
MPRINT(EM_DIAGRAM):   end;
2277711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277712   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2277713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277715   +   end;
MPRINT(EM_DIAGRAM):   end;
2277716   +end;
MPRINT(EM_DIAGRAM):   end;
2277717   +
2277718   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2277719   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2277720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2277721   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2277722   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2277723   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2277724   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2277725   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2277726   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2277727   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2277728   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2277729   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2277730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277732   +end;
MPRINT(EM_DIAGRAM):   end;
2277733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277734   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2277735   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2277736   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277737   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2277738   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2277739   +   end;
MPRINT(EM_DIAGRAM):   end;
2277740   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2277741   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2277742   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2277743   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2277744   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2277745   +   end;
MPRINT(EM_DIAGRAM):   end;
2277746   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2277747   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2277748   +   end;
MPRINT(EM_DIAGRAM):   end;
2277749   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2277750   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2277751   +   end;
MPRINT(EM_DIAGRAM):   end;
2277752   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2277753   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2277754   +   end;
MPRINT(EM_DIAGRAM):   end;
2277755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277756   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2277757   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2277758   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2277759   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2277760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277762   +   end;
MPRINT(EM_DIAGRAM):   end;
2277763   +end;
MPRINT(EM_DIAGRAM):   end;
2277764   +
2277765   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2277766   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2277767   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2277768   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2277769   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2277770   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2277771   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2277772   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2277773   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2277774   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2277775   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2277776   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2277777   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2277778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2277779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277780   +end;
MPRINT(EM_DIAGRAM):   end;
2277781   +else do;
MPRINT(EM_DIAGRAM):   else do;
2277782   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2277783   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2277784   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2277785   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2277786   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2277787   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2277788   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2277789   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2277790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277791   +         end;
MPRINT(EM_DIAGRAM):   end;
2277792   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2277793   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2277794   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2277795   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277796   +            end;
MPRINT(EM_DIAGRAM):   end;
2277797   +         end;
MPRINT(EM_DIAGRAM):   end;
2277798   +      end;
MPRINT(EM_DIAGRAM):   end;
2277799   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2277800   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2277801   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2277802   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277803   +         end;
MPRINT(EM_DIAGRAM):   end;
2277804   +      end;
MPRINT(EM_DIAGRAM):   end;
2277805   +   end;
MPRINT(EM_DIAGRAM):   end;
2277806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2277807   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2277808   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2277809   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277810   +      end;
MPRINT(EM_DIAGRAM):   end;
2277811   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2277812   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2277813   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2277814   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2277815   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2277816   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2277817   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2277818   +         end;
MPRINT(EM_DIAGRAM):   end;
2277819   +      end;
MPRINT(EM_DIAGRAM):   end;
2277820   +   end;
MPRINT(EM_DIAGRAM):   end;
2277821   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2277822   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2277823   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2277824   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2277825   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2277826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2277827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277828   +   end;
MPRINT(EM_DIAGRAM):   end;
2277829   +end;
MPRINT(EM_DIAGRAM):   end;
2277830   +
2277831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277832   +*** Checking missing input Interval
2277833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2277834   +
2277835   +IF NMISS(
2277836   +   AcceptedCmpTotal ,
2277837   +   Age ,
2277838   +   Frq ,
2277839   +   Income ,
2277840   +   Kidhome ,
2277841   +   Mnt ,
2277842   +   MntFishProducts ,
2277843   +   MntFruits ,
2277844   +   MntGoldProds ,
2277845   +   MntMeatProducts ,
2277846   +   MntSweetProducts ,
2277847   +   MntWines ,
2277848   +   MonthsAsCustomer ,
2277849   +   NumCatalogPurchases ,
2277850   +   NumDealsPurchases ,
2277851   +   NumDistPurchases ,
2277852   +   NumStorePurchases ,
2277853   +   NumWebPurchases ,
2277854   +   NumWebVisitsMonth ,
2277855   +   RFMstat ,
2277856   +   RMntFrq ,
2277857   +   Recency ,
2277858   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2277859   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2277860   +
2277861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2277862   +END;
MPRINT(EM_DIAGRAM):   END;
2277863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277864   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2277865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277866   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2277867   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2277868   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2277869   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2277870   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2277871   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2277872   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2277873   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2277874   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2277875   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2277876   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2277877   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2277878   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2277879   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2277880   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2277881   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2277882   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2277883   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2277884   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2277885   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2277886   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2277887   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2277888   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2277889   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2277890   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2277891   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2277892   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2277893   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2277894   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2277895   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2277896   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2277897   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2277898   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2277899   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2277900   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2277901   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2277902   +END;
MPRINT(EM_DIAGRAM):   END;
2277903   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2277904   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2277905   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2277906   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2277907   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2277908   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2277909   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2277910   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2277911   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2277912   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2277913   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2277914   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2277915   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2277916   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2277917   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2277918   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2277919   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2277920   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2277921   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2277922   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2277923   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2277924   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2277925   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2277926   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2277927   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2277928   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2277929   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2277930   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2277931   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2277932   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2277933   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2277934   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2277935   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2277936   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2277937   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2277938   +   ELSE S_NumCatalogPurchases
2277939   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2277940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2277941   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2277942   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2277943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2277944   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2277945   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2277946   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2277947   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2277948   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2277949   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2277950   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2277951   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2277952   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2277953   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2277954   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2277955   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2277956   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2277957   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2277958   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2277959   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2277960   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2277961   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2277962   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2277963   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2277964   +END;
MPRINT(EM_DIAGRAM):   END;
2277965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277966   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2277967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277969   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2277970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277972   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2277973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2277974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2277975   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2277976   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2277977   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2277978   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2277979   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2277980   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2277981   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2277982   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2277983   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2277984   +          +     0.10832450413796 * S_NumDealsPurchases
2277985   +          +     0.17985750884741 * S_NumDistPurchases
2277986   +          +     0.45794093255577 * S_NumStorePurchases
2277987   +          +     0.37000538836801 * S_NumWebPurchases
2277988   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2277989   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2277990   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2277991   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 *
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 *
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts +
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 *
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines +
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases +
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases +
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases +
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 *
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2277992   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2277993   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2277994   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2277995   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2277996   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2277997   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2277998   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2277999   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2278000   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2278001   +          +    -1.14287651740452 * S_NumDealsPurchases
2278002   +          +    -0.03763726936438 * S_NumDistPurchases
2278003   +          +     0.87545461519128 * S_NumStorePurchases
2278004   +          +     1.40430622837706 * S_NumWebPurchases
2278005   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2278006   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2278007   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2278008   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome +
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 *
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts +
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 *
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 *
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 *
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 *
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq +
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2278009   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2278010   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2278011   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2278012   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2278013   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 +
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 *
HigherEducationBinary0 ;
2278014   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2278015   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2278016   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2278017   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2278018   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 *
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 +
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 *
HigherEducationBinary0 ;
2278019   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2278020   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2278021   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2278022   +          +    -0.73074769535078 * Marital_StatusDivorced
2278023   +          +     1.30761047614007 * Marital_StatusMarried
2278024   +          +    -0.89398481770909 * Marital_StatusSingle
2278025   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle +
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation +
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced +
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle +
1.23033906473946 * Marital_StatusTogether ;
2278026   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2278027   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2278028   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2278029   +          +     0.18252613160517 * Marital_StatusDivorced
2278030   +          +     0.12434140806967 * Marital_StatusMarried
2278031   +          +    -0.30167854485292 * Marital_StatusSingle
2278032   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle +
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation +
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced +
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle +
0.17039487484346 * Marital_StatusTogether ;
2278033   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2278034   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2278035   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2278036   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2278037   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2278038   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2278039   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2278040   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2278041   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2278042   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2278043   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2278044   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2278045   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2278046   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2278047   +END;
MPRINT(EM_DIAGRAM):   END;
2278048   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2278049   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2278050   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2278051   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2278052   +END;
MPRINT(EM_DIAGRAM):   END;
2278053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278054   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2278055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278056   +
2278057   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2278058   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2278059   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2278060   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2278061   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2278062   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278063   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2278064   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2278065   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2278066   +end;
MPRINT(EM_DIAGRAM):   end;
2278067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278068   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2278069   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2278070   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2278071   +   end;
MPRINT(EM_DIAGRAM):   end;
2278072   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2278073   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2278074   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2278075   +   end;
MPRINT(EM_DIAGRAM):   end;
2278076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278077   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2278078   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2278079   +   end;
MPRINT(EM_DIAGRAM):   end;
2278080   +end;
MPRINT(EM_DIAGRAM):   end;
2278081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2278082   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2278083   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 +
22.9468369203579 * H1x1_3 ;
2278084   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2278085   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2278086   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2278087   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2278088   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2278089   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2278090   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2278091   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2278092   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2278093   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2278094   +END;
MPRINT(EM_DIAGRAM):   END;
2278095   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2278096   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2278097   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2278098   +END;
MPRINT(EM_DIAGRAM):   END;
2278099   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2278100   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2278101   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2278102   +END;
MPRINT(EM_DIAGRAM):   END;
2278103   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2278104   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2278105   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2278106   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2278107   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2278108   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2278109   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2278110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278111   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2278112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278113   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2278114   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2278115   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2278116   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2278117   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2278118   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2278119   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2278120   +END;
MPRINT(EM_DIAGRAM):   END;
2278121   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2278122   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2278123   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2278124   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2278125   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2278126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278127   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2278128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278129   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2278130   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2278131   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2278132   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2278133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278134   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2278135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278136   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2278137   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2278138   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2278139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278140   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
2278141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278143   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2278144   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2278145   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2278146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2278147   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2278148   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2278149   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2278150   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2278151   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2278152   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2278153   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2278154   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2278155   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2278156   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2278157   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2278158   +LENGTH _WARN_ $4
2278159   +      F_DepVar  $ 12
2278160   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2278161   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2278162   +
2278163   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2278164   +
2278165   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2278166   +
2278167   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2278168   +
2278169   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2278170   +
2278171   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2278172   +
2278173   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2278174   +
2278175   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2278176   +
2278177   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2278178   +
2278179   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2278180   +
2278181   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2278182   +
2278183   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2278184   +
2278185   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2278186   +
2278187   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2278188   +
2278189   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2278190   +
2278191   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2278192   +
2278193   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2278194   +
2278195   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2278196   +
2278197   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2278198   +
2278199   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2278200   +
2278201   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2278202   +
2278203   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2278204   +
2278205   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2278206   +
2278207   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2278208   +
2278209   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2278210   +
2278211   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2278212   +
2278213   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2278214   +
2278215   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2278216   +
2278217   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2278218   +
2278219   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2278220   +
2278221   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2278222   +
2278223   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2278224   +
2278225   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2278226   +
2278227   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2278228   +
2278229   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2278230   +
2278231   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2278232   +
2278233   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2278234   +
2278235   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2278236   +
2278237   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2278238   +
2278239   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2278240   +
2278241   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2278242   +
2278243   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2278244   +
2278245   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2278246   +
2278247   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2278248   +
2278249   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2278250   +
2278251   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2278252   +
2278253   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2278254   +
2278255   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2278256   +
2278257   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2278258   +
2278259   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2278260   +
2278261   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2278262   +
2278263   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2278264   +
2278265   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2278266   +
2278267   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2278268   +
2278269   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2278270   +
2278271   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2278272   +
2278273   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2278274   +
2278275   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2278276   +
2278277   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2278278   +
2278279   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2278280   +
2278281   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2278282   +
2278283   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2278284   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2278285   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2278286   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2278287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278289   +end;
MPRINT(EM_DIAGRAM):   end;
2278290   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278292   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2278293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278294   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278295   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2278296   +   end;
MPRINT(EM_DIAGRAM):   end;
2278297   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278298   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2278299   +   end;
MPRINT(EM_DIAGRAM):   end;
2278300   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278301   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2278302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278304   +   end;
MPRINT(EM_DIAGRAM):   end;
2278305   +end;
MPRINT(EM_DIAGRAM):   end;
2278306   +
2278307   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2278308   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2278309   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2278310   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2278311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278313   +end;
MPRINT(EM_DIAGRAM):   end;
2278314   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278316   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2278317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278319   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2278320   +   end;
MPRINT(EM_DIAGRAM):   end;
2278321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278322   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2278323   +   end;
MPRINT(EM_DIAGRAM):   end;
2278324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278325   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2278326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278328   +   end;
MPRINT(EM_DIAGRAM):   end;
2278329   +end;
MPRINT(EM_DIAGRAM):   end;
2278330   +
2278331   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2278332   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2278333   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2278334   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2278335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278337   +end;
MPRINT(EM_DIAGRAM):   end;
2278338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278340   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2278341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278343   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2278344   +   end;
MPRINT(EM_DIAGRAM):   end;
2278345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278346   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2278347   +   end;
MPRINT(EM_DIAGRAM):   end;
2278348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278349   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2278350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278352   +   end;
MPRINT(EM_DIAGRAM):   end;
2278353   +end;
MPRINT(EM_DIAGRAM):   end;
2278354   +
2278355   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2278356   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2278357   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2278358   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2278359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278361   +end;
MPRINT(EM_DIAGRAM):   end;
2278362   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278364   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2278365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278367   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2278368   +   end;
MPRINT(EM_DIAGRAM):   end;
2278369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278370   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2278371   +   end;
MPRINT(EM_DIAGRAM):   end;
2278372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278373   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2278374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278376   +   end;
MPRINT(EM_DIAGRAM):   end;
2278377   +end;
MPRINT(EM_DIAGRAM):   end;
2278378   +
2278379   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2278380   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2278381   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2278382   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2278383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278385   +end;
MPRINT(EM_DIAGRAM):   end;
2278386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278388   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2278389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278391   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2278392   +   end;
MPRINT(EM_DIAGRAM):   end;
2278393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278394   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2278395   +   end;
MPRINT(EM_DIAGRAM):   end;
2278396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278397   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2278398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278400   +   end;
MPRINT(EM_DIAGRAM):   end;
2278401   +end;
MPRINT(EM_DIAGRAM):   end;
2278402   +
2278403   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2278404   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2278405   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2278406   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2278407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278409   +end;
MPRINT(EM_DIAGRAM):   end;
2278410   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278412   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2278413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2278415   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2278416   +   end;
MPRINT(EM_DIAGRAM):   end;
2278417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2278418   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2278419   +   end;
MPRINT(EM_DIAGRAM):   end;
2278420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278421   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2278422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278424   +   end;
MPRINT(EM_DIAGRAM):   end;
2278425   +end;
MPRINT(EM_DIAGRAM):   end;
2278426   +
2278427   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2278428   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2278429   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2278430   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2278431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278433   +end;
MPRINT(EM_DIAGRAM):   end;
2278434   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2278436   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2278437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278438   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2278439   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2278440   +   end;
MPRINT(EM_DIAGRAM):   end;
2278441   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2278442   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2278443   +   end;
MPRINT(EM_DIAGRAM):   end;
2278444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278445   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2278446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278448   +   end;
MPRINT(EM_DIAGRAM):   end;
2278449   +end;
MPRINT(EM_DIAGRAM):   end;
2278450   +
2278451   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2278452   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2278453   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2278454   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2278455   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2278456   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2278457   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2278458   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2278459   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2278460   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2278461   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2278462   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2278463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278465   +end;
MPRINT(EM_DIAGRAM):   end;
2278466   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278467   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2278468   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2278469   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278470   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2278471   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2278472   +   end;
MPRINT(EM_DIAGRAM):   end;
2278473   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2278474   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2278475   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2278476   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2278477   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2278478   +   end;
MPRINT(EM_DIAGRAM):   end;
2278479   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2278480   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2278481   +   end;
MPRINT(EM_DIAGRAM):   end;
2278482   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2278483   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2278484   +   end;
MPRINT(EM_DIAGRAM):   end;
2278485   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2278486   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2278487   +   end;
MPRINT(EM_DIAGRAM):   end;
2278488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278489   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2278490   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2278491   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2278492   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2278493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278495   +   end;
MPRINT(EM_DIAGRAM):   end;
2278496   +end;
MPRINT(EM_DIAGRAM):   end;
2278497   +
2278498   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2278499   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2278500   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2278501   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2278502   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2278503   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2278504   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2278505   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2278506   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2278507   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2278508   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2278509   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2278510   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2278511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2278512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278513   +end;
MPRINT(EM_DIAGRAM):   end;
2278514   +else do;
MPRINT(EM_DIAGRAM):   else do;
2278515   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2278516   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2278517   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2278518   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2278519   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2278520   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2278521   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2278522   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2278523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2278524   +         end;
MPRINT(EM_DIAGRAM):   end;
2278525   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2278526   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2278527   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2278528   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2278529   +            end;
MPRINT(EM_DIAGRAM):   end;
2278530   +         end;
MPRINT(EM_DIAGRAM):   end;
2278531   +      end;
MPRINT(EM_DIAGRAM):   end;
2278532   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2278533   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2278534   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2278535   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2278536   +         end;
MPRINT(EM_DIAGRAM):   end;
2278537   +      end;
MPRINT(EM_DIAGRAM):   end;
2278538   +   end;
MPRINT(EM_DIAGRAM):   end;
2278539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2278540   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2278541   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2278542   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2278543   +      end;
MPRINT(EM_DIAGRAM):   end;
2278544   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2278545   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2278546   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2278547   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2278548   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2278549   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2278550   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2278551   +         end;
MPRINT(EM_DIAGRAM):   end;
2278552   +      end;
MPRINT(EM_DIAGRAM):   end;
2278553   +   end;
MPRINT(EM_DIAGRAM):   end;
2278554   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2278555   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2278556   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2278557   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2278558   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2278559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2278560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278561   +   end;
MPRINT(EM_DIAGRAM):   end;
2278562   +end;
MPRINT(EM_DIAGRAM):   end;
2278563   +
2278564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278565   +*** Checking missing input Interval
2278566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2278567   +
2278568   +IF NMISS(
2278569   +   AcceptedCmpTotal ,
2278570   +   Age ,
2278571   +   Frq ,
2278572   +   Income ,
2278573   +   Kidhome ,
2278574   +   Mnt ,
2278575   +   MntFishProducts ,
2278576   +   MntFruits ,
2278577   +   MntGoldProds ,
2278578   +   MntMeatProducts ,
2278579   +   MntSweetProducts ,
2278580   +   MntWines ,
2278581   +   MonthsAsCustomer ,
2278582   +   NumCatalogPurchases ,
2278583   +   NumDealsPurchases ,
2278584   +   NumDistPurchases ,
2278585   +   NumStorePurchases ,
2278586   +   NumWebPurchases ,
2278587   +   NumWebVisitsMonth ,
2278588   +   RFMstat ,
2278589   +   RMntFrq ,
2278590   +   Recency ,
2278591   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2278592   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2278593   +
2278594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2278595   +END;
MPRINT(EM_DIAGRAM):   END;
2278596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278597   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2278598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278599   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2278600   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2278601   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2278602   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2278603   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2278604   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2278605   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2278606   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2278607   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2278608   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2278609   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2278610   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2278611   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2278612   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2278613   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2278614   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2278615   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2278616   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2278617   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2278618   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2278619   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2278620   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2278621   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2278622   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2278623   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2278624   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2278625   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2278626   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2278627   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2278628   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2278629   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2278630   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2278631   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2278632   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2278633   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2278634   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2278635   +END;
MPRINT(EM_DIAGRAM):   END;
2278636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2278637   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2278638   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2278639   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2278640   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2278641   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2278642   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2278643   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2278644   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2278645   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2278646   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2278647   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2278648   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2278649   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2278650   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2278651   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2278652   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2278653   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2278654   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2278655   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2278656   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2278657   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2278658   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2278659   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2278660   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2278661   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2278662   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2278663   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2278664   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2278665   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2278666   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2278667   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2278668   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2278669   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2278670   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2278671   +   ELSE S_NumCatalogPurchases
2278672   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2278673   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2278674   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2278675   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2278676   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2278677   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2278678   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2278679   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2278680   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2278681   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2278682   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2278683   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2278684   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2278685   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2278686   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2278687   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2278688   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2278689   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2278690   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2278691   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2278692   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2278693   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2278694   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2278695   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2278696   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2278697   +END;
MPRINT(EM_DIAGRAM):   END;
2278698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278699   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2278700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278702   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2278703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278705   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2278706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278707   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2278708   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2278709   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2278710   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2278711   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2278712   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2278713   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2278714   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2278715   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2278716   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2278717   +          +      3.4758215776031 * S_NumDealsPurchases
2278718   +          +     0.17094021755289 * S_NumDistPurchases
2278719   +          +    -2.72090095694641 * S_NumStorePurchases
2278720   +          +    -0.31877935826328 * S_NumWebPurchases
2278721   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2278722   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2278723   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2278724   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2278725   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2278726   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2278727   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2278728   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2278729   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2278730   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2278731   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2278732   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2278733   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2278734   +          +    -1.21013804197082 * S_NumDealsPurchases
2278735   +          +     0.59974279122188 * S_NumDistPurchases
2278736   +          +     1.92425710681156 * S_NumStorePurchases
2278737   +          +     1.02413182452324 * S_NumWebPurchases
2278738   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2278739   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2278740   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2278741   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2278742   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2278743   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2278744   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2278745   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2278746   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2278747   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2278748   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2278749   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2278750   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2278751   +          +      0.4928343071801 * S_NumDealsPurchases
2278752   +          +     -0.0196677325409 * S_NumDistPurchases
2278753   +          +     0.44395828164873 * S_NumStorePurchases
2278754   +          +     0.86947051591224 * S_NumWebPurchases
2278755   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2278756   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2278757   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2278758   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2278759   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2278760   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2278761   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2278762   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2278763   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2278764   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2278765   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2278766   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2278767   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2278768   +          +     1.10280977051932 * S_NumDealsPurchases
2278769   +          +     0.99310057404036 * S_NumDistPurchases
2278770   +          +    -0.05647459609331 * S_NumStorePurchases
2278771   +          +    -0.89852483938631 * S_NumWebPurchases
2278772   +          +     2.63022480227445 * S_NumWebVisitsMonth
2278773   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2278774   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2278775   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2278776   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2278777   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2278778   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2278779   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2278780   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2278781   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2278782   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2278783   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2278784   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2278785   +          +    -2.62220616180571 * S_NumDealsPurchases
2278786   +          +    -0.51737930835331 * S_NumDistPurchases
2278787   +          +     0.88655783158133 * S_NumStorePurchases
2278788   +          +     0.35132468809969 * S_NumWebPurchases
2278789   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2278790   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2278791   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2278792   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2278793   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2278794   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2278795   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2278796   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2278797   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2278798   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2278799   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2278800   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2278801   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2278802   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2278803   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2278804   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2278805   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2278806   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2278807   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2278808   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2278809   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2278810   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2278811   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2278812   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2278813   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2278814   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2278815   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2278816   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2278817   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2278818   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2278819   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2278820   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2278821   +          +     0.34809919741136 * Marital_StatusDivorced
2278822   +          +    -0.26594093535929 * Marital_StatusMarried
2278823   +          +     0.70249715999987 * Marital_StatusSingle
2278824   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2278825   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2278826   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2278827   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2278828   +          +    -0.20448765627193 * Marital_StatusDivorced
2278829   +          +     1.73231344674733 * Marital_StatusMarried
2278830   +          +    -0.70956480480373 * Marital_StatusSingle
2278831   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2278832   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2278833   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2278834   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2278835   +          +     0.30333818684353 * Marital_StatusDivorced
2278836   +          +    -1.44603535988199 * Marital_StatusMarried
2278837   +          +     0.48409598426383 * Marital_StatusSingle
2278838   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2278839   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2278840   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2278841   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2278842   +          +     -1.5342907846297 * Marital_StatusDivorced
2278843   +          +    -1.79544684592172 * Marital_StatusMarried
2278844   +          +     0.65604313645117 * Marital_StatusSingle
2278845   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2278846   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2278847   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2278848   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2278849   +          +    -3.97940893560267 * Marital_StatusDivorced
2278850   +          +      3.5880254142663 * Marital_StatusMarried
2278851   +          +     -2.9897737730927 * Marital_StatusSingle
2278852   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2278853   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2278854   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2278855   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2278856   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2278857   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2278858   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2278859   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2278860   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2278861   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2278862   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2278863   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2278864   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2278865   +END;
MPRINT(EM_DIAGRAM):   END;
2278866   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2278867   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2278868   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2278869   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2278870   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2278871   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2278872   +END;
MPRINT(EM_DIAGRAM):   END;
2278873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278874   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2278875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2278876   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2278877   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2278878   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2278879   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2278880   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2278881   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2278882   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2278883   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2278884   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2278885   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2278886   +          +     0.07279889333775 * S_NumDealsPurchases
2278887   +          +     0.07542203992452 * S_NumDistPurchases
2278888   +          +     0.16296239303342 * S_NumStorePurchases
2278889   +          +     1.59193921229231 * S_NumWebPurchases
2278890   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2278891   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2278892   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2278893   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2278894   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2278895   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2278896   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2278897   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
The SAS System
 
2278898   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2278899   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2278900   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2278901   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2278902   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2278903   +          +    -0.37456959251084 * S_NumDealsPurchases
2278904   +          +    -1.15252469975668 * S_NumDistPurchases
2278905   +          +    -1.39822501888899 * S_NumStorePurchases
2278906   +          +    -0.32777847360723 * S_NumWebPurchases
2278907   +          +     0.84026499832926 * S_NumWebVisitsMonth
2278908   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2278909   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2278910   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2278911   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2278912   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2278913   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2278914   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2278915   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2278916   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2278917   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2278918   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2278919   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2278920   +          +     1.14090099538367 * S_NumDealsPurchases
2278921   +          +     -0.2600155774492 * S_NumDistPurchases
2278922   +          +     1.31362002392113 * S_NumStorePurchases
2278923   +          +     1.31465307763555 * S_NumWebPurchases
2278924   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2278925   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2278926   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2278927   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2278928   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2278929   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2278930   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2278931   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2278932   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2278933   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2278934   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2278935   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2278936   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2278937   +          +     1.06486073796679 * S_NumDealsPurchases
2278938   +          +    -0.04890191247577 * S_NumDistPurchases
2278939   +          +     0.86871320720698 * S_NumStorePurchases
2278940   +          +     0.03183587281884 * S_NumWebPurchases
2278941   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2278942   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2278943   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2278944   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2278945   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2278946   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2278947   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2278948   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2278949   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2278950   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2278951   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2278952   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2278953   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2278954   +          +    -0.01160267590349 * S_NumDealsPurchases
2278955   +          +    -0.92773075463083 * S_NumDistPurchases
2278956   +          +    -0.83326680533995 * S_NumStorePurchases
2278957   +          +    -1.16991058954473 * S_NumWebPurchases
2278958   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2278959   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2278960   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2278961   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2278962   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2278963   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2278964   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2278965   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2278966   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2278967   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2278968   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2278969   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2278970   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2278971   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2278972   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2278973   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2278974   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2278975   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2278976   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2278977   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2278978   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2278979   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2278980   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2278981   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2278982   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2278983   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2278984   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2278985   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2278986   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2278987   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2278988   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2278989   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2278990   +          +    -0.10361472385198 * Marital_StatusDivorced
2278991   +          +     0.05574820877885 * Marital_StatusMarried
2278992   +          +     0.13130988205279 * Marital_StatusSingle
2278993   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2278994   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2278995   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2278996   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2278997   +          +      0.0059353523794 * Marital_StatusDivorced
2278998   +          +    -0.59379435051653 * Marital_StatusMarried
2278999   +          +    -1.93587108708999 * Marital_StatusSingle
2279000   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2279001   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2279002   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2279003   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2279004   +          +    -0.74333797840386 * Marital_StatusDivorced
2279005   +          +    -0.93061135117658 * Marital_StatusMarried
2279006   +          +     1.04024182655844 * Marital_StatusSingle
2279007   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2279008   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2279009   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2279010   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2279011   +          +    -3.01050675344463 * Marital_StatusDivorced
2279012   +          +      0.1638723582239 * Marital_StatusMarried
2279013   +          +     0.94548468360304 * Marital_StatusSingle
2279014   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2279015   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2279016   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2279017   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2279018   +          +    -1.37013926274158 * Marital_StatusDivorced
2279019   +          +    -0.34168970042779 * Marital_StatusMarried
2279020   +          +     0.63383683543962 * Marital_StatusSingle
2279021   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2279022   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2279023   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2279024   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2279025   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2279026   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2279027   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2279028   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2279029   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2279030   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2279031   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2279032   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2279033   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2279034   +END;
MPRINT(EM_DIAGRAM):   END;
2279035   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279036   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2279037   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2279038   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2279039   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2279040   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2279041   +END;
MPRINT(EM_DIAGRAM):   END;
2279042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279043   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2279044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279045   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2279046   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2279047   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2279048   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2279049   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2279050   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2279051   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2279052   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2279053   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2279054   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2279055   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2279056   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2279057   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2279058   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2279059   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2279060   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2279061   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2279062   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2279063   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2279064   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2279065   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2279066   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2279067   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2279068   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2279069   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2279070   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2279071   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2279072   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2279073   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2279074   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2279075   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2279076   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2279077   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2279078   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2279079   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2279080   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2279081   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2279082   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2279083   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2279084   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2279085   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2279086   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2279087   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2279088   +END;
MPRINT(EM_DIAGRAM):   END;
2279089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279090   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2279091   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2279092   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2279093   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2279094   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2279095   +END;
MPRINT(EM_DIAGRAM):   END;
2279096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279097   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2279098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279099   +
2279100   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2279101   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2279102   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2279103   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2279104   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2279105   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279106   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2279107   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2279108   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2279109   +end;
MPRINT(EM_DIAGRAM):   end;
2279110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279111   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2279112   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2279113   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2279114   +   end;
MPRINT(EM_DIAGRAM):   end;
2279115   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2279116   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2279117   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2279118   +   end;
MPRINT(EM_DIAGRAM):   end;
2279119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279120   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2279121   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2279122   +   end;
MPRINT(EM_DIAGRAM):   end;
2279123   +end;
MPRINT(EM_DIAGRAM):   end;
2279124   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2279125   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2279126   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2279127   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2279128   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2279129   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2279130   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2279131   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2279132   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2279133   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2279134   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2279135   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2279136   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2279137   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2279138   +END;
MPRINT(EM_DIAGRAM):   END;
2279139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279140   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2279141   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2279142   +END;
MPRINT(EM_DIAGRAM):   END;
2279143   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2279144   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2279145   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2279146   +END;
MPRINT(EM_DIAGRAM):   END;
2279147   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2279148   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2279149   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2279150   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2279151   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2279152   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2279153   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2279154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279155   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2279156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279157   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2279158   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2279159   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2279160   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2279161   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2279162   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2279163   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2279164   +END;
MPRINT(EM_DIAGRAM):   END;
2279165   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2279166   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2279167   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2279168   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2279169   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2279170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279171   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2279172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279173   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2279174   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2279175   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2279176   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2279177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279178   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2279179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279180   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2279181   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2279182   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2279183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279184   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
2279185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279187   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2279188   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2279189   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2279190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279191   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2279192   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2279193   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2279194   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2279195   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2279196   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2279197   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2279198   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2279199   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2279200   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2279201   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2279202   +LENGTH _WARN_ $4
2279203   +      F_DepVar  $ 12
2279204   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2279205   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2279206   +
2279207   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2279208   +
2279209   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2279210   +
2279211   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2279212   +
2279213   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2279214   +
2279215   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2279216   +
2279217   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2279218   +
2279219   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2279220   +
2279221   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2279222   +
2279223   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2279224   +
2279225   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2279226   +
2279227   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2279228   +
2279229   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2279230   +
2279231   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2279232   +
2279233   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2279234   +
2279235   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2279236   +
2279237   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2279238   +
2279239   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2279240   +
2279241   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2279242   +
2279243   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2279244   +
2279245   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2279246   +
2279247   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2279248   +
2279249   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2279250   +
2279251   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2279252   +
2279253   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2279254   +
2279255   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2279256   +
2279257   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2279258   +
2279259   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2279260   +
2279261   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2279262   +
2279263   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2279264   +
2279265   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2279266   +
2279267   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2279268   +
2279269   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2279270   +
2279271   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2279272   +
2279273   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2279274   +
2279275   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2279276   +
2279277   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2279278   +
2279279   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2279280   +
2279281   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2279282   +
2279283   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2279284   +
2279285   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2279286   +
2279287   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2279288   +
2279289   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2279290   +
2279291   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2279292   +
2279293   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2279294   +
2279295   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2279296   +
2279297   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2279298   +
2279299   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2279300   +
2279301   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2279302   +
2279303   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2279304   +
2279305   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2279306   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2279307   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2279308   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2279309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279311   +end;
MPRINT(EM_DIAGRAM):   end;
2279312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279314   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2279315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279317   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2279318   +   end;
MPRINT(EM_DIAGRAM):   end;
2279319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279320   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2279321   +   end;
MPRINT(EM_DIAGRAM):   end;
2279322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279323   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2279324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279326   +   end;
MPRINT(EM_DIAGRAM):   end;
2279327   +end;
MPRINT(EM_DIAGRAM):   end;
2279328   +
2279329   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2279330   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2279331   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2279332   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2279333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279335   +end;
MPRINT(EM_DIAGRAM):   end;
2279336   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279338   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2279339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279341   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2279342   +   end;
MPRINT(EM_DIAGRAM):   end;
2279343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279344   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2279345   +   end;
MPRINT(EM_DIAGRAM):   end;
2279346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279347   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2279348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279350   +   end;
MPRINT(EM_DIAGRAM):   end;
2279351   +end;
MPRINT(EM_DIAGRAM):   end;
2279352   +
2279353   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2279354   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2279355   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2279356   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2279357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279359   +end;
MPRINT(EM_DIAGRAM):   end;
2279360   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279362   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2279363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279365   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2279366   +   end;
MPRINT(EM_DIAGRAM):   end;
2279367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279368   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2279369   +   end;
MPRINT(EM_DIAGRAM):   end;
2279370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279371   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2279372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279374   +   end;
MPRINT(EM_DIAGRAM):   end;
2279375   +end;
MPRINT(EM_DIAGRAM):   end;
2279376   +
2279377   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2279378   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2279379   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2279380   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2279381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279383   +end;
MPRINT(EM_DIAGRAM):   end;
2279384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279386   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2279387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279389   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2279390   +   end;
MPRINT(EM_DIAGRAM):   end;
2279391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279392   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2279393   +   end;
MPRINT(EM_DIAGRAM):   end;
2279394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279395   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2279396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279398   +   end;
MPRINT(EM_DIAGRAM):   end;
2279399   +end;
MPRINT(EM_DIAGRAM):   end;
2279400   +
2279401   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2279402   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2279403   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2279404   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2279405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279407   +end;
MPRINT(EM_DIAGRAM):   end;
2279408   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279410   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2279411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279413   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2279414   +   end;
MPRINT(EM_DIAGRAM):   end;
2279415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279416   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2279417   +   end;
MPRINT(EM_DIAGRAM):   end;
2279418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279419   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2279420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279422   +   end;
MPRINT(EM_DIAGRAM):   end;
2279423   +end;
MPRINT(EM_DIAGRAM):   end;
2279424   +
2279425   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2279426   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2279427   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2279428   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2279429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279431   +end;
MPRINT(EM_DIAGRAM):   end;
2279432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279434   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2279435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2279437   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2279438   +   end;
MPRINT(EM_DIAGRAM):   end;
2279439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2279440   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2279441   +   end;
MPRINT(EM_DIAGRAM):   end;
2279442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279443   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2279444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279446   +   end;
MPRINT(EM_DIAGRAM):   end;
2279447   +end;
MPRINT(EM_DIAGRAM):   end;
2279448   +
2279449   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2279450   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2279451   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2279452   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2279453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279455   +end;
MPRINT(EM_DIAGRAM):   end;
2279456   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2279458   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2279459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279460   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2279461   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2279462   +   end;
MPRINT(EM_DIAGRAM):   end;
2279463   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2279464   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2279465   +   end;
MPRINT(EM_DIAGRAM):   end;
2279466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279467   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2279468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279470   +   end;
MPRINT(EM_DIAGRAM):   end;
2279471   +end;
MPRINT(EM_DIAGRAM):   end;
2279472   +
2279473   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2279474   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2279475   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2279476   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2279477   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2279478   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2279479   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2279480   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2279481   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2279482   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2279483   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2279484   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2279485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279487   +end;
MPRINT(EM_DIAGRAM):   end;
2279488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279489   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2279490   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2279491   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279492   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2279493   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2279494   +   end;
MPRINT(EM_DIAGRAM):   end;
2279495   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2279496   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2279497   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2279498   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2279499   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2279500   +   end;
MPRINT(EM_DIAGRAM):   end;
2279501   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2279502   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2279503   +   end;
MPRINT(EM_DIAGRAM):   end;
2279504   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2279505   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2279506   +   end;
MPRINT(EM_DIAGRAM):   end;
2279507   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2279508   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2279509   +   end;
MPRINT(EM_DIAGRAM):   end;
2279510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279511   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2279512   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2279513   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2279514   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2279515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279517   +   end;
MPRINT(EM_DIAGRAM):   end;
2279518   +end;
MPRINT(EM_DIAGRAM):   end;
2279519   +
2279520   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2279521   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2279522   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2279523   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2279524   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2279525   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2279526   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2279527   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2279528   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2279529   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2279530   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2279531   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2279532   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2279533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2279534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279535   +end;
MPRINT(EM_DIAGRAM):   end;
2279536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279537   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2279538   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2279539   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279540   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2279541   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2279542   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2279543   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2279544   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2279545   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2279546   +         end;
MPRINT(EM_DIAGRAM):   end;
2279547   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2279548   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2279549   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2279550   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2279551   +            end;
MPRINT(EM_DIAGRAM):   end;
2279552   +         end;
MPRINT(EM_DIAGRAM):   end;
2279553   +      end;
MPRINT(EM_DIAGRAM):   end;
2279554   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2279555   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2279556   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2279557   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2279558   +         end;
MPRINT(EM_DIAGRAM):   end;
2279559   +      end;
MPRINT(EM_DIAGRAM):   end;
2279560   +   end;
MPRINT(EM_DIAGRAM):   end;
2279561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279562   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2279563   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2279564   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2279565   +      end;
MPRINT(EM_DIAGRAM):   end;
2279566   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2279567   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2279568   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2279569   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2279570   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2279571   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2279572   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2279573   +         end;
MPRINT(EM_DIAGRAM):   end;
2279574   +      end;
MPRINT(EM_DIAGRAM):   end;
2279575   +   end;
MPRINT(EM_DIAGRAM):   end;
2279576   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2279577   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2279578   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2279579   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2279580   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2279581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2279582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279583   +   end;
MPRINT(EM_DIAGRAM):   end;
2279584   +end;
MPRINT(EM_DIAGRAM):   end;
2279585   +
2279586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279587   +*** Checking missing input Interval
2279588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2279589   +
2279590   +IF NMISS(
2279591   +   AcceptedCmpTotal ,
2279592   +   Age ,
2279593   +   Frq ,
2279594   +   Income ,
2279595   +   Kidhome ,
2279596   +   Mnt ,
2279597   +   MntFishProducts ,
2279598   +   MntFruits ,
2279599   +   MntGoldProds ,
2279600   +   MntMeatProducts ,
2279601   +   MntSweetProducts ,
2279602   +   MntWines ,
2279603   +   MonthsAsCustomer ,
2279604   +   NumCatalogPurchases ,
2279605   +   NumDealsPurchases ,
2279606   +   NumDistPurchases ,
2279607   +   NumStorePurchases ,
2279608   +   NumWebPurchases ,
2279609   +   NumWebVisitsMonth ,
2279610   +   RFMstat ,
2279611   +   RMntFrq ,
2279612   +   Recency ,
2279613   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2279614   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2279615   +
2279616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2279617   +END;
MPRINT(EM_DIAGRAM):   END;
2279618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279619   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2279620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2279622   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2279623   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2279624   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2279625   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2279626   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2279627   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2279628   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2279629   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2279630   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2279631   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2279632   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2279633   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2279634   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2279635   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2279636   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2279637   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2279638   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2279639   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2279640   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2279641   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2279642   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2279643   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2279644   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2279645   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2279646   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2279647   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2279648   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2279649   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2279650   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2279651   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2279652   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2279653   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2279654   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2279655   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2279656   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2279657   +END;
MPRINT(EM_DIAGRAM):   END;
2279658   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279659   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2279660   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2279661   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2279662   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2279663   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2279664   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2279665   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2279666   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2279667   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2279668   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2279669   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2279670   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2279671   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2279672   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2279673   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2279674   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2279675   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2279676   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2279677   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2279678   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2279679   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2279680   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2279681   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2279682   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2279683   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2279684   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2279685   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2279686   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2279687   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2279688   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2279689   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2279690   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2279691   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2279692   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2279693   +   ELSE S_NumCatalogPurchases
2279694   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2279695   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2279696   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2279697   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2279698   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2279699   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2279700   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2279701   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2279702   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2279703   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2279704   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2279705   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2279706   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2279707   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2279708   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2279709   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2279710   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2279711   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2279712   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2279713   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2279714   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2279715   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2279716   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2279717   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2279718   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2279719   +END;
MPRINT(EM_DIAGRAM):   END;
2279720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279721   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2279722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279724   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2279725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279727   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2279728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279729   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2279730   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2279731   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2279732   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2279733   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2279734   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2279735   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2279736   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2279737   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2279738   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2279739   +          +    -1.12130210731541 * S_NumDealsPurchases
2279740   +          +    -0.12343505299726 * S_NumDistPurchases
2279741   +          +     0.11863092868196 * S_NumStorePurchases
2279742   +          +       0.583917993314 * S_NumWebPurchases
2279743   +          +     0.75529732848146 * S_NumWebVisitsMonth
2279744   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2279745   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2279746   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2279747   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2279748   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2279749   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2279750   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2279751   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2279752   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2279753   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2279754   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2279755   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2279756   +          +    -0.84113790640734 * S_NumDealsPurchases
2279757   +          +    -0.10512672747147 * S_NumDistPurchases
2279758   +          +     0.07268711782494 * S_NumStorePurchases
2279759   +          +     0.57578331257439 * S_NumWebPurchases
2279760   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2279761   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2279762   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2279763   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2279764   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2279765   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2279766   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2279767   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2279768   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2279769   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2279770   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2279771   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2279772   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2279773   +          +     0.45924983504762 * S_NumDealsPurchases
2279774   +          +    -0.25508041581692 * S_NumDistPurchases
2279775   +          +    -1.34901283858526 * S_NumStorePurchases
2279776   +          +    -0.86388975031663 * S_NumWebPurchases
2279777   +          +     1.86136110391797 * S_NumWebVisitsMonth
2279778   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2279779   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2279780   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2279781   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2279782   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2279783   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2279784   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2279785   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2279786   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2279787   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2279788   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2279789   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2279790   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2279791   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2279792   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2279793   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2279794   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2279795   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2279796   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2279797   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2279798   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2279799   +          +     0.48853068455666 * Marital_StatusDivorced
2279800   +          +    -0.54903474026465 * Marital_StatusMarried
2279801   +          +    -0.34079188373939 * Marital_StatusSingle
2279802   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2279803   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2279804   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2279805   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2279806   +          +    -1.03547689902027 * Marital_StatusDivorced
2279807   +          +     2.42164864610471 * Marital_StatusMarried
2279808   +          +    -1.95342561304942 * Marital_StatusSingle
2279809   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2279810   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2279811   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2279812   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2279813   +          +      0.4337638747935 * Marital_StatusDivorced
2279814   +          +    -0.38508657017615 * Marital_StatusMarried
2279815   +          +     -0.0160269708326 * Marital_StatusSingle
2279816   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2279817   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2279818   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2279819   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2279820   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2279821   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2279822   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2279823   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2279824   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2279825   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2279826   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2279827   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2279828   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2279829   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2279830   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2279831   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2279832   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2279833   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2279834   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2279835   +END;
MPRINT(EM_DIAGRAM):   END;
2279836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279837   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2279838   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2279839   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2279840   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2279841   +END;
MPRINT(EM_DIAGRAM):   END;
2279842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279843   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2279844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279845   +
2279846   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2279847   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2279848   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2279849   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2279850   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2279851   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2279852   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2279853   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2279854   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2279855   +end;
MPRINT(EM_DIAGRAM):   end;
2279856   +else do;
MPRINT(EM_DIAGRAM):   else do;
2279857   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2279858   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2279859   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2279860   +   end;
MPRINT(EM_DIAGRAM):   end;
2279861   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2279862   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2279863   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2279864   +   end;
MPRINT(EM_DIAGRAM):   end;
2279865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2279866   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2279867   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2279868   +   end;
MPRINT(EM_DIAGRAM):   end;
2279869   +end;
MPRINT(EM_DIAGRAM):   end;
2279870   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2279871   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2279872   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2279873   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2279874   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2279875   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2279876   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2279877   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2279878   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2279879   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2279880   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2279881   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2279882   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2279883   +END;
MPRINT(EM_DIAGRAM):   END;
2279884   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2279885   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2279886   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2279887   +END;
MPRINT(EM_DIAGRAM):   END;
2279888   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2279889   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2279890   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2279891   +END;
MPRINT(EM_DIAGRAM):   END;
2279892   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2279893   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2279894   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2279895   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2279896   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2279897   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2279898   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2279899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279900   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2279901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2279902   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2279903   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2279904   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2279905   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2279906   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2279907   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2279908   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2279909   +END;
MPRINT(EM_DIAGRAM):   END;
2279910   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2279911   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2279912   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2279913   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2279914   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2279915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279916   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2279917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279918   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2279919   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2279920   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2279921   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2279922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279923   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2279924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279925   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2279926   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2279927   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2279928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279929   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
2279930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279932   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2279933   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2279934   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2279935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2279936   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2279937   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2279938   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2279939   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2279940   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2279941   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2279942   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2279943   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2279944   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2279945   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2279946   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2279947   +LENGTH _WARN_ $4
2279948   +      F_DepVar  $ 12
2279949   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2279950   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2279951   +
2279952   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2279953   +
2279954   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2279955   +
2279956   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2279957   +
2279958   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2279959   +
2279960   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2279961   +
2279962   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2279963   +
2279964   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2279965   +
2279966   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2279967   +
2279968   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2279969   +
2279970   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2279971   +
2279972   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2279973   +
2279974   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2279975   +
2279976   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2279977   +
2279978   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2279979   +
2279980   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2279981   +
2279982   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2279983   +
2279984   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2279985   +
2279986   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2279987   +
2279988   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2279989   +
2279990   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2279991   +
2279992   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2279993   +
2279994   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2279995   +
2279996   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2279997   +
2279998   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2279999   +
2280000   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2280001   +
2280002   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2280003   +
2280004   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2280005   +
2280006   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2280007   +
2280008   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2280009   +
2280010   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2280011   +
2280012   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2280013   +
2280014   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2280015   +
2280016   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2280017   +
2280018   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2280019   +
2280020   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2280021   +
2280022   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2280023   +
2280024   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2280025   +
2280026   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2280027   +
2280028   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2280029   +
2280030   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2280031   +
2280032   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2280033   +
2280034   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2280035   +
2280036   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2280037   +
2280038   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2280039   +
2280040   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2280041   +
2280042   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2280043   +
2280044   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2280045   +
2280046   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2280047   +
2280048   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2280049   +
2280050   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2280051   +
2280052   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2280053   +
2280054   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2280055   +
2280056   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2280057   +
2280058   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2280059   +
2280060   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2280061   +
2280062   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2280063   +
2280064   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2280065   +
2280066   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2280067   +
2280068   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2280069   +
2280070   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2280071   +
2280072   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2280073   +
2280074   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2280075   +
2280076   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2280077   +
2280078   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2280079   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2280080   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2280081   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2280082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280084   +end;
MPRINT(EM_DIAGRAM):   end;
2280085   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280087   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2280088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280089   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280090   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2280091   +   end;
MPRINT(EM_DIAGRAM):   end;
2280092   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280093   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2280094   +   end;
MPRINT(EM_DIAGRAM):   end;
2280095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280096   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2280097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280099   +   end;
MPRINT(EM_DIAGRAM):   end;
2280100   +end;
MPRINT(EM_DIAGRAM):   end;
2280101   +
2280102   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2280103   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2280104   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2280105   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2280106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280108   +end;
MPRINT(EM_DIAGRAM):   end;
2280109   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280111   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2280112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280114   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2280115   +   end;
MPRINT(EM_DIAGRAM):   end;
2280116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280117   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2280118   +   end;
MPRINT(EM_DIAGRAM):   end;
2280119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280120   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2280121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280123   +   end;
MPRINT(EM_DIAGRAM):   end;
2280124   +end;
MPRINT(EM_DIAGRAM):   end;
2280125   +
2280126   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2280127   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2280128   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2280129   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2280130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280132   +end;
MPRINT(EM_DIAGRAM):   end;
2280133   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280135   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2280136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280138   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2280139   +   end;
MPRINT(EM_DIAGRAM):   end;
2280140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280141   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2280142   +   end;
MPRINT(EM_DIAGRAM):   end;
2280143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280144   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2280145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280147   +   end;
MPRINT(EM_DIAGRAM):   end;
2280148   +end;
MPRINT(EM_DIAGRAM):   end;
2280149   +
2280150   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2280151   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2280152   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2280153   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2280154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280156   +end;
MPRINT(EM_DIAGRAM):   end;
2280157   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280159   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2280160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280162   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2280163   +   end;
MPRINT(EM_DIAGRAM):   end;
2280164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280165   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2280166   +   end;
MPRINT(EM_DIAGRAM):   end;
2280167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280168   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2280169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280171   +   end;
MPRINT(EM_DIAGRAM):   end;
2280172   +end;
MPRINT(EM_DIAGRAM):   end;
2280173   +
2280174   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2280175   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2280176   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2280177   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2280178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280180   +end;
MPRINT(EM_DIAGRAM):   end;
2280181   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280183   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2280184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280186   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2280187   +   end;
MPRINT(EM_DIAGRAM):   end;
2280188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280189   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2280190   +   end;
MPRINT(EM_DIAGRAM):   end;
2280191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280192   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2280193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280195   +   end;
MPRINT(EM_DIAGRAM):   end;
2280196   +end;
MPRINT(EM_DIAGRAM):   end;
2280197   +
2280198   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2280199   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2280200   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2280201   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2280202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280204   +end;
MPRINT(EM_DIAGRAM):   end;
2280205   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280207   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2280208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2280210   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2280211   +   end;
MPRINT(EM_DIAGRAM):   end;
2280212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2280213   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2280214   +   end;
MPRINT(EM_DIAGRAM):   end;
2280215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280216   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2280217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280219   +   end;
MPRINT(EM_DIAGRAM):   end;
2280220   +end;
MPRINT(EM_DIAGRAM):   end;
2280221   +
2280222   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2280223   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2280224   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2280225   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2280226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280228   +end;
MPRINT(EM_DIAGRAM):   end;
2280229   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2280231   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2280232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280233   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2280234   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2280235   +   end;
MPRINT(EM_DIAGRAM):   end;
2280236   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2280237   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2280238   +   end;
MPRINT(EM_DIAGRAM):   end;
2280239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280240   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2280241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280243   +   end;
MPRINT(EM_DIAGRAM):   end;
2280244   +end;
MPRINT(EM_DIAGRAM):   end;
2280245   +
2280246   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2280247   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2280248   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2280249   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2280250   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2280251   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2280252   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2280253   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2280254   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2280255   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2280256   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2280257   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2280258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280260   +end;
MPRINT(EM_DIAGRAM):   end;
2280261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280262   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2280263   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2280264   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280265   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2280266   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2280267   +   end;
MPRINT(EM_DIAGRAM):   end;
2280268   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2280269   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2280270   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2280271   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2280272   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2280273   +   end;
MPRINT(EM_DIAGRAM):   end;
2280274   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2280275   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2280276   +   end;
MPRINT(EM_DIAGRAM):   end;
2280277   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2280278   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2280279   +   end;
MPRINT(EM_DIAGRAM):   end;
2280280   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2280281   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2280282   +   end;
MPRINT(EM_DIAGRAM):   end;
2280283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280284   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2280285   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2280286   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2280287   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2280288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280290   +   end;
MPRINT(EM_DIAGRAM):   end;
2280291   +end;
MPRINT(EM_DIAGRAM):   end;
2280292   +
2280293   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2280294   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2280295   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2280296   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2280297   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2280298   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2280299   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2280300   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2280301   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2280302   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2280303   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2280304   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2280305   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2280306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2280307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280308   +end;
MPRINT(EM_DIAGRAM):   end;
2280309   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280310   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2280311   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2280312   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280313   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2280314   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2280315   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2280316   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2280317   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2280318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2280319   +         end;
MPRINT(EM_DIAGRAM):   end;
2280320   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2280321   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2280322   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2280323   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2280324   +            end;
MPRINT(EM_DIAGRAM):   end;
2280325   +         end;
MPRINT(EM_DIAGRAM):   end;
2280326   +      end;
MPRINT(EM_DIAGRAM):   end;
2280327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2280328   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2280329   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2280330   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2280331   +         end;
MPRINT(EM_DIAGRAM):   end;
2280332   +      end;
MPRINT(EM_DIAGRAM):   end;
2280333   +   end;
MPRINT(EM_DIAGRAM):   end;
2280334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280335   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2280336   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2280337   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2280338   +      end;
MPRINT(EM_DIAGRAM):   end;
2280339   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2280340   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2280341   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2280342   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2280343   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2280344   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2280345   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2280346   +         end;
MPRINT(EM_DIAGRAM):   end;
2280347   +      end;
MPRINT(EM_DIAGRAM):   end;
2280348   +   end;
MPRINT(EM_DIAGRAM):   end;
2280349   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2280350   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2280351   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2280352   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2280353   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2280354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2280355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280356   +   end;
MPRINT(EM_DIAGRAM):   end;
2280357   +end;
MPRINT(EM_DIAGRAM):   end;
2280358   +
2280359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280360   +*** Checking missing input Interval
2280361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2280362   +
2280363   +IF NMISS(
2280364   +   AcceptedCmpTotal ,
2280365   +   Age ,
2280366   +   Frq ,
2280367   +   Income ,
2280368   +   Kidhome ,
2280369   +   Mnt ,
2280370   +   MntFishProducts ,
2280371   +   MntFruits ,
2280372   +   MntGoldProds ,
2280373   +   MntMeatProducts ,
2280374   +   MntSweetProducts ,
2280375   +   MntWines ,
2280376   +   MonthsAsCustomer ,
2280377   +   NumCatalogPurchases ,
2280378   +   NumDealsPurchases ,
2280379   +   NumDistPurchases ,
2280380   +   NumStorePurchases ,
2280381   +   NumWebPurchases ,
2280382   +   NumWebVisitsMonth ,
2280383   +   RFMstat ,
2280384   +   RMntFrq ,
2280385   +   Recency ,
2280386   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2280387   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2280388   +
2280389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2280390   +END;
MPRINT(EM_DIAGRAM):   END;
2280391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280392   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2280393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280394   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2280395   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2280396   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2280397   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2280398   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2280399   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2280400   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2280401   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2280402   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2280403   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2280404   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2280405   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2280406   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2280407   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2280408   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2280409   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2280410   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2280411   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2280412   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2280413   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2280414   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2280415   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2280416   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2280417   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2280418   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2280419   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2280420   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2280421   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2280422   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2280423   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2280424   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2280425   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2280426   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2280427   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2280428   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2280429   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2280430   +END;
MPRINT(EM_DIAGRAM):   END;
2280431   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2280432   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2280433   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2280434   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2280435   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2280436   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2280437   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2280438   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2280439   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2280440   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2280441   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2280442   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2280443   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2280444   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2280445   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2280446   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2280447   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2280448   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2280449   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2280450   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2280451   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2280452   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2280453   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2280454   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2280455   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2280456   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2280457   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2280458   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2280459   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2280460   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2280461   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2280462   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2280463   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2280464   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2280465   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2280466   +   ELSE S_NumCatalogPurchases
2280467   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2280468   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2280469   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2280470   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2280471   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2280472   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2280473   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2280474   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2280475   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2280476   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2280477   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2280478   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2280479   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2280480   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2280481   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2280482   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2280483   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2280484   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2280485   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2280486   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2280487   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2280488   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2280489   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2280490   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2280491   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2280492   +END;
MPRINT(EM_DIAGRAM):   END;
2280493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280494   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2280495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280497   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2280498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280500   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2280501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280502   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2280503   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2280504   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2280505   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2280506   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2280507   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2280508   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2280509   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2280510   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2280511   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2280512   +          +     1.32037113020393 * S_NumDealsPurchases
2280513   +          +     0.42879249227132 * S_NumDistPurchases
2280514   +          +    -0.89190172778783 * S_NumStorePurchases
2280515   +          +    -0.87975442613962 * S_NumWebPurchases
2280516   +          +     2.98977282825831 * S_NumWebVisitsMonth
2280517   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2280518   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2280519   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2280520   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2280521   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2280522   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2280523   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2280524   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2280525   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2280526   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2280527   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2280528   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2280529   +          +    -1.16737670931605 * S_NumDealsPurchases
2280530   +          +     0.08205195039242 * S_NumDistPurchases
2280531   +          +    -0.65367044520084 * S_NumStorePurchases
2280532   +          +     2.39693083674757 * S_NumWebPurchases
2280533   +          +     0.18432526469897 * S_NumWebVisitsMonth
2280534   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2280535   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2280536   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2280537   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2280538   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2280539   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2280540   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2280541   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2280542   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2280543   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2280544   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2280545   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2280546   +          +     0.76616480025024 * S_NumDealsPurchases
2280547   +          +     0.42823368706255 * S_NumDistPurchases
2280548   +          +    -1.16998364854907 * S_NumStorePurchases
2280549   +          +     -1.0841896541746 * S_NumWebPurchases
2280550   +          +     2.74837744375079 * S_NumWebVisitsMonth
2280551   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2280552   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2280553   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2280554   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2280555   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2280556   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2280557   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2280558   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2280559   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2280560   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2280561   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2280562   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2280563   +          +     0.78421010501058 * S_NumDealsPurchases
2280564   +          +     0.01075885160671 * S_NumDistPurchases
2280565   +          +    -1.99395040717832 * S_NumStorePurchases
2280566   +          +    -1.02908330834262 * S_NumWebPurchases
2280567   +          +     2.79163466516477 * S_NumWebVisitsMonth
2280568   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2280569   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2280570   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2280571   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2280572   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2280573   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2280574   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2280575   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2280576   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2280577   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2280578   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2280579   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2280580   +          +    -1.04219068390022 * S_NumDealsPurchases
2280581   +          +    -0.45770204483973 * S_NumDistPurchases
2280582   +          +    -0.04941442229195 * S_NumStorePurchases
2280583   +          +     0.67187353161183 * S_NumWebPurchases
2280584   +          +     2.01907760553871 * S_NumWebVisitsMonth
2280585   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2280586   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2280587   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2280588   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2280589   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2280590   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2280591   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2280592   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2280593   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2280594   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2280595   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2280596   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2280597   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2280598   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2280599   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2280600   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2280601   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2280602   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2280603   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2280604   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2280605   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2280606   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2280607   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2280608   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2280609   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2280610   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2280611   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2280612   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2280613   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2280614   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2280615   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2280616   +          +     2.58907527032049 * Marital_StatusDivorced
2280617   +          +    -2.45549008158921 * Marital_StatusMarried
2280618   +          +     2.56223650840768 * Marital_StatusSingle
2280619   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2280620   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2280621   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2280622   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2280623   +          +     0.83917299191368 * Marital_StatusDivorced
2280624   +          +    -0.62624692699191 * Marital_StatusMarried
2280625   +          +    -0.22585060624911 * Marital_StatusSingle
2280626   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2280627   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2280628   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2280629   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2280630   +          +    -0.65063506696715 * Marital_StatusDivorced
2280631   +          +    -2.37495865381256 * Marital_StatusMarried
2280632   +          +    -0.54954654146904 * Marital_StatusSingle
2280633   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2280634   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2280635   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2280636   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2280637   +          +     0.16185824798364 * Marital_StatusDivorced
2280638   +          +    -0.08142416735136 * Marital_StatusMarried
2280639   +          +    -0.20392270385969 * Marital_StatusSingle
2280640   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2280641   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2280642   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2280643   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2280644   +          +      -0.516522631078 * Marital_StatusDivorced
2280645   +          +    -0.61661247789976 * Marital_StatusMarried
2280646   +          +    -0.99533130308294 * Marital_StatusSingle
2280647   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2280648   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2280649   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2280650   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2280651   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2280652   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2280653   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2280654   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2280655   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2280656   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2280657   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2280658   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2280659   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2280660   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2280661   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2280662   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2280663   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2280664   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2280665   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2280666   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2280667   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2280668   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2280669   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2280670   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2280671   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2280672   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2280673   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2280674   +END;
MPRINT(EM_DIAGRAM):   END;
2280675   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2280676   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2280677   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2280678   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2280679   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2280680   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2280681   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2280682   +END;
MPRINT(EM_DIAGRAM):   END;
2280683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280684   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2280685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280686   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2280687   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2280688   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2280689   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2280690   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2280691   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2280692   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2280693   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2280694   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2280695   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2280696   +          +    -0.03801022287706 * S_NumDealsPurchases
2280697   +          +    -1.50723574966419 * S_NumDistPurchases
2280698   +          +    -0.21514545448485 * S_NumStorePurchases
2280699   +          +    -0.50179555233865 * S_NumWebPurchases
2280700   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2280701   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2280702   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2280703   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2280704   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2280705   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2280706   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2280707   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2280708   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2280709   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2280710   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2280711   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2280712   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2280713   +          +     0.70551335536975 * S_NumDealsPurchases
2280714   +          +     0.02824488988803 * S_NumDistPurchases
2280715   +          +    -0.47958123842808 * S_NumStorePurchases
2280716   +          +     1.04559003239583 * S_NumWebPurchases
2280717   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2280718   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2280719   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2280720   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2280721   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2280722   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2280723   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2280724   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2280725   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2280726   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2280727   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2280728   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2280729   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2280730   +          +    -0.28907339261907 * S_NumDealsPurchases
2280731   +          +     0.04310505858352 * S_NumDistPurchases
2280732   +          +    -0.99594604666889 * S_NumStorePurchases
2280733   +          +    -0.58870940220114 * S_NumWebPurchases
2280734   +          +     0.84018399925148 * S_NumWebVisitsMonth
2280735   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2280736   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2280737   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2280738   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2280739   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2280740   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2280741   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2280742   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2280743   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2280744   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2280745   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2280746   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2280747   +          +     0.52917289878604 * S_NumDealsPurchases
2280748   +          +     0.30974142545809 * S_NumDistPurchases
2280749   +          +    -0.36081450643799 * S_NumStorePurchases
2280750   +          +    -0.28418053386759 * S_NumWebPurchases
2280751   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2280752   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2280753   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2280754   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2280755   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2280756   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2280757   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2280758   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2280759   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2280760   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2280761   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2280762   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2280763   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2280764   +          +    -0.47500053723253 * S_NumDealsPurchases
2280765   +          +     0.41421086319635 * S_NumDistPurchases
2280766   +          +     0.69664835428137 * S_NumStorePurchases
2280767   +          +     0.66359306812968 * S_NumWebPurchases
2280768   +          +     0.77931462528741 * S_NumWebVisitsMonth
2280769   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2280770   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2280771   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2280772   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2280773   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2280774   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2280775   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2280776   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2280777   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2280778   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2280779   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2280780   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2280781   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2280782   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2280783   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2280784   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2280785   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2280786   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2280787   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2280788   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2280789   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2280790   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2280791   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2280792   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2280793   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2280794   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2280795   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2280796   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2280797   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2280798   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2280799   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2280800   +          +    -1.34742914042312 * Marital_StatusDivorced
2280801   +          +    -0.75378934918763 * Marital_StatusMarried
2280802   +          +    -1.85411678929217 * Marital_StatusSingle
2280803   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2280804   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2280805   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2280806   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2280807   +          +     0.47958659206261 * Marital_StatusDivorced
2280808   +          +     -0.9665584294045 * Marital_StatusMarried
2280809   +          +      0.9733784530538 * Marital_StatusSingle
2280810   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2280811   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2280812   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2280813   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2280814   +          +    -0.56894207908284 * Marital_StatusDivorced
2280815   +          +    -0.96715106987195 * Marital_StatusMarried
2280816   +          +     1.18678144721443 * Marital_StatusSingle
2280817   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2280818   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2280819   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2280820   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2280821   +          +     -0.6061959224661 * Marital_StatusDivorced
2280822   +          +     0.03495844244684 * Marital_StatusMarried
2280823   +          +    -0.63896361063244 * Marital_StatusSingle
2280824   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2280825   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2280826   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2280827   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2280828   +          +     0.82178907301319 * Marital_StatusDivorced
2280829   +          +     1.69543553114589 * Marital_StatusMarried
2280830   +          +     -2.1272067363559 * Marital_StatusSingle
2280831   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2280832   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2280833   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2280834   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2280835   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2280836   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2280837   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2280838   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2280839   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2280840   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2280841   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2280842   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2280843   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2280844   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2280845   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2280846   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2280847   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2280848   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2280849   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2280850   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2280851   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2280852   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2280853   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2280854   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2280855   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2280856   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2280857   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2280858   +END;
MPRINT(EM_DIAGRAM):   END;
2280859   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2280860   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2280861   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2280862   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2280863   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2280864   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2280865   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2280866   +END;
MPRINT(EM_DIAGRAM):   END;
2280867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280868   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2280869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280870   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2280871   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2280872   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2280873   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2280874   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2280875   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2280876   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2280877   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2280878   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2280879   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2280880   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2280881   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2280882   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2280883   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2280884   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2280885   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2280886   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2280887   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2280888   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2280889   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2280890   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2280891   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2280892   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2280893   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2280894   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2280895   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2280896   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2280897   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2280898   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2280899   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2280900   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2280901   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2280902   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2280903   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2280904   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2280905   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2280906   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2280907   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2280908   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2280909   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2280910   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2280911   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2280912   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2280913   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2280914   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2280915   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2280916   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2280917   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2280918   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2280919   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2280920   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2280921   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2280922   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2280923   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2280924   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2280925   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2280926   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2280927   +END;
MPRINT(EM_DIAGRAM):   END;
2280928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2280929   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2280930   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2280931   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2280932   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2280933   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2280934   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2280935   +END;
MPRINT(EM_DIAGRAM):   END;
2280936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280937   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2280938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280939   +
2280940   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2280941   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2280942   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2280943   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2280944   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2280945   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2280946   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2280947   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2280948   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2280949   +end;
MPRINT(EM_DIAGRAM):   end;
2280950   +else do;
MPRINT(EM_DIAGRAM):   else do;
2280951   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2280952   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2280953   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2280954   +   end;
MPRINT(EM_DIAGRAM):   end;
2280955   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2280956   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2280957   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2280958   +   end;
MPRINT(EM_DIAGRAM):   end;
2280959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2280960   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2280961   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2280962   +   end;
MPRINT(EM_DIAGRAM):   end;
2280963   +end;
MPRINT(EM_DIAGRAM):   end;
2280964   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2280965   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2280966   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2280967   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2280968   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2280969   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2280970   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2280971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2280972   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2280973   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2280974   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2280975   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2280976   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2280977   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2280978   +END;
MPRINT(EM_DIAGRAM):   END;
2280979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2280980   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2280981   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2280982   +END;
MPRINT(EM_DIAGRAM):   END;
2280983   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2280984   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2280985   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2280986   +END;
MPRINT(EM_DIAGRAM):   END;
2280987   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2280988   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2280989   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2280990   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2280991   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2280992   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2280993   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2280994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280995   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2280996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2280997   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2280998   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2280999   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2281000   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2281001   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2281002   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2281003   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2281004   +END;
MPRINT(EM_DIAGRAM):   END;
2281005   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2281006   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2281007   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2281008   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2281009   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2281010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281011   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2281012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281013   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2281014   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2281015   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2281016   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2281017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281018   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2281019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281020   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2281021   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2281022   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2281023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281024   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
2281025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281027   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2281028   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2281029   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2281030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2281031   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281032   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2281033   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2281034   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2281035   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2281036   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2281037   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2281038   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2281039   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2281040   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2281041   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2281042   +LENGTH _WARN_ $4
2281043   +      F_DepVar  $ 12
2281044   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2281045   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2281046   +
2281047   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2281048   +
2281049   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2281050   +
2281051   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2281052   +
2281053   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2281054   +
2281055   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2281056   +
2281057   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2281058   +
2281059   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2281060   +
2281061   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2281062   +
2281063   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2281064   +
2281065   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2281066   +
2281067   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2281068   +
2281069   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2281070   +
2281071   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2281072   +
2281073   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2281074   +
2281075   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2281076   +
2281077   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2281078   +
2281079   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2281080   +
2281081   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2281082   +
2281083   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2281084   +
2281085   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2281086   +
2281087   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2281088   +
2281089   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2281090   +
2281091   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2281092   +
2281093   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2281094   +
2281095   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2281096   +
2281097   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2281098   +
2281099   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2281100   +
2281101   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2281102   +
2281103   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2281104   +
2281105   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2281106   +
2281107   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2281108   +
2281109   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2281110   +
2281111   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2281112   +
2281113   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2281114   +
2281115   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2281116   +
2281117   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2281118   +
2281119   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2281120   +
2281121   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2281122   +
2281123   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2281124   +
2281125   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2281126   +
2281127   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2281128   +
2281129   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2281130   +
2281131   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2281132   +
2281133   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2281134   +
2281135   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2281136   +
2281137   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2281138   +
2281139   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2281140   +
2281141   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2281142   +
2281143   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2281144   +
2281145   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2281146   +
2281147   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2281148   +
2281149   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2281150   +
2281151   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2281152   +
2281153   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2281154   +
2281155   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2281156   +
2281157   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2281158   +
2281159   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2281160   +
2281161   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2281162   +
2281163   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2281164   +
2281165   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2281166   +
2281167   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2281168   +
2281169   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2281170   +
2281171   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2281172   +
2281173   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2281174   +
2281175   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2281176   +
2281177   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2281178   +
2281179   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2281180   +
2281181   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2281182   +
2281183   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2281184   +
2281185   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2281186   +
2281187   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2281188   +
2281189   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2281190   +
2281191   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2281192   +
2281193   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2281194   +
2281195   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2281196   +
2281197   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2281198   +
2281199   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2281200   +
2281201   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2281202   +
2281203   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2281204   +
2281205   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2281206   +
2281207   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2281208   +
2281209   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2281210   +
2281211   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2281212   +
2281213   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2281214   +
2281215   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2281216   +
2281217   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2281218   +
2281219   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2281220   +
2281221   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2281222   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2281223   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2281224   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2281225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281227   +end;
MPRINT(EM_DIAGRAM):   end;
2281228   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281230   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2281231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281232   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281233   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2281234   +   end;
MPRINT(EM_DIAGRAM):   end;
2281235   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281236   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2281237   +   end;
MPRINT(EM_DIAGRAM):   end;
2281238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281239   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2281240   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281241   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281242   +   end;
MPRINT(EM_DIAGRAM):   end;
2281243   +end;
MPRINT(EM_DIAGRAM):   end;
2281244   +
2281245   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2281246   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2281247   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2281248   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2281249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281251   +end;
MPRINT(EM_DIAGRAM):   end;
2281252   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281254   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2281255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281257   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2281258   +   end;
MPRINT(EM_DIAGRAM):   end;
2281259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281260   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2281261   +   end;
MPRINT(EM_DIAGRAM):   end;
2281262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281263   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2281264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281266   +   end;
MPRINT(EM_DIAGRAM):   end;
2281267   +end;
MPRINT(EM_DIAGRAM):   end;
2281268   +
2281269   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2281270   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2281271   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2281272   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2281273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281275   +end;
MPRINT(EM_DIAGRAM):   end;
2281276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281278   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2281279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281281   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2281282   +   end;
MPRINT(EM_DIAGRAM):   end;
2281283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281284   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2281285   +   end;
MPRINT(EM_DIAGRAM):   end;
2281286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281287   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2281288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281290   +   end;
MPRINT(EM_DIAGRAM):   end;
2281291   +end;
MPRINT(EM_DIAGRAM):   end;
2281292   +
2281293   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2281294   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2281295   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2281296   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2281297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281299   +end;
MPRINT(EM_DIAGRAM):   end;
2281300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281302   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2281303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281305   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2281306   +   end;
MPRINT(EM_DIAGRAM):   end;
2281307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281308   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2281309   +   end;
MPRINT(EM_DIAGRAM):   end;
2281310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281311   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2281312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281314   +   end;
MPRINT(EM_DIAGRAM):   end;
2281315   +end;
MPRINT(EM_DIAGRAM):   end;
2281316   +
2281317   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2281318   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2281319   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2281320   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2281321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281323   +end;
MPRINT(EM_DIAGRAM):   end;
2281324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281326   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2281327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281329   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2281330   +   end;
MPRINT(EM_DIAGRAM):   end;
2281331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281332   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2281333   +   end;
MPRINT(EM_DIAGRAM):   end;
2281334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281335   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2281336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281338   +   end;
MPRINT(EM_DIAGRAM):   end;
2281339   +end;
MPRINT(EM_DIAGRAM):   end;
2281340   +
2281341   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2281342   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2281343   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2281344   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2281345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281347   +end;
MPRINT(EM_DIAGRAM):   end;
2281348   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281350   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2281351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2281353   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2281354   +   end;
MPRINT(EM_DIAGRAM):   end;
2281355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2281356   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2281357   +   end;
MPRINT(EM_DIAGRAM):   end;
2281358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281359   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2281360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281362   +   end;
MPRINT(EM_DIAGRAM):   end;
2281363   +end;
MPRINT(EM_DIAGRAM):   end;
2281364   +
2281365   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2281366   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2281367   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2281368   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2281369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281371   +end;
MPRINT(EM_DIAGRAM):   end;
2281372   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2281374   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2281375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281376   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2281377   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2281378   +   end;
MPRINT(EM_DIAGRAM):   end;
2281379   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2281380   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2281381   +   end;
MPRINT(EM_DIAGRAM):   end;
2281382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281383   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2281384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281386   +   end;
MPRINT(EM_DIAGRAM):   end;
2281387   +end;
MPRINT(EM_DIAGRAM):   end;
2281388   +
2281389   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2281390   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2281391   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2281392   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2281393   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2281394   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2281395   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2281396   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2281397   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2281398   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2281399   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2281400   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2281401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281403   +end;
MPRINT(EM_DIAGRAM):   end;
2281404   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281405   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2281406   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2281407   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281408   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2281409   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2281410   +   end;
MPRINT(EM_DIAGRAM):   end;
2281411   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2281412   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2281413   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2281414   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2281415   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2281416   +   end;
MPRINT(EM_DIAGRAM):   end;
2281417   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2281418   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2281419   +   end;
MPRINT(EM_DIAGRAM):   end;
2281420   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2281421   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2281422   +   end;
MPRINT(EM_DIAGRAM):   end;
2281423   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2281424   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2281425   +   end;
MPRINT(EM_DIAGRAM):   end;
2281426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281427   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2281428   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2281429   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2281430   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2281431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281433   +   end;
MPRINT(EM_DIAGRAM):   end;
2281434   +end;
MPRINT(EM_DIAGRAM):   end;
2281435   +
2281436   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2281437   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2281438   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2281439   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2281440   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2281441   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2281442   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2281443   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2281444   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2281445   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2281446   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2281447   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2281448   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2281449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2281450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281451   +end;
MPRINT(EM_DIAGRAM):   end;
2281452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2281453   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2281454   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2281455   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2281456   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2281457   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2281458   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2281459   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2281460   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2281461   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2281462   +         end;
MPRINT(EM_DIAGRAM):   end;
2281463   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2281464   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2281465   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2281466   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2281467   +            end;
MPRINT(EM_DIAGRAM):   end;
2281468   +         end;
MPRINT(EM_DIAGRAM):   end;
2281469   +      end;
MPRINT(EM_DIAGRAM):   end;
2281470   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2281471   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2281472   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2281473   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2281474   +         end;
MPRINT(EM_DIAGRAM):   end;
2281475   +      end;
MPRINT(EM_DIAGRAM):   end;
2281476   +   end;
MPRINT(EM_DIAGRAM):   end;
2281477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2281478   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2281479   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2281480   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2281481   +      end;
MPRINT(EM_DIAGRAM):   end;
2281482   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2281483   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2281484   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2281485   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2281486   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2281487   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2281488   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2281489   +         end;
MPRINT(EM_DIAGRAM):   end;
2281490   +      end;
MPRINT(EM_DIAGRAM):   end;
2281491   +   end;
MPRINT(EM_DIAGRAM):   end;
2281492   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2281493   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2281494   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2281495   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2281496   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2281497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2281498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281499   +   end;
MPRINT(EM_DIAGRAM):   end;
2281500   +end;
MPRINT(EM_DIAGRAM):   end;
2281501   +
2281502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281503   +*** Checking missing input Interval
2281504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2281505   +
2281506   +IF NMISS(
2281507   +   AcceptedCmpTotal ,
2281508   +   Age ,
2281509   +   Frq ,
2281510   +   Income ,
2281511   +   Kidhome ,
2281512   +   Mnt ,
2281513   +   MntFishProducts ,
2281514   +   MntFruits ,
2281515   +   MntGoldProds ,
2281516   +   MntMeatProducts ,
2281517   +   MntSweetProducts ,
2281518   +   MntWines ,
2281519   +   MonthsAsCustomer ,
2281520   +   NumCatalogPurchases ,
2281521   +   NumDealsPurchases ,
2281522   +   NumDistPurchases ,
2281523   +   NumStorePurchases ,
2281524   +   NumWebPurchases ,
2281525   +   NumWebVisitsMonth ,
2281526   +   RFMstat ,
2281527   +   RMntFrq ,
2281528   +   Recency ,
2281529   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2281530   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2281531   +
2281532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2281533   +END;
MPRINT(EM_DIAGRAM):   END;
2281534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281535   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2281536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2281538   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2281539   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2281540   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2281541   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2281542   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2281543   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2281544   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2281545   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2281546   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2281547   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2281548   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2281549   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2281550   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2281551   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2281552   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2281553   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2281554   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2281555   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2281556   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2281557   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2281558   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2281559   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2281560   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2281561   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2281562   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2281563   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2281564   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2281565   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2281566   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2281567   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2281568   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2281569   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2281570   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2281571   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2281572   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2281573   +END;
MPRINT(EM_DIAGRAM):   END;
2281574   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2281575   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2281576   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2281577   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2281578   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2281579   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2281580   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2281581   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2281582   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2281583   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2281584   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2281585   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2281586   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2281587   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2281588   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2281589   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2281590   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2281591   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2281592   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2281593   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2281594   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2281595   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2281596   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2281597   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2281598   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2281599   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2281600   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2281601   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2281602   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2281603   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2281604   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2281605   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2281606   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2281607   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2281608   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2281609   +   ELSE S_NumCatalogPurchases
2281610   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2281611   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2281612   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2281613   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2281614   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2281615   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2281616   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2281617   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2281618   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2281619   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2281620   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2281621   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2281622   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2281623   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2281624   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2281625   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2281626   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2281627   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2281628   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2281629   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2281630   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2281631   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2281632   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2281633   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2281634   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2281635   +END;
MPRINT(EM_DIAGRAM):   END;
2281636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281637   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2281638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281640   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2281641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281643   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2281644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2281646   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2281647   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2281648   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2281649   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2281650   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2281651   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2281652   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2281653   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2281654   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2281655   +          +    -1.18466001117424 * S_NumDealsPurchases
2281656   +          +     -0.1371252133567 * S_NumDistPurchases
2281657   +          +     1.92719775731123 * S_NumStorePurchases
2281658   +          +     1.23184249192116 * S_NumWebPurchases
2281659   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2281660   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2281661   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2281662   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2281663   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2281664   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2281665   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2281666   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2281667   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2281668   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2281669   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2281670   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2281671   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2281672   +          +     0.63616523425865 * S_NumDealsPurchases
2281673   +          +     0.45460056261546 * S_NumDistPurchases
2281674   +          +    -0.61009999017225 * S_NumStorePurchases
2281675   +          +     1.85193755731081 * S_NumWebPurchases
2281676   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2281677   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2281678   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2281679   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2281680   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2281681   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2281682   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2281683   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2281684   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2281685   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2281686   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2281687   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2281688   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2281689   +          +      1.8907968580473 * S_NumDealsPurchases
2281690   +          +     0.01244124801764 * S_NumDistPurchases
2281691   +          +    -2.34409118104622 * S_NumStorePurchases
2281692   +          +    -1.80820043087435 * S_NumWebPurchases
2281693   +          +     2.40219682136039 * S_NumWebVisitsMonth
2281694   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2281695   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2281696   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2281697   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2281698   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2281699   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2281700   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2281701   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2281702   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2281703   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2281704   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2281705   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2281706   +          +     0.28209537604198 * S_NumDealsPurchases
2281707   +          +      0.6450277971767 * S_NumDistPurchases
2281708   +          +     0.85050092520609 * S_NumStorePurchases
2281709   +          +    -0.53920307215941 * S_NumWebPurchases
2281710   +          +     3.01106015100147 * S_NumWebVisitsMonth
2281711   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2281712   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2281713   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2281714   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2281715   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2281716   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2281717   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2281718   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2281719   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2281720   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2281721   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2281722   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2281723   +          +    -0.36642526324451 * S_NumDealsPurchases
2281724   +          +     -0.6091014843932 * S_NumDistPurchases
2281725   +          +    -0.21154626182088 * S_NumStorePurchases
2281726   +          +    -0.10361347071364 * S_NumWebPurchases
2281727   +          +     1.36358817627784 * S_NumWebVisitsMonth
2281728   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2281729   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2281730   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2281731   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2281732   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2281733   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2281734   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2281735   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2281736   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2281737   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2281738   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2281739   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2281740   +          +    -0.14868505161718 * S_NumDealsPurchases
2281741   +          +    -0.08395384711805 * S_NumDistPurchases
2281742   +          +     0.60525238179245 * S_NumStorePurchases
2281743   +          +     0.04555100214276 * S_NumWebPurchases
2281744   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2281745   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2281746   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2281747   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2281748   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2281749   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2281750   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2281751   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2281752   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2281753   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2281754   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2281755   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2281756   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2281757   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2281758   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2281759   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2281760   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2281761   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2281762   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2281763   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2281764   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2281765   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2281766   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2281767   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2281768   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2281769   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2281770   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2281771   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2281772   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2281773   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2281774   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2281775   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2281776   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2281777   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2281778   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2281779   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2281780   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2281781   +          +     -0.7180104021039 * Marital_StatusDivorced
2281782   +          +      0.5957373170744 * Marital_StatusMarried
2281783   +          +    -0.86183942803988 * Marital_StatusSingle
2281784   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2281785   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2281786   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2281787   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2281788   +          +     0.84772700244021 * Marital_StatusDivorced
2281789   +          +    -0.37049970188511 * Marital_StatusMarried
2281790   +          +     1.54291641732063 * Marital_StatusSingle
2281791   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2281792   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2281793   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2281794   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2281795   +          +     0.73222548496385 * Marital_StatusDivorced
2281796   +          +    -0.50102202656102 * Marital_StatusMarried
2281797   +          +    -0.07207130428422 * Marital_StatusSingle
2281798   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2281799   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2281800   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2281801   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2281802   +          +     0.25894719464799 * Marital_StatusDivorced
2281803   +          +    -1.95576501275834 * Marital_StatusMarried
2281804   +          +     2.65422185276746 * Marital_StatusSingle
2281805   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2281806   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2281807   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2281808   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2281809   +          +     0.60936191204707 * Marital_StatusDivorced
2281810   +          +    -0.52190111190458 * Marital_StatusMarried
2281811   +          +    -0.60982305233136 * Marital_StatusSingle
2281812   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2281813   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2281814   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2281815   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2281816   +          +    -1.44614502228294 * Marital_StatusDivorced
2281817   +          +      2.9001493892928 * Marital_StatusMarried
2281818   +          +    -2.60467399972513 * Marital_StatusSingle
2281819   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2281820   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2281821   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2281822   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2281823   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2281824   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2281825   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2281826   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2281827   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2281828   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2281829   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2281830   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2281831   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2281832   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2281833   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2281834   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2281835   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2281836   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2281837   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2281838   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2281839   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2281840   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2281841   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2281842   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2281843   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2281844   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2281845   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2281846   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2281847   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2281848   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2281849   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2281850   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2281851   +END;
MPRINT(EM_DIAGRAM):   END;
2281852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2281853   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2281854   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2281855   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2281856   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2281857   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2281858   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2281859   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2281860   +END;
MPRINT(EM_DIAGRAM):   END;
2281861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281862   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2281863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2281864   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2281865   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2281866   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2281867   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2281868   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2281869   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2281870   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2281871   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2281872   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2281873   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2281874   +          +    -0.46483717253931 * S_NumDealsPurchases
2281875   +          +    -0.53329008421157 * S_NumDistPurchases
2281876   +          +      0.2490774300193 * S_NumStorePurchases
2281877   +          +    -0.82755150673885 * S_NumWebPurchases
2281878   +          +     0.04007223822389 * S_NumWebVisitsMonth
2281879   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2281880   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2281881   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2281882   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2281883   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2281884   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2281885   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2281886   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2281887   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2281888   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2281889   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2281890   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2281891   +          +     0.75855101382458 * S_NumDealsPurchases
2281892   +          +     1.61754951768262 * S_NumDistPurchases
2281893   +          +    -0.48146714929729 * S_NumStorePurchases
2281894   +          +    -0.76460728035552 * S_NumWebPurchases
2281895   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2281896   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2281897   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2281898   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2281899   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2281900   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2281901   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2281902   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2281903   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2281904   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2281905   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2281906   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2281907   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2281908   +          +     0.75255317965748 * S_NumDealsPurchases
2281909   +          +     1.34900588315783 * S_NumDistPurchases
2281910   +          +    -0.17717469778048 * S_NumStorePurchases
2281911   +          +    -0.01560551546553 * S_NumWebPurchases
2281912   +          +     1.24315988674343 * S_NumWebVisitsMonth
2281913   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2281914   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2281915   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2281916   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2281917   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2281918   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2281919   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2281920   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2281921   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2281922   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2281923   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2281924   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2281925   +          +    -1.71127148178768 * S_NumDealsPurchases
2281926   +          +    -1.77527355221308 * S_NumDistPurchases
2281927   +          +    -1.40009594349363 * S_NumStorePurchases
2281928   +          +    -0.46471012062697 * S_NumWebPurchases
2281929   +          +     0.04619891083228 * S_NumWebVisitsMonth
2281930   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2281931   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2281932   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2281933   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2281934   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2281935   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2281936   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2281937   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2281938   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2281939   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2281940   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2281941   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2281942   +          +    -0.22204470395056 * S_NumDealsPurchases
2281943   +          +    -1.74490476011984 * S_NumDistPurchases
2281944   +          +     1.93538420108324 * S_NumStorePurchases
2281945   +          +     1.04892631742152 * S_NumWebPurchases
2281946   +          +     1.50717841566047 * S_NumWebVisitsMonth
2281947   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2281948   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2281949   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2281950   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2281951   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2281952   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2281953   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2281954   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2281955   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2281956   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2281957   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2281958   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2281959   +          +    -0.94690420785776 * S_NumDealsPurchases
2281960   +          +     1.87932706342204 * S_NumDistPurchases
2281961   +          +     0.31232717416487 * S_NumStorePurchases
2281962   +          +     1.51889492693355 * S_NumWebPurchases
2281963   +          +     0.04376853689795 * S_NumWebVisitsMonth
2281964   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2281965   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2281966   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2281967   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2281968   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2281969   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2281970   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2281971   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2281972   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2281973   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2281974   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2281975   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2281976   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2281977   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2281978   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2281979   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2281980   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2281981   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2281982   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2281983   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2281984   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2281985   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2281986   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2281987   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2281988   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2281989   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2281990   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2281991   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2281992   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2281993   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2281994   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2281995   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2281996   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2281997   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2281998   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2281999   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2282000   +          +     0.56030871857835 * Marital_StatusDivorced
2282001   +          +    -1.22448534379831 * Marital_StatusMarried
2282002   +          +     0.78141783495855 * Marital_StatusSingle
2282003   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2282004   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2282005   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2282006   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2282007   +          +    -2.63452071552997 * Marital_StatusDivorced
2282008   +          +     0.61829054779121 * Marital_StatusMarried
2282009   +          +    -2.20743370246315 * Marital_StatusSingle
2282010   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2282011   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2282012   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2282013   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2282014   +          +      -1.454102516731 * Marital_StatusDivorced
2282015   +          +     0.71488291465759 * Marital_StatusMarried
2282016   +          +     0.96038830049792 * Marital_StatusSingle
2282017   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2282018   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2282019   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2282020   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2282021   +          +    -0.01160394891598 * Marital_StatusDivorced
2282022   +          +    -1.09054636482951 * Marital_StatusMarried
2282023   +          +      0.7793855479379 * Marital_StatusSingle
2282024   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2282025   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2282026   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2282027   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2282028   +          +    -0.73414854875115 * Marital_StatusDivorced
2282029   +          +     0.46421425621114 * Marital_StatusMarried
2282030   +          +    -0.54512730625469 * Marital_StatusSingle
2282031   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2282032   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2282033   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2282034   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2282035   +          +     0.25131188683384 * Marital_StatusDivorced
2282036   +          +     2.38279806963807 * Marital_StatusMarried
2282037   +          +     0.28897706448348 * Marital_StatusSingle
2282038   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2282039   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2282040   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2282041   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2282042   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2282043   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2282044   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2282045   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2282046   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2282047   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2282048   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2282049   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2282050   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2282051   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2282052   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2282053   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2282054   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2282055   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2282056   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2282057   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2282058   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2282059   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2282060   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2282061   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2282062   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2282063   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2282064   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2282065   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2282066   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2282067   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2282068   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2282069   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2282070   +END;
MPRINT(EM_DIAGRAM):   END;
2282071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282072   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2282073   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2282074   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2282075   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2282076   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2282077   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2282078   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2282079   +END;
MPRINT(EM_DIAGRAM):   END;
2282080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282081   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2282082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282084   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2282085   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2282086   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2282087   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2282088   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2282089   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2282090   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2282091   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2282092   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2282093   +          +     1.11855402225797 * S_NumDealsPurchases
2282094   +          +     0.39150287442005 * S_NumDistPurchases
2282095   +          +     0.00160244551627 * S_NumStorePurchases
2282096   +          +     1.54380043731879 * S_NumWebPurchases
2282097   +          +      0.6462755347813 * S_NumWebVisitsMonth
2282098   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2282099   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2282100   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2282101   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2282102   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2282103   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2282104   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2282105   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2282106   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2282107   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2282108   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2282109   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2282110   +          +     0.01911815525287 * S_NumDealsPurchases
2282111   +          +    -1.07196707915227 * S_NumDistPurchases
2282112   +          +      0.6452048321682 * S_NumStorePurchases
2282113   +          +    -0.15818575353955 * S_NumWebPurchases
2282114   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2282115   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2282116   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2282117   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2282118   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2282119   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2282120   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2282121   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2282122   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2282123   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2282124   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2282125   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2282126   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2282127   +          +     1.56893739271853 * S_NumDealsPurchases
2282128   +          +      0.6745865425238 * S_NumDistPurchases
2282129   +          +    -0.26848765783548 * S_NumStorePurchases
2282130   +          +     0.79227081430227 * S_NumWebPurchases
2282131   +          +     0.83054874267768 * S_NumWebVisitsMonth
2282132   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2282133   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2282134   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2282135   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2282136   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2282137   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2282138   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2282139   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2282140   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2282141   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2282142   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2282143   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2282144   +          +    -0.23954856030467 * S_NumDealsPurchases
2282145   +          +    -1.61914390483829 * S_NumDistPurchases
2282146   +          +      -1.014570623016 * S_NumStorePurchases
2282147   +          +    -0.36828642098701 * S_NumWebPurchases
2282148   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2282149   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2282150   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2282151   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2282152   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2282153   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2282154   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2282155   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2282156   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2282157   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2282158   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2282159   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2282160   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2282161   +          +     1.00094082424204 * S_NumDealsPurchases
2282162   +          +      0.2724785290725 * S_NumDistPurchases
2282163   +          +     0.13170237783486 * S_NumStorePurchases
2282164   +          +    -1.31447792523743 * S_NumWebPurchases
2282165   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2282166   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2282167   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2282168   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2282169   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2282170   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2282171   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2282172   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2282173   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2282174   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2282175   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2282176   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2282177   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2282178   +          +    -0.73198872336344 * S_NumDealsPurchases
2282179   +          +     0.29368958872361 * S_NumDistPurchases
2282180   +          +     1.52772046446908 * S_NumStorePurchases
2282181   +          +    -1.75065469134874 * S_NumWebPurchases
2282182   +          +      0.0264954621772 * S_NumWebVisitsMonth
2282183   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2282184   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2282185   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2282186   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2282187   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2282188   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2282189   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2282190   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2282191   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2282192   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2282193   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2282194   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2282195   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2282196   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2282197   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2282198   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2282199   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2282200   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2282201   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2282202   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2282203   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2282204   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2282205   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2282206   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2282207   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2282208   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2282209   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2282210   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2282211   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2282212   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2282213   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2282214   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2282215   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2282216   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2282217   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2282218   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2282219   +          +     0.32207432513904 * Marital_StatusDivorced
2282220   +          +      0.6397913221395 * Marital_StatusMarried
2282221   +          +    -0.25330032559918 * Marital_StatusSingle
2282222   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2282223   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2282224   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2282225   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2282226   +          +     0.79430904713493 * Marital_StatusDivorced
2282227   +          +     2.54456429102799 * Marital_StatusMarried
2282228   +          +     0.59410742352499 * Marital_StatusSingle
2282229   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2282230   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2282231   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2282232   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2282233   +          +    -0.43081775693595 * Marital_StatusDivorced
2282234   +          +    -0.78485102174552 * Marital_StatusMarried
2282235   +          +    -1.56581090110813 * Marital_StatusSingle
2282236   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2282237   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2282238   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2282239   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2282240   +          +     0.38226706522151 * Marital_StatusDivorced
2282241   +          +     0.96666958079914 * Marital_StatusMarried
2282242   +          +    -0.07771259761555 * Marital_StatusSingle
2282243   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2282244   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2282245   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2282246   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2282247   +          +    -0.38325393606947 * Marital_StatusDivorced
2282248   +          +    -1.43303056163299 * Marital_StatusMarried
2282249   +          +     0.11571941757387 * Marital_StatusSingle
2282250   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2282251   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2282252   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2282253   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2282254   +          +    -0.36491799765765 * Marital_StatusDivorced
2282255   +          +     0.14142786767503 * Marital_StatusMarried
2282256   +          +     0.22643970468805 * Marital_StatusSingle
2282257   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2282258   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2282259   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2282260   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2282261   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2282262   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2282263   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2282264   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2282265   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2282266   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2282267   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2282268   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2282269   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2282270   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2282271   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2282272   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2282273   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2282274   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2282275   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2282276   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2282277   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2282278   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2282279   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2282280   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2282281   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2282282   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2282283   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2282284   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2282285   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2282286   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2282287   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2282288   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2282289   +END;
MPRINT(EM_DIAGRAM):   END;
2282290   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282291   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2282292   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2282293   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2282294   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2282295   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2282296   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2282297   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2282298   +END;
MPRINT(EM_DIAGRAM):   END;
2282299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282300   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2282301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282303   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2282304   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2282305   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2282306   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2282307   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2282308   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2282309   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2282310   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2282311   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2282312   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2282313   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2282314   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2282315   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2282316   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2282317   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2282318   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2282319   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2282320   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2282321   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2282322   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2282323   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2282324   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2282325   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2282326   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2282327   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2282328   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2282329   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2282330   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2282331   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2282332   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2282333   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2282334   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2282335   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2282336   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2282337   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2282338   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2282339   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2282340   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2282341   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2282342   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2282343   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2282344   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2282345   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2282346   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2282347   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2282348   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2282349   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2282350   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2282351   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2282352   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2282353   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2282354   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2282355   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2282356   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2282357   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2282358   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2282359   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2282360   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2282361   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2282362   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2282363   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2282364   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2282365   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2282366   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2282367   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2282368   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2282369   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2282370   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2282371   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2282372   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2282373   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2282374   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2282375   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2282376   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2282377   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2282378   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2282379   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2282380   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2282381   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2282382   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2282383   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2282384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2282385   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2282386   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2282387   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2282388   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2282389   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2282390   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2282391   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2282392   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2282393   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2282394   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2282395   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2282396   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2282397   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2282398   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2282399   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2282400   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2282401   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2282402   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2282403   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2282404   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2282405   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2282406   +END;
MPRINT(EM_DIAGRAM):   END;
2282407   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282408   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2282409   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2282410   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2282411   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2282412   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2282413   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2282414   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2282415   +END;
MPRINT(EM_DIAGRAM):   END;
2282416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282417   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2282418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282419   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282420   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2282421   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2282422   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2282423   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2282424   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2282425   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2282426   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2282427   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2282428   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2282429   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2282430   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2282431   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2282432   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2282433   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2282434   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2282435   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2282436   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2282437   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2282438   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2282439   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2282440   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2282441   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2282442   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2282443   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2282444   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2282445   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2282446   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2282447   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2282448   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2282449   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2282450   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2282451   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2282452   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2282453   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2282454   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2282455   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2282456   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2282457   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2282458   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2282459   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2282460   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2282461   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2282462   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2282463   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2282464   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2282465   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2282466   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2282467   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2282468   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2282469   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2282470   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2282471   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2282472   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2282473   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2282474   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2282475   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2282476   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2282477   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2282478   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2282479   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2282480   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2282481   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2282482   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2282483   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2282484   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2282485   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2282486   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2282487   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2282488   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2282489   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2282490   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2282491   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2282492   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2282493   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2282494   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2282495   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2282496   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2282497   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2282498   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2282499   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2282500   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2282501   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2282502   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2282503   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2282504   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2282505   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2282506   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2282507   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2282508   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2282509   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2282510   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2282511   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2282512   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2282513   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2282514   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2282515   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2282516   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2282517   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2282518   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2282519   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2282520   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2282521   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2282522   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2282523   +END;
MPRINT(EM_DIAGRAM):   END;
2282524   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282525   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2282526   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2282527   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2282528   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2282529   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2282530   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2282531   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2282532   +END;
MPRINT(EM_DIAGRAM):   END;
2282533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282534   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2282535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282536   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282537   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2282538   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2282539   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2282540   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2282541   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2282542   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2282543   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2282544   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2282545   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2282546   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2282547   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2282548   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2282549   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2282550   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2282551   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2282552   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2282553   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2282554   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2282555   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2282556   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2282557   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2282558   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2282559   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2282560   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2282561   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2282562   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2282563   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2282564   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2282565   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2282566   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2282567   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2282568   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2282569   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2282570   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2282571   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2282572   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2282573   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2282574   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2282575   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2282576   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2282577   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2282578   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2282579   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2282580   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2282581   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2282582   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2282583   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2282584   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2282585   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2282586   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2282587   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2282588   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2282589   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2282590   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2282591   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2282592   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2282593   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2282594   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2282595   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2282596   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2282597   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2282598   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2282599   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2282600   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2282601   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2282602   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2282603   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2282604   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2282605   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2282606   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2282607   +END;
MPRINT(EM_DIAGRAM):   END;
2282608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282609   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2282610   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2282611   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2282612   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2282613   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2282614   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2282615   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2282616   +END;
MPRINT(EM_DIAGRAM):   END;
2282617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282618   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2282619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282620   +
2282621   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2282622   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2282623   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2282624   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2282625   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2282626   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2282627   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2282628   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2282629   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2282630   +end;
MPRINT(EM_DIAGRAM):   end;
2282631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282632   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2282633   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2282634   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2282635   +   end;
MPRINT(EM_DIAGRAM):   end;
2282636   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2282637   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2282638   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2282639   +   end;
MPRINT(EM_DIAGRAM):   end;
2282640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2282641   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2282642   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2282643   +   end;
MPRINT(EM_DIAGRAM):   end;
2282644   +end;
MPRINT(EM_DIAGRAM):   end;
2282645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2282646   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2282647   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2282648   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2282649   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2282650   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2282651   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2282652   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2282653   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2282654   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2282655   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2282656   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2282657   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2282658   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2282659   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2282660   +END;
MPRINT(EM_DIAGRAM):   END;
2282661   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2282662   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2282663   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2282664   +END;
MPRINT(EM_DIAGRAM):   END;
2282665   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2282666   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2282667   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2282668   +END;
MPRINT(EM_DIAGRAM):   END;
2282669   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2282670   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2282671   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2282672   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2282673   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2282674   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2282675   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2282676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282677   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2282678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2282679   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2282680   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2282681   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2282682   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2282683   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2282684   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2282685   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2282686   +END;
MPRINT(EM_DIAGRAM):   END;
2282687   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2282688   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2282689   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2282690   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2282691   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2282692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282693   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2282694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282695   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2282696   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2282697   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2282698   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2282699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282700   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2282701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282702   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2282703   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2282704   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2282705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282706   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
2282707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282708   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2282709   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2282710   +P_DepVar1 = max(
2282711   +AutoNeural6_P_DepVar1 ,
2282712   +AutoNeural7_P_DepVar1 ,
2282713   +AutoNeural8_P_DepVar1 ,
2282714   +AutoNeural10_P_DepVar1 ,
2282715   +AutoNeural9_P_DepVar1 ,
2282716   +AutoNeural11_P_DepVar1 ,
2282717   +AutoNeural12_P_DepVar1
2282718   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
2282719   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2282720   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2282721   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2282722   +end;
MPRINT(EM_DIAGRAM):   end;
2282723   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2282724   +P_DepVar0 = max(
2282725   +AutoNeural6_P_DepVar0 ,
2282726   +AutoNeural7_P_DepVar0 ,
2282727   +AutoNeural8_P_DepVar0 ,
2282728   +AutoNeural10_P_DepVar0 ,
2282729   +AutoNeural9_P_DepVar0 ,
2282730   +AutoNeural11_P_DepVar0 ,
2282731   +AutoNeural12_P_DepVar0
2282732   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
2282733   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2282734   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2282735   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2282736   +end;
MPRINT(EM_DIAGRAM):   end;
2282737   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2282738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282739   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
2282740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282741   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2282742   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2282743   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2282744   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2282745   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2282746   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2282747   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2282748   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2282749   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2282750   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2282751   +end;
MPRINT(EM_DIAGRAM):   end;
2282752   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2282753   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2282754   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2282755   +end;
MPRINT(EM_DIAGRAM):   end;
2282756   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2282757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282758   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
2282759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282760   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2282761   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2282762   +else
2282763   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2282764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282765   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
2282766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282767   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2282768   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2282769   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2282770   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282770  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282771   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282771  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282772   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282772  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282773   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282773  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282774   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282774  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282775   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282775  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282776   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282776  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282777   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282777  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282778   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282778  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282779   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282779  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282780   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282780  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282781   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282781  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282782   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282782  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282783   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282783  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282784   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282784  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282785   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282785  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282786   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282786  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282787   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282787  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282788   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282788  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282789   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282789  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282790   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282790  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282791   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282791  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282792   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282792  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282793   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282793  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282794   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2282794  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2282795   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2282795  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2282796   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2282796  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2282797   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2282797  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2282798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282799   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
2282800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2282801   +if
2282802   +F_DepVar NE '1'
2282803   +AND F_DepVar NE '0'
2282804   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2282805   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2282806   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2282807   +end;
MPRINT(EM_DIAGRAM):   end;
2282808   +else do;
MPRINT(EM_DIAGRAM):   else do;
2282809   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2282810   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2282811   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2282812   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2282813   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2282814   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2282815   +END;
MPRINT(EM_DIAGRAM):   END;
2282816   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2282817    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2282818    quit;
2282819    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl37_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2282879    filename _pref
2282879  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2282880    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2282881    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2282882   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2282883   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2282884   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2282885   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2282886   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2282887   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2282888   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2282889   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2282890   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2282891   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2282892   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2282893   +LENGTH _WARN_ $4
2282894   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2282895   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2282896   +
2282897   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2282898   +
2282899   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2282900   +
2282901   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2282902   +
2282903   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2282904   +
2282905   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2282906   +
2282907   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2282908   +
2282909   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2282910   +
2282911   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2282912   +
2282913   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2282914   +
2282915   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2282916   +
2282917   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2282918   +
2282919   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2282920   +
2282921   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2282922   +
2282923   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2282924   +
2282925   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2282926   +
2282927   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2282928   +
2282929   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2282930   +
2282931   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2282932   +
2282933   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2282934   +
2282935   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2282936   +
2282937   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2282938   +
2282939   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2282940   +
2282941   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2282942   +
2282943   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2282944   +
2282945   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2282946   +
2282947   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2282948   +
2282949   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2282950   +
2282951   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2282952   +
2282953   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2282954   +
2282955   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2282956   +
2282957   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2282958   +
2282959   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2282960   +
2282961   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2282962   +
2282963   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2282964   +
2282965   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2282966   +
2282967   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2282968   +
2282969   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2282970   +
2282971   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2282972   +
2282973   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2282974   +
2282975   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2282976   +
2282977   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2282978   +
2282979   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2282980   +
2282981   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2282982   +
2282983   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2282984   +
2282985   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2282986   +
2282987   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2282988   +
2282989   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2282990   +
2282991   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2282992   +
2282993   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2282994   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2282995   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2282996   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2282997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2282998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2282999   +end;
MPRINT(EM_DIAGRAM):   end;
2283000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283002   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2283003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283005   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2283006   +   end;
MPRINT(EM_DIAGRAM):   end;
2283007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283008   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2283009   +   end;
MPRINT(EM_DIAGRAM):   end;
2283010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283011   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2283012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283014   +   end;
MPRINT(EM_DIAGRAM):   end;
2283015   +end;
MPRINT(EM_DIAGRAM):   end;
2283016   +
2283017   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2283018   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2283019   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2283020   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2283021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283023   +end;
MPRINT(EM_DIAGRAM):   end;
2283024   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283026   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2283027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283029   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2283030   +   end;
MPRINT(EM_DIAGRAM):   end;
2283031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283032   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2283033   +   end;
MPRINT(EM_DIAGRAM):   end;
2283034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283035   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2283036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283038   +   end;
MPRINT(EM_DIAGRAM):   end;
2283039   +end;
MPRINT(EM_DIAGRAM):   end;
2283040   +
2283041   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2283042   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2283043   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2283044   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2283045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283047   +end;
MPRINT(EM_DIAGRAM):   end;
2283048   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283050   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2283051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283053   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2283054   +   end;
MPRINT(EM_DIAGRAM):   end;
2283055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283056   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2283057   +   end;
MPRINT(EM_DIAGRAM):   end;
2283058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283059   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2283060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283062   +   end;
MPRINT(EM_DIAGRAM):   end;
2283063   +end;
MPRINT(EM_DIAGRAM):   end;
2283064   +
2283065   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2283066   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2283067   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2283068   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2283069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283071   +end;
MPRINT(EM_DIAGRAM):   end;
2283072   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283074   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2283075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283077   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2283078   +   end;
MPRINT(EM_DIAGRAM):   end;
2283079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283080   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2283081   +   end;
MPRINT(EM_DIAGRAM):   end;
2283082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283083   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2283084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283086   +   end;
MPRINT(EM_DIAGRAM):   end;
2283087   +end;
MPRINT(EM_DIAGRAM):   end;
2283088   +
2283089   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2283090   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2283091   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2283092   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2283093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283095   +end;
MPRINT(EM_DIAGRAM):   end;
2283096   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283098   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2283099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283101   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2283102   +   end;
MPRINT(EM_DIAGRAM):   end;
2283103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283104   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2283105   +   end;
MPRINT(EM_DIAGRAM):   end;
2283106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283107   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2283108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283110   +   end;
MPRINT(EM_DIAGRAM):   end;
2283111   +end;
MPRINT(EM_DIAGRAM):   end;
2283112   +
2283113   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2283114   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2283115   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2283116   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2283117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283119   +end;
MPRINT(EM_DIAGRAM):   end;
2283120   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283122   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2283123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283125   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2283126   +   end;
MPRINT(EM_DIAGRAM):   end;
2283127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283128   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2283129   +   end;
MPRINT(EM_DIAGRAM):   end;
2283130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283131   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2283132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283134   +   end;
MPRINT(EM_DIAGRAM):   end;
2283135   +end;
MPRINT(EM_DIAGRAM):   end;
2283136   +
2283137   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2283138   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2283139   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2283140   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2283141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283143   +end;
MPRINT(EM_DIAGRAM):   end;
2283144   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283146   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2283147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283148   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2283149   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2283150   +   end;
MPRINT(EM_DIAGRAM):   end;
2283151   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2283152   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2283153   +   end;
MPRINT(EM_DIAGRAM):   end;
2283154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283155   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2283156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283158   +   end;
MPRINT(EM_DIAGRAM):   end;
2283159   +end;
MPRINT(EM_DIAGRAM):   end;
2283160   +
2283161   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2283162   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2283163   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2283164   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2283165   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2283166   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2283167   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2283168   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2283169   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2283170   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2283171   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2283172   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2283173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283175   +end;
MPRINT(EM_DIAGRAM):   end;
2283176   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283177   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2283178   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2283179   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283180   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2283181   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2283182   +   end;
MPRINT(EM_DIAGRAM):   end;
2283183   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2283184   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2283185   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2283186   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2283187   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2283188   +   end;
MPRINT(EM_DIAGRAM):   end;
2283189   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2283190   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2283191   +   end;
MPRINT(EM_DIAGRAM):   end;
2283192   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2283193   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2283194   +   end;
MPRINT(EM_DIAGRAM):   end;
2283195   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2283196   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2283197   +   end;
MPRINT(EM_DIAGRAM):   end;
2283198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283199   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2283200   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2283201   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2283202   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2283203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283205   +   end;
MPRINT(EM_DIAGRAM):   end;
2283206   +end;
MPRINT(EM_DIAGRAM):   end;
2283207   +
2283208   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2283209   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2283210   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2283211   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2283212   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2283213   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2283214   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2283215   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2283216   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2283217   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2283218   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2283219   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2283220   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2283221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283223   +end;
MPRINT(EM_DIAGRAM):   end;
2283224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283225   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2283226   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2283227   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283228   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2283229   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2283230   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2283231   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2283232   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2283233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283234   +         end;
MPRINT(EM_DIAGRAM):   end;
2283235   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2283236   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2283237   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2283238   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283239   +            end;
MPRINT(EM_DIAGRAM):   end;
2283240   +         end;
MPRINT(EM_DIAGRAM):   end;
2283241   +      end;
MPRINT(EM_DIAGRAM):   end;
2283242   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2283243   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2283244   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2283245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283246   +         end;
MPRINT(EM_DIAGRAM):   end;
2283247   +      end;
MPRINT(EM_DIAGRAM):   end;
2283248   +   end;
MPRINT(EM_DIAGRAM):   end;
2283249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283250   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2283251   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2283252   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283253   +      end;
MPRINT(EM_DIAGRAM):   end;
2283254   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2283255   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2283256   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2283257   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2283258   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2283259   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2283260   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283261   +         end;
MPRINT(EM_DIAGRAM):   end;
2283262   +      end;
MPRINT(EM_DIAGRAM):   end;
2283263   +   end;
MPRINT(EM_DIAGRAM):   end;
2283264   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2283265   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2283266   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2283267   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2283268   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2283269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283271   +   end;
MPRINT(EM_DIAGRAM):   end;
2283272   +end;
MPRINT(EM_DIAGRAM):   end;
2283273   +
2283274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283275   +*** Checking missing input Interval
2283276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2283277   +
2283278   +IF NMISS(
2283279   +   AcceptedCmpTotal ,
2283280   +   Age ,
2283281   +   Frq ,
2283282   +   Income ,
2283283   +   Kidhome ,
2283284   +   Mnt ,
2283285   +   MntFishProducts ,
2283286   +   MntFruits ,
2283287   +   MntGoldProds ,
2283288   +   MntMeatProducts ,
2283289   +   MntSweetProducts ,
2283290   +   MntWines ,
2283291   +   MonthsAsCustomer ,
2283292   +   NumCatalogPurchases ,
2283293   +   NumDealsPurchases ,
2283294   +   NumDistPurchases ,
2283295   +   NumStorePurchases ,
2283296   +   NumWebPurchases ,
2283297   +   NumWebVisitsMonth ,
2283298   +   RFMstat ,
2283299   +   RMntFrq ,
2283300   +   Recency ,
2283301   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2283302   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2283303   +
2283304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283305   +END;
MPRINT(EM_DIAGRAM):   END;
2283306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283307   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2283308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283310   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2283311   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2283312   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2283313   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2283314   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2283315   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2283316   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2283317   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2283318   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2283319   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2283320   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2283321   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2283322   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2283323   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2283324   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2283325   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2283326   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2283327   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2283328   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2283329   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2283330   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2283331   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2283332   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2283333   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2283334   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2283335   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2283336   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2283337   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2283338   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2283339   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2283340   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2283341   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2283342   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2283343   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2283344   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2283345   +END;
MPRINT(EM_DIAGRAM):   END;
2283346   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283347   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2283348   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2283349   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2283350   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2283351   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2283352   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2283353   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2283354   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2283355   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2283356   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2283357   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2283358   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2283359   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2283360   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2283361   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2283362   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2283363   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2283364   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2283365   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2283366   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2283367   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2283368   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2283369   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2283370   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2283371   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2283372   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2283373   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2283374   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2283375   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2283376   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2283377   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2283378   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2283379   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2283380   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2283381   +   ELSE S_NumCatalogPurchases
2283382   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2283383   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2283384   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2283385   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2283386   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2283387   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2283388   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2283389   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2283390   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2283391   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2283392   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2283393   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2283394   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2283395   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2283396   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2283397   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2283398   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2283399   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2283400   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2283401   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2283402   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2283403   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2283404   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2283405   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2283406   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2283407   +END;
MPRINT(EM_DIAGRAM):   END;
2283408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283409   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2283410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283412   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2283413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283415   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2283416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283417   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283418   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2283419   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2283420   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2283421   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2283422   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2283423   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2283424   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2283425   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2283426   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2283427   +          +    -1.19682864242203 * S_NumDealsPurchases
2283428   +          +     0.18491015618084 * S_NumDistPurchases
2283429   +          +     1.22999585210812 * S_NumStorePurchases
2283430   +          +     1.21627782358382 * S_NumWebPurchases
2283431   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2283432   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2283433   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2283434   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 *
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 *
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts +
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 *
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 *
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 *
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 *
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq +
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2283435   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2283436   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2283437   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2283438   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2283439   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 *
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 +
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 *
HigherEducationBinary0 ;
2283440   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2283441   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2283442   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2283443   +          +     0.22010007588989 * Marital_StatusDivorced
2283444   +          +    -0.15233151420698 * Marital_StatusMarried
2283445   +          +    -0.03753447021411 * Marital_StatusSingle
2283446   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle +
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation +
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced +
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle +
-0.12393264098828 * Marital_StatusTogether ;
2283447   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2283448   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283449   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283450   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2283451   +END;
MPRINT(EM_DIAGRAM):   END;
2283452   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283453   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2283454   +END;
MPRINT(EM_DIAGRAM):   END;
2283455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283456   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2283457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283458   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283459   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2283460   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2283461   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2283462   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2283463   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2283464   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2283465   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2283466   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2283467   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2283468   +          +    -0.66146733174161 * S_NumDealsPurchases
2283469   +          +     1.52784459399302 * S_NumDistPurchases
2283470   +          +     1.49997699453958 * S_NumStorePurchases
2283471   +          +     0.63969125024997 * S_NumWebPurchases
2283472   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2283473   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2283474   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2283475   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 *
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 *
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts +
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 *
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 *
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 *
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 *
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq +
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2283476   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2283477   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2283478   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2283479   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2283480   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 +
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 *
HigherEducationBinary0 ;
2283481   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2283482   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2283483   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2283484   +          +    -0.26556711862055 * Marital_StatusDivorced
2283485   +          +     1.14529440208202 * Marital_StatusMarried
2283486   +          +    -1.05822467297368 * Marital_StatusSingle
2283487   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle +
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 *
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 *
Marital_StatusTogether ;
2283488   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2283489   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283490   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283491   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2283492   +END;
MPRINT(EM_DIAGRAM):   END;
2283493   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283494   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2283495   +END;
MPRINT(EM_DIAGRAM):   END;
2283496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283497   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2283498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283499   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283500   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2283501   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2283502   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2283503   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2283504   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2283505   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2283506   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2283507   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2283508   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2283509   +          +    -1.65571629915953 * S_NumDealsPurchases
2283510   +          +     0.44850418598185 * S_NumDistPurchases
2283511   +          +    -1.85103994085543 * S_NumStorePurchases
2283512   +          +    -1.98087140874692 * S_NumWebPurchases
2283513   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2283514   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2283515   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2283516   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 *
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 *
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts +
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 *
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 *
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 *
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 *
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq +
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2283517   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2283518   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2283519   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2283520   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2283521   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 *
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 +
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 *
HigherEducationBinary0 ;
2283522   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2283523   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2283524   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2283525   +          +     0.50400969719731 * Marital_StatusDivorced
2283526   +          +    -1.34220391092458 * Marital_StatusMarried
2283527   +          +    -0.55428853923129 * Marital_StatusSingle
2283528   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle +
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 *
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 *
Marital_StatusTogether ;
2283529   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2283530   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283531   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283532   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2283533   +END;
MPRINT(EM_DIAGRAM):   END;
2283534   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283535   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2283536   +END;
MPRINT(EM_DIAGRAM):   END;
2283537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283538   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2283539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283541   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2283542   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2283543   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2283544   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2283545   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283546   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283547   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2283548   +END;
MPRINT(EM_DIAGRAM):   END;
2283549   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283550   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2283551   +END;
MPRINT(EM_DIAGRAM):   END;
2283552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283553   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2283554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283556   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2283557   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2283558   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2283559   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2283560   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283561   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283562   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2283563   +END;
MPRINT(EM_DIAGRAM):   END;
2283564   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283565   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2283566   +END;
MPRINT(EM_DIAGRAM):   END;
2283567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283568   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2283569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283571   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2283572   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2283573   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2283574   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2283575   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2283576   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2283577   +END;
MPRINT(EM_DIAGRAM):   END;
2283578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283579   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2283580   +END;
MPRINT(EM_DIAGRAM):   END;
2283581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283582   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2283583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283584   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283585   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2283586   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2283587   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2283588   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2283589   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2283590   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2283591   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2283592   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2283593   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2283594   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2283595   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2283596   +END;
MPRINT(EM_DIAGRAM):   END;
2283597   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283598   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2283599   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2283600   +END;
MPRINT(EM_DIAGRAM):   END;
2283601   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2283602   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2283603   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2283604   +END;
MPRINT(EM_DIAGRAM):   END;
2283605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283606   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2283607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283608   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2283609   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2283610   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2283611   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2283612   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2283613   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2283614   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2283615   +END;
MPRINT(EM_DIAGRAM):   END;
2283616   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283617   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2283618   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2283619   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283620    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2283621    quit;
2283622    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2283623    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2283624    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2283625    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
2283626    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2283627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283628    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2283629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283631    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME
CREATOR);
2283632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283634    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283635    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2283636    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2283637    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283638    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2283639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2283640    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2283641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283643    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283644    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2283645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283646    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283647    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2283648    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2283648  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.
 
2283649    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283650    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2283651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1717 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283652    filename _pref
2283652  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2283653    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2283654    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2283655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283656   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2283657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283658   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2283659   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2283660   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283661    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2283662    quit;
2283663    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2283664    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2283665    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2283666    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2283667    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2283668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283669    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2283670    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283671    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283672    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2283673    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283674    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283675    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283676    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2283677    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2283678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283679    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2283680    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2283681    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2283682    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283684    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283685    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2283686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283687    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283688    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2283689    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2283689  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2283690    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283691    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2283692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1721 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283693    filename _pref
2283693  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2283694    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2283695    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2283696   +
2283697   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2283698   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2283698  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2283699   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2283700   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2283701   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2283702   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2283703   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283704    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2283705    quit;
2283706    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2283707    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2283708    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2283709    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2283710    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2283711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283712    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2283713    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283715    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2283716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283718    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283719    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2283720    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2283721    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283722    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2283723    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283724    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2283725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283727    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283728    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2283729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283730    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283731    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2283732    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2283732  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2283733    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283734    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2283735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283736    filename _pref
2283736  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2283737    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2283738    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2283739   +
2283740   +
2283741   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2283742   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2283743   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2283744   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2283745   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2283746   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283747   +
2283748   +
2283749   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2283750   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2283751   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2283752   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2283753   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2283754   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283755   +
2283756   +
2283757   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2283758   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2283759   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2283760   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2283761   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2283762   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283763   +
2283764   +
2283765   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2283766   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2283767   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2283768   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2283769   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2283770   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283771   +
2283772   +
2283773   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2283774   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2283775   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2283776   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2283777   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2283778   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283779   +
2283780   +
2283781   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2283782   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2283783   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2283784   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2283785   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2283786   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283787   +
2283788   +
2283789   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2283790   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2283791   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2283792   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2283793   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2283794   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283795   +
2283796   +
2283797   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2283798   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2283799   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2283800   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2283801   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2283802   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2283803   +if
2283804   +_FILTERNORM1 not in ( '.')
2283805   + and
2283806   +_FILTERNORM2 not in ( '.')
2283807   + and
2283808   +_FILTERNORM3 not in ( '.')
2283809   + and
2283810   +_FILTERNORM4 not in ( '.')
2283811   + and
2283812   +_FILTERNORM5 not in ( '.')
2283813   + and
2283814   +_FILTERNORM6 not in ( '.')
2283815   + and
2283816   +_FILTERNORM7 not in ( ' ')
2283817   + and
2283818   +_FILTERNORM8 not in ( ' ')
2283819   +and
2283820   +( Dt_Customer ne .)
2283821   +and ( Income ne . and (Income<=107000))
2283822   +and ( Kidhome ne .)
2283823   +and ( MntFishProducts ne .)
2283824   +and ( MntFruits ne .)
2283825   +and ( MntGoldProds ne .)
2283826   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2283827   +and ( MntSweetProducts ne .)
2283828   +and ( MntWines ne .)
2283829   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2283830   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2283831   +and ( NumStorePurchases ne .)
2283832   +and ( NumWebPurchases ne .)
2283833   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2283834   +and ( Recency ne .)
2283835   +and ( Teenhome ne .)
2283836   +and ( Year_Birth ne .)
2283837   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2283838   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2283839   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2283840   +end;
MPRINT(EM_DIAGRAM):   end;
2283841   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2283842   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2283843    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2283844    quit;
2283845    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2283846    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2283847    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2283848    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2283849    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2283850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283851    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2283852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283854    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2283855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283856    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283857    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283858    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2283859    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2283860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283861    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2283862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2283863    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2283864    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283866    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2283867    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2283868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2283869    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283870    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2283871    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2283871  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2283872    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283873    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2283874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1826 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283875    %macro varDept(fcmpdata=,id=);
2283876    %global nobs&id scoreFlag&id;
2283877    %let scoreFlag&id = 0;
2283878    %if &id=1 or ^&fcmpStart %then %do;
2283879    proc sort data=&fcmpdata out=_temp&id nodupkey;
2283880    by NAME;
2283881    where id=&id and LHS in( %let j=1;
2283882    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2283883    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2283884    "&var" %let j = %eval(&j+1);
2283885    %end;
2283886    );
2283887    run;
2283888    %let dsid = %sysfunc(open(_temp&id));
2283889    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2283890    %let dsid = %sysfunc(close(&dsid));
2283891    %if &&nobs&id %then %do;
2283892    %let scoreFlag&id = 1;
2283893    %let fcmpStart = 1;
2283894    %end;
2283895    %else %let fcmpStart = 0;
2283896    %end;
2283897    %else %do;
2283898    proc sort data=&fcmpdata out=_tempid;
2283899    where id=&id;
2283900    by LHS;
2283901    run;
2283902    %let dsid = %sysfunc(open(_tempid));
2283903    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2283904    %let dsid = %sysfunc(close(&dsid));
2283905    %if ^&&nobs&id %then %do;
2283906    proc datasets lib=work nolist;
2283907    delete _tempid;
2283908    run;
2283909    quit;
2283910    %end;
2283911    %else %do;
2283912    data _tempAll;
2283913    set %let j=%eval(&id-1);
2283914    %do x=1 %to &j;
2283915    %if &&nobs&x %then %do;
2283916    _temp&x %end;
2283917    %end;
2283918    ;
2283919    run;
2283920    proc sql;
2283921    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2283921  ! work._tempid p2 where p.name=p2.lhs;
2283922    quit;
2283923    data _temp&id;
2283924    set _temp&id;
2283925    where LHS ne '' and NAME ne '' and Node ne '';
2283926    run;
2283927    proc datasets lib=work nolist;
2283928    delete _tempAll;
2283929    run;
2283930    %let dsid = %sysfunc(open(_temp&id));
2283931    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2283932    %let dsid = %sysfunc(close(&dsid));
2283933    %if ^&&nobs&id %then %do;
2283934    proc datasets lib=work nolist;
2283935    delete _temp&id;
2283936    run;
2283937    quit;
2283938    %end;
2283939    %else %do;
2283940    %let scoreFlag&id = 1;
2283941    data _temp&id;
2283942    set _temp&id;
2283943    where LHS ne NAME and node ne '';
2283944    run;
2283945    %let dsid = %sysfunc(open(_temp&id));
2283946    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2283947    %let dsid = %sysfunc(close(&dsid));
2283948    %if ^&&nobs&id %then %do;
2283949    proc datasets lib=work nolist;
2283950    delete _temp&id;
2283951    run;
2283952    quit;
2283953    %end;
2283954    %else %do;
2283955    proc sort data=_temp&id nodupkey;
2283956    by LHS NAME;
2283957    run;
2283958    %end;
2283959    %end;
2283960    %end;
2283961    %end;
2283962    %mend varDept;
2283963    %macro optCode(outdata=fcmpdata);
2283964    %global fcmpStart;
2283965    %let fcmpStart = 0;
2283966    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2283967    %let NumNodes=9;
2283968    %do k=1 %to &NumNodes;
2283969    %vardept(fcmpdata=&outdata, id=&k);
2283970    %end;
2283971    %mend optCode;
2283972    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 152 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 112 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 83 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
The SAS System
 
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2283973    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2283974    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2283975    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2283976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283977    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2283978    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2283979    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2283980    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283981    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2283982    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2283982  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2283983    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2283984    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2283985    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2283986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283987    filename _pref
2283987  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2283988    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2283989    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2283990   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283991   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2283992   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283993   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2283994   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2283995   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2283996   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2283997   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2283998   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2283999   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2284000   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2284001   +LENGTH _WARN_ $4
2284002   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2284003   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2284004   +
2284005   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2284006   +
2284007   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2284008   +
2284009   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2284010   +
2284011   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2284012   +
2284013   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2284014   +
2284015   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2284016   +
2284017   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2284018   +
2284019   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2284020   +
2284021   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2284022   +
2284023   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2284024   +
2284025   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2284026   +
2284027   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2284028   +
2284029   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2284030   +
2284031   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2284032   +
2284033   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2284034   +
2284035   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2284036   +
2284037   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2284038   +
2284039   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2284040   +
2284041   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2284042   +
2284043   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2284044   +
2284045   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2284046   +
2284047   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2284048   +
2284049   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2284050   +
2284051   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2284052   +
2284053   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2284054   +
2284055   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2284056   +
2284057   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2284058   +
2284059   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2284060   +
2284061   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2284062   +
2284063   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2284064   +
2284065   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2284066   +
2284067   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2284068   +
2284069   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2284070   +
2284071   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2284072   +
2284073   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2284074   +
2284075   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2284076   +
2284077   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2284078   +
2284079   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2284080   +
2284081   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2284082   +
2284083   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2284084   +
2284085   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2284086   +
2284087   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2284088   +
2284089   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2284090   +
2284091   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2284092   +
2284093   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2284094   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2284095   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2284096   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2284097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284099   +end;
MPRINT(EM_DIAGRAM):   end;
2284100   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284102   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2284103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284105   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2284106   +   end;
MPRINT(EM_DIAGRAM):   end;
2284107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284108   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2284109   +   end;
MPRINT(EM_DIAGRAM):   end;
2284110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284111   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2284112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284114   +   end;
MPRINT(EM_DIAGRAM):   end;
2284115   +end;
MPRINT(EM_DIAGRAM):   end;
2284116   +
2284117   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2284118   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2284119   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2284120   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2284121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284123   +end;
MPRINT(EM_DIAGRAM):   end;
2284124   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284126   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2284127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284129   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2284130   +   end;
MPRINT(EM_DIAGRAM):   end;
2284131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284132   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2284133   +   end;
MPRINT(EM_DIAGRAM):   end;
2284134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284135   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2284136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284138   +   end;
MPRINT(EM_DIAGRAM):   end;
2284139   +end;
MPRINT(EM_DIAGRAM):   end;
2284140   +
2284141   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2284142   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2284143   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2284144   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2284145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284147   +end;
MPRINT(EM_DIAGRAM):   end;
2284148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284150   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2284151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284153   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2284154   +   end;
MPRINT(EM_DIAGRAM):   end;
2284155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284156   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2284157   +   end;
MPRINT(EM_DIAGRAM):   end;
2284158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284159   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2284160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284162   +   end;
MPRINT(EM_DIAGRAM):   end;
2284163   +end;
MPRINT(EM_DIAGRAM):   end;
2284164   +
2284165   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2284166   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2284167   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2284168   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2284169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284171   +end;
MPRINT(EM_DIAGRAM):   end;
2284172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284174   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2284175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284177   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2284178   +   end;
MPRINT(EM_DIAGRAM):   end;
2284179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284180   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2284181   +   end;
MPRINT(EM_DIAGRAM):   end;
2284182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284183   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2284184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284186   +   end;
MPRINT(EM_DIAGRAM):   end;
2284187   +end;
MPRINT(EM_DIAGRAM):   end;
2284188   +
2284189   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2284190   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2284191   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2284192   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2284193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284195   +end;
MPRINT(EM_DIAGRAM):   end;
2284196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284198   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2284199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284201   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2284202   +   end;
MPRINT(EM_DIAGRAM):   end;
2284203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284204   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2284205   +   end;
MPRINT(EM_DIAGRAM):   end;
2284206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284207   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2284208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284210   +   end;
MPRINT(EM_DIAGRAM):   end;
2284211   +end;
MPRINT(EM_DIAGRAM):   end;
2284212   +
2284213   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2284214   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2284215   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2284216   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2284217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284219   +end;
MPRINT(EM_DIAGRAM):   end;
2284220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284222   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2284223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284225   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2284226   +   end;
MPRINT(EM_DIAGRAM):   end;
2284227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284228   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2284229   +   end;
MPRINT(EM_DIAGRAM):   end;
2284230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284231   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2284232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284234   +   end;
MPRINT(EM_DIAGRAM):   end;
2284235   +end;
MPRINT(EM_DIAGRAM):   end;
2284236   +
2284237   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2284238   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2284239   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2284240   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2284241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284243   +end;
MPRINT(EM_DIAGRAM):   end;
2284244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284246   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2284247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284248   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2284249   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2284250   +   end;
MPRINT(EM_DIAGRAM):   end;
2284251   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2284252   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2284253   +   end;
MPRINT(EM_DIAGRAM):   end;
2284254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284255   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2284256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284258   +   end;
MPRINT(EM_DIAGRAM):   end;
2284259   +end;
MPRINT(EM_DIAGRAM):   end;
2284260   +
2284261   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2284262   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2284263   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2284264   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2284265   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2284266   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2284267   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2284268   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2284269   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2284270   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2284271   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2284272   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2284273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284275   +end;
MPRINT(EM_DIAGRAM):   end;
2284276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284277   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2284278   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2284279   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284280   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2284281   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2284282   +   end;
MPRINT(EM_DIAGRAM):   end;
2284283   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2284284   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2284285   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2284286   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2284287   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2284288   +   end;
MPRINT(EM_DIAGRAM):   end;
2284289   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2284290   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2284291   +   end;
MPRINT(EM_DIAGRAM):   end;
2284292   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2284293   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2284294   +   end;
MPRINT(EM_DIAGRAM):   end;
2284295   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2284296   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2284297   +   end;
MPRINT(EM_DIAGRAM):   end;
2284298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284299   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2284300   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2284301   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2284302   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2284303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284305   +   end;
MPRINT(EM_DIAGRAM):   end;
2284306   +end;
MPRINT(EM_DIAGRAM):   end;
2284307   +
2284308   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2284309   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2284310   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2284311   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2284312   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2284313   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2284314   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2284315   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2284316   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2284317   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2284318   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2284319   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2284320   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2284321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284323   +end;
MPRINT(EM_DIAGRAM):   end;
2284324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284325   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2284326   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2284327   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284328   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2284329   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2284330   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2284331   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2284332   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2284333   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284334   +         end;
MPRINT(EM_DIAGRAM):   end;
2284335   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2284336   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2284337   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2284338   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284339   +            end;
MPRINT(EM_DIAGRAM):   end;
2284340   +         end;
MPRINT(EM_DIAGRAM):   end;
2284341   +      end;
MPRINT(EM_DIAGRAM):   end;
2284342   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2284343   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2284344   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2284345   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284346   +         end;
MPRINT(EM_DIAGRAM):   end;
2284347   +      end;
MPRINT(EM_DIAGRAM):   end;
2284348   +   end;
MPRINT(EM_DIAGRAM):   end;
2284349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284350   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2284351   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2284352   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284353   +      end;
MPRINT(EM_DIAGRAM):   end;
2284354   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2284355   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2284356   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2284357   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2284358   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2284359   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2284360   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284361   +         end;
MPRINT(EM_DIAGRAM):   end;
2284362   +      end;
MPRINT(EM_DIAGRAM):   end;
2284363   +   end;
MPRINT(EM_DIAGRAM):   end;
2284364   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2284365   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2284366   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2284367   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2284368   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2284369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284371   +   end;
MPRINT(EM_DIAGRAM):   end;
2284372   +end;
MPRINT(EM_DIAGRAM):   end;
2284373   +
2284374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284375   +*** Checking missing input Interval
2284376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2284377   +
2284378   +IF NMISS(
2284379   +   AcceptedCmpTotal ,
2284380   +   Age ,
2284381   +   Frq ,
2284382   +   Income ,
2284383   +   Kidhome ,
2284384   +   Mnt ,
2284385   +   MntFishProducts ,
2284386   +   MntFruits ,
2284387   +   MntGoldProds ,
2284388   +   MntMeatProducts ,
2284389   +   MntSweetProducts ,
2284390   +   MntWines ,
2284391   +   MonthsAsCustomer ,
2284392   +   NumCatalogPurchases ,
2284393   +   NumDealsPurchases ,
2284394   +   NumDistPurchases ,
2284395   +   NumStorePurchases ,
2284396   +   NumWebPurchases ,
2284397   +   NumWebVisitsMonth ,
2284398   +   RFMstat ,
2284399   +   RMntFrq ,
2284400   +   Recency ,
2284401   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2284402   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2284403   +
2284404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284405   +END;
MPRINT(EM_DIAGRAM):   END;
2284406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284407   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2284408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284409   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284410   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2284411   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2284412   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2284413   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2284414   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2284415   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2284416   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2284417   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2284418   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2284419   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2284420   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2284421   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2284422   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2284423   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2284424   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2284425   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2284426   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2284427   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2284428   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2284429   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2284430   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2284431   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2284432   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2284433   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2284434   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2284435   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2284436   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2284437   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2284438   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2284439   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2284440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2284441   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2284442   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2284443   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2284444   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2284445   +END;
MPRINT(EM_DIAGRAM):   END;
2284446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284447   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2284448   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2284449   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2284450   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2284451   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2284452   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2284453   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2284454   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2284455   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2284456   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2284457   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2284458   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2284459   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2284460   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2284461   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2284462   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2284463   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2284464   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2284465   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2284466   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2284467   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2284468   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2284469   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2284470   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2284471   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2284472   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2284473   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2284474   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2284475   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2284476   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2284477   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2284478   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2284479   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2284480   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2284481   +   ELSE S_NumCatalogPurchases
2284482   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2284483   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2284484   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2284485   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2284486   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2284487   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2284488   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2284489   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2284490   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2284491   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2284492   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2284493   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2284494   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2284495   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2284496   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2284497   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2284498   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2284499   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2284500   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2284501   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2284502   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2284503   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2284504   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2284505   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2284506   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2284507   +END;
MPRINT(EM_DIAGRAM):   END;
2284508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284509   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2284510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284512   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2284513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284515   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2284516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284518   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2284519   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2284520   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2284521   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2284522   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2284523   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2284524   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2284525   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2284526   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2284527   +          +     0.09634439105648 * S_NumDealsPurchases
2284528   +          +     -0.2727389064287 * S_NumDistPurchases
2284529   +          +    -0.14179871978162 * S_NumStorePurchases
2284530   +          +     0.11008049559527 * S_NumWebPurchases
2284531   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2284532   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2284533   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2284534   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 *
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 *
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts +
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 *
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines +
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases +
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases +
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases +
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 *
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2284535   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2284536   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2284537   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2284538   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2284539   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2284540   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2284541   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2284542   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2284543   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2284544   +          +     0.15835936877168 * S_NumDealsPurchases
2284545   +          +     0.04229992769587 * S_NumDistPurchases
2284546   +          +    -0.04051362547639 * S_NumStorePurchases
2284547   +          +    -0.01791546488406 * S_NumWebPurchases
2284548   +          +     0.28833008597045 * S_NumWebVisitsMonth
2284549   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2284550   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2284551   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 *
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome +
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 *
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts +
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 *
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 *
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 *
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 *
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq +
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2284552   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2284553   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2284554   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2284555   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2284556   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 *
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 +
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 *
HigherEducationBinary0 ;
2284557   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2284558   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2284559   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2284560   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2284561   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 *
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 +
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 *
HigherEducationBinary0 ;
2284562   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2284563   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2284564   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2284565   +          +     -0.0504367274898 * Marital_StatusDivorced
2284566   +          +     0.28345714390306 * Marital_StatusMarried
2284567   +          +     -0.2012923780435 * Marital_StatusSingle
2284568   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle +
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 *
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 *
Marital_StatusTogether ;
2284569   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2284570   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2284571   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2284572   +          +     0.06828937261262 * Marital_StatusDivorced
2284573   +          +     -0.1520862543536 * Marital_StatusMarried
2284574   +          +      0.1392808464716 * Marital_StatusSingle
2284575   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 *
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 *
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 *
Marital_StatusTogether ;
2284576   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2284577   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2284578   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2284579   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2284580   +END;
MPRINT(EM_DIAGRAM):   END;
2284581   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284582   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2284583   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2284584   +END;
MPRINT(EM_DIAGRAM):   END;
2284585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284586   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2284587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284588   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284589   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2284590   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2284591   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2284592   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2284593   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2284594   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2284595   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2284596   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2284597   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2284598   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2284599   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2284600   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2284601   +END;
MPRINT(EM_DIAGRAM):   END;
2284602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284603   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2284604   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2284605   +END;
MPRINT(EM_DIAGRAM):   END;
2284606   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2284607   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2284608   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2284609   +END;
MPRINT(EM_DIAGRAM):   END;
2284610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284611   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2284612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284613   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2284614   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2284615   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2284616   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2284617   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2284618   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2284619   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2284620   +END;
MPRINT(EM_DIAGRAM):   END;
2284621   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284622   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2284623   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284624   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284625    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2284626    quit;
2284627    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2284628    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2284629    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2284630    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2284631    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2284632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284633    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2284634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284636    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2284637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284639    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284640    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2284641    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2284642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284643    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2284644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2284645    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2284646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284649    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2284650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284651    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284652    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2284653    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2284653  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
2284654    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284655    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2284656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284657    filename _pref
2284657  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2284658    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2284659    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2284660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284661   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2284662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284663   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2284664   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2284665   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284666    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2284667    quit;
2284668    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2284669    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2284670    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2284671    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2284672    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2284673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284674    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2284675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284677    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2284678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284679    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284680    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284681    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2284682    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2284683    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284684    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2284685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2284686    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2284687    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284689    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284690    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2284691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284692    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284693    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2284694    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2284694  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2284695    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284696    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2284697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284698    filename _pref
2284698  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2284699    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2284700    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2284701   +
2284702   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2284703   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2284703  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2284704   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2284705   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2284706   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2284707   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2284708   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284709    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2284710    quit;
2284711    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2284712    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2284713    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2284714    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2284715    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2284716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284717    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2284718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284720    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2284721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284724    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2284725    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2284726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284727    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2284728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284729    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2284730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284732    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284733    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2284734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284735    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284736    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2284737    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2284737  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2284738    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284739    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2284740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284741    filename _pref
2284741  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2284742    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2284743    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2284744   +
2284745   +
2284746   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2284747   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2284748   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2284749   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2284750   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2284751   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284752   +
2284753   +
2284754   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2284755   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2284756   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2284757   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2284758   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2284759   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284760   +
2284761   +
2284762   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2284763   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2284764   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2284765   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2284766   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2284767   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284768   +
2284769   +
2284770   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2284771   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2284772   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2284773   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2284774   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2284775   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284776   +
2284777   +
2284778   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2284779   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2284780   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2284781   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2284782   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2284783   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284784   +
2284785   +
2284786   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2284787   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2284788   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2284789   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2284790   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2284791   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284792   +
2284793   +
2284794   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2284795   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2284796   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2284797   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2284798   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2284799   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284800   +
2284801   +
2284802   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2284803   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2284804   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2284805   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2284806   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2284807   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2284808   +if
2284809   +_FILTERNORM1 not in ( '.')
2284810   + and
2284811   +_FILTERNORM2 not in ( '.')
2284812   + and
2284813   +_FILTERNORM3 not in ( '.')
2284814   + and
2284815   +_FILTERNORM4 not in ( '.')
2284816   + and
2284817   +_FILTERNORM5 not in ( '.')
2284818   + and
2284819   +_FILTERNORM6 not in ( '.')
2284820   + and
2284821   +_FILTERNORM7 not in ( ' ')
2284822   + and
2284823   +_FILTERNORM8 not in ( ' ')
2284824   +and
2284825   +( Dt_Customer ne .)
2284826   +and ( Income ne . and (Income<=107000))
2284827   +and ( Kidhome ne .)
2284828   +and ( MntFishProducts ne .)
2284829   +and ( MntFruits ne .)
2284830   +and ( MntGoldProds ne .)
2284831   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2284832   +and ( MntSweetProducts ne .)
2284833   +and ( MntWines ne .)
2284834   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2284835   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2284836   +and ( NumStorePurchases ne .)
2284837   +and ( NumWebPurchases ne .)
2284838   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2284839   +and ( Recency ne .)
2284840   +and ( Teenhome ne .)
2284841   +and ( Year_Birth ne .)
2284842   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2284843   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2284844   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2284845   +end;
MPRINT(EM_DIAGRAM):   end;
2284846   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2284847   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2284848    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2284849    quit;
2284850    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2284851    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2284852    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2284853    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2284854    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2284855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284856    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2284857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284859    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2284860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284862    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284863    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2284864    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2284865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284866    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2284867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2284868    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2284869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284871    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2284872    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2284873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2284874    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2284876    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2284876  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2284877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284878    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2284879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284880    %macro varDept(fcmpdata=,id=);
2284881    %global nobs&id scoreFlag&id;
2284882    %let scoreFlag&id = 0;
2284883    %if &id=1 or ^&fcmpStart %then %do;
2284884    proc sort data=&fcmpdata out=_temp&id nodupkey;
2284885    by NAME;
2284886    where id=&id and LHS in( %let j=1;
2284887    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2284888    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2284889    "&var" %let j = %eval(&j+1);
2284890    %end;
2284891    );
2284892    run;
2284893    %let dsid = %sysfunc(open(_temp&id));
2284894    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2284895    %let dsid = %sysfunc(close(&dsid));
2284896    %if &&nobs&id %then %do;
2284897    %let scoreFlag&id = 1;
2284898    %let fcmpStart = 1;
2284899    %end;
2284900    %else %let fcmpStart = 0;
2284901    %end;
2284902    %else %do;
2284903    proc sort data=&fcmpdata out=_tempid;
2284904    where id=&id;
2284905    by LHS;
2284906    run;
2284907    %let dsid = %sysfunc(open(_tempid));
2284908    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2284909    %let dsid = %sysfunc(close(&dsid));
2284910    %if ^&&nobs&id %then %do;
2284911    proc datasets lib=work nolist;
2284912    delete _tempid;
2284913    run;
2284914    quit;
2284915    %end;
2284916    %else %do;
2284917    data _tempAll;
2284918    set %let j=%eval(&id-1);
2284919    %do x=1 %to &j;
2284920    %if &&nobs&x %then %do;
2284921    _temp&x %end;
2284922    %end;
2284923    ;
2284924    run;
2284925    proc sql;
2284926    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2284926  ! work._tempid p2 where p.name=p2.lhs;
2284927    quit;
2284928    data _temp&id;
2284929    set _temp&id;
2284930    where LHS ne '' and NAME ne '' and Node ne '';
2284931    run;
2284932    proc datasets lib=work nolist;
2284933    delete _tempAll;
2284934    run;
2284935    %let dsid = %sysfunc(open(_temp&id));
2284936    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2284937    %let dsid = %sysfunc(close(&dsid));
2284938    %if ^&&nobs&id %then %do;
2284939    proc datasets lib=work nolist;
2284940    delete _temp&id;
2284941    run;
2284942    quit;
2284943    %end;
2284944    %else %do;
2284945    %let scoreFlag&id = 1;
2284946    data _temp&id;
2284947    set _temp&id;
2284948    where LHS ne NAME and node ne '';
2284949    run;
2284950    %let dsid = %sysfunc(open(_temp&id));
2284951    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2284952    %let dsid = %sysfunc(close(&dsid));
2284953    %if ^&&nobs&id %then %do;
2284954    proc datasets lib=work nolist;
2284955    delete _temp&id;
2284956    run;
2284957    quit;
2284958    %end;
2284959    %else %do;
2284960    proc sort data=_temp&id nodupkey;
2284961    by LHS NAME;
2284962    run;
2284963    %end;
2284964    %end;
2284965    %end;
2284966    %end;
2284967    %mend varDept;
2284968    %macro optCode(outdata=fcmpdata);
2284969    %global fcmpStart;
2284970    %let fcmpStart = 0;
2284971    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2284972    %let NumNodes=9;
2284973    %do k=1 %to &NumNodes;
2284974    %vardept(fcmpdata=&outdata, id=&k);
2284975    %end;
2284976    %mend optCode;
2284977    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2284978    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2284979    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2284980    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2284981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284982    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2284983    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2284984    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2284985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2284986    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2284987    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2284987  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2284988    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284989    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2284990    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2284991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2284992    filename _pref
2284992  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
2284993    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2284994    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
2284995   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2284996   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2284997   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2284998   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2284999   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2285000   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2285001   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2285002   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2285003   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2285004   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2285005   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2285006   +LENGTH _WARN_ $4
2285007   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2285008   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2285009   +
2285010   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2285011   +
2285012   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2285013   +
2285014   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2285015   +
2285016   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2285017   +
2285018   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2285019   +
2285020   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2285021   +
2285022   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2285023   +
2285024   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2285025   +
2285026   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2285027   +
2285028   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2285029   +
2285030   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2285031   +
2285032   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2285033   +
2285034   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2285035   +
2285036   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2285037   +
2285038   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2285039   +
2285040   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2285041   +
2285042   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2285043   +
2285044   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2285045   +
2285046   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2285047   +
2285048   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2285049   +
2285050   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2285051   +
2285052   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2285053   +
2285054   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2285055   +
2285056   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2285057   +
2285058   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2285059   +
2285060   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2285061   +
2285062   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2285063   +
2285064   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2285065   +
2285066   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2285067   +
2285068   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2285069   +
2285070   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2285071   +
2285072   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2285073   +
2285074   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2285075   +
2285076   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2285077   +
2285078   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2285079   +
2285080   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2285081   +
2285082   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2285083   +
2285084   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2285085   +
2285086   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2285087   +
2285088   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2285089   +
2285090   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2285091   +
2285092   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2285093   +
2285094   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2285095   +
2285096   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2285097   +
2285098   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2285099   +
2285100   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2285101   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2285102   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2285103   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2285104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285106   +end;
MPRINT(EM_DIAGRAM):   end;
2285107   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285109   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2285110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285112   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2285113   +   end;
MPRINT(EM_DIAGRAM):   end;
2285114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285115   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2285116   +   end;
MPRINT(EM_DIAGRAM):   end;
2285117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285118   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2285119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285121   +   end;
MPRINT(EM_DIAGRAM):   end;
2285122   +end;
MPRINT(EM_DIAGRAM):   end;
2285123   +
2285124   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2285125   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2285126   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2285127   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2285128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285130   +end;
MPRINT(EM_DIAGRAM):   end;
2285131   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285133   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2285134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285136   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2285137   +   end;
MPRINT(EM_DIAGRAM):   end;
2285138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285139   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2285140   +   end;
MPRINT(EM_DIAGRAM):   end;
2285141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285142   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2285143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285145   +   end;
MPRINT(EM_DIAGRAM):   end;
2285146   +end;
MPRINT(EM_DIAGRAM):   end;
2285147   +
2285148   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2285149   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2285150   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2285151   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2285152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285154   +end;
MPRINT(EM_DIAGRAM):   end;
2285155   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285157   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2285158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285160   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2285161   +   end;
MPRINT(EM_DIAGRAM):   end;
2285162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285163   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2285164   +   end;
MPRINT(EM_DIAGRAM):   end;
2285165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285166   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2285167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285169   +   end;
MPRINT(EM_DIAGRAM):   end;
2285170   +end;
MPRINT(EM_DIAGRAM):   end;
2285171   +
2285172   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2285173   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2285174   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2285175   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2285176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285178   +end;
MPRINT(EM_DIAGRAM):   end;
2285179   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285181   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2285182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285184   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2285185   +   end;
MPRINT(EM_DIAGRAM):   end;
2285186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285187   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2285188   +   end;
MPRINT(EM_DIAGRAM):   end;
2285189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285190   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2285191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285193   +   end;
MPRINT(EM_DIAGRAM):   end;
2285194   +end;
MPRINT(EM_DIAGRAM):   end;
2285195   +
2285196   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2285197   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2285198   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2285199   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2285200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285202   +end;
MPRINT(EM_DIAGRAM):   end;
2285203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285205   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2285206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285208   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2285209   +   end;
MPRINT(EM_DIAGRAM):   end;
2285210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285211   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2285212   +   end;
MPRINT(EM_DIAGRAM):   end;
2285213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285214   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2285215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285217   +   end;
MPRINT(EM_DIAGRAM):   end;
2285218   +end;
MPRINT(EM_DIAGRAM):   end;
2285219   +
2285220   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2285221   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2285222   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2285223   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2285224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285226   +end;
MPRINT(EM_DIAGRAM):   end;
2285227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285229   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2285230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285232   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2285233   +   end;
MPRINT(EM_DIAGRAM):   end;
2285234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285235   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2285236   +   end;
MPRINT(EM_DIAGRAM):   end;
2285237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285238   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2285239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285241   +   end;
MPRINT(EM_DIAGRAM):   end;
2285242   +end;
MPRINT(EM_DIAGRAM):   end;
2285243   +
2285244   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2285245   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2285246   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2285247   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2285248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285250   +end;
MPRINT(EM_DIAGRAM):   end;
2285251   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285253   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2285254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285255   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2285256   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2285257   +   end;
MPRINT(EM_DIAGRAM):   end;
2285258   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2285259   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2285260   +   end;
MPRINT(EM_DIAGRAM):   end;
2285261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285262   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2285263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285265   +   end;
MPRINT(EM_DIAGRAM):   end;
2285266   +end;
MPRINT(EM_DIAGRAM):   end;
2285267   +
2285268   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2285269   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2285270   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2285271   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2285272   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2285273   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2285274   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2285275   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2285276   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2285277   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2285278   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2285279   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2285280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285282   +end;
MPRINT(EM_DIAGRAM):   end;
2285283   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285284   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2285285   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2285286   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285287   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2285288   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2285289   +   end;
MPRINT(EM_DIAGRAM):   end;
2285290   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2285291   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2285292   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2285293   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2285294   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2285295   +   end;
MPRINT(EM_DIAGRAM):   end;
2285296   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2285297   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2285298   +   end;
MPRINT(EM_DIAGRAM):   end;
2285299   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2285300   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2285301   +   end;
MPRINT(EM_DIAGRAM):   end;
2285302   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2285303   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2285304   +   end;
MPRINT(EM_DIAGRAM):   end;
2285305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285306   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2285307   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2285308   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2285309   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2285310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285312   +   end;
MPRINT(EM_DIAGRAM):   end;
2285313   +end;
MPRINT(EM_DIAGRAM):   end;
2285314   +
2285315   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2285316   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2285317   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2285318   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2285319   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2285320   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2285321   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2285322   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2285323   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2285324   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2285325   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2285326   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2285327   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2285328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285330   +end;
MPRINT(EM_DIAGRAM):   end;
2285331   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285332   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2285333   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2285334   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285335   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2285336   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2285337   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2285338   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2285339   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2285340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285341   +         end;
MPRINT(EM_DIAGRAM):   end;
2285342   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2285343   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2285344   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2285345   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285346   +            end;
MPRINT(EM_DIAGRAM):   end;
2285347   +         end;
MPRINT(EM_DIAGRAM):   end;
2285348   +      end;
MPRINT(EM_DIAGRAM):   end;
2285349   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2285350   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2285351   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2285352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285353   +         end;
MPRINT(EM_DIAGRAM):   end;
2285354   +      end;
MPRINT(EM_DIAGRAM):   end;
2285355   +   end;
MPRINT(EM_DIAGRAM):   end;
2285356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285357   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2285358   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2285359   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285360   +      end;
MPRINT(EM_DIAGRAM):   end;
2285361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2285362   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2285363   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2285364   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2285365   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2285366   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2285367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285368   +         end;
MPRINT(EM_DIAGRAM):   end;
2285369   +      end;
MPRINT(EM_DIAGRAM):   end;
2285370   +   end;
MPRINT(EM_DIAGRAM):   end;
2285371   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2285372   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2285373   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2285374   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2285375   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2285376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285378   +   end;
MPRINT(EM_DIAGRAM):   end;
2285379   +end;
MPRINT(EM_DIAGRAM):   end;
2285380   +
2285381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285382   +*** Checking missing input Interval
2285383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2285384   +
2285385   +IF NMISS(
2285386   +   AcceptedCmpTotal ,
2285387   +   Age ,
2285388   +   Frq ,
2285389   +   Income ,
2285390   +   Kidhome ,
2285391   +   Mnt ,
2285392   +   MntFishProducts ,
2285393   +   MntFruits ,
2285394   +   MntGoldProds ,
2285395   +   MntMeatProducts ,
2285396   +   MntSweetProducts ,
2285397   +   MntWines ,
2285398   +   MonthsAsCustomer ,
2285399   +   NumCatalogPurchases ,
2285400   +   NumDealsPurchases ,
2285401   +   NumDistPurchases ,
2285402   +   NumStorePurchases ,
2285403   +   NumWebPurchases ,
2285404   +   NumWebVisitsMonth ,
2285405   +   RFMstat ,
2285406   +   RMntFrq ,
2285407   +   Recency ,
2285408   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2285409   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2285410   +
2285411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285412   +END;
MPRINT(EM_DIAGRAM):   END;
2285413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285414   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2285415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285416   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285417   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2285418   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2285419   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2285420   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2285421   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2285422   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2285423   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2285424   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2285425   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2285426   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2285427   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2285428   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2285429   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2285430   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2285431   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2285432   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2285433   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2285434   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2285435   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2285436   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2285437   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2285438   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2285439   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2285440   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2285441   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2285442   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2285443   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2285444   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2285445   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2285446   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2285447   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2285448   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2285449   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2285450   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2285451   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2285452   +END;
MPRINT(EM_DIAGRAM):   END;
2285453   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285454   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2285455   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2285456   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2285457   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2285458   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2285459   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2285460   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2285461   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2285462   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2285463   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2285464   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2285465   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2285466   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2285467   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2285468   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2285469   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2285470   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2285471   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2285472   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2285473   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2285474   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2285475   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2285476   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2285477   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2285478   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2285479   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2285480   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2285481   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2285482   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2285483   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2285484   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2285485   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2285486   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2285487   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2285488   +   ELSE S_NumCatalogPurchases
2285489   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2285490   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2285491   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2285492   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2285493   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2285494   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2285495   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2285496   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2285497   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2285498   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2285499   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2285500   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2285501   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2285502   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2285503   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2285504   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2285505   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2285506   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2285507   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2285508   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2285509   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2285510   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2285511   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2285512   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2285513   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2285514   +END;
MPRINT(EM_DIAGRAM):   END;
2285515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285516   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2285517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285519   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2285520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285522   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2285523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285524   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285525   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2285526   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2285527   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2285528   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2285529   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2285530   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2285531   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2285532   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2285533   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2285534   +          +     0.10832450413796 * S_NumDealsPurchases
2285535   +          +     0.17985750884741 * S_NumDistPurchases
2285536   +          +     0.45794093255577 * S_NumStorePurchases
2285537   +          +     0.37000538836801 * S_NumWebPurchases
2285538   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2285539   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2285540   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2285541   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 *
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 *
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts +
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 *
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines +
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases +
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases +
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases +
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 *
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2285542   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2285543   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2285544   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2285545   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2285546   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2285547   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2285548   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2285549   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2285550   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2285551   +          +    -1.14287651740452 * S_NumDealsPurchases
2285552   +          +    -0.03763726936438 * S_NumDistPurchases
2285553   +          +     0.87545461519128 * S_NumStorePurchases
2285554   +          +     1.40430622837706 * S_NumWebPurchases
2285555   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2285556   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2285557   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2285558   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome +
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 *
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts +
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 *
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 *
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 *
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 *
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq +
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2285559   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2285560   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2285561   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2285562   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2285563   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 +
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 *
HigherEducationBinary0 ;
2285564   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2285565   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2285566   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2285567   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2285568   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 *
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 +
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 *
HigherEducationBinary0 ;
2285569   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2285570   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2285571   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2285572   +          +    -0.73074769535078 * Marital_StatusDivorced
2285573   +          +     1.30761047614007 * Marital_StatusMarried
2285574   +          +    -0.89398481770909 * Marital_StatusSingle
2285575   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle +
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation +
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced +
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle +
1.23033906473946 * Marital_StatusTogether ;
2285576   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2285577   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2285578   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2285579   +          +     0.18252613160517 * Marital_StatusDivorced
2285580   +          +     0.12434140806967 * Marital_StatusMarried
2285581   +          +    -0.30167854485292 * Marital_StatusSingle
2285582   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle +
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation +
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced +
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle +
0.17039487484346 * Marital_StatusTogether ;
2285583   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2285584   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2285585   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2285586   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2285587   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2285588   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2285589   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2285590   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2285591   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2285592   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2285593   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2285594   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2285595   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2285596   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2285597   +END;
MPRINT(EM_DIAGRAM):   END;
2285598   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285599   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2285600   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2285601   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2285602   +END;
MPRINT(EM_DIAGRAM):   END;
2285603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285604   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2285605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285606   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285607   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2285608   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 +
22.9468369203579 * H1x1_3 ;
2285609   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2285610   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2285611   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2285612   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2285613   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2285614   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2285615   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2285616   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2285617   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2285618   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2285619   +END;
MPRINT(EM_DIAGRAM):   END;
2285620   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285621   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2285622   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2285623   +END;
MPRINT(EM_DIAGRAM):   END;
2285624   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2285625   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2285626   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2285627   +END;
MPRINT(EM_DIAGRAM):   END;
2285628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285629   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2285630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285631   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2285632   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2285633   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2285634   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2285635   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2285636   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2285637   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2285638   +END;
MPRINT(EM_DIAGRAM):   END;
2285639   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285640   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2285641   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285642   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2285643    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2285644    quit;
2285645    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2285646    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2285647    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2285648    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
2285649    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2285650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285651    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2285652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285654    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME
CREATOR);
2285655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285658    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2285659    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2285660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285661    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
2285662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2285663    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2285664    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.28 seconds
      cpu time            0.00 seconds
 
 
2285666    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285667    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2285668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285669    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285670    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2285671    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2285671  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1459 rows and 5 columns.
 
2285672    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285673    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2285674    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1459 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1459 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285675    filename _pref
2285675  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2285676    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2285677    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2285678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285679   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2285680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285681   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2285682   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2285683   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2285684    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2285685    quit;
2285686    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2285687    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2285688    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2285689    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2285690    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2285691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285692    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2285693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285695    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2285696    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285698    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285699    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2285700    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2285701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285702    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2285703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2285704    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2285705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285707    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285708    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2285709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285710    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285711    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2285712    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2285712  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2285713    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285714    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2285715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285716    filename _pref
2285716  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2285717    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2285718    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2285719   +
2285720   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2285721   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2285721  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2285722   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2285723   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2285724   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2285725   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2285726   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2285727    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2285728    quit;
2285729    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2285730    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2285731    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2285732    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2285733    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2285734    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285735    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2285736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285738    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2285739    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285741    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285742    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2285743    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2285744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285745    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2285746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285747    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2285748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285750    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285751    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2285752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285753    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285754    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2285755    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2285755  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2285756    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285757    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2285758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1502 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285759    filename _pref
2285759  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2285760    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2285761    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2285762   +
2285763   +
2285764   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2285765   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2285766   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2285767   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2285768   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2285769   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285770   +
2285771   +
2285772   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2285773   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2285774   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2285775   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2285776   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2285777   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285778   +
2285779   +
2285780   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2285781   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2285782   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2285783   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2285784   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2285785   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285786   +
2285787   +
2285788   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2285789   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2285790   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2285791   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2285792   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2285793   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285794   +
2285795   +
2285796   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2285797   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2285798   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2285799   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2285800   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2285801   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285802   +
2285803   +
2285804   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2285805   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2285806   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2285807   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2285808   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2285809   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285810   +
2285811   +
2285812   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2285813   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2285814   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2285815   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2285816   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2285817   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285818   +
2285819   +
2285820   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2285821   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2285822   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2285823   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2285824   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2285825   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2285826   +if
2285827   +_FILTERNORM1 not in ( '.')
2285828   + and
2285829   +_FILTERNORM2 not in ( '.')
2285830   + and
2285831   +_FILTERNORM3 not in ( '.')
2285832   + and
2285833   +_FILTERNORM4 not in ( '.')
2285834   + and
2285835   +_FILTERNORM5 not in ( '.')
2285836   + and
2285837   +_FILTERNORM6 not in ( '.')
2285838   + and
2285839   +_FILTERNORM7 not in ( ' ')
2285840   + and
2285841   +_FILTERNORM8 not in ( ' ')
2285842   +and
2285843   +( Dt_Customer ne .)
2285844   +and ( Income ne . and (Income<=107000))
2285845   +and ( Kidhome ne .)
2285846   +and ( MntFishProducts ne .)
2285847   +and ( MntFruits ne .)
2285848   +and ( MntGoldProds ne .)
2285849   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2285850   +and ( MntSweetProducts ne .)
2285851   +and ( MntWines ne .)
2285852   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2285853   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2285854   +and ( NumStorePurchases ne .)
2285855   +and ( NumWebPurchases ne .)
2285856   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2285857   +and ( Recency ne .)
2285858   +and ( Teenhome ne .)
2285859   +and ( Year_Birth ne .)
2285860   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2285861   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2285862   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2285863   +end;
MPRINT(EM_DIAGRAM):   end;
2285864   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2285865   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2285866    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2285867    quit;
2285868    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2285869    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2285870    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2285871    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2285872    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2285873    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285874    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2285875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285877    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2285878    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285880    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285881    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2285882    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2285883    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285884    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2285885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
2285886    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2285887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285888    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285889    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2285890    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2285891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2285892    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285893    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2285894    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2285894  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2285895    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2285896    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2285897    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1568 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2285898    %macro varDept(fcmpdata=,id=);
2285899    %global nobs&id scoreFlag&id;
2285900    %let scoreFlag&id = 0;
2285901    %if &id=1 or ^&fcmpStart %then %do;
2285902    proc sort data=&fcmpdata out=_temp&id nodupkey;
2285903    by NAME;
2285904    where id=&id and LHS in( %let j=1;
2285905    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2285906    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2285907    "&var" %let j = %eval(&j+1);
2285908    %end;
2285909    );
2285910    run;
2285911    %let dsid = %sysfunc(open(_temp&id));
2285912    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2285913    %let dsid = %sysfunc(close(&dsid));
2285914    %if &&nobs&id %then %do;
2285915    %let scoreFlag&id = 1;
2285916    %let fcmpStart = 1;
2285917    %end;
2285918    %else %let fcmpStart = 0;
2285919    %end;
2285920    %else %do;
2285921    proc sort data=&fcmpdata out=_tempid;
2285922    where id=&id;
2285923    by LHS;
2285924    run;
2285925    %let dsid = %sysfunc(open(_tempid));
2285926    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2285927    %let dsid = %sysfunc(close(&dsid));
2285928    %if ^&&nobs&id %then %do;
2285929    proc datasets lib=work nolist;
2285930    delete _tempid;
2285931    run;
2285932    quit;
2285933    %end;
2285934    %else %do;
2285935    data _tempAll;
2285936    set %let j=%eval(&id-1);
2285937    %do x=1 %to &j;
2285938    %if &&nobs&x %then %do;
2285939    _temp&x %end;
2285940    %end;
2285941    ;
2285942    run;
2285943    proc sql;
2285944    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2285944  ! work._tempid p2 where p.name=p2.lhs;
2285945    quit;
2285946    data _temp&id;
2285947    set _temp&id;
2285948    where LHS ne '' and NAME ne '' and Node ne '';
2285949    run;
2285950    proc datasets lib=work nolist;
2285951    delete _tempAll;
2285952    run;
2285953    %let dsid = %sysfunc(open(_temp&id));
2285954    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2285955    %let dsid = %sysfunc(close(&dsid));
2285956    %if ^&&nobs&id %then %do;
2285957    proc datasets lib=work nolist;
2285958    delete _temp&id;
2285959    run;
2285960    quit;
2285961    %end;
2285962    %else %do;
2285963    %let scoreFlag&id = 1;
2285964    data _temp&id;
2285965    set _temp&id;
2285966    where LHS ne NAME and node ne '';
2285967    run;
2285968    %let dsid = %sysfunc(open(_temp&id));
2285969    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2285970    %let dsid = %sysfunc(close(&dsid));
2285971    %if ^&&nobs&id %then %do;
2285972    proc datasets lib=work nolist;
2285973    delete _temp&id;
2285974    run;
2285975    quit;
2285976    %end;
2285977    %else %do;
2285978    proc sort data=_temp&id nodupkey;
2285979    by LHS NAME;
2285980    run;
2285981    %end;
2285982    %end;
2285983    %end;
2285984    %end;
2285985    %mend varDept;
2285986    %macro optCode(outdata=fcmpdata);
2285987    %global fcmpStart;
2285988    %let fcmpStart = 0;
2285989    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2285990    %let NumNodes=9;
2285991    %do k=1 %to &NumNodes;
2285992    %vardept(fcmpdata=&outdata, id=&k);
2285993    %end;
2285994    %mend optCode;
2285995    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 143 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 106 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2285996    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2285997    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2285998    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2285999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2286000    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2286001    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2286002    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2286003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2286004    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2286005    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2286005  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2286006    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2286007    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2286008    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2286009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2286010    filename _pref
2286010  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2286011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2286012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2286013   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2286014   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2286015   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2286016   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2286017   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2286018   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2286019   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2286020   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2286021   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2286022   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2286023   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2286024   +LENGTH _WARN_ $4
2286025   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2286026   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2286027   +
2286028   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2286029   +
2286030   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2286031   +
2286032   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2286033   +
2286034   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2286035   +
2286036   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2286037   +
2286038   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2286039   +
2286040   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2286041   +
2286042   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2286043   +
2286044   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2286045   +
2286046   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2286047   +
2286048   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2286049   +
2286050   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2286051   +
2286052   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2286053   +
2286054   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2286055   +
2286056   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2286057   +
2286058   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2286059   +
2286060   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2286061   +
2286062   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2286063   +
2286064   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2286065   +
2286066   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2286067   +
2286068   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2286069   +
2286070   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2286071   +
2286072   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2286073   +
2286074   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2286075   +
2286076   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2286077   +
2286078   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2286079   +
2286080   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2286081   +
2286082   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2286083   +
2286084   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2286085   +
2286086   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2286087   +
2286088   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2286089   +
2286090   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2286091   +
2286092   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2286093   +
2286094   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2286095   +
2286096   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2286097   +
2286098   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2286099   +
2286100   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2286101   +
2286102   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2286103   +
2286104   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2286105   +
2286106   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2286107   +
2286108   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2286109   +
2286110   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2286111   +
2286112   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2286113   +
2286114   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2286115   +
2286116   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2286117   +
2286118   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2286119   +
2286120   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2286121   +
2286122   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2286123   +
2286124   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2286125   +
2286126   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2286127   +
2286128   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2286129   +
2286130   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2286131   +
2286132   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2286133   +
2286134   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2286135   +
2286136   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2286137   +
2286138   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2286139   +
2286140   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2286141   +
2286142   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2286143   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2286144   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2286145   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2286146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286148   +end;
MPRINT(EM_DIAGRAM):   end;
2286149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286151   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2286152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286154   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2286155   +   end;
MPRINT(EM_DIAGRAM):   end;
2286156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286157   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2286158   +   end;
MPRINT(EM_DIAGRAM):   end;
2286159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286160   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2286161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286163   +   end;
MPRINT(EM_DIAGRAM):   end;
2286164   +end;
MPRINT(EM_DIAGRAM):   end;
2286165   +
2286166   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2286167   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2286168   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2286169   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2286170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286172   +end;
MPRINT(EM_DIAGRAM):   end;
2286173   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286175   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2286176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286178   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2286179   +   end;
MPRINT(EM_DIAGRAM):   end;
2286180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286181   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2286182   +   end;
MPRINT(EM_DIAGRAM):   end;
2286183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286184   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2286185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286187   +   end;
MPRINT(EM_DIAGRAM):   end;
2286188   +end;
MPRINT(EM_DIAGRAM):   end;
2286189   +
2286190   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2286191   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2286192   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2286193   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2286194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286196   +end;
MPRINT(EM_DIAGRAM):   end;
2286197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286199   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2286200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286202   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2286203   +   end;
MPRINT(EM_DIAGRAM):   end;
2286204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286205   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2286206   +   end;
MPRINT(EM_DIAGRAM):   end;
2286207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286208   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2286209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286211   +   end;
MPRINT(EM_DIAGRAM):   end;
2286212   +end;
MPRINT(EM_DIAGRAM):   end;
2286213   +
2286214   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2286215   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2286216   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2286217   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2286218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286220   +end;
MPRINT(EM_DIAGRAM):   end;
2286221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286223   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2286224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286226   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2286227   +   end;
MPRINT(EM_DIAGRAM):   end;
2286228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286229   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2286230   +   end;
MPRINT(EM_DIAGRAM):   end;
2286231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286232   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2286233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286235   +   end;
MPRINT(EM_DIAGRAM):   end;
2286236   +end;
MPRINT(EM_DIAGRAM):   end;
2286237   +
2286238   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2286239   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2286240   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2286241   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2286242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286244   +end;
MPRINT(EM_DIAGRAM):   end;
2286245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286247   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2286248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286250   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2286251   +   end;
MPRINT(EM_DIAGRAM):   end;
2286252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286253   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2286254   +   end;
MPRINT(EM_DIAGRAM):   end;
2286255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286256   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2286257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286259   +   end;
MPRINT(EM_DIAGRAM):   end;
2286260   +end;
MPRINT(EM_DIAGRAM):   end;
2286261   +
2286262   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2286263   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2286264   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2286265   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2286266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286268   +end;
MPRINT(EM_DIAGRAM):   end;
2286269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286271   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2286272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286274   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2286275   +   end;
MPRINT(EM_DIAGRAM):   end;
2286276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286277   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2286278   +   end;
MPRINT(EM_DIAGRAM):   end;
2286279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286280   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2286281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286283   +   end;
MPRINT(EM_DIAGRAM):   end;
2286284   +end;
MPRINT(EM_DIAGRAM):   end;
2286285   +
2286286   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2286287   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2286288   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2286289   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2286290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286292   +end;
MPRINT(EM_DIAGRAM):   end;
2286293   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286295   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2286296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286297   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2286298   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2286299   +   end;
MPRINT(EM_DIAGRAM):   end;
2286300   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2286301   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2286302   +   end;
MPRINT(EM_DIAGRAM):   end;
2286303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286304   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2286305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286307   +   end;
MPRINT(EM_DIAGRAM):   end;
2286308   +end;
MPRINT(EM_DIAGRAM):   end;
2286309   +
2286310   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2286311   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2286312   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2286313   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2286314   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2286315   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2286316   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2286317   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2286318   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2286319   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2286320   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2286321   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2286322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286324   +end;
MPRINT(EM_DIAGRAM):   end;
2286325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286326   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2286327   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2286328   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286329   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2286330   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2286331   +   end;
MPRINT(EM_DIAGRAM):   end;
2286332   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2286333   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2286334   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2286335   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2286336   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2286337   +   end;
MPRINT(EM_DIAGRAM):   end;
2286338   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2286339   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2286340   +   end;
MPRINT(EM_DIAGRAM):   end;
2286341   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2286342   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2286343   +   end;
MPRINT(EM_DIAGRAM):   end;
2286344   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2286345   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2286346   +   end;
MPRINT(EM_DIAGRAM):   end;
2286347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286348   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2286349   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2286350   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2286351   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2286352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286354   +   end;
MPRINT(EM_DIAGRAM):   end;
2286355   +end;
MPRINT(EM_DIAGRAM):   end;
2286356   +
2286357   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2286358   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2286359   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2286360   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2286361   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2286362   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2286363   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2286364   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2286365   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2286366   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2286367   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2286368   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2286369   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2286370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286372   +end;
MPRINT(EM_DIAGRAM):   end;
2286373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286374   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2286375   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2286376   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286377   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2286378   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2286379   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2286380   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2286381   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2286382   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286383   +         end;
MPRINT(EM_DIAGRAM):   end;
2286384   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2286385   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2286386   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2286387   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286388   +            end;
MPRINT(EM_DIAGRAM):   end;
2286389   +         end;
MPRINT(EM_DIAGRAM):   end;
2286390   +      end;
MPRINT(EM_DIAGRAM):   end;
2286391   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2286392   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2286393   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2286394   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286395   +         end;
MPRINT(EM_DIAGRAM):   end;
2286396   +      end;
MPRINT(EM_DIAGRAM):   end;
2286397   +   end;
MPRINT(EM_DIAGRAM):   end;
2286398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286399   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2286400   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2286401   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286402   +      end;
MPRINT(EM_DIAGRAM):   end;
2286403   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2286404   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2286405   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2286406   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2286407   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2286408   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2286409   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286410   +         end;
MPRINT(EM_DIAGRAM):   end;
2286411   +      end;
MPRINT(EM_DIAGRAM):   end;
2286412   +   end;
MPRINT(EM_DIAGRAM):   end;
2286413   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2286414   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2286415   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2286416   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2286417   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2286418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286420   +   end;
MPRINT(EM_DIAGRAM):   end;
2286421   +end;
MPRINT(EM_DIAGRAM):   end;
2286422   +
2286423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286424   +*** Checking missing input Interval
2286425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2286426   +
2286427   +IF NMISS(
2286428   +   AcceptedCmpTotal ,
2286429   +   Age ,
2286430   +   Frq ,
2286431   +   Income ,
2286432   +   Kidhome ,
2286433   +   Mnt ,
2286434   +   MntFishProducts ,
2286435   +   MntFruits ,
2286436   +   MntGoldProds ,
2286437   +   MntMeatProducts ,
2286438   +   MntSweetProducts ,
2286439   +   MntWines ,
2286440   +   MonthsAsCustomer ,
2286441   +   NumCatalogPurchases ,
2286442   +   NumDealsPurchases ,
2286443   +   NumDistPurchases ,
2286444   +   NumStorePurchases ,
2286445   +   NumWebPurchases ,
2286446   +   NumWebVisitsMonth ,
2286447   +   RFMstat ,
2286448   +   RMntFrq ,
2286449   +   Recency ,
2286450   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2286451   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2286452   +
2286453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286454   +END;
MPRINT(EM_DIAGRAM):   END;
2286455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286456   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2286457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286458   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286459   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2286460   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2286461   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2286462   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2286463   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2286464   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2286465   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2286466   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2286467   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2286468   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2286469   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2286470   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2286471   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2286472   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2286473   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2286474   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2286475   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2286476   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2286477   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2286478   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2286479   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2286480   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2286481   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2286482   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2286483   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2286484   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2286485   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2286486   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2286487   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2286488   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2286489   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2286490   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2286491   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2286492   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2286493   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2286494   +END;
MPRINT(EM_DIAGRAM):   END;
2286495   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286496   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2286497   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2286498   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2286499   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2286500   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2286501   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2286502   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2286503   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2286504   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2286505   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2286506   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2286507   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2286508   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2286509   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2286510   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2286511   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2286512   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2286513   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2286514   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2286515   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2286516   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2286517   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2286518   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2286519   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2286520   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2286521   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2286522   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2286523   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2286524   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2286525   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2286526   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2286527   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2286528   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2286529   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2286530   +   ELSE S_NumCatalogPurchases
2286531   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2286532   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2286533   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2286534   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2286535   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2286536   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2286537   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2286538   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2286539   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2286540   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2286541   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2286542   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2286543   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2286544   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2286545   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2286546   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2286547   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2286548   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2286549   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2286550   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2286551   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2286552   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2286553   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2286554   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2286555   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2286556   +END;
MPRINT(EM_DIAGRAM):   END;
2286557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286558   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2286559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286561   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2286562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286564   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2286565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286566   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286567   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2286568   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2286569   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2286570   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2286571   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2286572   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2286573   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2286574   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2286575   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2286576   +          +      3.4758215776031 * S_NumDealsPurchases
2286577   +          +     0.17094021755289 * S_NumDistPurchases
2286578   +          +    -2.72090095694641 * S_NumStorePurchases
2286579   +          +    -0.31877935826328 * S_NumWebPurchases
2286580   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2286581   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2286582   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2286583   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2286584   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2286585   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2286586   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2286587   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2286588   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2286589   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2286590   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2286591   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2286592   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2286593   +          +    -1.21013804197082 * S_NumDealsPurchases
2286594   +          +     0.59974279122188 * S_NumDistPurchases
2286595   +          +     1.92425710681156 * S_NumStorePurchases
2286596   +          +     1.02413182452324 * S_NumWebPurchases
2286597   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2286598   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2286599   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2286600   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2286601   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2286602   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2286603   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2286604   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2286605   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2286606   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2286607   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2286608   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2286609   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2286610   +          +      0.4928343071801 * S_NumDealsPurchases
2286611   +          +     -0.0196677325409 * S_NumDistPurchases
2286612   +          +     0.44395828164873 * S_NumStorePurchases
2286613   +          +     0.86947051591224 * S_NumWebPurchases
2286614   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2286615   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2286616   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2286617   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2286618   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2286619   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2286620   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2286621   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2286622   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2286623   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2286624   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2286625   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2286626   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2286627   +          +     1.10280977051932 * S_NumDealsPurchases
2286628   +          +     0.99310057404036 * S_NumDistPurchases
2286629   +          +    -0.05647459609331 * S_NumStorePurchases
2286630   +          +    -0.89852483938631 * S_NumWebPurchases
2286631   +          +     2.63022480227445 * S_NumWebVisitsMonth
2286632   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2286633   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2286634   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2286635   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2286636   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2286637   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2286638   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2286639   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2286640   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2286641   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2286642   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2286643   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2286644   +          +    -2.62220616180571 * S_NumDealsPurchases
2286645   +          +    -0.51737930835331 * S_NumDistPurchases
2286646   +          +     0.88655783158133 * S_NumStorePurchases
2286647   +          +     0.35132468809969 * S_NumWebPurchases
2286648   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2286649   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2286650   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2286651   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2286652   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2286653   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2286654   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2286655   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2286656   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
2286657   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2286658   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2286659   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2286660   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2286661   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
2286662   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2286663   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2286664   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2286665   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2286666   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
2286667   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2286668   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2286669   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2286670   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2286671   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
2286672   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2286673   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2286674   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2286675   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2286676   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
2286677   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2286678   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2286679   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2286680   +          +     0.34809919741136 * Marital_StatusDivorced
2286681   +          +    -0.26594093535929 * Marital_StatusMarried
2286682   +          +     0.70249715999987 * Marital_StatusSingle
2286683   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
2286684   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2286685   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2286686   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2286687   +          +    -0.20448765627193 * Marital_StatusDivorced
2286688   +          +     1.73231344674733 * Marital_StatusMarried
2286689   +          +    -0.70956480480373 * Marital_StatusSingle
2286690   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
2286691   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2286692   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2286693   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2286694   +          +     0.30333818684353 * Marital_StatusDivorced
2286695   +          +    -1.44603535988199 * Marital_StatusMarried
2286696   +          +     0.48409598426383 * Marital_StatusSingle
2286697   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
2286698   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2286699   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2286700   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2286701   +          +     -1.5342907846297 * Marital_StatusDivorced
2286702   +          +    -1.79544684592172 * Marital_StatusMarried
2286703   +          +     0.65604313645117 * Marital_StatusSingle
2286704   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
2286705   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2286706   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2286707   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2286708   +          +    -3.97940893560267 * Marital_StatusDivorced
2286709   +          +      3.5880254142663 * Marital_StatusMarried
2286710   +          +     -2.9897737730927 * Marital_StatusSingle
2286711   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
2286712   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2286713   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2286714   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2286715   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2286716   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2286717   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2286718   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2286719   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2286720   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2286721   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2286722   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2286723   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2286724   +END;
MPRINT(EM_DIAGRAM):   END;
2286725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286726   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2286727   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2286728   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2286729   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2286730   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2286731   +END;
MPRINT(EM_DIAGRAM):   END;
2286732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286733   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2286734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286736   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2286737   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2286738   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2286739   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2286740   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2286741   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2286742   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2286743   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2286744   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2286745   +          +     0.07279889333775 * S_NumDealsPurchases
2286746   +          +     0.07542203992452 * S_NumDistPurchases
2286747   +          +     0.16296239303342 * S_NumStorePurchases
2286748   +          +     1.59193921229231 * S_NumWebPurchases
2286749   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2286750   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2286751   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2286752   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2286753   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2286754   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2286755   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2286756   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2286757   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2286758   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2286759   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2286760   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2286761   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2286762   +          +    -0.37456959251084 * S_NumDealsPurchases
2286763   +          +    -1.15252469975668 * S_NumDistPurchases
2286764   +          +    -1.39822501888899 * S_NumStorePurchases
2286765   +          +    -0.32777847360723 * S_NumWebPurchases
2286766   +          +     0.84026499832926 * S_NumWebVisitsMonth
2286767   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2286768   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2286769   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2286770   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2286771   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2286772   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2286773   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2286774   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2286775   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2286776   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2286777   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2286778   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2286779   +          +     1.14090099538367 * S_NumDealsPurchases
2286780   +          +     -0.2600155774492 * S_NumDistPurchases
2286781   +          +     1.31362002392113 * S_NumStorePurchases
2286782   +          +     1.31465307763555 * S_NumWebPurchases
2286783   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2286784   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2286785   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2286786   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2286787   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2286788   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2286789   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2286790   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2286791   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2286792   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2286793   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2286794   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2286795   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2286796   +          +     1.06486073796679 * S_NumDealsPurchases
2286797   +          +    -0.04890191247577 * S_NumDistPurchases
2286798   +          +     0.86871320720698 * S_NumStorePurchases
2286799   +          +     0.03183587281884 * S_NumWebPurchases
2286800   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2286801   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2286802   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2286803   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2286804   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2286805   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2286806   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2286807   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2286808   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2286809   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2286810   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2286811   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2286812   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2286813   +          +    -0.01160267590349 * S_NumDealsPurchases
2286814   +          +    -0.92773075463083 * S_NumDistPurchases
2286815   +          +    -0.83326680533995 * S_NumStorePurchases
2286816   +          +    -1.16991058954473 * S_NumWebPurchases
2286817   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2286818   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2286819   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2286820   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2286821   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2286822   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2286823   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2286824   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2286825   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
2286826   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2286827   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2286828   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2286829   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2286830   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
2286831   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2286832   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2286833   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2286834   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2286835   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
2286836   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2286837   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2286838   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2286839   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2286840   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
2286841   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2286842   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2286843   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2286844   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2286845   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
2286846   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2286847   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2286848   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2286849   +          +    -0.10361472385198 * Marital_StatusDivorced
2286850   +          +     0.05574820877885 * Marital_StatusMarried
2286851   +          +     0.13130988205279 * Marital_StatusSingle
2286852   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
2286853   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2286854   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2286855   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2286856   +          +      0.0059353523794 * Marital_StatusDivorced
2286857   +          +    -0.59379435051653 * Marital_StatusMarried
2286858   +          +    -1.93587108708999 * Marital_StatusSingle
2286859   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
2286860   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2286861   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2286862   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2286863   +          +    -0.74333797840386 * Marital_StatusDivorced
2286864   +          +    -0.93061135117658 * Marital_StatusMarried
2286865   +          +     1.04024182655844 * Marital_StatusSingle
2286866   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
2286867   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2286868   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2286869   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2286870   +          +    -3.01050675344463 * Marital_StatusDivorced
2286871   +          +      0.1638723582239 * Marital_StatusMarried
2286872   +          +     0.94548468360304 * Marital_StatusSingle
2286873   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
2286874   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2286875   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2286876   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2286877   +          +    -1.37013926274158 * Marital_StatusDivorced
2286878   +          +    -0.34168970042779 * Marital_StatusMarried
2286879   +          +     0.63383683543962 * Marital_StatusSingle
2286880   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
2286881   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2286882   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2286883   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2286884   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2286885   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2286886   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2286887   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2286888   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2286889   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2286890   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2286891   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2286892   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2286893   +END;
MPRINT(EM_DIAGRAM):   END;
2286894   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286895   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2286896   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2286897   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2286898   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2286899   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2286900   +END;
MPRINT(EM_DIAGRAM):   END;
2286901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286902   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2286903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286904   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286905   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2286906   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2286907   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2286908   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2286909   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2286910   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2286911   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2286912   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2286913   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2286914   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2286915   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2286916   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2286917   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2286918   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2286919   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2286920   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2286921   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2286922   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2286923   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2286924   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2286925   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2286926   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2286927   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2286928   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2286929   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2286930   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2286931   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2286932   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2286933   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2286934   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2286935   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2286936   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2286937   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2286938   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2286939   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2286940   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2286941   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2286942   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2286943   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2286944   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2286945   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2286946   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2286947   +END;
MPRINT(EM_DIAGRAM):   END;
2286948   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286949   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2286950   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2286951   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2286952   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2286953   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2286954   +END;
MPRINT(EM_DIAGRAM):   END;
2286955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286956   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2286957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286959   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2286960   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2286961   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2286962   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2286963   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2286964   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2286965   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2286966   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2286967   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2286968   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2286969   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2286970   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2286971   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2286972   +END;
MPRINT(EM_DIAGRAM):   END;
2286973   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286974   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2286975   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2286976   +END;
MPRINT(EM_DIAGRAM):   END;
2286977   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2286978   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2286979   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2286980   +END;
MPRINT(EM_DIAGRAM):   END;
2286981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286982   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2286983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286984   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2286985   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2286986   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2286987   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2286988   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2286989   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2286990   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2286991   +END;
MPRINT(EM_DIAGRAM):   END;
2286992   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2286993   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2286994   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2286995   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2286996    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2286997    quit;
2286998    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2286999    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2287000    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2287001    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2287002    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2287003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287004    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2287005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287007    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2287008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287010    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287011    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2287012    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2287013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287014    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2287015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2287016    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2287017    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287019    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287020    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2287021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287022    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287023    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2287024    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2287024  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2479 rows and 5 columns.
 
2287025    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287026    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2287027    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287028    filename _pref
2287028  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2287029    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2287030    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2287031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287032   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2287033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287034   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2287035   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2287036   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2287037    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2287038    quit;
2287039    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2287040    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2287041    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2287042    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2287043    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2287044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287045    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2287046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287048    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2287049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287051    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287052    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2287053    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2287054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287055    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2287056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2287057    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2287058    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287060    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287061    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2287062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287063    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287064    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2287065    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2287065  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2287066    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287067    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2287068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287069    filename _pref
2287069  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2287070    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2287071    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2287072   +
2287073   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2287074   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2287074  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2287075   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2287076   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2287077   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2287078   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2287079   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2287080    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2287081    quit;
2287082    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2287083    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2287084    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2287085    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2287086    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2287087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287088    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2287089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287091    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2287092    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287094    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287095    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2287096    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2287097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287098    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2287099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287100    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2287101    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287103    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287104    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2287105    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287106    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287107    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2287108    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2287108  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2287109    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287110    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2287111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287112    filename _pref
2287112  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2287113    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2287114    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2287115   +
2287116   +
2287117   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2287118   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2287119   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2287120   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2287121   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2287122   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287123   +
2287124   +
2287125   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2287126   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2287127   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2287128   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2287129   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2287130   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287131   +
2287132   +
2287133   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2287134   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2287135   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2287136   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2287137   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2287138   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287139   +
2287140   +
2287141   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2287142   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2287143   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2287144   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2287145   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2287146   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287147   +
2287148   +
2287149   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2287150   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2287151   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2287152   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2287153   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2287154   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287155   +
2287156   +
2287157   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2287158   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2287159   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2287160   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2287161   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2287162   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287163   +
2287164   +
2287165   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2287166   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2287167   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2287168   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2287169   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2287170   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287171   +
2287172   +
2287173   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2287174   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2287175   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2287176   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2287177   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2287178   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2287179   +if
2287180   +_FILTERNORM1 not in ( '.')
2287181   + and
2287182   +_FILTERNORM2 not in ( '.')
2287183   + and
2287184   +_FILTERNORM3 not in ( '.')
2287185   + and
2287186   +_FILTERNORM4 not in ( '.')
2287187   + and
2287188   +_FILTERNORM5 not in ( '.')
2287189   + and
2287190   +_FILTERNORM6 not in ( '.')
2287191   + and
2287192   +_FILTERNORM7 not in ( ' ')
2287193   + and
2287194   +_FILTERNORM8 not in ( ' ')
2287195   +and
2287196   +( Dt_Customer ne .)
2287197   +and ( Income ne . and (Income<=107000))
2287198   +and ( Kidhome ne .)
2287199   +and ( MntFishProducts ne .)
2287200   +and ( MntFruits ne .)
2287201   +and ( MntGoldProds ne .)
2287202   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2287203   +and ( MntSweetProducts ne .)
2287204   +and ( MntWines ne .)
2287205   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2287206   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2287207   +and ( NumStorePurchases ne .)
2287208   +and ( NumWebPurchases ne .)
2287209   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2287210   +and ( Recency ne .)
2287211   +and ( Teenhome ne .)
2287212   +and ( Year_Birth ne .)
2287213   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2287214   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2287215   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2287216   +end;
MPRINT(EM_DIAGRAM):   end;
2287217   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2287218   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2287219    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2287220    quit;
2287221    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2287222    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2287223    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2287224    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2287225    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2287226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287227    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2287228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287230    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2287231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287233    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287234    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2287235    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2287236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287237    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2287238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2287239    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2287240    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287242    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2287243    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2287244    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2287245    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2287246    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2287247    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2287247  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2287248    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287249    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2287250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287251    %macro varDept(fcmpdata=,id=);
2287252    %global nobs&id scoreFlag&id;
2287253    %let scoreFlag&id = 0;
2287254    %if &id=1 or ^&fcmpStart %then %do;
2287255    proc sort data=&fcmpdata out=_temp&id nodupkey;
2287256    by NAME;
2287257    where id=&id and LHS in( %let j=1;
2287258    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2287259    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2287260    "&var" %let j = %eval(&j+1);
2287261    %end;
2287262    );
2287263    run;
2287264    %let dsid = %sysfunc(open(_temp&id));
2287265    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2287266    %let dsid = %sysfunc(close(&dsid));
2287267    %if &&nobs&id %then %do;
2287268    %let scoreFlag&id = 1;
2287269    %let fcmpStart = 1;
2287270    %end;
2287271    %else %let fcmpStart = 0;
2287272    %end;
2287273    %else %do;
2287274    proc sort data=&fcmpdata out=_tempid;
2287275    where id=&id;
2287276    by LHS;
2287277    run;
2287278    %let dsid = %sysfunc(open(_tempid));
2287279    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2287280    %let dsid = %sysfunc(close(&dsid));
2287281    %if ^&&nobs&id %then %do;
2287282    proc datasets lib=work nolist;
2287283    delete _tempid;
2287284    run;
2287285    quit;
2287286    %end;
2287287    %else %do;
2287288    data _tempAll;
2287289    set %let j=%eval(&id-1);
2287290    %do x=1 %to &j;
2287291    %if &&nobs&x %then %do;
2287292    _temp&x %end;
2287293    %end;
2287294    ;
2287295    run;
2287296    proc sql;
2287297    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2287297  ! work._tempid p2 where p.name=p2.lhs;
2287298    quit;
2287299    data _temp&id;
2287300    set _temp&id;
2287301    where LHS ne '' and NAME ne '' and Node ne '';
2287302    run;
2287303    proc datasets lib=work nolist;
2287304    delete _tempAll;
2287305    run;
2287306    %let dsid = %sysfunc(open(_temp&id));
2287307    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2287308    %let dsid = %sysfunc(close(&dsid));
2287309    %if ^&&nobs&id %then %do;
2287310    proc datasets lib=work nolist;
2287311    delete _temp&id;
2287312    run;
2287313    quit;
2287314    %end;
2287315    %else %do;
2287316    %let scoreFlag&id = 1;
2287317    data _temp&id;
2287318    set _temp&id;
2287319    where LHS ne NAME and node ne '';
2287320    run;
2287321    %let dsid = %sysfunc(open(_temp&id));
2287322    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2287323    %let dsid = %sysfunc(close(&dsid));
2287324    %if ^&&nobs&id %then %do;
2287325    proc datasets lib=work nolist;
2287326    delete _temp&id;
2287327    run;
2287328    quit;
2287329    %end;
2287330    %else %do;
2287331    proc sort data=_temp&id nodupkey;
2287332    by LHS NAME;
2287333    run;
2287334    %end;
2287335    %end;
2287336    %end;
2287337    %end;
2287338    %mend varDept;
2287339    %macro optCode(outdata=fcmpdata);
2287340    %global fcmpStart;
2287341    %let fcmpStart = 0;
2287342    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2287343    %let NumNodes=9;
2287344    %do k=1 %to &NumNodes;
2287345    %vardept(fcmpdata=&outdata, id=&k);
2287346    %end;
2287347    %mend optCode;
2287348    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 179 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 49 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 49 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 53 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 92 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2287349    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2287350    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2287351    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2287352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287353    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2287354    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2287355    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2287356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287357    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2287358    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2287358  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2287359    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2287360    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2287361    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2287362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2287363    filename _pref
2287363  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2287364    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2287365    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2287366   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287367   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2287368   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287369   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2287370   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2287371   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2287372   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2287373   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2287374   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2287375   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2287376   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2287377   +LENGTH _WARN_ $4
2287378   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2287379   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2287380   +
2287381   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2287382   +
2287383   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2287384   +
2287385   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2287386   +
2287387   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2287388   +
2287389   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2287390   +
2287391   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2287392   +
2287393   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2287394   +
2287395   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2287396   +
2287397   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2287398   +
2287399   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2287400   +
2287401   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2287402   +
2287403   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2287404   +
2287405   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2287406   +
2287407   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2287408   +
2287409   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2287410   +
2287411   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2287412   +
2287413   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2287414   +
2287415   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2287416   +
2287417   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2287418   +
2287419   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2287420   +
2287421   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2287422   +
2287423   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2287424   +
2287425   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2287426   +
2287427   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2287428   +
2287429   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2287430   +
2287431   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2287432   +
2287433   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2287434   +
2287435   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2287436   +
2287437   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2287438   +
2287439   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2287440   +
2287441   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2287442   +
2287443   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2287444   +
2287445   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2287446   +
2287447   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2287448   +
2287449   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2287450   +
2287451   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2287452   +
2287453   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2287454   +
2287455   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2287456   +
2287457   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2287458   +
2287459   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2287460   +
2287461   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2287462   +
2287463   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2287464   +
2287465   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2287466   +
2287467   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2287468   +
2287469   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2287470   +
2287471   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2287472   +
2287473   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2287474   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2287475   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2287476   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2287477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287479   +end;
MPRINT(EM_DIAGRAM):   end;
2287480   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287482   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2287483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287485   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2287486   +   end;
MPRINT(EM_DIAGRAM):   end;
2287487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287488   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2287489   +   end;
MPRINT(EM_DIAGRAM):   end;
2287490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287491   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2287492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287494   +   end;
MPRINT(EM_DIAGRAM):   end;
2287495   +end;
MPRINT(EM_DIAGRAM):   end;
2287496   +
2287497   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2287498   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2287499   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2287500   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2287501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287503   +end;
MPRINT(EM_DIAGRAM):   end;
2287504   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287506   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2287507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287508   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287509   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2287510   +   end;
MPRINT(EM_DIAGRAM):   end;
2287511   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287512   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2287513   +   end;
MPRINT(EM_DIAGRAM):   end;
2287514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287515   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2287516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287518   +   end;
MPRINT(EM_DIAGRAM):   end;
2287519   +end;
MPRINT(EM_DIAGRAM):   end;
2287520   +
2287521   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2287522   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2287523   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2287524   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2287525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287527   +end;
MPRINT(EM_DIAGRAM):   end;
2287528   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287530   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2287531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287532   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287533   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2287534   +   end;
MPRINT(EM_DIAGRAM):   end;
2287535   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287536   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2287537   +   end;
MPRINT(EM_DIAGRAM):   end;
2287538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287539   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2287540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287542   +   end;
MPRINT(EM_DIAGRAM):   end;
2287543   +end;
MPRINT(EM_DIAGRAM):   end;
2287544   +
2287545   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2287546   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2287547   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2287548   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2287549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287551   +end;
MPRINT(EM_DIAGRAM):   end;
2287552   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287553   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287554   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2287555   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287556   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287557   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2287558   +   end;
MPRINT(EM_DIAGRAM):   end;
2287559   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287560   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2287561   +   end;
MPRINT(EM_DIAGRAM):   end;
2287562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287563   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2287564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287566   +   end;
MPRINT(EM_DIAGRAM):   end;
2287567   +end;
MPRINT(EM_DIAGRAM):   end;
2287568   +
2287569   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2287570   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2287571   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2287572   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2287573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287575   +end;
MPRINT(EM_DIAGRAM):   end;
2287576   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287578   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2287579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287580   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287581   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2287582   +   end;
MPRINT(EM_DIAGRAM):   end;
2287583   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287584   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2287585   +   end;
MPRINT(EM_DIAGRAM):   end;
2287586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287587   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2287588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287590   +   end;
MPRINT(EM_DIAGRAM):   end;
2287591   +end;
MPRINT(EM_DIAGRAM):   end;
2287592   +
2287593   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2287594   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2287595   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2287596   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2287597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287599   +end;
MPRINT(EM_DIAGRAM):   end;
2287600   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287601   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287602   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2287603   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287604   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287605   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2287606   +   end;
MPRINT(EM_DIAGRAM):   end;
2287607   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287608   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2287609   +   end;
MPRINT(EM_DIAGRAM):   end;
2287610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287611   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2287612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287614   +   end;
MPRINT(EM_DIAGRAM):   end;
2287615   +end;
MPRINT(EM_DIAGRAM):   end;
2287616   +
2287617   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2287618   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2287619   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2287620   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2287621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287623   +end;
MPRINT(EM_DIAGRAM):   end;
2287624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287626   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2287627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287628   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2287629   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2287630   +   end;
MPRINT(EM_DIAGRAM):   end;
2287631   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2287632   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2287633   +   end;
MPRINT(EM_DIAGRAM):   end;
2287634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287635   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2287636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287638   +   end;
MPRINT(EM_DIAGRAM):   end;
2287639   +end;
MPRINT(EM_DIAGRAM):   end;
2287640   +
2287641   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2287642   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2287643   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2287644   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2287645   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2287646   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2287647   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2287648   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2287649   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2287650   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2287651   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2287652   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2287653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287655   +end;
MPRINT(EM_DIAGRAM):   end;
2287656   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287657   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2287658   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2287659   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287660   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2287661   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2287662   +   end;
MPRINT(EM_DIAGRAM):   end;
2287663   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2287664   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2287665   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2287666   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2287667   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2287668   +   end;
MPRINT(EM_DIAGRAM):   end;
2287669   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2287670   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2287671   +   end;
MPRINT(EM_DIAGRAM):   end;
2287672   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2287673   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2287674   +   end;
MPRINT(EM_DIAGRAM):   end;
2287675   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2287676   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2287677   +   end;
MPRINT(EM_DIAGRAM):   end;
2287678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287679   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2287680   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2287681   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2287682   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2287683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287685   +   end;
MPRINT(EM_DIAGRAM):   end;
2287686   +end;
MPRINT(EM_DIAGRAM):   end;
2287687   +
2287688   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2287689   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2287690   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2287691   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2287692   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2287693   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2287694   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2287695   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2287696   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2287697   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2287698   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2287699   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2287700   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2287701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287703   +end;
MPRINT(EM_DIAGRAM):   end;
2287704   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287705   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2287706   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2287707   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287708   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2287709   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2287710   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2287711   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2287712   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2287713   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287714   +         end;
MPRINT(EM_DIAGRAM):   end;
2287715   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2287716   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2287717   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2287718   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287719   +            end;
MPRINT(EM_DIAGRAM):   end;
2287720   +         end;
MPRINT(EM_DIAGRAM):   end;
2287721   +      end;
MPRINT(EM_DIAGRAM):   end;
2287722   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2287723   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2287724   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2287725   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287726   +         end;
MPRINT(EM_DIAGRAM):   end;
2287727   +      end;
MPRINT(EM_DIAGRAM):   end;
2287728   +   end;
MPRINT(EM_DIAGRAM):   end;
2287729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287730   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2287731   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2287732   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287733   +      end;
MPRINT(EM_DIAGRAM):   end;
2287734   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2287735   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2287736   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2287737   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2287738   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2287739   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2287740   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287741   +         end;
MPRINT(EM_DIAGRAM):   end;
2287742   +      end;
MPRINT(EM_DIAGRAM):   end;
2287743   +   end;
MPRINT(EM_DIAGRAM):   end;
2287744   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2287745   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2287746   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2287747   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2287748   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2287749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287751   +   end;
MPRINT(EM_DIAGRAM):   end;
2287752   +end;
MPRINT(EM_DIAGRAM):   end;
2287753   +
2287754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287755   +*** Checking missing input Interval
2287756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2287757   +
2287758   +IF NMISS(
2287759   +   AcceptedCmpTotal ,
2287760   +   Age ,
2287761   +   Frq ,
2287762   +   Income ,
2287763   +   Kidhome ,
2287764   +   Mnt ,
2287765   +   MntFishProducts ,
2287766   +   MntFruits ,
2287767   +   MntGoldProds ,
2287768   +   MntMeatProducts ,
2287769   +   MntSweetProducts ,
2287770   +   MntWines ,
2287771   +   MonthsAsCustomer ,
2287772   +   NumCatalogPurchases ,
2287773   +   NumDealsPurchases ,
2287774   +   NumDistPurchases ,
2287775   +   NumStorePurchases ,
2287776   +   NumWebPurchases ,
2287777   +   NumWebVisitsMonth ,
2287778   +   RFMstat ,
2287779   +   RMntFrq ,
2287780   +   Recency ,
2287781   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2287782   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2287783   +
2287784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287785   +END;
MPRINT(EM_DIAGRAM):   END;
2287786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287787   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2287788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287789   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287790   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2287791   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2287792   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2287793   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2287794   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2287795   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2287796   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2287797   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2287798   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2287799   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2287800   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2287801   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2287802   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2287803   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2287804   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2287805   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2287806   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2287807   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2287808   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2287809   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2287810   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2287811   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2287812   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2287813   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2287814   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2287815   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2287816   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2287817   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2287818   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2287819   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2287820   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2287821   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2287822   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2287823   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2287824   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2287825   +END;
MPRINT(EM_DIAGRAM):   END;
2287826   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287827   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2287828   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2287829   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2287830   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2287831   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2287832   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2287833   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2287834   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2287835   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2287836   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2287837   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2287838   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2287839   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2287840   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2287841   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2287842   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2287843   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2287844   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2287845   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2287846   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2287847   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2287848   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2287849   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2287850   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2287851   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2287852   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2287853   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2287854   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2287855   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2287856   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2287857   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2287858   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2287859   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2287860   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2287861   +   ELSE S_NumCatalogPurchases
2287862   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2287863   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2287864   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2287865   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2287866   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2287867   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2287868   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2287869   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2287870   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2287871   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2287872   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2287873   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2287874   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2287875   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2287876   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2287877   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2287878   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2287879   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2287880   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2287881   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2287882   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2287883   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2287884   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2287885   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2287886   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2287887   +END;
MPRINT(EM_DIAGRAM):   END;
2287888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287889   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2287890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287892   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2287893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287895   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2287896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287898   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2287899   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2287900   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2287901   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2287902   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2287903   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2287904   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2287905   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2287906   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2287907   +          +    -1.12130210731541 * S_NumDealsPurchases
2287908   +          +    -0.12343505299726 * S_NumDistPurchases
2287909   +          +     0.11863092868196 * S_NumStorePurchases
2287910   +          +       0.583917993314 * S_NumWebPurchases
2287911   +          +     0.75529732848146 * S_NumWebVisitsMonth
2287912   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2287913   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2287914   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 *
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 *
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts +
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 *
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 *
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 *
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 *
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq +
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2287915   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2287916   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2287917   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2287918   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2287919   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2287920   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2287921   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2287922   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2287923   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2287924   +          +    -0.84113790640734 * S_NumDealsPurchases
2287925   +          +    -0.10512672747147 * S_NumDistPurchases
2287926   +          +     0.07268711782494 * S_NumStorePurchases
2287927   +          +     0.57578331257439 * S_NumWebPurchases
2287928   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2287929   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2287930   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2287931   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 *
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 *
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts +
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 *
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines +
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases +
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases +
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases +
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 *
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2287932   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2287933   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2287934   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2287935   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2287936   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2287937   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2287938   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2287939   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2287940   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2287941   +          +     0.45924983504762 * S_NumDealsPurchases
2287942   +          +    -0.25508041581692 * S_NumDistPurchases
2287943   +          +    -1.34901283858526 * S_NumStorePurchases
2287944   +          +    -0.86388975031663 * S_NumWebPurchases
2287945   +          +     1.86136110391797 * S_NumWebVisitsMonth
2287946   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2287947   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2287948   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome +
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 *
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts +
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 *
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 *
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 *
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 *
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq +
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2287949   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2287950   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2287951   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2287952   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2287953   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 *
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 +
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 *
HigherEducationBinary0 ;
2287954   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2287955   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2287956   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2287957   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2287958   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 +
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 *
HigherEducationBinary0 ;
2287959   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2287960   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2287961   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2287962   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2287963   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 +
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 *
HigherEducationBinary0 ;
2287964   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2287965   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2287966   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2287967   +          +     0.48853068455666 * Marital_StatusDivorced
2287968   +          +    -0.54903474026465 * Marital_StatusMarried
2287969   +          +    -0.34079188373939 * Marital_StatusSingle
2287970   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle +
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation +
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced +
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle +
-0.64602969938868 * Marital_StatusTogether ;
2287971   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2287972   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2287973   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2287974   +          +    -1.03547689902027 * Marital_StatusDivorced
2287975   +          +     2.42164864610471 * Marital_StatusMarried
2287976   +          +    -1.95342561304942 * Marital_StatusSingle
2287977   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle +
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 *
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 *
Marital_StatusTogether ;
2287978   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2287979   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2287980   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2287981   +          +      0.4337638747935 * Marital_StatusDivorced
2287982   +          +    -0.38508657017615 * Marital_StatusMarried
2287983   +          +     -0.0160269708326 * Marital_StatusSingle
2287984   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle +
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation +
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced +
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle +
-0.57491004270903 * Marital_StatusTogether ;
2287985   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2287986   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2287987   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2287988   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2287989   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2287990   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2287991   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2287992   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2287993   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2287994   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2287995   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2287996   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2287997   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2287998   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2287999   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2288000   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2288001   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2288002   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2288003   +END;
MPRINT(EM_DIAGRAM):   END;
2288004   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288005   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2288006   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2288007   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2288008   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2288009   +END;
MPRINT(EM_DIAGRAM):   END;
2288010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288011   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2288012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288013   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288014   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2288015   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 +
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2288016   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2288017   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2288018   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2288019   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2288020   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2288021   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2288022   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2288023   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2288024   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2288025   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2288026   +END;
MPRINT(EM_DIAGRAM):   END;
2288027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288028   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2288029   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2288030   +END;
MPRINT(EM_DIAGRAM):   END;
2288031   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2288032   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2288033   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2288034   +END;
MPRINT(EM_DIAGRAM):   END;
2288035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288036   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2288037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288038   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2288039   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2288040   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2288041   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2288042   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2288043   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2288044   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2288045   +END;
MPRINT(EM_DIAGRAM):   END;
2288046   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2288047   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2288048   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2288049   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2288050    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2288051    quit;
2288052    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2288053    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2288054    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2288055    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2288056    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2288057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288058    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2288059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288061    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2288062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288064    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288065    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2288066    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2288067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288068    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2288069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2288070    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2288071    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288073    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288074    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2288075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288076    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288077    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2288078    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2288078  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
2288079    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288080    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2288081    run;
MPRINT(EM_DIAGRAM):   run;
The SAS System
 
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288082    filename _pref
2288082  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2288083    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2288084    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2288085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288086   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2288087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288088   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2288089   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2288090   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2288091    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2288092    quit;
2288093    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2288094    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2288095    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2288096    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2288097    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2288098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288099    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2288100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288102    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2288103    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288105    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288106    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2288107    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2288108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288109    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2288110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
2288111    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2288112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288114    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288115    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2288116    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288117    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288118    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2288119    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2288119  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2288120    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288121    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2288122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288123    filename _pref
2288123  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2288124    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2288125    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2288126   +
2288127   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2288128   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2288128  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2288129   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2288130   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2288131   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2288132   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2288133   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2288134    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2288135    quit;
2288136    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2288137    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2288138    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2288139    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2288140    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2288141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288142    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2288143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288145    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2288146    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288148    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288149    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2288150    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2288151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288152    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2288153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288154    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2288155    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288157    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288158    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2288159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288160    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288161    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2288162    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2288162  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2288163    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288164    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2288165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288166    filename _pref
2288166  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2288167    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2288168    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2288169   +
2288170   +
2288171   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2288172   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2288173   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2288174   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2288175   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2288176   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288177   +
2288178   +
2288179   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2288180   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2288181   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2288182   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2288183   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2288184   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288185   +
2288186   +
2288187   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2288188   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2288189   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2288190   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2288191   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2288192   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288193   +
2288194   +
2288195   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2288196   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2288197   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2288198   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2288199   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2288200   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288201   +
2288202   +
2288203   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2288204   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2288205   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2288206   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2288207   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2288208   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288209   +
2288210   +
2288211   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2288212   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2288213   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2288214   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2288215   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2288216   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288217   +
2288218   +
2288219   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2288220   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2288221   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2288222   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2288223   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2288224   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288225   +
2288226   +
2288227   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2288228   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2288229   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2288230   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2288231   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2288232   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2288233   +if
2288234   +_FILTERNORM1 not in ( '.')
2288235   + and
2288236   +_FILTERNORM2 not in ( '.')
2288237   + and
2288238   +_FILTERNORM3 not in ( '.')
2288239   + and
2288240   +_FILTERNORM4 not in ( '.')
2288241   + and
2288242   +_FILTERNORM5 not in ( '.')
2288243   + and
2288244   +_FILTERNORM6 not in ( '.')
2288245   + and
2288246   +_FILTERNORM7 not in ( ' ')
2288247   + and
2288248   +_FILTERNORM8 not in ( ' ')
2288249   +and
2288250   +( Dt_Customer ne .)
2288251   +and ( Income ne . and (Income<=107000))
2288252   +and ( Kidhome ne .)
2288253   +and ( MntFishProducts ne .)
2288254   +and ( MntFruits ne .)
2288255   +and ( MntGoldProds ne .)
2288256   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2288257   +and ( MntSweetProducts ne .)
2288258   +and ( MntWines ne .)
2288259   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2288260   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2288261   +and ( NumStorePurchases ne .)
2288262   +and ( NumWebPurchases ne .)
2288263   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2288264   +and ( Recency ne .)
2288265   +and ( Teenhome ne .)
2288266   +and ( Year_Birth ne .)
2288267   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2288268   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2288269   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2288270   +end;
MPRINT(EM_DIAGRAM):   end;
2288271   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2288272   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2288273    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2288274    quit;
2288275    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2288276    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2288277    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2288278    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2288279    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2288280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288281    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2288282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288284    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2288285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288287    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288288    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2288289    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2288290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288291    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2288292    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2288293    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2288294    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288296    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2288297    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2288298    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2288299    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288300    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2288301    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2288301  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2288302    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288303    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2288304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288305    %macro varDept(fcmpdata=,id=);
2288306    %global nobs&id scoreFlag&id;
2288307    %let scoreFlag&id = 0;
2288308    %if &id=1 or ^&fcmpStart %then %do;
2288309    proc sort data=&fcmpdata out=_temp&id nodupkey;
2288310    by NAME;
2288311    where id=&id and LHS in( %let j=1;
2288312    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2288313    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2288314    "&var" %let j = %eval(&j+1);
2288315    %end;
2288316    );
2288317    run;
2288318    %let dsid = %sysfunc(open(_temp&id));
2288319    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2288320    %let dsid = %sysfunc(close(&dsid));
2288321    %if &&nobs&id %then %do;
2288322    %let scoreFlag&id = 1;
2288323    %let fcmpStart = 1;
2288324    %end;
2288325    %else %let fcmpStart = 0;
2288326    %end;
2288327    %else %do;
2288328    proc sort data=&fcmpdata out=_tempid;
2288329    where id=&id;
2288330    by LHS;
2288331    run;
2288332    %let dsid = %sysfunc(open(_tempid));
2288333    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2288334    %let dsid = %sysfunc(close(&dsid));
2288335    %if ^&&nobs&id %then %do;
2288336    proc datasets lib=work nolist;
2288337    delete _tempid;
2288338    run;
2288339    quit;
2288340    %end;
2288341    %else %do;
2288342    data _tempAll;
2288343    set %let j=%eval(&id-1);
2288344    %do x=1 %to &j;
2288345    %if &&nobs&x %then %do;
2288346    _temp&x %end;
2288347    %end;
2288348    ;
2288349    run;
2288350    proc sql;
2288351    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2288351  ! work._tempid p2 where p.name=p2.lhs;
2288352    quit;
2288353    data _temp&id;
2288354    set _temp&id;
2288355    where LHS ne '' and NAME ne '' and Node ne '';
2288356    run;
2288357    proc datasets lib=work nolist;
2288358    delete _tempAll;
2288359    run;
2288360    %let dsid = %sysfunc(open(_temp&id));
2288361    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2288362    %let dsid = %sysfunc(close(&dsid));
2288363    %if ^&&nobs&id %then %do;
2288364    proc datasets lib=work nolist;
2288365    delete _temp&id;
2288366    run;
2288367    quit;
2288368    %end;
2288369    %else %do;
2288370    %let scoreFlag&id = 1;
2288371    data _temp&id;
2288372    set _temp&id;
2288373    where LHS ne NAME and node ne '';
2288374    run;
2288375    %let dsid = %sysfunc(open(_temp&id));
2288376    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2288377    %let dsid = %sysfunc(close(&dsid));
2288378    %if ^&&nobs&id %then %do;
2288379    proc datasets lib=work nolist;
2288380    delete _temp&id;
2288381    run;
2288382    quit;
2288383    %end;
2288384    %else %do;
2288385    proc sort data=_temp&id nodupkey;
2288386    by LHS NAME;
2288387    run;
2288388    %end;
2288389    %end;
2288390    %end;
2288391    %end;
2288392    %mend varDept;
2288393    %macro optCode(outdata=fcmpdata);
2288394    %global fcmpStart;
2288395    %let fcmpStart = 0;
2288396    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2288397    %let NumNodes=9;
2288398    %do k=1 %to &NumNodes;
2288399    %vardept(fcmpdata=&outdata, id=&k);
2288400    %end;
2288401    %mend optCode;
2288402    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2288403    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2288404    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2288405    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2288406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2288407    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2288408    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2288409    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2288410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288411    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2288412    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2288412  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2288413    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2288414    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2288415    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2288416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2288417    filename _pref
2288417  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2288418    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2288419    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2288420   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2288421   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2288422   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2288423   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2288424   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2288425   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2288426   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2288427   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2288428   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2288429   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2288430   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2288431   +LENGTH _WARN_ $4
2288432   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2288433   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2288434   +
2288435   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2288436   +
2288437   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2288438   +
2288439   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2288440   +
2288441   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2288442   +
2288443   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2288444   +
2288445   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2288446   +
2288447   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2288448   +
2288449   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2288450   +
2288451   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2288452   +
2288453   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2288454   +
2288455   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2288456   +
2288457   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2288458   +
2288459   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2288460   +
2288461   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2288462   +
2288463   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2288464   +
2288465   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2288466   +
2288467   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2288468   +
2288469   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2288470   +
2288471   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2288472   +
2288473   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2288474   +
2288475   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2288476   +
2288477   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2288478   +
2288479   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2288480   +
2288481   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2288482   +
2288483   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2288484   +
2288485   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2288486   +
2288487   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2288488   +
2288489   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2288490   +
2288491   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2288492   +
2288493   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2288494   +
2288495   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2288496   +
2288497   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2288498   +
2288499   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2288500   +
2288501   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2288502   +
2288503   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2288504   +
2288505   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2288506   +
2288507   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2288508   +
2288509   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2288510   +
2288511   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2288512   +
2288513   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2288514   +
2288515   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2288516   +
2288517   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2288518   +
2288519   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2288520   +
2288521   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2288522   +
2288523   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2288524   +
2288525   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2288526   +
2288527   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2288528   +
2288529   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2288530   +
2288531   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2288532   +
2288533   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2288534   +
2288535   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2288536   +
2288537   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2288538   +
2288539   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2288540   +
2288541   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2288542   +
2288543   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2288544   +
2288545   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2288546   +
2288547   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2288548   +
2288549   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2288550   +
2288551   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2288552   +
2288553   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2288554   +
2288555   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2288556   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2288557   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2288558   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288561   +end;
MPRINT(EM_DIAGRAM):   end;
2288562   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288564   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2288565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288566   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288567   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2288568   +   end;
MPRINT(EM_DIAGRAM):   end;
2288569   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288570   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2288571   +   end;
MPRINT(EM_DIAGRAM):   end;
2288572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288573   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288576   +   end;
MPRINT(EM_DIAGRAM):   end;
2288577   +end;
MPRINT(EM_DIAGRAM):   end;
2288578   +
2288579   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2288580   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2288581   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2288582   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288585   +end;
MPRINT(EM_DIAGRAM):   end;
2288586   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288587   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288588   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2288589   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288590   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288591   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2288592   +   end;
MPRINT(EM_DIAGRAM):   end;
2288593   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288594   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2288595   +   end;
MPRINT(EM_DIAGRAM):   end;
2288596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288597   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288600   +   end;
MPRINT(EM_DIAGRAM):   end;
2288601   +end;
MPRINT(EM_DIAGRAM):   end;
2288602   +
2288603   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2288604   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2288605   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2288606   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288609   +end;
MPRINT(EM_DIAGRAM):   end;
2288610   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288612   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2288613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288615   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2288616   +   end;
MPRINT(EM_DIAGRAM):   end;
2288617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288618   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2288619   +   end;
MPRINT(EM_DIAGRAM):   end;
2288620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288621   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288624   +   end;
MPRINT(EM_DIAGRAM):   end;
2288625   +end;
MPRINT(EM_DIAGRAM):   end;
2288626   +
2288627   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2288628   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2288629   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2288630   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288633   +end;
MPRINT(EM_DIAGRAM):   end;
2288634   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288636   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2288637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288638   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288639   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2288640   +   end;
MPRINT(EM_DIAGRAM):   end;
2288641   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288642   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2288643   +   end;
MPRINT(EM_DIAGRAM):   end;
2288644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288645   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288648   +   end;
MPRINT(EM_DIAGRAM):   end;
2288649   +end;
MPRINT(EM_DIAGRAM):   end;
2288650   +
2288651   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2288652   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2288653   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2288654   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2288655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288657   +end;
MPRINT(EM_DIAGRAM):   end;
2288658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288660   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2288661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288662   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288663   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2288664   +   end;
MPRINT(EM_DIAGRAM):   end;
2288665   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288666   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2288667   +   end;
MPRINT(EM_DIAGRAM):   end;
2288668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288669   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2288670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288672   +   end;
MPRINT(EM_DIAGRAM):   end;
2288673   +end;
MPRINT(EM_DIAGRAM):   end;
2288674   +
2288675   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2288676   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2288677   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2288678   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2288679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288681   +end;
MPRINT(EM_DIAGRAM):   end;
2288682   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288684   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2288685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288687   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2288688   +   end;
MPRINT(EM_DIAGRAM):   end;
2288689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288690   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2288691   +   end;
MPRINT(EM_DIAGRAM):   end;
2288692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288693   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2288694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288696   +   end;
MPRINT(EM_DIAGRAM):   end;
2288697   +end;
MPRINT(EM_DIAGRAM):   end;
2288698   +
2288699   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2288700   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2288701   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2288702   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2288703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288705   +end;
MPRINT(EM_DIAGRAM):   end;
2288706   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288708   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2288709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288710   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2288711   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2288712   +   end;
MPRINT(EM_DIAGRAM):   end;
2288713   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2288714   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2288715   +   end;
MPRINT(EM_DIAGRAM):   end;
2288716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288717   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2288718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288720   +   end;
MPRINT(EM_DIAGRAM):   end;
2288721   +end;
MPRINT(EM_DIAGRAM):   end;
2288722   +
2288723   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2288724   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2288725   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2288726   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2288727   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2288728   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2288729   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2288730   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2288731   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2288732   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2288733   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2288734   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2288735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288737   +end;
MPRINT(EM_DIAGRAM):   end;
2288738   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288739   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2288740   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2288741   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288742   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2288743   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2288744   +   end;
MPRINT(EM_DIAGRAM):   end;
2288745   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2288746   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2288747   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2288748   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2288749   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2288750   +   end;
MPRINT(EM_DIAGRAM):   end;
2288751   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2288752   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2288753   +   end;
MPRINT(EM_DIAGRAM):   end;
2288754   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2288755   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2288756   +   end;
MPRINT(EM_DIAGRAM):   end;
2288757   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2288758   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2288759   +   end;
MPRINT(EM_DIAGRAM):   end;
2288760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288761   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2288762   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2288763   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2288764   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2288765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288767   +   end;
MPRINT(EM_DIAGRAM):   end;
2288768   +end;
MPRINT(EM_DIAGRAM):   end;
2288769   +
2288770   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2288771   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2288772   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2288773   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2288774   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2288775   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2288776   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2288777   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2288778   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2288779   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2288780   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2288781   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2288782   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2288783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288785   +end;
MPRINT(EM_DIAGRAM):   end;
2288786   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288787   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2288788   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2288789   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288790   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2288791   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2288792   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2288793   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2288794   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2288795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288796   +         end;
MPRINT(EM_DIAGRAM):   end;
2288797   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2288798   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2288799   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2288800   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288801   +            end;
MPRINT(EM_DIAGRAM):   end;
2288802   +         end;
MPRINT(EM_DIAGRAM):   end;
2288803   +      end;
MPRINT(EM_DIAGRAM):   end;
2288804   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2288805   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2288806   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2288807   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288808   +         end;
MPRINT(EM_DIAGRAM):   end;
2288809   +      end;
MPRINT(EM_DIAGRAM):   end;
2288810   +   end;
MPRINT(EM_DIAGRAM):   end;
2288811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288812   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2288813   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2288814   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288815   +      end;
MPRINT(EM_DIAGRAM):   end;
2288816   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2288817   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2288818   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2288819   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2288820   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2288821   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2288822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288823   +         end;
MPRINT(EM_DIAGRAM):   end;
2288824   +      end;
MPRINT(EM_DIAGRAM):   end;
2288825   +   end;
MPRINT(EM_DIAGRAM):   end;
2288826   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2288827   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2288828   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2288829   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2288830   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2288831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288833   +   end;
MPRINT(EM_DIAGRAM):   end;
2288834   +end;
MPRINT(EM_DIAGRAM):   end;
2288835   +
2288836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288837   +*** Checking missing input Interval
2288838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2288839   +
2288840   +IF NMISS(
2288841   +   AcceptedCmpTotal ,
2288842   +   Age ,
2288843   +   Frq ,
2288844   +   Income ,
2288845   +   Kidhome ,
2288846   +   Mnt ,
2288847   +   MntFishProducts ,
2288848   +   MntFruits ,
2288849   +   MntGoldProds ,
2288850   +   MntMeatProducts ,
2288851   +   MntSweetProducts ,
2288852   +   MntWines ,
2288853   +   MonthsAsCustomer ,
2288854   +   NumCatalogPurchases ,
2288855   +   NumDealsPurchases ,
2288856   +   NumDistPurchases ,
2288857   +   NumStorePurchases ,
2288858   +   NumWebPurchases ,
2288859   +   NumWebVisitsMonth ,
2288860   +   RFMstat ,
2288861   +   RMntFrq ,
2288862   +   Recency ,
2288863   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2288864   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2288865   +
2288866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288867   +END;
MPRINT(EM_DIAGRAM):   END;
2288868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288869   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2288870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288872   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2288873   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2288874   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2288875   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2288876   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2288877   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2288878   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2288879   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2288880   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2288881   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2288882   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2288883   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2288884   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2288885   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2288886   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2288887   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2288888   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2288889   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2288890   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2288891   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2288892   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2288893   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2288894   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2288895   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2288896   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2288897   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2288898   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2288899   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2288900   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2288901   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2288902   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2288903   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2288904   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2288905   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2288906   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2288907   +END;
MPRINT(EM_DIAGRAM):   END;
2288908   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288909   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2288910   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2288911   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2288912   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2288913   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2288914   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2288915   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2288916   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2288917   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2288918   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2288919   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2288920   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2288921   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2288922   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2288923   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2288924   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2288925   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2288926   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2288927   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2288928   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2288929   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2288930   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2288931   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2288932   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2288933   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2288934   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2288935   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2288936   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2288937   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2288938   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2288939   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2288940   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2288941   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2288942   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2288943   +   ELSE S_NumCatalogPurchases
2288944   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2288945   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2288946   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2288947   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2288948   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2288949   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2288950   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2288951   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2288952   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2288953   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2288954   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2288955   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2288956   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2288957   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2288958   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2288959   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2288960   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2288961   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2288962   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2288963   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2288964   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2288965   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2288966   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2288967   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2288968   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2288969   +END;
MPRINT(EM_DIAGRAM):   END;
2288970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288971   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2288972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288974   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2288975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288977   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2288978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288979   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288980   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2288981   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2288982   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2288983   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2288984   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2288985   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2288986   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2288987   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2288988   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2288989   +          +     1.32037113020393 * S_NumDealsPurchases
2288990   +          +     0.42879249227132 * S_NumDistPurchases
2288991   +          +    -0.89190172778783 * S_NumStorePurchases
2288992   +          +    -0.87975442613962 * S_NumWebPurchases
2288993   +          +     2.98977282825831 * S_NumWebVisitsMonth
2288994   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2288995   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2288996   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 *
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 *
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts +
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 *
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines +
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases +
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases +
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases +
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 *
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2288997   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2288998   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2288999   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2289000   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2289001   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2289002   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2289003   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2289004   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2289005   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2289006   +          +    -1.16737670931605 * S_NumDealsPurchases
2289007   +          +     0.08205195039242 * S_NumDistPurchases
2289008   +          +    -0.65367044520084 * S_NumStorePurchases
2289009   +          +     2.39693083674757 * S_NumWebPurchases
2289010   +          +     0.18432526469897 * S_NumWebVisitsMonth
2289011   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2289012   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2289013   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 *
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 *
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts +
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 *
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines +
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases +
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases +
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases +
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 *
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2289014   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2289015   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2289016   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2289017   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2289018   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2289019   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2289020   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2289021   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2289022   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2289023   +          +     0.76616480025024 * S_NumDealsPurchases
2289024   +          +     0.42823368706255 * S_NumDistPurchases
2289025   +          +    -1.16998364854907 * S_NumStorePurchases
2289026   +          +     -1.0841896541746 * S_NumWebPurchases
2289027   +          +     2.74837744375079 * S_NumWebVisitsMonth
2289028   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2289029   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2289030   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 *
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 *
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts +
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 *
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines +
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases +
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases +
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases +
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 *
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2289031   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2289032   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2289033   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2289034   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2289035   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2289036   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2289037   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2289038   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2289039   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2289040   +          +     0.78421010501058 * S_NumDealsPurchases
2289041   +          +     0.01075885160671 * S_NumDistPurchases
2289042   +          +    -1.99395040717832 * S_NumStorePurchases
2289043   +          +    -1.02908330834262 * S_NumWebPurchases
2289044   +          +     2.79163466516477 * S_NumWebVisitsMonth
2289045   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2289046   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2289047   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 *
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 *
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts +
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 *
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines +
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases +
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases +
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases +
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 *
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2289048   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2289049   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2289050   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2289051   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2289052   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2289053   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2289054   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2289055   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2289056   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2289057   +          +    -1.04219068390022 * S_NumDealsPurchases
2289058   +          +    -0.45770204483973 * S_NumDistPurchases
2289059   +          +    -0.04941442229195 * S_NumStorePurchases
2289060   +          +     0.67187353161183 * S_NumWebPurchases
2289061   +          +     2.01907760553871 * S_NumWebVisitsMonth
2289062   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2289063   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2289064   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 *
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 *
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts +
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 *
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 *
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 *
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 *
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq +
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2289065   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2289066   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2289067   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2289068   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2289069   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 +
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 *
HigherEducationBinary0 ;
2289070   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2289071   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2289072   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2289073   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2289074   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 *
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 +
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 *
HigherEducationBinary0 ;
2289075   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2289076   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2289077   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2289078   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2289079   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 +
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 *
HigherEducationBinary0 ;
2289080   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2289081   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2289082   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2289083   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2289084   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 +
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 *
HigherEducationBinary0 ;
2289085   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2289086   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2289087   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2289088   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2289089   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 *
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 +
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 *
HigherEducationBinary0 ;
2289090   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2289091   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2289092   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2289093   +          +     2.58907527032049 * Marital_StatusDivorced
2289094   +          +    -2.45549008158921 * Marital_StatusMarried
2289095   +          +     2.56223650840768 * Marital_StatusSingle
2289096   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle +
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 *
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 *
Marital_StatusTogether ;
2289097   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2289098   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2289099   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2289100   +          +     0.83917299191368 * Marital_StatusDivorced
2289101   +          +    -0.62624692699191 * Marital_StatusMarried
2289102   +          +    -0.22585060624911 * Marital_StatusSingle
2289103   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle +
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 *
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 *
Marital_StatusTogether ;
2289104   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2289105   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2289106   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2289107   +          +    -0.65063506696715 * Marital_StatusDivorced
2289108   +          +    -2.37495865381256 * Marital_StatusMarried
2289109   +          +    -0.54954654146904 * Marital_StatusSingle
2289110   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle +
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 *
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 *
Marital_StatusTogether ;
2289111   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2289112   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2289113   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2289114   +          +     0.16185824798364 * Marital_StatusDivorced
2289115   +          +    -0.08142416735136 * Marital_StatusMarried
2289116   +          +    -0.20392270385969 * Marital_StatusSingle
2289117   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle +
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation +
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced +
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle +
-0.16702436233017 * Marital_StatusTogether ;
2289118   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2289119   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2289120   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2289121   +          +      -0.516522631078 * Marital_StatusDivorced
2289122   +          +    -0.61661247789976 * Marital_StatusMarried
2289123   +          +    -0.99533130308294 * Marital_StatusSingle
2289124   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle +
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation +
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced +
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle +
-0.36897004084592 * Marital_StatusTogether ;
2289125   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2289126   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2289127   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2289128   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2289129   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2289130   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2289131   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2289132   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2289133   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2289134   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2289135   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2289136   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2289137   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2289138   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2289139   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2289140   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2289141   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2289142   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2289143   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2289144   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2289145   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2289146   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2289147   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2289148   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2289149   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2289150   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2289151   +END;
MPRINT(EM_DIAGRAM):   END;
2289152   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289153   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2289154   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2289155   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2289156   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2289157   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2289158   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2289159   +END;
MPRINT(EM_DIAGRAM):   END;
2289160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289161   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2289162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289163   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289164   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2289165   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2289166   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2289167   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2289168   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2289169   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2289170   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2289171   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2289172   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2289173   +          +    -0.03801022287706 * S_NumDealsPurchases
2289174   +          +    -1.50723574966419 * S_NumDistPurchases
2289175   +          +    -0.21514545448485 * S_NumStorePurchases
2289176   +          +    -0.50179555233865 * S_NumWebPurchases
2289177   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2289178   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2289179   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2289180   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 *
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 *
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts +
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 *
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 *
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 *
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 *
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq +
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2289181   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2289182   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2289183   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2289184   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2289185   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2289186   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2289187   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2289188   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2289189   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2289190   +          +     0.70551335536975 * S_NumDealsPurchases
2289191   +          +     0.02824488988803 * S_NumDistPurchases
2289192   +          +    -0.47958123842808 * S_NumStorePurchases
2289193   +          +     1.04559003239583 * S_NumWebPurchases
2289194   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2289195   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2289196   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2289197   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 *
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 *
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts +
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 *
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 *
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 *
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 *
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq +
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2289198   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2289199   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2289200   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2289201   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2289202   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2289203   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2289204   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2289205   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2289206   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2289207   +          +    -0.28907339261907 * S_NumDealsPurchases
2289208   +          +     0.04310505858352 * S_NumDistPurchases
2289209   +          +    -0.99594604666889 * S_NumStorePurchases
2289210   +          +    -0.58870940220114 * S_NumWebPurchases
2289211   +          +     0.84018399925148 * S_NumWebVisitsMonth
2289212   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2289213   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2289214   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 *
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 *
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts +
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 *
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 *
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 *
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 *
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq +
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2289215   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2289216   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2289217   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2289218   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2289219   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2289220   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2289221   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2289222   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2289223   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2289224   +          +     0.52917289878604 * S_NumDealsPurchases
2289225   +          +     0.30974142545809 * S_NumDistPurchases
2289226   +          +    -0.36081450643799 * S_NumStorePurchases
2289227   +          +    -0.28418053386759 * S_NumWebPurchases
2289228   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2289229   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2289230   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2289231   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 *
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 *
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts +
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 *
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 *
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 *
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 *
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq +
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2289232   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2289233   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2289234   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2289235   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2289236   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2289237   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2289238   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2289239   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2289240   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2289241   +          +    -0.47500053723253 * S_NumDealsPurchases
2289242   +          +     0.41421086319635 * S_NumDistPurchases
2289243   +          +     0.69664835428137 * S_NumStorePurchases
2289244   +          +     0.66359306812968 * S_NumWebPurchases
2289245   +          +     0.77931462528741 * S_NumWebVisitsMonth
2289246   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2289247   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2289248   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 *
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 *
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts +
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 *
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 *
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 *
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 *
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq +
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2289249   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2289250   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2289251   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2289252   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2289253   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 *
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 +
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 *
HigherEducationBinary0 ;
2289254   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2289255   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2289256   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2289257   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2289258   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 *
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 +
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 *
HigherEducationBinary0 ;
2289259   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2289260   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2289261   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2289262   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2289263   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 *
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 +
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 *
HigherEducationBinary0 ;
2289264   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2289265   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2289266   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2289267   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2289268   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 *
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 +
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 *
HigherEducationBinary0 ;
2289269   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2289270   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2289271   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2289272   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2289273   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 *
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 +
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 *
HigherEducationBinary0 ;
2289274   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2289275   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2289276   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2289277   +          +    -1.34742914042312 * Marital_StatusDivorced
2289278   +          +    -0.75378934918763 * Marital_StatusMarried
2289279   +          +    -1.85411678929217 * Marital_StatusSingle
2289280   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle +
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 *
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 *
Marital_StatusTogether ;
2289281   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2289282   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2289283   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2289284   +          +     0.47958659206261 * Marital_StatusDivorced
2289285   +          +     -0.9665584294045 * Marital_StatusMarried
2289286   +          +      0.9733784530538 * Marital_StatusSingle
2289287   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle +
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 *
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 *
Marital_StatusTogether ;
2289288   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2289289   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2289290   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2289291   +          +    -0.56894207908284 * Marital_StatusDivorced
2289292   +          +    -0.96715106987195 * Marital_StatusMarried
2289293   +          +     1.18678144721443 * Marital_StatusSingle
2289294   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle +
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation +
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced +
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle +
1.05940264255347 * Marital_StatusTogether ;
2289295   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2289296   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2289297   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2289298   +          +     -0.6061959224661 * Marital_StatusDivorced
2289299   +          +     0.03495844244684 * Marital_StatusMarried
2289300   +          +    -0.63896361063244 * Marital_StatusSingle
2289301   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle +
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation +
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced +
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle +
0.74357887057422 * Marital_StatusTogether ;
2289302   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2289303   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2289304   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2289305   +          +     0.82178907301319 * Marital_StatusDivorced
2289306   +          +     1.69543553114589 * Marital_StatusMarried
2289307   +          +     -2.1272067363559 * Marital_StatusSingle
2289308   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle +
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 *
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 *
Marital_StatusTogether ;
2289309   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2289310   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2289311   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2289312   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2289313   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2289314   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2289315   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2289316   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2289317   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2289318   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2289319   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2289320   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2289321   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2289322   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2289323   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2289324   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2289325   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2289326   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2289327   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2289328   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2289329   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2289330   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2289331   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2289332   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2289333   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2289334   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2289335   +END;
MPRINT(EM_DIAGRAM):   END;
2289336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289337   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2289338   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2289339   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2289340   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2289341   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2289342   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2289343   +END;
MPRINT(EM_DIAGRAM):   END;
2289344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289345   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2289346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289347   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289348   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2289349   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2289350   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 +
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 +
-1.38760297105319 * H1x1_6 ;
2289351   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2289352   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2289353   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 +
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 +
2.71965753640902 * H1x1_6 ;
2289354   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2289355   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2289356   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 +
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 +
-0.94725163293394 * H1x1_6 ;
2289357   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2289358   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2289359   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 +
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 +
0.66585878141635 * H1x1_6 ;
2289360   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2289361   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2289362   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 +
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 +
3.57592566919388 * H1x1_6 ;
2289363   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2289364   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2289365   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 +
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 +
-0.32006241006585 * H1x1_6 ;
2289366   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2289367   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2289368   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2289369   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 *
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 +
-0.07237646966438 * H1x2_6 ;
2289370   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2289371   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2289372   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2289373   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 +
0.35471332651631 * H1x2_6 ;
2289374   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2289375   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2289376   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2289377   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 +
0.5218140468737 * H1x2_6 ;
2289378   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2289379   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2289380   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2289381   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 +
-0.67920869444907 * H1x2_6 ;
2289382   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2289383   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2289384   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2289385   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 +
1.1175989027563 * H1x2_6 ;
2289386   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2289387   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2289388   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2289389   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 *
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5
+ 1.54589390085972 * H1x2_6 ;
2289390   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2289391   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2289392   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2289393   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2289394   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2289395   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2289396   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2289397   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2289398   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2289399   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2289400   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2289401   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2289402   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2289403   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2289404   +END;
MPRINT(EM_DIAGRAM):   END;
2289405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289406   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2289407   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2289408   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2289409   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2289410   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2289411   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2289412   +END;
MPRINT(EM_DIAGRAM):   END;
2289413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289414   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2289415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289416   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289417   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2289418   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2289419   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 +
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 +
1.54726164498938 * H2x1_6 ;
2289420   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2289421   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2289422   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2289423   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2289424   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2289425   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2289426   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2289427   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2289428   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2289429   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2289430   +END;
MPRINT(EM_DIAGRAM):   END;
2289431   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289432   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2289433   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2289434   +END;
MPRINT(EM_DIAGRAM):   END;
2289435   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2289436   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2289437   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2289438   +END;
MPRINT(EM_DIAGRAM):   END;
2289439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289440   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2289441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289442   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2289443   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2289444   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2289445   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2289446   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2289447   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2289448   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2289449   +END;
MPRINT(EM_DIAGRAM):   END;
2289450   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2289451   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2289452   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2289453   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2289454    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2289455    quit;
2289456    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2289457    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2289458    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2289459    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2289460    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2289461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289462    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2289463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289465    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2289466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289469    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2289470    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2289471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289472    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2289473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2289474    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2289475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289478    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2289479    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289480    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289481    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2289482    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2289482  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
2289483    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289484    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2289485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289486    filename _pref
2289486  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2289487    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2289488    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2289489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289490   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2289491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289492   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2289493   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2289494   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2289495    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2289496    quit;
2289497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2289498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2289499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2289500    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2289501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2289502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2289504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289506    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2289507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2289511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2289512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289513    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2289514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2289515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2289516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2289520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289521    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2289523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2289523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2289524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289525    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2289526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289527    filename _pref
2289527  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2289528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2289529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2289530   +
2289531   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2289532   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2289532  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2289533   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2289534   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2289535   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2289536   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2289537   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2289538    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2289539    quit;
2289540    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2289541    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2289542    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2289543    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2289544    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2289545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289546    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2289547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289549    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2289550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289552    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289553    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2289554    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2289555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289556    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2289557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289558    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2289559    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289560    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289561    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289562    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2289563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289564    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289565    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2289566    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2289566  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2289567    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289568    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2289569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289570    filename _pref
2289570  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2289571    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2289572    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2289573   +
2289574   +
2289575   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2289576   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2289577   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2289578   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2289579   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2289580   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289581   +
2289582   +
2289583   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2289584   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2289585   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2289586   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2289587   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2289588   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289589   +
2289590   +
2289591   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2289592   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2289593   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2289594   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2289595   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2289596   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289597   +
2289598   +
2289599   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2289600   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2289601   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2289602   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2289603   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2289604   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289605   +
2289606   +
2289607   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2289608   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2289609   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2289610   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2289611   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2289612   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289613   +
2289614   +
2289615   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2289616   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2289617   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2289618   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2289619   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2289620   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289621   +
2289622   +
2289623   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2289624   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2289625   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2289626   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2289627   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2289628   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289629   +
2289630   +
2289631   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2289632   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2289633   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2289634   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2289635   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2289636   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289637   +if
2289638   +_FILTERNORM1 not in ( '.')
2289639   + and
2289640   +_FILTERNORM2 not in ( '.')
2289641   + and
2289642   +_FILTERNORM3 not in ( '.')
2289643   + and
2289644   +_FILTERNORM4 not in ( '.')
2289645   + and
2289646   +_FILTERNORM5 not in ( '.')
2289647   + and
2289648   +_FILTERNORM6 not in ( '.')
2289649   + and
2289650   +_FILTERNORM7 not in ( ' ')
2289651   + and
2289652   +_FILTERNORM8 not in ( ' ')
2289653   +and
2289654   +( Dt_Customer ne .)
2289655   +and ( Income ne . and (Income<=107000))
2289656   +and ( Kidhome ne .)
2289657   +and ( MntFishProducts ne .)
2289658   +and ( MntFruits ne .)
2289659   +and ( MntGoldProds ne .)
2289660   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2289661   +and ( MntSweetProducts ne .)
2289662   +and ( MntWines ne .)
2289663   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2289664   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2289665   +and ( NumStorePurchases ne .)
2289666   +and ( NumWebPurchases ne .)
2289667   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2289668   +and ( Recency ne .)
2289669   +and ( Teenhome ne .)
2289670   +and ( Year_Birth ne .)
2289671   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2289672   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2289673   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2289674   +end;
MPRINT(EM_DIAGRAM):   end;
2289675   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2289676   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2289677    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2289678    quit;
2289679    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2289680    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2289681    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2289682    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2289683    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2289684    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289685    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2289686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289688    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2289689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289691    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289692    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2289693    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2289694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289695    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2289696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2289697    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2289698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2289701    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2289702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2289703    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289704    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2289705    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2289705  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2289706    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289707    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2289708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289709    %macro varDept(fcmpdata=,id=);
2289710    %global nobs&id scoreFlag&id;
2289711    %let scoreFlag&id = 0;
2289712    %if &id=1 or ^&fcmpStart %then %do;
2289713    proc sort data=&fcmpdata out=_temp&id nodupkey;
2289714    by NAME;
2289715    where id=&id and LHS in( %let j=1;
2289716    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2289717    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2289718    "&var" %let j = %eval(&j+1);
2289719    %end;
2289720    );
2289721    run;
2289722    %let dsid = %sysfunc(open(_temp&id));
2289723    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2289724    %let dsid = %sysfunc(close(&dsid));
2289725    %if &&nobs&id %then %do;
2289726    %let scoreFlag&id = 1;
2289727    %let fcmpStart = 1;
2289728    %end;
2289729    %else %let fcmpStart = 0;
2289730    %end;
2289731    %else %do;
2289732    proc sort data=&fcmpdata out=_tempid;
2289733    where id=&id;
2289734    by LHS;
2289735    run;
2289736    %let dsid = %sysfunc(open(_tempid));
2289737    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2289738    %let dsid = %sysfunc(close(&dsid));
2289739    %if ^&&nobs&id %then %do;
2289740    proc datasets lib=work nolist;
2289741    delete _tempid;
2289742    run;
2289743    quit;
2289744    %end;
2289745    %else %do;
2289746    data _tempAll;
2289747    set %let j=%eval(&id-1);
2289748    %do x=1 %to &j;
2289749    %if &&nobs&x %then %do;
2289750    _temp&x %end;
2289751    %end;
2289752    ;
2289753    run;
2289754    proc sql;
2289755    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2289755  ! work._tempid p2 where p.name=p2.lhs;
2289756    quit;
2289757    data _temp&id;
2289758    set _temp&id;
2289759    where LHS ne '' and NAME ne '' and Node ne '';
2289760    run;
2289761    proc datasets lib=work nolist;
2289762    delete _tempAll;
2289763    run;
2289764    %let dsid = %sysfunc(open(_temp&id));
2289765    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2289766    %let dsid = %sysfunc(close(&dsid));
2289767    %if ^&&nobs&id %then %do;
2289768    proc datasets lib=work nolist;
2289769    delete _temp&id;
2289770    run;
2289771    quit;
2289772    %end;
2289773    %else %do;
2289774    %let scoreFlag&id = 1;
2289775    data _temp&id;
2289776    set _temp&id;
2289777    where LHS ne NAME and node ne '';
2289778    run;
2289779    %let dsid = %sysfunc(open(_temp&id));
2289780    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2289781    %let dsid = %sysfunc(close(&dsid));
2289782    %if ^&&nobs&id %then %do;
2289783    proc datasets lib=work nolist;
2289784    delete _temp&id;
2289785    run;
2289786    quit;
2289787    %end;
2289788    %else %do;
2289789    proc sort data=_temp&id nodupkey;
2289790    by LHS NAME;
2289791    run;
2289792    %end;
2289793    %end;
2289794    %end;
2289795    %end;
2289796    %mend varDept;
2289797    %macro optCode(outdata=fcmpdata);
2289798    %global fcmpStart;
2289799    %let fcmpStart = 0;
2289800    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2289801    %let NumNodes=9;
2289802    %do k=1 %to &NumNodes;
2289803    %vardept(fcmpdata=&outdata, id=&k);
2289804    %end;
2289805    %mend optCode;
2289806    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2289807    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2289808    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2289809    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2289810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2289811    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2289812    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2289813    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2289814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289815    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2289816    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2289816  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2289817    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2289818    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2289819    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2289820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2289821    filename _pref
2289821  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2289822    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2289823    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2289824   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2289825   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2289826   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2289827   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2289828   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2289829   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2289830   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2289831   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2289832   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2289833   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2289834   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2289835   +LENGTH _WARN_ $4
2289836   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2289837   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2289838   +
2289839   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2289840   +
2289841   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2289842   +
2289843   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2289844   +
2289845   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2289846   +
2289847   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2289848   +
2289849   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2289850   +
2289851   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2289852   +
2289853   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2289854   +
2289855   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2289856   +
2289857   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2289858   +
2289859   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2289860   +
2289861   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2289862   +
2289863   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2289864   +
2289865   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2289866   +
2289867   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2289868   +
2289869   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2289870   +
2289871   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2289872   +
2289873   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2289874   +
2289875   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2289876   +
2289877   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2289878   +
2289879   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2289880   +
2289881   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2289882   +
2289883   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2289884   +
2289885   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2289886   +
2289887   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2289888   +
2289889   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2289890   +
2289891   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2289892   +
2289893   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2289894   +
2289895   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2289896   +
2289897   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2289898   +
2289899   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2289900   +
2289901   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2289902   +
2289903   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2289904   +
2289905   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2289906   +
2289907   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2289908   +
2289909   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2289910   +
2289911   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2289912   +
2289913   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2289914   +
2289915   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2289916   +
2289917   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2289918   +
2289919   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2289920   +
2289921   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2289922   +
2289923   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2289924   +
2289925   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2289926   +
2289927   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2289928   +
2289929   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2289930   +
2289931   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2289932   +
2289933   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2289934   +
2289935   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2289936   +
2289937   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2289938   +
2289939   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2289940   +
2289941   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2289942   +
2289943   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2289944   +
2289945   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2289946   +
2289947   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2289948   +
2289949   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2289950   +
2289951   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2289952   +
2289953   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2289954   +
2289955   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2289956   +
2289957   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2289958   +
2289959   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2289960   +
2289961   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2289962   +
2289963   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2289964   +
2289965   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2289966   +
2289967   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2289968   +
2289969   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2289970   +
2289971   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2289972   +
2289973   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2289974   +
2289975   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2289976   +
2289977   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2289978   +
2289979   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2289980   +
2289981   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2289982   +
2289983   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2289984   +
2289985   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2289986   +
2289987   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2289988   +
2289989   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2289990   +
2289991   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2289992   +
2289993   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2289994   +
2289995   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2289996   +
2289997   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2289998   +
2289999   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2290000   +
2290001   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2290002   +
2290003   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2290004   +
2290005   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2290006   +
2290007   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2290008   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2290009   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2290010   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290013   +end;
MPRINT(EM_DIAGRAM):   end;
2290014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290016   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2290017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290019   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2290020   +   end;
MPRINT(EM_DIAGRAM):   end;
2290021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290022   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2290023   +   end;
MPRINT(EM_DIAGRAM):   end;
2290024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290025   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290028   +   end;
MPRINT(EM_DIAGRAM):   end;
2290029   +end;
MPRINT(EM_DIAGRAM):   end;
2290030   +
2290031   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2290032   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2290033   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2290034   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2290035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290037   +end;
MPRINT(EM_DIAGRAM):   end;
2290038   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290040   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2290041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290043   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2290044   +   end;
MPRINT(EM_DIAGRAM):   end;
2290045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290046   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2290047   +   end;
MPRINT(EM_DIAGRAM):   end;
2290048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290049   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2290050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290052   +   end;
MPRINT(EM_DIAGRAM):   end;
2290053   +end;
MPRINT(EM_DIAGRAM):   end;
2290054   +
2290055   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2290056   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2290057   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2290058   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2290059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290061   +end;
MPRINT(EM_DIAGRAM):   end;
2290062   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290064   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2290065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290067   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2290068   +   end;
MPRINT(EM_DIAGRAM):   end;
2290069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290070   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2290071   +   end;
MPRINT(EM_DIAGRAM):   end;
2290072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290073   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2290074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290076   +   end;
MPRINT(EM_DIAGRAM):   end;
2290077   +end;
MPRINT(EM_DIAGRAM):   end;
2290078   +
2290079   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2290080   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2290081   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2290082   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2290083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290085   +end;
MPRINT(EM_DIAGRAM):   end;
2290086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290088   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2290089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290091   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2290092   +   end;
MPRINT(EM_DIAGRAM):   end;
2290093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290094   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2290095   +   end;
MPRINT(EM_DIAGRAM):   end;
2290096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290097   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2290098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290100   +   end;
MPRINT(EM_DIAGRAM):   end;
2290101   +end;
MPRINT(EM_DIAGRAM):   end;
2290102   +
2290103   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2290104   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2290105   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2290106   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2290107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290109   +end;
MPRINT(EM_DIAGRAM):   end;
2290110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290112   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2290113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290115   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2290116   +   end;
MPRINT(EM_DIAGRAM):   end;
2290117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290118   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2290119   +   end;
MPRINT(EM_DIAGRAM):   end;
2290120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290121   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2290122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290124   +   end;
MPRINT(EM_DIAGRAM):   end;
2290125   +end;
MPRINT(EM_DIAGRAM):   end;
2290126   +
2290127   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2290128   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2290129   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2290130   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2290131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290133   +end;
MPRINT(EM_DIAGRAM):   end;
2290134   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290136   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2290137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290139   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2290140   +   end;
MPRINT(EM_DIAGRAM):   end;
2290141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290142   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2290143   +   end;
MPRINT(EM_DIAGRAM):   end;
2290144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290145   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2290146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290148   +   end;
MPRINT(EM_DIAGRAM):   end;
2290149   +end;
MPRINT(EM_DIAGRAM):   end;
2290150   +
2290151   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2290152   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2290153   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2290154   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2290155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290157   +end;
MPRINT(EM_DIAGRAM):   end;
2290158   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290160   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2290161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290162   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2290163   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2290164   +   end;
MPRINT(EM_DIAGRAM):   end;
2290165   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2290166   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2290167   +   end;
MPRINT(EM_DIAGRAM):   end;
2290168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290169   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2290170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290172   +   end;
MPRINT(EM_DIAGRAM):   end;
2290173   +end;
MPRINT(EM_DIAGRAM):   end;
2290174   +
2290175   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2290176   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2290177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2290178   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2290179   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2290180   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2290181   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2290182   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2290183   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2290184   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2290185   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2290186   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2290187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290189   +end;
MPRINT(EM_DIAGRAM):   end;
2290190   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290191   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2290192   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2290193   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290194   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2290195   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2290196   +   end;
MPRINT(EM_DIAGRAM):   end;
2290197   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2290198   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2290199   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2290200   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2290201   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2290202   +   end;
MPRINT(EM_DIAGRAM):   end;
2290203   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2290204   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2290205   +   end;
MPRINT(EM_DIAGRAM):   end;
2290206   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2290207   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2290208   +   end;
MPRINT(EM_DIAGRAM):   end;
2290209   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2290210   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2290211   +   end;
MPRINT(EM_DIAGRAM):   end;
2290212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290213   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2290214   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2290215   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2290216   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2290217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290219   +   end;
MPRINT(EM_DIAGRAM):   end;
2290220   +end;
MPRINT(EM_DIAGRAM):   end;
2290221   +
2290222   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2290223   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2290224   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2290225   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2290226   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2290227   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2290228   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2290229   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2290230   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2290231   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2290232   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2290233   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2290234   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2290235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290237   +end;
MPRINT(EM_DIAGRAM):   end;
2290238   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290239   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2290240   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2290241   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290242   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2290243   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2290244   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2290245   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2290246   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2290247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290248   +         end;
MPRINT(EM_DIAGRAM):   end;
2290249   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2290250   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2290251   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2290252   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290253   +            end;
MPRINT(EM_DIAGRAM):   end;
2290254   +         end;
MPRINT(EM_DIAGRAM):   end;
2290255   +      end;
MPRINT(EM_DIAGRAM):   end;
2290256   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2290257   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2290258   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2290259   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290260   +         end;
MPRINT(EM_DIAGRAM):   end;
2290261   +      end;
MPRINT(EM_DIAGRAM):   end;
2290262   +   end;
MPRINT(EM_DIAGRAM):   end;
2290263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290264   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2290265   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2290266   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290267   +      end;
MPRINT(EM_DIAGRAM):   end;
2290268   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2290269   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2290270   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2290271   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2290272   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2290273   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2290274   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290275   +         end;
MPRINT(EM_DIAGRAM):   end;
2290276   +      end;
MPRINT(EM_DIAGRAM):   end;
2290277   +   end;
MPRINT(EM_DIAGRAM):   end;
2290278   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2290279   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2290280   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2290281   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2290282   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2290283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290285   +   end;
MPRINT(EM_DIAGRAM):   end;
2290286   +end;
MPRINT(EM_DIAGRAM):   end;
2290287   +
2290288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290289   +*** Checking missing input Interval
2290290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2290291   +
2290292   +IF NMISS(
2290293   +   AcceptedCmpTotal ,
2290294   +   Age ,
2290295   +   Frq ,
2290296   +   Income ,
2290297   +   Kidhome ,
2290298   +   Mnt ,
2290299   +   MntFishProducts ,
2290300   +   MntFruits ,
2290301   +   MntGoldProds ,
2290302   +   MntMeatProducts ,
2290303   +   MntSweetProducts ,
2290304   +   MntWines ,
2290305   +   MonthsAsCustomer ,
2290306   +   NumCatalogPurchases ,
2290307   +   NumDealsPurchases ,
2290308   +   NumDistPurchases ,
2290309   +   NumStorePurchases ,
2290310   +   NumWebPurchases ,
2290311   +   NumWebVisitsMonth ,
2290312   +   RFMstat ,
2290313   +   RMntFrq ,
2290314   +   Recency ,
2290315   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2290316   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2290317   +
2290318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290319   +END;
MPRINT(EM_DIAGRAM):   END;
2290320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290321   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2290322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290323   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290324   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2290325   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2290326   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2290327   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2290328   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2290329   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2290330   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2290331   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2290332   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2290333   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2290334   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2290335   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2290336   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2290337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2290338   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2290339   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2290340   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2290341   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2290342   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2290343   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2290344   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2290345   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2290346   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2290347   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2290348   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2290349   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2290350   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2290351   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2290352   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2290353   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2290354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2290355   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2290356   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2290357   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2290358   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2290359   +END;
MPRINT(EM_DIAGRAM):   END;
2290360   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290361   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2290362   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2290363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2290364   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2290365   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2290366   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2290367   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2290368   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2290369   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2290370   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2290371   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2290372   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2290373   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2290374   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2290375   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2290376   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2290377   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2290378   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2290379   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2290380   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2290381   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2290382   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2290383   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2290384   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2290385   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2290386   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2290387   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2290388   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2290389   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2290390   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2290391   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2290392   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2290393   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
2290394   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2290395   +   ELSE S_NumCatalogPurchases
2290396   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2290397   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2290398   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2290399   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2290400   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2290401   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2290402   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2290403   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2290404   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2290405   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2290406   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2290407   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2290408   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2290409   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2290410   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2290411   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2290412   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2290413   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2290414   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2290415   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2290416   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2290417   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2290418   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2290419   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2290420   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2290421   +END;
MPRINT(EM_DIAGRAM):   END;
2290422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290423   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2290424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290426   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2290427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290429   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2290430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290432   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2290433   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2290434   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2290435   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2290436   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2290437   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2290438   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2290439   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2290440   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2290441   +          +    -1.18466001117424 * S_NumDealsPurchases
2290442   +          +     -0.1371252133567 * S_NumDistPurchases
2290443   +          +     1.92719775731123 * S_NumStorePurchases
2290444   +          +     1.23184249192116 * S_NumWebPurchases
2290445   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2290446   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2290447   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2290448   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2290449   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2290450   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2290451   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2290452   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2290453   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2290454   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2290455   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2290456   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2290457   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2290458   +          +     0.63616523425865 * S_NumDealsPurchases
2290459   +          +     0.45460056261546 * S_NumDistPurchases
2290460   +          +    -0.61009999017225 * S_NumStorePurchases
2290461   +          +     1.85193755731081 * S_NumWebPurchases
2290462   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2290463   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2290464   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2290465   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2290466   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2290467   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2290468   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2290469   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2290470   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2290471   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2290472   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2290473   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2290474   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2290475   +          +      1.8907968580473 * S_NumDealsPurchases
2290476   +          +     0.01244124801764 * S_NumDistPurchases
2290477   +          +    -2.34409118104622 * S_NumStorePurchases
2290478   +          +    -1.80820043087435 * S_NumWebPurchases
2290479   +          +     2.40219682136039 * S_NumWebVisitsMonth
2290480   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2290481   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2290482   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2290483   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2290484   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2290485   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2290486   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2290487   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2290488   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2290489   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2290490   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2290491   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2290492   +          +     0.28209537604198 * S_NumDealsPurchases
2290493   +          +      0.6450277971767 * S_NumDistPurchases
2290494   +          +     0.85050092520609 * S_NumStorePurchases
2290495   +          +    -0.53920307215941 * S_NumWebPurchases
2290496   +          +     3.01106015100147 * S_NumWebVisitsMonth
2290497   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2290498   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2290499   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2290500   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2290501   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2290502   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2290503   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2290504   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2290505   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2290506   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2290507   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2290508   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2290509   +          +    -0.36642526324451 * S_NumDealsPurchases
2290510   +          +     -0.6091014843932 * S_NumDistPurchases
2290511   +          +    -0.21154626182088 * S_NumStorePurchases
2290512   +          +    -0.10361347071364 * S_NumWebPurchases
2290513   +          +     1.36358817627784 * S_NumWebVisitsMonth
2290514   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2290515   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2290516   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2290517   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2290518   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2290519   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2290520   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2290521   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2290522   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2290523   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2290524   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2290525   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2290526   +          +    -0.14868505161718 * S_NumDealsPurchases
2290527   +          +    -0.08395384711805 * S_NumDistPurchases
2290528   +          +     0.60525238179245 * S_NumStorePurchases
2290529   +          +     0.04555100214276 * S_NumWebPurchases
2290530   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2290531   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2290532   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2290533   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2290534   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2290535   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2290536   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2290537   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2290538   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
2290539   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2290540   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2290541   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2290542   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2290543   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
2290544   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2290545   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2290546   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2290547   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2290548   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
2290549   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2290550   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2290551   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2290552   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2290553   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
2290554   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2290555   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2290556   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2290557   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2290558   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
2290559   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2290560   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2290561   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2290562   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2290563   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
2290564   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2290565   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2290566   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2290567   +          +     -0.7180104021039 * Marital_StatusDivorced
2290568   +          +      0.5957373170744 * Marital_StatusMarried
2290569   +          +    -0.86183942803988 * Marital_StatusSingle
2290570   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
2290571   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2290572   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2290573   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2290574   +          +     0.84772700244021 * Marital_StatusDivorced
2290575   +          +    -0.37049970188511 * Marital_StatusMarried
2290576   +          +     1.54291641732063 * Marital_StatusSingle
2290577   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
2290578   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2290579   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2290580   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2290581   +          +     0.73222548496385 * Marital_StatusDivorced
2290582   +          +    -0.50102202656102 * Marital_StatusMarried
2290583   +          +    -0.07207130428422 * Marital_StatusSingle
2290584   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
2290585   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2290586   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2290587   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2290588   +          +     0.25894719464799 * Marital_StatusDivorced
2290589   +          +    -1.95576501275834 * Marital_StatusMarried
2290590   +          +     2.65422185276746 * Marital_StatusSingle
2290591   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
2290592   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2290593   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2290594   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2290595   +          +     0.60936191204707 * Marital_StatusDivorced
2290596   +          +    -0.52190111190458 * Marital_StatusMarried
2290597   +          +    -0.60982305233136 * Marital_StatusSingle
2290598   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
2290599   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2290600   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2290601   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2290602   +          +    -1.44614502228294 * Marital_StatusDivorced
2290603   +          +      2.9001493892928 * Marital_StatusMarried
2290604   +          +    -2.60467399972513 * Marital_StatusSingle
2290605   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
2290606   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2290607   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2290608   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2290609   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2290610   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2290611   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2290612   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2290613   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2290614   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
2290615   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2290616   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2290617   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2290618   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2290619   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2290620   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2290621   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2290622   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2290623   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2290624   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2290625   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2290626   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2290627   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2290628   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2290629   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2290630   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2290631   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2290632   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2290633   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2290634   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2290635   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2290636   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2290637   +END;
MPRINT(EM_DIAGRAM):   END;
2290638   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290639   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2290640   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2290641   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2290642   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2290643   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2290644   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2290645   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2290646   +END;
MPRINT(EM_DIAGRAM):   END;
2290647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290648   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2290649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290651   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2290652   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2290653   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2290654   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2290655   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2290656   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2290657   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2290658   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2290659   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2290660   +          +    -0.46483717253931 * S_NumDealsPurchases
2290661   +          +    -0.53329008421157 * S_NumDistPurchases
2290662   +          +      0.2490774300193 * S_NumStorePurchases
2290663   +          +    -0.82755150673885 * S_NumWebPurchases
2290664   +          +     0.04007223822389 * S_NumWebVisitsMonth
2290665   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2290666   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2290667   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2290668   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2290669   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2290670   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2290671   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2290672   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2290673   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2290674   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2290675   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2290676   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2290677   +          +     0.75855101382458 * S_NumDealsPurchases
2290678   +          +     1.61754951768262 * S_NumDistPurchases
2290679   +          +    -0.48146714929729 * S_NumStorePurchases
2290680   +          +    -0.76460728035552 * S_NumWebPurchases
2290681   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2290682   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2290683   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2290684   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2290685   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2290686   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2290687   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2290688   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2290689   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2290690   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2290691   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2290692   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2290693   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2290694   +          +     0.75255317965748 * S_NumDealsPurchases
2290695   +          +     1.34900588315783 * S_NumDistPurchases
2290696   +          +    -0.17717469778048 * S_NumStorePurchases
2290697   +          +    -0.01560551546553 * S_NumWebPurchases
2290698   +          +     1.24315988674343 * S_NumWebVisitsMonth
2290699   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2290700   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2290701   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2290702   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2290703   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2290704   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2290705   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2290706   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2290707   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2290708   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2290709   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2290710   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2290711   +          +    -1.71127148178768 * S_NumDealsPurchases
2290712   +          +    -1.77527355221308 * S_NumDistPurchases
2290713   +          +    -1.40009594349363 * S_NumStorePurchases
2290714   +          +    -0.46471012062697 * S_NumWebPurchases
2290715   +          +     0.04619891083228 * S_NumWebVisitsMonth
2290716   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2290717   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2290718   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2290719   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2290720   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2290721   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2290722   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2290723   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2290724   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2290725   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2290726   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2290727   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2290728   +          +    -0.22204470395056 * S_NumDealsPurchases
2290729   +          +    -1.74490476011984 * S_NumDistPurchases
2290730   +          +     1.93538420108324 * S_NumStorePurchases
2290731   +          +     1.04892631742152 * S_NumWebPurchases
2290732   +          +     1.50717841566047 * S_NumWebVisitsMonth
2290733   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2290734   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2290735   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2290736   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2290737   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2290738   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2290739   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2290740   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2290741   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2290742   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2290743   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2290744   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2290745   +          +    -0.94690420785776 * S_NumDealsPurchases
2290746   +          +     1.87932706342204 * S_NumDistPurchases
2290747   +          +     0.31232717416487 * S_NumStorePurchases
2290748   +          +     1.51889492693355 * S_NumWebPurchases
2290749   +          +     0.04376853689795 * S_NumWebVisitsMonth
2290750   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2290751   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2290752   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2290753   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2290754   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2290755   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2290756   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2290757   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
2290758   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2290759   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2290760   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2290761   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2290762   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
2290763   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2290764   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2290765   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2290766   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2290767   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
2290768   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2290769   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2290770   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2290771   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2290772   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
2290773   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2290774   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2290775   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2290776   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2290777   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
2290778   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2290779   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2290780   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2290781   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2290782   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
2290783   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2290784   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2290785   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2290786   +          +     0.56030871857835 * Marital_StatusDivorced
2290787   +          +    -1.22448534379831 * Marital_StatusMarried
2290788   +          +     0.78141783495855 * Marital_StatusSingle
2290789   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
2290790   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2290791   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2290792   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2290793   +          +    -2.63452071552997 * Marital_StatusDivorced
2290794   +          +     0.61829054779121 * Marital_StatusMarried
2290795   +          +    -2.20743370246315 * Marital_StatusSingle
2290796   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
2290797   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2290798   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2290799   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2290800   +          +      -1.454102516731 * Marital_StatusDivorced
2290801   +          +     0.71488291465759 * Marital_StatusMarried
2290802   +          +     0.96038830049792 * Marital_StatusSingle
2290803   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
2290804   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2290805   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2290806   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2290807   +          +    -0.01160394891598 * Marital_StatusDivorced
2290808   +          +    -1.09054636482951 * Marital_StatusMarried
2290809   +          +      0.7793855479379 * Marital_StatusSingle
2290810   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
2290811   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2290812   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2290813   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2290814   +          +    -0.73414854875115 * Marital_StatusDivorced
2290815   +          +     0.46421425621114 * Marital_StatusMarried
2290816   +          +    -0.54512730625469 * Marital_StatusSingle
2290817   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
2290818   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2290819   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2290820   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2290821   +          +     0.25131188683384 * Marital_StatusDivorced
2290822   +          +     2.38279806963807 * Marital_StatusMarried
2290823   +          +     0.28897706448348 * Marital_StatusSingle
2290824   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
2290825   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2290826   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2290827   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2290828   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2290829   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2290830   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2290831   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2290832   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2290833   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
2290834   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2290835   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2290836   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2290837   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2290838   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2290839   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2290840   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2290841   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2290842   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2290843   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2290844   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2290845   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2290846   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2290847   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2290848   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2290849   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2290850   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2290851   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2290852   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2290853   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2290854   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2290855   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2290856   +END;
MPRINT(EM_DIAGRAM):   END;
2290857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290858   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2290859   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2290860   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2290861   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2290862   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2290863   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2290864   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2290865   +END;
MPRINT(EM_DIAGRAM):   END;
2290866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290867   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2290868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290870   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2290871   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2290872   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2290873   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2290874   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2290875   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2290876   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2290877   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2290878   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2290879   +          +     1.11855402225797 * S_NumDealsPurchases
2290880   +          +     0.39150287442005 * S_NumDistPurchases
2290881   +          +     0.00160244551627 * S_NumStorePurchases
2290882   +          +     1.54380043731879 * S_NumWebPurchases
2290883   +          +      0.6462755347813 * S_NumWebVisitsMonth
2290884   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2290885   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2290886   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2290887   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2290888   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2290889   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2290890   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2290891   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2290892   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2290893   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2290894   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2290895   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2290896   +          +     0.01911815525287 * S_NumDealsPurchases
2290897   +          +    -1.07196707915227 * S_NumDistPurchases
2290898   +          +      0.6452048321682 * S_NumStorePurchases
2290899   +          +    -0.15818575353955 * S_NumWebPurchases
2290900   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2290901   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2290902   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2290903   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2290904   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2290905   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2290906   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2290907   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2290908   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2290909   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2290910   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2290911   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2290912   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2290913   +          +     1.56893739271853 * S_NumDealsPurchases
2290914   +          +      0.6745865425238 * S_NumDistPurchases
2290915   +          +    -0.26848765783548 * S_NumStorePurchases
2290916   +          +     0.79227081430227 * S_NumWebPurchases
2290917   +          +     0.83054874267768 * S_NumWebVisitsMonth
2290918   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2290919   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2290920   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2290921   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2290922   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2290923   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2290924   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2290925   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2290926   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2290927   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2290928   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2290929   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2290930   +          +    -0.23954856030467 * S_NumDealsPurchases
2290931   +          +    -1.61914390483829 * S_NumDistPurchases
2290932   +          +      -1.014570623016 * S_NumStorePurchases
2290933   +          +    -0.36828642098701 * S_NumWebPurchases
2290934   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2290935   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2290936   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2290937   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2290938   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2290939   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2290940   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2290941   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2290942   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2290943   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2290944   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2290945   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2290946   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2290947   +          +     1.00094082424204 * S_NumDealsPurchases
2290948   +          +      0.2724785290725 * S_NumDistPurchases
2290949   +          +     0.13170237783486 * S_NumStorePurchases
2290950   +          +    -1.31447792523743 * S_NumWebPurchases
2290951   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2290952   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2290953   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2290954   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2290955   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2290956   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2290957   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2290958   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2290959   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2290960   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2290961   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2290962   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2290963   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2290964   +          +    -0.73198872336344 * S_NumDealsPurchases
2290965   +          +     0.29368958872361 * S_NumDistPurchases
2290966   +          +     1.52772046446908 * S_NumStorePurchases
2290967   +          +    -1.75065469134874 * S_NumWebPurchases
2290968   +          +      0.0264954621772 * S_NumWebVisitsMonth
2290969   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2290970   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2290971   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2290972   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2290973   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2290974   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2290975   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2290976   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
2290977   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2290978   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2290979   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2290980   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2290981   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
2290982   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2290983   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2290984   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2290985   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2290986   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
2290987   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2290988   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2290989   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2290990   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2290991   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
2290992   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2290993   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2290994   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2290995   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2290996   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
2290997   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2290998   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2290999   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2291000   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2291001   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
2291002   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2291003   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2291004   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2291005   +          +     0.32207432513904 * Marital_StatusDivorced
2291006   +          +      0.6397913221395 * Marital_StatusMarried
2291007   +          +    -0.25330032559918 * Marital_StatusSingle
2291008   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
2291009   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2291010   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2291011   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2291012   +          +     0.79430904713493 * Marital_StatusDivorced
2291013   +          +     2.54456429102799 * Marital_StatusMarried
2291014   +          +     0.59410742352499 * Marital_StatusSingle
2291015   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
2291016   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2291017   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2291018   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2291019   +          +    -0.43081775693595 * Marital_StatusDivorced
2291020   +          +    -0.78485102174552 * Marital_StatusMarried
2291021   +          +    -1.56581090110813 * Marital_StatusSingle
2291022   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
2291023   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2291024   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2291025   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2291026   +          +     0.38226706522151 * Marital_StatusDivorced
2291027   +          +     0.96666958079914 * Marital_StatusMarried
2291028   +          +    -0.07771259761555 * Marital_StatusSingle
2291029   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
2291030   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2291031   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2291032   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2291033   +          +    -0.38325393606947 * Marital_StatusDivorced
2291034   +          +    -1.43303056163299 * Marital_StatusMarried
2291035   +          +     0.11571941757387 * Marital_StatusSingle
2291036   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
2291037   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2291038   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2291039   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2291040   +          +    -0.36491799765765 * Marital_StatusDivorced
2291041   +          +     0.14142786767503 * Marital_StatusMarried
2291042   +          +     0.22643970468805 * Marital_StatusSingle
2291043   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2291044   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2291045   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2291046   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2291047   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2291048   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2291049   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2291050   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2291051   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2291052   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
2291053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2291054   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2291055   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2291056   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2291057   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2291058   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2291059   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2291060   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2291061   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2291062   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2291063   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2291064   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2291065   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2291066   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2291067   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2291068   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2291069   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2291070   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2291071   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2291072   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2291073   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2291074   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2291075   +END;
MPRINT(EM_DIAGRAM):   END;
2291076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291077   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2291078   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2291079   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2291080   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2291081   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2291082   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2291083   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2291084   +END;
MPRINT(EM_DIAGRAM):   END;
2291085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291086   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2291087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291088   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291089   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2291090   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2291091   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2291092   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2291093   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2291094   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2291095   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2291096   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2291097   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2291098   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2291099   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2291100   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2291101   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2291102   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2291103   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2291104   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2291105   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2291106   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2291107   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2291108   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2291109   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2291110   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2291111   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2291112   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2291113   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2291114   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2291115   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2291116   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2291117   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2291118   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2291119   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2291120   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2291121   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2291122   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2291123   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2291124   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2291125   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2291126   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2291127   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2291128   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2291129   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2291130   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2291131   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2291132   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2291133   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2291134   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2291135   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2291136   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2291137   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2291138   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2291139   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2291140   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2291141   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2291142   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2291143   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2291144   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2291145   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2291146   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2291147   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2291148   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2291149   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2291150   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2291151   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2291152   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2291153   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2291154   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2291155   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2291156   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2291157   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2291158   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2291159   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2291160   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2291161   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2291162   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2291163   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2291164   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2291165   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2291166   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2291167   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2291168   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2291169   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
2291170   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2291171   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2291172   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2291173   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2291174   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2291175   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2291176   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2291177   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2291178   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2291179   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2291180   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2291181   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2291182   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2291183   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2291184   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2291185   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2291186   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2291187   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2291188   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2291189   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2291190   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2291191   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2291192   +END;
MPRINT(EM_DIAGRAM):   END;
2291193   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291194   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2291195   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2291196   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2291197   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2291198   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2291199   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2291200   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2291201   +END;
MPRINT(EM_DIAGRAM):   END;
2291202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291203   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2291204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291205   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291206   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2291207   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2291208   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2291209   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2291210   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2291211   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2291212   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2291213   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2291214   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2291215   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2291216   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2291217   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2291218   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2291219   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2291220   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2291221   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2291222   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2291223   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2291224   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2291225   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2291226   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2291227   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2291228   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2291229   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2291230   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2291231   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2291232   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2291233   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2291234   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2291235   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2291236   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2291237   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2291238   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2291239   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2291240   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2291241   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2291242   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2291243   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2291244   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2291245   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2291246   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2291247   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2291248   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2291249   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2291250   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2291251   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2291252   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2291253   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2291254   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2291255   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2291256   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2291257   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2291258   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2291259   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2291260   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2291261   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2291262   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2291263   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2291264   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2291265   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2291266   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2291267   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2291268   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2291269   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2291270   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2291271   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2291272   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2291273   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2291274   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2291275   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2291276   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2291277   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2291278   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2291279   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2291280   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2291281   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2291282   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2291283   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2291284   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2291285   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2291286   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
2291287   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2291288   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2291289   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2291290   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2291291   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2291292   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2291293   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2291294   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2291295   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2291296   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2291297   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2291298   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2291299   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2291300   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2291301   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2291302   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2291303   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2291304   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2291305   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2291306   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2291307   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2291308   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2291309   +END;
MPRINT(EM_DIAGRAM):   END;
2291310   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291311   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2291312   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2291313   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2291314   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2291315   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2291316   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2291317   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2291318   +END;
MPRINT(EM_DIAGRAM):   END;
2291319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291320   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2291321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291322   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291323   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2291324   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2291325   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2291326   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2291327   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2291328   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2291329   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2291330   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2291331   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2291332   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2291333   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2291334   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2291335   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2291336   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2291337   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2291338   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2291339   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2291340   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2291341   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2291342   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2291343   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2291344   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2291345   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2291346   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2291347   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2291348   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2291349   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2291350   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2291351   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2291352   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2291353   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2291354   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2291355   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2291356   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2291357   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2291358   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2291359   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2291360   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2291361   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2291362   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2291363   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2291364   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2291365   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2291366   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2291367   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2291368   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2291369   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2291370   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2291371   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2291372   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2291373   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2291374   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2291375   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2291376   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2291377   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2291378   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2291379   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2291380   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2291381   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2291382   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2291383   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2291384   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2291385   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2291386   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2291387   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2291388   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2291389   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2291390   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2291391   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2291392   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2291393   +END;
MPRINT(EM_DIAGRAM):   END;
2291394   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291395   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2291396   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2291397   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2291398   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2291399   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2291400   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2291401   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2291402   +END;
MPRINT(EM_DIAGRAM):   END;
2291403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291404   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2291405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291406   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291407   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2291408   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2291409   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2291410   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2291411   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2291412   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2291413   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2291414   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2291415   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2291416   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2291417   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2291418   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2291419   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2291420   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2291421   +END;
MPRINT(EM_DIAGRAM):   END;
2291422   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291423   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2291424   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2291425   +END;
MPRINT(EM_DIAGRAM):   END;
2291426   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2291427   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2291428   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2291429   +END;
MPRINT(EM_DIAGRAM):   END;
2291430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291431   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2291432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291433   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2291434   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2291435   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2291436   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2291437   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2291438   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2291439   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2291440   +END;
MPRINT(EM_DIAGRAM):   END;
2291441   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2291442   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2291443   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2291444   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2291445    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2291446    quit;
2291447    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2291448    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2291449    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2291450    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2291451    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2291452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2291453    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2291454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2291456    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2291457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291459    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291460    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2291461    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2291462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291463    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2291464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2291465    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2291466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291469    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2291470    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291471    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291472    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2291473    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2291473  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.
 
2291474    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2291475    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2291476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291477    filename _pref
2291477  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2291478    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2291479    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2291480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291481   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2291482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291483   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2291484   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2291485   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2291486    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2291487    quit;
2291488    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2291489    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2291490    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2291491    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2291492    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2291493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291494    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2291495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291497    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2291498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291499    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291500    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291501    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2291502    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2291503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291504    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2291505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2291506    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2291507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291510    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2291511    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291512    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291513    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2291514    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2291514  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2291515    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291516    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2291517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291518    filename _pref
2291518  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2291519    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2291520    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2291521   +
2291522   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2291523   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2291523  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2291524   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2291525   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2291526   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2291527   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2291528   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2291529    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2291530    quit;
2291531    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2291532    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2291533    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2291534    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2291535    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2291536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291537    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2291538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291540    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2291541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291543    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291544    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2291545    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2291546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291547    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2291548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291549    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2291550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291552    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291553    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2291554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291555    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291556    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2291557    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2291557  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2291558    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291559    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2291560    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291561    filename _pref
2291561  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2291562    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2291563    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2291564   +
2291565   +
2291566   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2291567   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2291568   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2291569   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2291570   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2291571   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291572   +
2291573   +
2291574   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2291575   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2291576   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2291577   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2291578   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2291579   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291580   +
2291581   +
2291582   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2291583   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2291584   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2291585   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2291586   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2291587   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291588   +
2291589   +
2291590   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2291591   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2291592   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2291593   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2291594   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2291595   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291596   +
2291597   +
2291598   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2291599   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2291600   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2291601   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2291602   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2291603   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291604   +
2291605   +
2291606   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2291607   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2291608   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2291609   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2291610   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2291611   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291612   +
2291613   +
2291614   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2291615   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2291616   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2291617   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2291618   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2291619   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291620   +
2291621   +
2291622   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2291623   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2291624   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2291625   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2291626   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2291627   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2291628   +if
2291629   +_FILTERNORM1 not in ( '.')
2291630   + and
2291631   +_FILTERNORM2 not in ( '.')
2291632   + and
2291633   +_FILTERNORM3 not in ( '.')
2291634   + and
2291635   +_FILTERNORM4 not in ( '.')
2291636   + and
2291637   +_FILTERNORM5 not in ( '.')
2291638   + and
2291639   +_FILTERNORM6 not in ( '.')
2291640   + and
2291641   +_FILTERNORM7 not in ( ' ')
2291642   + and
2291643   +_FILTERNORM8 not in ( ' ')
2291644   +and
2291645   +( Dt_Customer ne .)
2291646   +and ( Income ne . and (Income<=107000))
2291647   +and ( Kidhome ne .)
2291648   +and ( MntFishProducts ne .)
2291649   +and ( MntFruits ne .)
2291650   +and ( MntGoldProds ne .)
2291651   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2291652   +and ( MntSweetProducts ne .)
2291653   +and ( MntWines ne .)
2291654   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2291655   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2291656   +and ( NumStorePurchases ne .)
2291657   +and ( NumWebPurchases ne .)
2291658   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2291659   +and ( Recency ne .)
2291660   +and ( Teenhome ne .)
2291661   +and ( Year_Birth ne .)
2291662   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2291663   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2291664   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2291665   +end;
MPRINT(EM_DIAGRAM):   end;
2291666   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2291667   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2291668    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2291669    quit;
2291670    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2291671    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2291672    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2291673    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2291674    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2291675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291676    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2291677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291679    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2291680    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291682    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291683    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2291684    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2291685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291686    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2291687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2291688    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2291689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291691    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2291692    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2291693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2291694    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291695    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2291696    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2291696  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2291697    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291698    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2291699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291700    %macro varDept(fcmpdata=,id=);
2291701    %global nobs&id scoreFlag&id;
2291702    %let scoreFlag&id = 0;
2291703    %if &id=1 or ^&fcmpStart %then %do;
2291704    proc sort data=&fcmpdata out=_temp&id nodupkey;
2291705    by NAME;
2291706    where id=&id and LHS in( %let j=1;
2291707    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2291708    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2291709    "&var" %let j = %eval(&j+1);
2291710    %end;
2291711    );
2291712    run;
2291713    %let dsid = %sysfunc(open(_temp&id));
2291714    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2291715    %let dsid = %sysfunc(close(&dsid));
2291716    %if &&nobs&id %then %do;
2291717    %let scoreFlag&id = 1;
2291718    %let fcmpStart = 1;
2291719    %end;
2291720    %else %let fcmpStart = 0;
2291721    %end;
2291722    %else %do;
2291723    proc sort data=&fcmpdata out=_tempid;
2291724    where id=&id;
2291725    by LHS;
2291726    run;
2291727    %let dsid = %sysfunc(open(_tempid));
2291728    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2291729    %let dsid = %sysfunc(close(&dsid));
2291730    %if ^&&nobs&id %then %do;
2291731    proc datasets lib=work nolist;
2291732    delete _tempid;
2291733    run;
2291734    quit;
2291735    %end;
2291736    %else %do;
2291737    data _tempAll;
2291738    set %let j=%eval(&id-1);
2291739    %do x=1 %to &j;
2291740    %if &&nobs&x %then %do;
2291741    _temp&x %end;
2291742    %end;
2291743    ;
2291744    run;
2291745    proc sql;
2291746    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2291746  ! work._tempid p2 where p.name=p2.lhs;
2291747    quit;
2291748    data _temp&id;
2291749    set _temp&id;
2291750    where LHS ne '' and NAME ne '' and Node ne '';
2291751    run;
2291752    proc datasets lib=work nolist;
2291753    delete _tempAll;
2291754    run;
2291755    %let dsid = %sysfunc(open(_temp&id));
2291756    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2291757    %let dsid = %sysfunc(close(&dsid));
2291758    %if ^&&nobs&id %then %do;
2291759    proc datasets lib=work nolist;
2291760    delete _temp&id;
2291761    run;
2291762    quit;
2291763    %end;
2291764    %else %do;
2291765    %let scoreFlag&id = 1;
2291766    data _temp&id;
2291767    set _temp&id;
2291768    where LHS ne NAME and node ne '';
2291769    run;
2291770    %let dsid = %sysfunc(open(_temp&id));
2291771    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2291772    %let dsid = %sysfunc(close(&dsid));
2291773    %if ^&&nobs&id %then %do;
2291774    proc datasets lib=work nolist;
2291775    delete _temp&id;
2291776    run;
2291777    quit;
2291778    %end;
2291779    %else %do;
2291780    proc sort data=_temp&id nodupkey;
2291781    by LHS NAME;
2291782    run;
2291783    %end;
2291784    %end;
2291785    %end;
2291786    %end;
2291787    %mend varDept;
2291788    %macro optCode(outdata=fcmpdata);
2291789    %global fcmpStart;
2291790    %let fcmpStart = 0;
2291791    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2291792    %let NumNodes=9;
2291793    %do k=1 %to &NumNodes;
2291794    %vardept(fcmpdata=&outdata, id=&k);
2291795    %end;
2291796    %mend optCode;
2291797    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 260 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2291798    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2291799    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2291800    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2291801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291802    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2291803    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2291804    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2291805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2291806    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2291807    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2291807  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2291808    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.18 seconds
      cpu time            0.00 seconds
 
 
2291809    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2291810    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2291811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2291812    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2291813    * Ensmbl37: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing metadata for TRAIN data;
2291814    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl37_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl37_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl37_TRAIN out=WORK.M0R8EG4A noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R8EG4A;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R8EG4A(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R8EG4A;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R8EG4A;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2KHZ2FY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06B69P5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KHZ2FY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl37";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl37";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2292134    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2292135    set EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO;
2292136    where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2292137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_EMINFO.
      WHERE (DATA='Ensmbl37') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292138    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMINFO;
2292139    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2292140    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2292141    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2292145    run;
2292146    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
2292147    set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
2292148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292149    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
2292150    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2292151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292152    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2292153    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2292154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2292155    proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2292156    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2292157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292158    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
2292159    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2292160    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2292161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292162    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2292163    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2292164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2292165    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                19.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O33GUFR9
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O33GUFR9 new;
MPRINT(EM_DIAGRAM):   run;
2292189    data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMOUTFIT;
2292190    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
2292191    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2292192    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2292192  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2292193    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2292194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292195    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
2292196    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2292197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292198    %let _EMwarndup = 0;
2292199    %let _EMtargetdup =;
2292200    %let _EMASEtargetdup =;
2292201    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2292202    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
2292203    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2292204    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2292205    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2292206    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2292207    end;
MPRINT(EM_DIAGRAM):   end;
2292208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292209    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
2292210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2292211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS8.AUTONEURAL6_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 50 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2292212    proc sort data=EMWS8.Ensmbl37_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl37_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2292213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2292214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292215    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2292216    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2292217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2292218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 40 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 50 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292219    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2292220    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
2292221    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2292221  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2292222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2292223    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2292224    set EMWS8.Ensmbl37_TRAIN(keep=
2292225    F_DepVar
2292226    I_DepVar
2292227    P_DepVar0
2292228    P_DepVar1
2292229    R_DepVar0
2292230    R_DepVar1
2292231    U_DepVar
2292232    _WARN_
2292233    DepVar
2292234    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2292235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL37_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_16RF_UA nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_16RF_UA;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_16RF_UA(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_16RF_UA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_16RF_UA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000268114 OVLMAX 0.9999999999 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
The SAS System
 
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2296501    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2296502    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
2296503    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2296503  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2296504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2296505    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2296506    set EMWS8.Ensmbl37_VALIDATE(keep=
2296507    F_DepVar
2296508    I_DepVar
2296509    P_DepVar0
2296510    P_DepVar1
2296511    R_DepVar0
2296512    R_DepVar1
2296513    U_DepVar
2296514    _WARN_
2296515    DepVar
2296516    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2296517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL37_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_0HECG2J nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_0HECG2J;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_0HECG2J(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMCLASSIFICATION WORK.Ensmbl37_0HECG2J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_0HECG2J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000305966 OVLMAX 0.9999999998 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2300792    %let _cn = %sysfunc(getoption(CENTER));
2300793    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2300794    proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
2300795    var STAT LABEL TRAIN
2300796    VALIDATE
2300797    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2300798    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2300799    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2300800    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2300801    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1571.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300802    title10;
MPRINT(EM_DIAGRAM):   title10;
2300803    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2300804    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
2300805    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2300806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL37_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2300807    %let _cn = %sysfunc(getoption(CENTER));
2300808    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2300809    proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
2300810    var from into pct_row pct_col count percent
2300811    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2300812    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2300813    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2300814    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2300815    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2300816    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2300817    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2300818    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2300819    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2300820    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2300821    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2300822    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1572.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300823    title9;
MPRINT(EM_DIAGRAM):   title9;
2300824    title10;
MPRINT(EM_DIAGRAM):   title10;
2300825    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2300826    %let _cn = %sysfunc(getoption(CENTER));
2300827    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2300828    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMEVENTREPORT;
2300829    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2300829  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2300830    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2300830  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2300830  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2300830  ! FALSEEVENT
2300831    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2300831  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2300831  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2300832       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2300833    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2300834    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2300835    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2300836    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2300837    set EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT;
2300838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL37_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300839    proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
2300840    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2300841    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2300842    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2300843    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1573.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2300844    title10;
MPRINT(EM_DIAGRAM):   title10;
2300845    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2300846    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2300847    modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2300848    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2300849    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2300849  ! ;
MPRINT(EM_DIAGRAM):   run;
2300850    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMRANK.DATA.
2300851    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
2300852    %let _cn = %sysfunc(getoption(CENTER));
2300853    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2300854    proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
2300855    var
2300856    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2300857    by
2300858    notsorted DATAROLE
2300859    notsorted TARGET
2300860    notsorted TARGETLABEL
2300861    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2300862    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2300863    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2300864    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1574.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300865    title10;
MPRINT(EM_DIAGRAM):   title10;
2300866    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2300867    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2300868    modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2300869    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2300869  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2300870    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2300870  ! ;
MPRINT(EM_DIAGRAM):   run;
2300871    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMSCOREDIST.DATA.
2300872    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
