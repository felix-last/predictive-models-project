*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.39 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0UERF_6
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0UERF_6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[286627] MAX=1 EXCEEDMAXVALUE='' )[286631] )[286625]
VALIDCHOICES=(CHOICE1='Y' )[286629] )[286913] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[286635]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[286639] )[286637] )[286633] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[286643]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[286649] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[286647] )[286645] )[286641] )[286623]
2283138    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
2283139    table ROLE*LEVEL/out=WORK.Ensmbl37META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl37META;
2283140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.ENSMBL37META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2283141    proc print data=WORK.Ensmbl37META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37META label noobs;
2283142    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2283143    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2283143  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2283143  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2283144    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2283145    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2283146    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL37META.
NOTE: The PROCEDURE PRINT printed page 1996.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283147    title10;
MPRINT(EM_DIAGRAM):   title10;
2283148    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural6_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2283177    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2283178    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2283179    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2283179  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2283179  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2283180       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2283180  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2283180  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2283181    set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
2283182    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2283183    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2283184    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2283185    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2283186    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2283187    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2283188    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2283189    end;
MPRINT(EM_DIAGRAM):   end;
2283190    output;
MPRINT(EM_DIAGRAM):   output;
2283191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL37_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283192    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2283193    proc print data=WORK.Ensmbl37_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37_EVENT noobs label;
2283194    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2283195    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2283196    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2283197    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL37_EVENT.
NOTE: The PROCEDURE PRINT printed page 1997.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283198    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2283199    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
2283200    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2283201    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2283202    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2283202  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2283202  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2283203    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2283204    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2283205    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1998.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283206    title10;
MPRINT(EM_DIAGRAM):   title10;
2283207    %let groupid =;
2283208    %let endGroupid =;
2283209    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283210    set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
2283211    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283211  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283212    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283213    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283215    %let groupid =;
2283216    %let endGroupid =;
2283217    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283218    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
2283219    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283219  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283220    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283221    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283223    %let groupid =;
2283224    %let endGroupid =;
2283225    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283226    set EMWS8.AutoNeural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural8_EMINFO;
2283227    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283227  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283228    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283229    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283231    %let groupid =;
2283232    %let endGroupid =;
2283233    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283234    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
2283235    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283235  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283236    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283237    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283239    %let groupid =;
2283240    %let endGroupid =;
2283241    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283242    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2283243    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283243  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283244    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283245    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283247    %let groupid =;
2283248    %let endGroupid =;
2283249    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283250    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2283251    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283251  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283252    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283253    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283255    %let groupid =;
2283256    %let endGroupid =;
2283257    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2283258    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2283259    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2283259  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2283260    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2283261    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2283262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283263    data WORK.Ensmbl37;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37;
2283264    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2283265    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2283265  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2283266    nodeid="AUTONEURAL6";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL6";
2283267    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283268    output;
MPRINT(EM_DIAGRAM):   output;
2283269    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
2283270    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283271    output;
MPRINT(EM_DIAGRAM):   output;
2283272    nodeid="AUTONEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL8";
2283273    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283274    output;
MPRINT(EM_DIAGRAM):   output;
2283275    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
2283276    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283277    output;
MPRINT(EM_DIAGRAM):   output;
2283278    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2283279    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283280    output;
MPRINT(EM_DIAGRAM):   output;
2283281    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2283282    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283283    output;
MPRINT(EM_DIAGRAM):   output;
2283284    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2283285    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2283286    output;
MPRINT(EM_DIAGRAM):   output;
2283287    ;
MPRINT(EM_DIAGRAM):   ;
2283288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL37 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2283289    title;
MPRINT(EM_DIAGRAM):   title;
2283290    proc print data=WORK.Ensmbl37 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37 label noobs;
2283291    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2283292    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
2283293    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL37.
NOTE: The PROCEDURE PRINT printed page 1999.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283294    title9;
MPRINT(EM_DIAGRAM):   title9;
2283295    title10;
MPRINT(EM_DIAGRAM):   title10;
2283296    data WORK.M2RQJO53;
MPRINT(EM_DIAGRAM):    data WORK.M2RQJO53;
2283297    set WORK.M2RQJO53;
MPRINT(EM_DIAGRAM):   set WORK.M2RQJO53;
2283298    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2283299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2RQJO53.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2RQJO53 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2283300    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2283301    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2283302    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2283303    %macro DMDBClass;
2283304        DepVar(DESC)
2283305    %mend DMDBClass;
2283306    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2283307    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2283308    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2283309    %macro DMDBVar;
2283310
2283311    %mend DMDBVar;
2283312    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283313    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2283314    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283315    proc dmdb batch data=EMWS8.AutoNeural6_TRAIN
2283316    dmdbcat=WORK.EM_DMDB
2283317    maxlevel = 513
2283318    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural6_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2283319    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2283320    target
2283321    DepVar
2283322    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2283323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2283324    quit;
2283325    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1COFOXW
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1COFOXW new;
MPRINT(EM_DIAGRAM):   run;
2283427    filename emflow
2283427  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283428    *------------------------------------------------------------*;
2283429    * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
2283430    *------------------------------------------------------------*;
2283431    data EMWS8.Ensmbl37_TRAIN
2283432    / view=EMWS8.Ensmbl37_TRAIN
2283433    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_TRAIN / view=EMWS8.Ensmbl37_TRAIN ;
2283434    set EMWS8.AutoNeural6_TRAIN
2283435    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
2283436    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
2283437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283438   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
2283439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283440   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
2283441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283443   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2283444   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2283445   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2283446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283448   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2283449   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2283450   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2283451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283453   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2283454   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2283455   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2283456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283458   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2283459   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2283460   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2283461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283462   +
2283463   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2283464   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2283464  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2283465   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2283466   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2283467   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2283468   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2283469   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2283470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283471   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2283472   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2283473   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2283474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283476   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2283477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283478   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2283479   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2283480   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2283481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283482   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2283483   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2283484   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2283485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283487   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2283488   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2283489   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2283490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283492   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2283493   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2283494   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2283495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2283496   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283497   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2283498   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2283499   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2283500   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2283501   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2283502   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2283503   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2283504   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2283505   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2283506   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2283507   +LENGTH _WARN_ $4
2283508   +      F_DepVar  $ 12
2283509   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2283510   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2283511   +
2283512   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2283513   +
2283514   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2283515   +
2283516   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2283517   +
2283518   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2283519   +
2283520   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2283521   +
2283522   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2283523   +
2283524   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2283525   +
2283526   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2283527   +
2283528   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2283529   +
2283530   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2283531   +
2283532   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2283533   +
2283534   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2283535   +
2283536   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2283537   +
2283538   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2283539   +
2283540   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2283541   +
2283542   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2283543   +
2283544   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2283545   +
2283546   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2283547   +
2283548   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2283549   +
2283550   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2283551   +
2283552   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2283553   +
2283554   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2283555   +
2283556   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2283557   +
2283558   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2283559   +
2283560   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2283561   +
2283562   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2283563   +
2283564   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2283565   +
2283566   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2283567   +
2283568   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2283569   +
2283570   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2283571   +
2283572   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2283573   +
2283574   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2283575   +
2283576   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2283577   +
2283578   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2283579   +
2283580   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2283581   +
2283582   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2283583   +
2283584   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2283585   +
2283586   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2283587   +
2283588   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2283589   +
2283590   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2283591   +
2283592   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2283593   +
2283594   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2283595   +
2283596   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2283597   +
2283598   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2283599   +
2283600   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2283601   +
2283602   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2283603   +
2283604   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2283605   +
2283606   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2283607   +
2283608   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2283609   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2283610   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2283611   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2283612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283614   +end;
MPRINT(EM_DIAGRAM):   end;
2283615   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283617   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2283618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283619   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283620   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2283621   +   end;
MPRINT(EM_DIAGRAM):   end;
2283622   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283623   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2283624   +   end;
MPRINT(EM_DIAGRAM):   end;
2283625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283626   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2283627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283629   +   end;
MPRINT(EM_DIAGRAM):   end;
2283630   +end;
MPRINT(EM_DIAGRAM):   end;
2283631   +
2283632   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2283633   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2283634   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2283635   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2283636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283638   +end;
MPRINT(EM_DIAGRAM):   end;
2283639   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283641   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2283642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283643   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283644   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2283645   +   end;
MPRINT(EM_DIAGRAM):   end;
2283646   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283647   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2283648   +   end;
MPRINT(EM_DIAGRAM):   end;
2283649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283650   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2283651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283653   +   end;
MPRINT(EM_DIAGRAM):   end;
2283654   +end;
MPRINT(EM_DIAGRAM):   end;
2283655   +
2283656   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2283657   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2283658   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2283659   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2283660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283662   +end;
MPRINT(EM_DIAGRAM):   end;
2283663   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283665   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2283666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283667   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283668   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2283669   +   end;
MPRINT(EM_DIAGRAM):   end;
2283670   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283671   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2283672   +   end;
MPRINT(EM_DIAGRAM):   end;
2283673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283674   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2283675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283677   +   end;
MPRINT(EM_DIAGRAM):   end;
2283678   +end;
MPRINT(EM_DIAGRAM):   end;
2283679   +
2283680   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2283681   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2283682   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2283683   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2283684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283686   +end;
MPRINT(EM_DIAGRAM):   end;
2283687   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283689   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2283690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283691   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283692   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2283693   +   end;
MPRINT(EM_DIAGRAM):   end;
2283694   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283695   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2283696   +   end;
MPRINT(EM_DIAGRAM):   end;
2283697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283698   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2283699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283701   +   end;
MPRINT(EM_DIAGRAM):   end;
2283702   +end;
MPRINT(EM_DIAGRAM):   end;
2283703   +
2283704   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2283705   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2283706   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2283707   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2283708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283710   +end;
MPRINT(EM_DIAGRAM):   end;
2283711   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283712   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283713   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2283714   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283715   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283716   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2283717   +   end;
MPRINT(EM_DIAGRAM):   end;
2283718   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283719   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2283720   +   end;
MPRINT(EM_DIAGRAM):   end;
2283721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283722   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2283723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283725   +   end;
MPRINT(EM_DIAGRAM):   end;
2283726   +end;
MPRINT(EM_DIAGRAM):   end;
2283727   +
2283728   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2283729   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2283730   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2283731   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2283732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283734   +end;
MPRINT(EM_DIAGRAM):   end;
2283735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283737   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2283738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283739   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2283740   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2283741   +   end;
MPRINT(EM_DIAGRAM):   end;
2283742   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2283743   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2283744   +   end;
MPRINT(EM_DIAGRAM):   end;
2283745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283746   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2283747   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283748   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283749   +   end;
MPRINT(EM_DIAGRAM):   end;
2283750   +end;
MPRINT(EM_DIAGRAM):   end;
2283751   +
2283752   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2283753   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2283754   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2283755   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2283756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283758   +end;
MPRINT(EM_DIAGRAM):   end;
2283759   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2283761   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2283762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283763   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2283764   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2283765   +   end;
MPRINT(EM_DIAGRAM):   end;
2283766   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2283767   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2283768   +   end;
MPRINT(EM_DIAGRAM):   end;
2283769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283770   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2283771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283773   +   end;
MPRINT(EM_DIAGRAM):   end;
2283774   +end;
MPRINT(EM_DIAGRAM):   end;
2283775   +
2283776   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2283777   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2283778   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2283779   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2283780   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2283781   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2283782   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2283783   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2283784   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2283785   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2283786   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2283787   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2283788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283790   +end;
MPRINT(EM_DIAGRAM):   end;
2283791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283792   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2283793   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2283794   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283795   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2283796   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2283797   +   end;
MPRINT(EM_DIAGRAM):   end;
2283798   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2283799   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2283800   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2283801   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2283802   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2283803   +   end;
MPRINT(EM_DIAGRAM):   end;
2283804   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2283805   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2283806   +   end;
MPRINT(EM_DIAGRAM):   end;
2283807   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2283808   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2283809   +   end;
MPRINT(EM_DIAGRAM):   end;
2283810   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2283811   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2283812   +   end;
MPRINT(EM_DIAGRAM):   end;
2283813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283814   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2283815   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2283816   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2283817   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2283818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283820   +   end;
MPRINT(EM_DIAGRAM):   end;
2283821   +end;
MPRINT(EM_DIAGRAM):   end;
2283822   +
2283823   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2283824   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2283825   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2283826   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2283827   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2283828   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2283829   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2283830   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2283831   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2283832   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2283833   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2283834   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2283835   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2283836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2283837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283838   +end;
MPRINT(EM_DIAGRAM):   end;
2283839   +else do;
MPRINT(EM_DIAGRAM):   else do;
2283840   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2283841   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2283842   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2283843   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2283844   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2283845   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2283846   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2283847   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2283848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283849   +         end;
MPRINT(EM_DIAGRAM):   end;
2283850   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2283851   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2283852   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2283853   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283854   +            end;
MPRINT(EM_DIAGRAM):   end;
2283855   +         end;
MPRINT(EM_DIAGRAM):   end;
2283856   +      end;
MPRINT(EM_DIAGRAM):   end;
2283857   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2283858   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2283859   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2283860   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283861   +         end;
MPRINT(EM_DIAGRAM):   end;
2283862   +      end;
MPRINT(EM_DIAGRAM):   end;
2283863   +   end;
MPRINT(EM_DIAGRAM):   end;
2283864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2283865   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2283866   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2283867   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283868   +      end;
MPRINT(EM_DIAGRAM):   end;
2283869   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2283870   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2283871   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2283872   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2283873   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2283874   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2283875   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2283876   +         end;
MPRINT(EM_DIAGRAM):   end;
2283877   +      end;
MPRINT(EM_DIAGRAM):   end;
2283878   +   end;
MPRINT(EM_DIAGRAM):   end;
2283879   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2283880   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2283881   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2283882   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2283883   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2283884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2283885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283886   +   end;
MPRINT(EM_DIAGRAM):   end;
2283887   +end;
MPRINT(EM_DIAGRAM):   end;
2283888   +
2283889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283890   +*** Checking missing input Interval
2283891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2283892   +
2283893   +IF NMISS(
2283894   +   AcceptedCmpTotal ,
2283895   +   Age ,
2283896   +   Frq ,
2283897   +   Income ,
2283898   +   Kidhome ,
2283899   +   Mnt ,
2283900   +   MntFishProducts ,
2283901   +   MntFruits ,
2283902   +   MntGoldProds ,
2283903   +   MntMeatProducts ,
2283904   +   MntSweetProducts ,
2283905   +   MntWines ,
2283906   +   MonthsAsCustomer ,
2283907   +   NumCatalogPurchases ,
2283908   +   NumDealsPurchases ,
2283909   +   NumDistPurchases ,
2283910   +   NumStorePurchases ,
2283911   +   NumWebPurchases ,
2283912   +   NumWebVisitsMonth ,
2283913   +   RFMstat ,
2283914   +   RMntFrq ,
2283915   +   Recency ,
2283916   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2283917   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2283918   +
2283919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2283920   +END;
MPRINT(EM_DIAGRAM):   END;
2283921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283922   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2283923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2283924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2283925   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2283926   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2283927   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2283928   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2283929   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2283930   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2283931   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2283932   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2283933   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2283934   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2283935   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2283936   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2283937   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2283938   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2283939   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2283940   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2283941   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2283942   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2283943   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2283944   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2283945   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2283946   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2283947   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2283948   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2283949   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2283950   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2283951   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2283952   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2283953   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2283954   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2283955   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2283956   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2283957   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2283958   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2283959   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2283960   +END;
MPRINT(EM_DIAGRAM):   END;
2283961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2283962   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2283963   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2283964   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2283965   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2283966   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2283967   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2283968   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2283969   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2283970   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2283971   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2283972   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2283973   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2283974   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2283975   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2283976   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2283977   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2283978   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2283979   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2283980   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2283981   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2283982   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2283983   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2283984   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2283985   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2283986   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2283987   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2283988   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2283989   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2283990   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2283991   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2283992   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2283993   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2283994   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2283995   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2283996   +   ELSE S_NumCatalogPurchases
2283997   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2283998   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2283999   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2284000   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2284001   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2284002   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2284003   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2284004   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2284005   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2284006   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2284007   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2284008   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2284009   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2284010   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2284011   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2284012   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2284013   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2284014   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2284015   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2284016   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2284017   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2284018   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2284019   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2284020   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2284021   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2284022   +END;
MPRINT(EM_DIAGRAM):   END;
2284023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284024   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2284025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284027   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2284028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284030   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2284031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284033   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2284034   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2284035   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2284036   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2284037   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2284038   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2284039   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2284040   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2284041   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2284042   +          +    -0.20127545393212 * S_NumDealsPurchases
2284043   +          +     0.04506333103933 * S_NumDistPurchases
2284044   +          +     0.35249458492371 * S_NumStorePurchases
2284045   +          +     0.25004284340707 * S_NumWebPurchases
2284046   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2284047   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2284048   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2284049   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2284050   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2284051   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2284052   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2284053   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2284054   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2284055   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2284056   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2284057   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2284058   +          +    -0.19452359839974 * Marital_StatusDivorced
2284059   +          +     0.32327870805716 * Marital_StatusMarried
2284060   +          +    -0.20770545592268 * Marital_StatusSingle
2284061   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2284062   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2284063   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284064   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284065   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2284066   +END;
MPRINT(EM_DIAGRAM):   END;
2284067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284068   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2284069   +END;
MPRINT(EM_DIAGRAM):   END;
2284070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284071   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2284072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284073   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284074   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2284075   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2284076   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2284077   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2284078   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2284079   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2284080   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2284081   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2284082   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2284083   +          +    -0.02120959778153 * S_NumDealsPurchases
2284084   +          +     1.49013956394863 * S_NumDistPurchases
2284085   +          +    -0.96806240220463 * S_NumStorePurchases
2284086   +          +    -1.68330472453558 * S_NumWebPurchases
2284087   +          +     3.42976128164256 * S_NumWebVisitsMonth
2284088   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2284089   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2284090   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2284091   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2284092   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2284093   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2284094   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2284095   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2284096   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2284097   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2284098   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2284099   +          +      1.9815992681602 * Marital_StatusDivorced
2284100   +          +    -3.07893181570848 * Marital_StatusMarried
2284101   +          +     1.72965298244219 * Marital_StatusSingle
2284102   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2284103   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2284104   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2284105   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2284106   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2284107   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2284108   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2284109   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2284110   +END;
MPRINT(EM_DIAGRAM):   END;
2284111   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284112   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2284113   +END;
MPRINT(EM_DIAGRAM):   END;
2284114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284115   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2284116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284117   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284118   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2284119   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2284120   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2284121   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2284122   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2284123   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2284124   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2284125   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2284126   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2284127   +          +     -0.5334151509863 * S_NumDealsPurchases
2284128   +          +     0.40600458912114 * S_NumDistPurchases
2284129   +          +    -0.30674653528261 * S_NumStorePurchases
2284130   +          +     0.10785037433743 * S_NumWebPurchases
2284131   +          +     0.99701680073452 * S_NumWebVisitsMonth
2284132   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2284133   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2284134   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2284135   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2284136   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2284137   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2284138   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2284139   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2284140   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2284141   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2284142   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2284143   +          +    -0.72494401881341 * Marital_StatusDivorced
2284144   +          +    -0.82332231639631 * Marital_StatusMarried
2284145   +          +     -0.8863559011195 * Marital_StatusSingle
2284146   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2284147   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2284148   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2284149   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2284150   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2284151   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2284152   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2284153   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2284154   +END;
MPRINT(EM_DIAGRAM):   END;
2284155   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284156   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2284157   +END;
MPRINT(EM_DIAGRAM):   END;
2284158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284159   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2284160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284161   +
2284162   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2284163   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2284164   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2284165   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2284166   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2284167   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284168   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2284169   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284170   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284171   +end;
MPRINT(EM_DIAGRAM):   end;
2284172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284173   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2284174   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2284175   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2284176   +   end;
MPRINT(EM_DIAGRAM):   end;
2284177   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2284178   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2284179   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2284180   +   end;
MPRINT(EM_DIAGRAM):   end;
2284181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284182   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2284183   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2284184   +   end;
MPRINT(EM_DIAGRAM):   end;
2284185   +end;
MPRINT(EM_DIAGRAM):   end;
2284186   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284187   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2284188   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2284189   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2284190   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2284191   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2284192   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2284193   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2284194   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2284195   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2284196   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2284197   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2284198   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2284199   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2284200   +END;
MPRINT(EM_DIAGRAM):   END;
2284201   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284202   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2284203   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2284204   +END;
MPRINT(EM_DIAGRAM):   END;
2284205   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2284206   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2284207   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2284208   +END;
MPRINT(EM_DIAGRAM):   END;
2284209   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2284210   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2284211   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2284212   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2284213   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2284214   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2284215   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2284216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284217   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2284218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284219   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2284220   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2284221   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2284222   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2284223   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2284224   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2284225   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2284226   +END;
MPRINT(EM_DIAGRAM):   END;
2284227   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284228   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2284229   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2284230   +drop
2284231   +H1x1_1
2284232   +H1x2_1
2284233   +H1x3_1
2284234   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2284235   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2284236   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2284237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284238   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2284239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284240   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2284241   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2284242   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2284243   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2284244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284245   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2284246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284247   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2284248   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2284249   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2284250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284251   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
2284252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284254   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2284255   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2284256   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2284257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2284258   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2284259   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2284260   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2284261   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2284262   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2284263   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2284264   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2284265   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2284266   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2284267   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2284268   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2284269   +LENGTH _WARN_ $4
2284270   +      F_DepVar  $ 12
2284271   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2284272   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2284273   +
2284274   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2284275   +
2284276   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2284277   +
2284278   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2284279   +
2284280   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2284281   +
2284282   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2284283   +
2284284   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2284285   +
2284286   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2284287   +
2284288   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2284289   +
2284290   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2284291   +
2284292   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2284293   +
2284294   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2284295   +
2284296   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2284297   +
2284298   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2284299   +
2284300   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2284301   +
2284302   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2284303   +
2284304   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2284305   +
2284306   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2284307   +
2284308   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2284309   +
2284310   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2284311   +
2284312   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2284313   +
2284314   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2284315   +
2284316   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2284317   +
2284318   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2284319   +
2284320   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2284321   +
2284322   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2284323   +
2284324   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2284325   +
2284326   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2284327   +
2284328   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2284329   +
2284330   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2284331   +
2284332   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2284333   +
2284334   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2284335   +
2284336   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2284337   +
2284338   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2284339   +
2284340   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2284341   +
2284342   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2284343   +
2284344   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2284345   +
2284346   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2284347   +
2284348   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2284349   +
2284350   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2284351   +
2284352   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2284353   +
2284354   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2284355   +
2284356   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2284357   +
2284358   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2284359   +
2284360   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2284361   +
2284362   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2284363   +
2284364   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2284365   +
2284366   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2284367   +
2284368   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2284369   +
2284370   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2284371   +
2284372   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2284373   +
2284374   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2284375   +
2284376   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2284377   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2284378   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2284379   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2284380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284382   +end;
MPRINT(EM_DIAGRAM):   end;
2284383   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284385   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2284386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284388   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2284389   +   end;
MPRINT(EM_DIAGRAM):   end;
2284390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284391   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2284392   +   end;
MPRINT(EM_DIAGRAM):   end;
2284393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284394   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2284395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284397   +   end;
MPRINT(EM_DIAGRAM):   end;
2284398   +end;
MPRINT(EM_DIAGRAM):   end;
2284399   +
2284400   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2284401   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2284402   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2284403   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2284404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284406   +end;
MPRINT(EM_DIAGRAM):   end;
2284407   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284409   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2284410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284411   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284412   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2284413   +   end;
MPRINT(EM_DIAGRAM):   end;
2284414   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284415   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2284416   +   end;
MPRINT(EM_DIAGRAM):   end;
2284417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284418   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2284419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284421   +   end;
MPRINT(EM_DIAGRAM):   end;
2284422   +end;
MPRINT(EM_DIAGRAM):   end;
2284423   +
2284424   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2284425   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2284426   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2284427   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2284428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284430   +end;
MPRINT(EM_DIAGRAM):   end;
2284431   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284433   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2284434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284436   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2284437   +   end;
MPRINT(EM_DIAGRAM):   end;
2284438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284439   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2284440   +   end;
MPRINT(EM_DIAGRAM):   end;
2284441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284442   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2284443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284445   +   end;
MPRINT(EM_DIAGRAM):   end;
2284446   +end;
MPRINT(EM_DIAGRAM):   end;
2284447   +
2284448   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2284449   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2284450   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2284451   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2284452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284454   +end;
MPRINT(EM_DIAGRAM):   end;
2284455   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284457   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2284458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284460   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2284461   +   end;
MPRINT(EM_DIAGRAM):   end;
2284462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284463   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2284464   +   end;
MPRINT(EM_DIAGRAM):   end;
2284465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284466   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2284467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284469   +   end;
MPRINT(EM_DIAGRAM):   end;
2284470   +end;
MPRINT(EM_DIAGRAM):   end;
2284471   +
2284472   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2284473   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2284474   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2284475   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2284476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284478   +end;
MPRINT(EM_DIAGRAM):   end;
2284479   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284481   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2284482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284484   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2284485   +   end;
MPRINT(EM_DIAGRAM):   end;
2284486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284487   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2284488   +   end;
MPRINT(EM_DIAGRAM):   end;
2284489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284490   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2284491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284493   +   end;
MPRINT(EM_DIAGRAM):   end;
2284494   +end;
MPRINT(EM_DIAGRAM):   end;
2284495   +
2284496   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2284497   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2284498   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2284499   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2284500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284502   +end;
MPRINT(EM_DIAGRAM):   end;
2284503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284505   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2284506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2284508   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2284509   +   end;
MPRINT(EM_DIAGRAM):   end;
2284510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2284511   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2284512   +   end;
MPRINT(EM_DIAGRAM):   end;
2284513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284514   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2284515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284517   +   end;
MPRINT(EM_DIAGRAM):   end;
2284518   +end;
MPRINT(EM_DIAGRAM):   end;
2284519   +
2284520   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2284521   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2284522   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2284523   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2284524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284526   +end;
MPRINT(EM_DIAGRAM):   end;
2284527   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2284529   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2284530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284531   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2284532   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2284533   +   end;
MPRINT(EM_DIAGRAM):   end;
2284534   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2284535   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2284536   +   end;
MPRINT(EM_DIAGRAM):   end;
2284537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284538   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2284539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284541   +   end;
MPRINT(EM_DIAGRAM):   end;
2284542   +end;
MPRINT(EM_DIAGRAM):   end;
2284543   +
2284544   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2284545   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2284546   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2284547   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2284548   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2284549   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2284550   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2284551   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2284552   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2284553   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2284554   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2284555   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2284556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284558   +end;
MPRINT(EM_DIAGRAM):   end;
2284559   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284560   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2284561   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2284562   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284563   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2284564   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2284565   +   end;
MPRINT(EM_DIAGRAM):   end;
2284566   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2284567   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2284568   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2284569   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2284570   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2284571   +   end;
MPRINT(EM_DIAGRAM):   end;
2284572   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2284573   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2284574   +   end;
MPRINT(EM_DIAGRAM):   end;
2284575   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2284576   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2284577   +   end;
MPRINT(EM_DIAGRAM):   end;
2284578   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2284579   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2284580   +   end;
MPRINT(EM_DIAGRAM):   end;
2284581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284582   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2284583   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2284584   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2284585   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2284586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284588   +   end;
MPRINT(EM_DIAGRAM):   end;
2284589   +end;
MPRINT(EM_DIAGRAM):   end;
2284590   +
2284591   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2284592   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2284593   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2284594   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2284595   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2284596   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2284597   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2284598   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2284599   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2284600   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2284601   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2284602   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2284603   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2284604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2284605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284606   +end;
MPRINT(EM_DIAGRAM):   end;
2284607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2284608   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2284609   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2284610   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2284611   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2284612   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2284613   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2284614   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2284615   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2284616   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284617   +         end;
MPRINT(EM_DIAGRAM):   end;
2284618   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2284619   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2284620   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2284621   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284622   +            end;
MPRINT(EM_DIAGRAM):   end;
2284623   +         end;
MPRINT(EM_DIAGRAM):   end;
2284624   +      end;
MPRINT(EM_DIAGRAM):   end;
2284625   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2284626   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2284627   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2284628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284629   +         end;
MPRINT(EM_DIAGRAM):   end;
2284630   +      end;
MPRINT(EM_DIAGRAM):   end;
2284631   +   end;
MPRINT(EM_DIAGRAM):   end;
2284632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2284633   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2284634   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2284635   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284636   +      end;
MPRINT(EM_DIAGRAM):   end;
2284637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2284638   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2284639   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2284640   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2284641   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2284642   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2284643   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2284644   +         end;
MPRINT(EM_DIAGRAM):   end;
2284645   +      end;
MPRINT(EM_DIAGRAM):   end;
2284646   +   end;
MPRINT(EM_DIAGRAM):   end;
2284647   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2284648   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2284649   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2284650   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2284651   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2284652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2284653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284654   +   end;
MPRINT(EM_DIAGRAM):   end;
2284655   +end;
MPRINT(EM_DIAGRAM):   end;
2284656   +
2284657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284658   +*** Checking missing input Interval
2284659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2284660   +
2284661   +IF NMISS(
2284662   +   AcceptedCmpTotal ,
2284663   +   Age ,
2284664   +   Frq ,
2284665   +   Income ,
2284666   +   Kidhome ,
2284667   +   Mnt ,
2284668   +   MntFishProducts ,
2284669   +   MntFruits ,
2284670   +   MntGoldProds ,
2284671   +   MntMeatProducts ,
2284672   +   MntSweetProducts ,
2284673   +   MntWines ,
2284674   +   MonthsAsCustomer ,
2284675   +   NumCatalogPurchases ,
2284676   +   NumDealsPurchases ,
2284677   +   NumDistPurchases ,
2284678   +   NumStorePurchases ,
2284679   +   NumWebPurchases ,
2284680   +   NumWebVisitsMonth ,
2284681   +   RFMstat ,
2284682   +   RMntFrq ,
2284683   +   Recency ,
2284684   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2284685   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2284686   +
2284687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2284688   +END;
MPRINT(EM_DIAGRAM):   END;
2284689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284690   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2284691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284693   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2284694   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2284695   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2284696   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2284697   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2284698   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2284699   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2284700   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2284701   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2284702   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2284703   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2284704   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2284705   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2284706   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2284707   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2284708   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2284709   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2284710   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2284711   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2284712   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2284713   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2284714   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2284715   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2284716   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2284717   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2284718   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2284719   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2284720   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2284721   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2284722   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2284723   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2284724   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2284725   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2284726   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2284727   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2284728   +END;
MPRINT(EM_DIAGRAM):   END;
2284729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284730   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2284731   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2284732   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2284733   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2284734   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2284735   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2284736   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2284737   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2284738   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2284739   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2284740   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2284741   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2284742   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2284743   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2284744   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2284745   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2284746   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2284747   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2284748   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2284749   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2284750   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2284751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2284752   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2284753   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2284754   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2284755   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2284756   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2284757   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2284758   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2284759   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2284760   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2284761   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2284762   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2284763   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2284764   +   ELSE S_NumCatalogPurchases
2284765   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2284766   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2284767   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2284768   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2284769   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2284770   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2284771   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2284772   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2284773   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2284774   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2284775   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2284776   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2284777   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2284778   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2284779   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2284780   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2284781   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2284782   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2284783   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2284784   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2284785   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2284786   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2284787   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2284788   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2284789   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2284790   +END;
MPRINT(EM_DIAGRAM):   END;
2284791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284792   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2284793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284795   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2284796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284798   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2284799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284800   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284801   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2284802   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2284803   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2284804   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2284805   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2284806   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2284807   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2284808   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2284809   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2284810   +          +     0.08390531145773 * S_NumDealsPurchases
2284811   +          +    -0.29505970645775 * S_NumDistPurchases
2284812   +          +    -0.13820571170194 * S_NumStorePurchases
2284813   +          +     0.11468011313368 * S_NumWebPurchases
2284814   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2284815   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2284816   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2284817   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2284818   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2284819   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2284820   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2284821   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2284822   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2284823   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2284824   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2284825   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2284826   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2284827   +          +     0.18009076035363 * S_NumDealsPurchases
2284828   +          +     0.03853861006587 * S_NumDistPurchases
2284829   +          +    -0.05118063952874 * S_NumStorePurchases
2284830   +          +    -0.03282286120473 * S_NumWebPurchases
2284831   +          +     0.31160900419026 * S_NumWebVisitsMonth
2284832   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2284833   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2284834   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2284835   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2284836   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2284837   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2284838   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2284839   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2284840   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2284841   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2284842   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2284843   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2284844   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2284845   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2284846   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2284847   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2284848   +          +    -0.04750981393889 * Marital_StatusDivorced
2284849   +          +     0.28216925676677 * Marital_StatusMarried
2284850   +          +    -0.20757827413964 * Marital_StatusSingle
2284851   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2284852   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2284853   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2284854   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2284855   +          +     0.05981919620577 * Marital_StatusDivorced
2284856   +          +    -0.17161573846062 * Marital_StatusMarried
2284857   +          +     0.15869440681091 * Marital_StatusSingle
2284858   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2284859   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2284860   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2284861   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2284862   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2284863   +END;
MPRINT(EM_DIAGRAM):   END;
2284864   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284865   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2284866   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2284867   +END;
MPRINT(EM_DIAGRAM):   END;
2284868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284869   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2284870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284872   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2284873   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2284874   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2284875   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2284876   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2284877   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2284878   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2284879   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2284880   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2284881   +          +     0.00741910846933 * S_NumDealsPurchases
2284882   +          +       1.334289252268 * S_NumDistPurchases
2284883   +          +    -0.29851567180932 * S_NumStorePurchases
2284884   +          +    -0.52115313259666 * S_NumWebPurchases
2284885   +          +     0.93907168501909 * S_NumWebVisitsMonth
2284886   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2284887   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2284888   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2284889   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2284890   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2284891   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2284892   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2284893   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2284894   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2284895   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2284896   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2284897   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2284898   +          +     1.60427001186844 * S_NumDealsPurchases
2284899   +          +    -0.18447618033353 * S_NumDistPurchases
2284900   +          +    -1.29966073003539 * S_NumStorePurchases
2284901   +          +    -1.12373457341536 * S_NumWebPurchases
2284902   +          +     1.46099221440494 * S_NumWebVisitsMonth
2284903   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2284904   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2284905   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2284906   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2284907   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2284908   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2284909   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2284910   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2284911   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2284912   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2284913   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2284914   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2284915   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2284916   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2284917   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2284918   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2284919   +          +     0.59819559998538 * Marital_StatusDivorced
2284920   +          +     0.92957772553633 * Marital_StatusMarried
2284921   +          +    -1.11796266958894 * Marital_StatusSingle
2284922   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2284923   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2284924   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2284925   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2284926   +          +      1.0870909562212 * Marital_StatusDivorced
2284927   +          +     1.50333961797515 * Marital_StatusMarried
2284928   +          +    -1.41407780765932 * Marital_StatusSingle
2284929   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2284930   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2284931   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2284932   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2284933   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2284934   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2284935   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2284936   +END;
MPRINT(EM_DIAGRAM):   END;
2284937   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2284938   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2284939   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2284940   +END;
MPRINT(EM_DIAGRAM):   END;
2284941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284942   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2284943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2284944   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2284945   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2284946   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2284947   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2284948   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2284949   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2284950   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2284951   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2284952   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2284953   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2284954   +          +     -1.1174504455343 * S_NumDealsPurchases
2284955   +          +    -0.18561253113498 * S_NumDistPurchases
2284956   +          +    -0.35231054612792 * S_NumStorePurchases
2284957   +          +      0.9249490354172 * S_NumWebPurchases
2284958   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2284959   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2284960   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2284961   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2284962   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2284963   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2284964   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2284965   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2284966   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2284967   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2284968   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2284969   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2284970   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2284971   +          +     1.05434863590054 * S_NumDealsPurchases
2284972   +          +    -0.73255174632068 * S_NumDistPurchases
2284973   +          +     0.53949953455044 * S_NumStorePurchases
2284974   +          +    -0.61709467816649 * S_NumWebPurchases
2284975   +          +     1.36235282484348 * S_NumWebVisitsMonth
2284976   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2284977   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2284978   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2284979   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2284980   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2284981   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2284982   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2284983   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2284984   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2284985   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2284986   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2284987   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2284988   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2284989   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2284990   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2284991   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2284992   +          +     0.22253248036322 * Marital_StatusDivorced
2284993   +          +    -1.72455332745001 * Marital_StatusMarried
2284994   +          +     0.57787272107232 * Marital_StatusSingle
2284995   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2284996   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2284997   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2284998   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2284999   +          +     0.14637124403046 * Marital_StatusDivorced
2285000   +          +     0.18905186437528 * Marital_StatusMarried
2285001   +          +     0.00511958458521 * Marital_StatusSingle
2285002   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2285003   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2285004   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2285005   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2285006   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2285007   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2285008   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2285009   +END;
MPRINT(EM_DIAGRAM):   END;
2285010   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285011   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2285012   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2285013   +END;
MPRINT(EM_DIAGRAM):   END;
2285014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285015   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2285016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285017   +
2285018   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2285019   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2285020   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2285021   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2285022   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2285023   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285024   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2285025   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2285026   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2285027   +end;
MPRINT(EM_DIAGRAM):   end;
2285028   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285029   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2285030   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2285031   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2285032   +   end;
MPRINT(EM_DIAGRAM):   end;
2285033   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2285034   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2285035   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2285036   +   end;
MPRINT(EM_DIAGRAM):   end;
2285037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285038   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2285039   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2285040   +   end;
MPRINT(EM_DIAGRAM):   end;
2285041   +end;
MPRINT(EM_DIAGRAM):   end;
2285042   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285043   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2285044   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2285045   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2285046   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2285047   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2285048   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2285049   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2285050   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2285051   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2285052   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2285053   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2285054   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2285055   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2285056   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2285057   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2285058   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2285059   +END;
MPRINT(EM_DIAGRAM):   END;
2285060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285061   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2285062   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2285063   +END;
MPRINT(EM_DIAGRAM):   END;
2285064   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2285065   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2285066   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2285067   +END;
MPRINT(EM_DIAGRAM):   END;
2285068   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2285069   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2285070   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2285071   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2285072   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2285073   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2285074   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2285075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285076   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2285077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285078   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2285079   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2285080   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2285081   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2285082   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2285083   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2285084   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2285085   +END;
MPRINT(EM_DIAGRAM):   END;
2285086   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285087   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2285088   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285089   +drop
2285090   +H1x1_1
2285091   +H1x1_2
2285092   +H1x2_1
2285093   +H1x2_2
2285094   +H1x3_1
2285095   +H1x3_2
2285096   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2285097   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2285098   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2285099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285100   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2285101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285102   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2285103   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2285104   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2285105   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2285106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285107   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2285108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285109   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2285110   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2285111   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2285112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285113   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
2285114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285116   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2285117   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2285118   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2285119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285120   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2285121   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2285122   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2285123   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2285124   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2285125   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2285126   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2285127   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2285128   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2285129   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2285130   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2285131   +LENGTH _WARN_ $4
2285132   +      F_DepVar  $ 12
2285133   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2285134   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2285135   +
2285136   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2285137   +
2285138   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2285139   +
2285140   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2285141   +
2285142   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2285143   +
2285144   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2285145   +
2285146   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2285147   +
2285148   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2285149   +
2285150   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2285151   +
2285152   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2285153   +
2285154   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2285155   +
2285156   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2285157   +
2285158   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2285159   +
2285160   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2285161   +
2285162   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2285163   +
2285164   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2285165   +
2285166   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2285167   +
2285168   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2285169   +
2285170   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2285171   +
2285172   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2285173   +
2285174   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2285175   +
2285176   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2285177   +
2285178   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2285179   +
2285180   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2285181   +
2285182   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2285183   +
2285184   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2285185   +
2285186   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2285187   +
2285188   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2285189   +
2285190   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2285191   +
2285192   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2285193   +
2285194   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2285195   +
2285196   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2285197   +
2285198   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2285199   +
2285200   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2285201   +
2285202   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2285203   +
2285204   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2285205   +
2285206   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2285207   +
2285208   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2285209   +
2285210   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2285211   +
2285212   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2285213   +
2285214   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2285215   +
2285216   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2285217   +
2285218   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2285219   +
2285220   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2285221   +
2285222   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2285223   +
2285224   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2285225   +
2285226   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2285227   +
2285228   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2285229   +
2285230   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2285231   +
2285232   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2285233   +
2285234   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2285235   +
2285236   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2285237   +
2285238   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2285239   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2285240   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2285241   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2285242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285244   +end;
MPRINT(EM_DIAGRAM):   end;
2285245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285247   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2285248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285250   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2285251   +   end;
MPRINT(EM_DIAGRAM):   end;
2285252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285253   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2285254   +   end;
MPRINT(EM_DIAGRAM):   end;
2285255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285256   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2285257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285259   +   end;
MPRINT(EM_DIAGRAM):   end;
2285260   +end;
MPRINT(EM_DIAGRAM):   end;
2285261   +
2285262   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2285263   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2285264   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2285265   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2285266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285268   +end;
MPRINT(EM_DIAGRAM):   end;
2285269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285271   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2285272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285274   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2285275   +   end;
MPRINT(EM_DIAGRAM):   end;
2285276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285277   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2285278   +   end;
MPRINT(EM_DIAGRAM):   end;
2285279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285280   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2285281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285283   +   end;
MPRINT(EM_DIAGRAM):   end;
2285284   +end;
MPRINT(EM_DIAGRAM):   end;
2285285   +
2285286   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2285287   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2285288   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2285289   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2285290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285292   +end;
MPRINT(EM_DIAGRAM):   end;
2285293   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285295   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2285296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285298   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2285299   +   end;
MPRINT(EM_DIAGRAM):   end;
2285300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285301   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2285302   +   end;
MPRINT(EM_DIAGRAM):   end;
2285303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285304   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2285305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285307   +   end;
MPRINT(EM_DIAGRAM):   end;
2285308   +end;
MPRINT(EM_DIAGRAM):   end;
2285309   +
2285310   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2285311   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2285312   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2285313   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2285314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285316   +end;
MPRINT(EM_DIAGRAM):   end;
2285317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285319   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2285320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285322   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2285323   +   end;
MPRINT(EM_DIAGRAM):   end;
2285324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285325   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2285326   +   end;
MPRINT(EM_DIAGRAM):   end;
2285327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285328   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2285329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285331   +   end;
MPRINT(EM_DIAGRAM):   end;
2285332   +end;
MPRINT(EM_DIAGRAM):   end;
2285333   +
2285334   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2285335   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2285336   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2285337   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2285338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285340   +end;
MPRINT(EM_DIAGRAM):   end;
2285341   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285343   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2285344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285346   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2285347   +   end;
MPRINT(EM_DIAGRAM):   end;
2285348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285349   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2285350   +   end;
MPRINT(EM_DIAGRAM):   end;
2285351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285352   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2285353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285355   +   end;
MPRINT(EM_DIAGRAM):   end;
2285356   +end;
MPRINT(EM_DIAGRAM):   end;
2285357   +
2285358   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2285359   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2285360   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2285361   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2285362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285364   +end;
MPRINT(EM_DIAGRAM):   end;
2285365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285367   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2285368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2285370   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2285371   +   end;
MPRINT(EM_DIAGRAM):   end;
2285372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2285373   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2285374   +   end;
MPRINT(EM_DIAGRAM):   end;
2285375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285376   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2285377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285379   +   end;
MPRINT(EM_DIAGRAM):   end;
2285380   +end;
MPRINT(EM_DIAGRAM):   end;
2285381   +
2285382   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2285383   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2285384   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2285385   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2285386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285388   +end;
MPRINT(EM_DIAGRAM):   end;
2285389   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2285391   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2285392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285393   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2285394   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2285395   +   end;
MPRINT(EM_DIAGRAM):   end;
2285396   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2285397   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2285398   +   end;
MPRINT(EM_DIAGRAM):   end;
2285399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285400   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2285401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285403   +   end;
MPRINT(EM_DIAGRAM):   end;
2285404   +end;
MPRINT(EM_DIAGRAM):   end;
2285405   +
2285406   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2285407   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2285408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2285409   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2285410   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2285411   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2285412   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2285413   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2285414   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2285415   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2285416   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2285417   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2285418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285420   +end;
MPRINT(EM_DIAGRAM):   end;
2285421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285422   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2285423   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2285424   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285425   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2285426   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2285427   +   end;
MPRINT(EM_DIAGRAM):   end;
2285428   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2285429   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2285430   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2285431   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2285432   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2285433   +   end;
MPRINT(EM_DIAGRAM):   end;
2285434   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2285435   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2285436   +   end;
MPRINT(EM_DIAGRAM):   end;
2285437   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2285438   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2285439   +   end;
MPRINT(EM_DIAGRAM):   end;
2285440   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2285441   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2285442   +   end;
MPRINT(EM_DIAGRAM):   end;
2285443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285444   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2285445   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2285446   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2285447   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2285448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285450   +   end;
MPRINT(EM_DIAGRAM):   end;
2285451   +end;
MPRINT(EM_DIAGRAM):   end;
2285452   +
2285453   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2285454   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2285455   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2285456   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2285457   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2285458   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2285459   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2285460   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2285461   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2285462   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2285463   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2285464   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2285465   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2285466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2285467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285468   +end;
MPRINT(EM_DIAGRAM):   end;
2285469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285470   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2285471   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2285472   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285473   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2285474   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2285475   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2285476   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2285477   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2285478   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285479   +         end;
MPRINT(EM_DIAGRAM):   end;
2285480   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2285481   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2285482   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2285483   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285484   +            end;
MPRINT(EM_DIAGRAM):   end;
2285485   +         end;
MPRINT(EM_DIAGRAM):   end;
2285486   +      end;
MPRINT(EM_DIAGRAM):   end;
2285487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2285488   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2285489   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2285490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285491   +         end;
MPRINT(EM_DIAGRAM):   end;
2285492   +      end;
MPRINT(EM_DIAGRAM):   end;
2285493   +   end;
MPRINT(EM_DIAGRAM):   end;
2285494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285495   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2285496   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2285497   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285498   +      end;
MPRINT(EM_DIAGRAM):   end;
2285499   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2285500   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2285501   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2285502   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2285503   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2285504   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2285505   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2285506   +         end;
MPRINT(EM_DIAGRAM):   end;
2285507   +      end;
MPRINT(EM_DIAGRAM):   end;
2285508   +   end;
MPRINT(EM_DIAGRAM):   end;
2285509   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2285510   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2285511   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2285512   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2285513   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2285514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2285515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285516   +   end;
MPRINT(EM_DIAGRAM):   end;
2285517   +end;
MPRINT(EM_DIAGRAM):   end;
2285518   +
2285519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285520   +*** Checking missing input Interval
2285521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2285522   +
2285523   +IF NMISS(
2285524   +   AcceptedCmpTotal ,
2285525   +   Age ,
2285526   +   Frq ,
2285527   +   Income ,
2285528   +   Kidhome ,
2285529   +   Mnt ,
2285530   +   MntFishProducts ,
2285531   +   MntFruits ,
2285532   +   MntGoldProds ,
2285533   +   MntMeatProducts ,
2285534   +   MntSweetProducts ,
2285535   +   MntWines ,
2285536   +   MonthsAsCustomer ,
2285537   +   NumCatalogPurchases ,
2285538   +   NumDealsPurchases ,
2285539   +   NumDistPurchases ,
2285540   +   NumStorePurchases ,
2285541   +   NumWebPurchases ,
2285542   +   NumWebVisitsMonth ,
2285543   +   RFMstat ,
2285544   +   RMntFrq ,
2285545   +   Recency ,
2285546   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2285547   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2285548   +
2285549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2285550   +END;
MPRINT(EM_DIAGRAM):   END;
2285551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285552   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2285553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285554   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285555   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2285556   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2285557   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2285558   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2285559   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2285560   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2285561   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2285562   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2285563   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2285564   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2285565   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2285566   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2285567   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2285568   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2285569   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2285570   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2285571   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2285572   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2285573   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2285574   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2285575   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2285576   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2285577   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2285578   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2285579   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2285580   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2285581   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2285582   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2285583   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2285584   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2285585   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2285586   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2285587   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2285588   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2285589   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2285590   +END;
MPRINT(EM_DIAGRAM):   END;
2285591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285592   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2285593   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2285594   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2285595   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2285596   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2285597   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2285598   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2285599   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2285600   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2285601   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2285602   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2285603   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2285604   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2285605   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2285606   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2285607   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2285608   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2285609   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2285610   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2285611   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2285612   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2285613   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2285614   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2285615   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2285616   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2285617   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2285618   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2285619   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2285620   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2285621   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2285622   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2285623   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2285624   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2285625   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2285626   +   ELSE S_NumCatalogPurchases
2285627   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2285628   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2285629   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2285630   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2285631   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2285632   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2285633   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2285634   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2285635   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2285636   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2285637   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2285638   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2285639   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2285640   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2285641   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2285642   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2285643   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2285644   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2285645   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2285646   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2285647   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2285648   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2285649   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2285650   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2285651   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2285652   +END;
MPRINT(EM_DIAGRAM):   END;
2285653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285654   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2285655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285657   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2285658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285660   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2285661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285663   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2285664   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2285665   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2285666   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2285667   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2285668   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2285669   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2285670   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2285671   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2285672   +          +     0.30381426454211 * S_NumDealsPurchases
2285673   +          +     0.39966076372974 * S_NumDistPurchases
2285674   +          +    -0.58875986801139 * S_NumStorePurchases
2285675   +          +    -0.78850031558536 * S_NumWebPurchases
2285676   +          +     0.35182997415921 * S_NumWebVisitsMonth
2285677   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2285678   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2285679   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2285680   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2285681   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2285682   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2285683   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2285684   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2285685   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2285686   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2285687   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2285688   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2285689   +          +     0.33734772994048 * S_NumDealsPurchases
2285690   +          +     0.06152222921422 * S_NumDistPurchases
2285691   +          +    -0.32068333792942 * S_NumStorePurchases
2285692   +          +    -0.26971366415104 * S_NumWebPurchases
2285693   +          +     0.57693239481071 * S_NumWebVisitsMonth
2285694   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2285695   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2285696   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2285697   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2285698   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2285699   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2285700   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2285701   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2285702   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2285703   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2285704   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2285705   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2285706   +          +     0.22142792900578 * S_NumDealsPurchases
2285707   +          +     -0.0291983445755 * S_NumDistPurchases
2285708   +          +     -0.1997372957954 * S_NumStorePurchases
2285709   +          +    -0.01286201468794 * S_NumWebPurchases
2285710   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2285711   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2285712   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2285713   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2285714   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2285715   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2285716   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2285717   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2285718   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
2285719   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2285720   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2285721   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2285722   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2285723   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
2285724   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2285725   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2285726   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2285727   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2285728   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
2285729   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2285730   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2285731   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2285732   +          +    -0.22358326722482 * Marital_StatusDivorced
2285733   +          +     0.09394210085787 * Marital_StatusMarried
2285734   +          +    -0.10381546554982 * Marital_StatusSingle
2285735   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
2285736   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2285737   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2285738   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2285739   +          +     0.16606212232833 * Marital_StatusDivorced
2285740   +          +    -0.33252488631677 * Marital_StatusMarried
2285741   +          +     0.26735237322144 * Marital_StatusSingle
2285742   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
2285743   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2285744   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2285745   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2285746   +          +    -0.30275479651076 * Marital_StatusDivorced
2285747   +          +     0.50273719874035 * Marital_StatusMarried
2285748   +          +    -0.39588303956293 * Marital_StatusSingle
2285749   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
2285750   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2285751   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2285752   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2285753   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2285754   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2285755   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2285756   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2285757   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2285758   +END;
MPRINT(EM_DIAGRAM):   END;
2285759   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285760   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2285761   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2285762   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2285763   +END;
MPRINT(EM_DIAGRAM):   END;
2285764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285765   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2285766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285768   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2285769   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2285770   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2285771   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2285772   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2285773   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2285774   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2285775   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2285776   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2285777   +          +    -2.59470529821377 * S_NumDealsPurchases
2285778   +          +      0.7668756449818 * S_NumDistPurchases
2285779   +          +     0.61064641547208 * S_NumStorePurchases
2285780   +          +    -0.87106335660846 * S_NumWebPurchases
2285781   +          +      0.1188879348197 * S_NumWebVisitsMonth
2285782   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2285783   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2285784   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2285785   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2285786   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2285787   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2285788   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2285789   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2285790   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2285791   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2285792   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2285793   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2285794   +          +    -0.41834528691349 * S_NumDealsPurchases
2285795   +          +    -0.07802605490227 * S_NumDistPurchases
2285796   +          +    -0.62261476153139 * S_NumStorePurchases
2285797   +          +    -0.84011953180231 * S_NumWebPurchases
2285798   +          +     0.95169092183885 * S_NumWebVisitsMonth
2285799   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2285800   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2285801   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2285802   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2285803   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2285804   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2285805   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2285806   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2285807   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2285808   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2285809   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2285810   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2285811   +          +     1.50811278700924 * S_NumDealsPurchases
2285812   +          +    -0.40025710583484 * S_NumDistPurchases
2285813   +          +     0.16539197954198 * S_NumStorePurchases
2285814   +          +    -1.50803186935431 * S_NumWebPurchases
2285815   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2285816   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2285817   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2285818   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2285819   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2285820   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2285821   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2285822   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2285823   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
2285824   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2285825   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2285826   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2285827   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2285828   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
2285829   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2285830   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2285831   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2285832   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2285833   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
2285834   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2285835   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2285836   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2285837   +          +    -0.48199299977856 * Marital_StatusDivorced
2285838   +          +    -1.61546983135535 * Marital_StatusMarried
2285839   +          +     1.25890289649165 * Marital_StatusSingle
2285840   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
2285841   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2285842   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2285843   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2285844   +          +    -0.69719138781358 * Marital_StatusDivorced
2285845   +          +     0.26964883367384 * Marital_StatusMarried
2285846   +          +      0.4656663467381 * Marital_StatusSingle
2285847   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
2285848   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2285849   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2285850   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2285851   +          +     1.40407968804704 * Marital_StatusDivorced
2285852   +          +    -1.35468203106214 * Marital_StatusMarried
2285853   +          +      1.0644996414042 * Marital_StatusSingle
2285854   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
2285855   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2285856   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2285857   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2285858   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2285859   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2285860   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2285861   +END;
MPRINT(EM_DIAGRAM):   END;
2285862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285863   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2285864   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2285865   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2285866   +END;
MPRINT(EM_DIAGRAM):   END;
2285867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285868   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2285869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285870   +
2285871   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2285872   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2285873   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2285874   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2285875   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2285876   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2285877   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2285878   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2285879   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2285880   +end;
MPRINT(EM_DIAGRAM):   end;
2285881   +else do;
MPRINT(EM_DIAGRAM):   else do;
2285882   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2285883   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2285884   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2285885   +   end;
MPRINT(EM_DIAGRAM):   end;
2285886   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2285887   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2285888   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2285889   +   end;
MPRINT(EM_DIAGRAM):   end;
2285890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2285891   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2285892   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2285893   +   end;
MPRINT(EM_DIAGRAM):   end;
2285894   +end;
MPRINT(EM_DIAGRAM):   end;
2285895   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2285896   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2285897   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
2285898   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2285899   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2285900   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2285901   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2285902   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2285903   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2285904   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2285905   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2285906   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2285907   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2285908   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2285909   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2285910   +END;
MPRINT(EM_DIAGRAM):   END;
2285911   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2285912   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2285913   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2285914   +END;
MPRINT(EM_DIAGRAM):   END;
2285915   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2285916   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2285917   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2285918   +END;
MPRINT(EM_DIAGRAM):   END;
2285919   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2285920   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2285921   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2285922   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2285923   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2285924   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2285925   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2285926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285927   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2285928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2285929   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2285930   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2285931   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2285932   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2285933   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2285934   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2285935   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2285936   +END;
MPRINT(EM_DIAGRAM):   END;
2285937   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285938   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2285939   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2285940   +drop
2285941   +H1x1_1
2285942   +H1x1_2
2285943   +H1x1_3
2285944   +H1x2_1
2285945   +H1x2_2
2285946   +H1x2_3
2285947   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2285948   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2285949   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2285950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285951   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2285952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285953   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2285954   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2285955   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2285956   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2285957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285958   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2285959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285960   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2285961   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2285962   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2285963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285964   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
2285965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285967   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2285968   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2285969   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2285970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2285971   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2285972   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2285973   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2285974   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2285975   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2285976   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2285977   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2285978   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2285979   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2285980   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2285981   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2285982   +LENGTH _WARN_ $4
2285983   +      F_DepVar  $ 12
2285984   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2285985   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2285986   +
2285987   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2285988   +
2285989   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2285990   +
2285991   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2285992   +
2285993   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2285994   +
2285995   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2285996   +
2285997   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2285998   +
2285999   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2286000   +
2286001   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2286002   +
2286003   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2286004   +
2286005   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2286006   +
2286007   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2286008   +
2286009   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2286010   +
2286011   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2286012   +
2286013   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2286014   +
2286015   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2286016   +
2286017   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2286018   +
2286019   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2286020   +
2286021   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2286022   +
2286023   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2286024   +
2286025   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2286026   +
2286027   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2286028   +
2286029   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2286030   +
2286031   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2286032   +
2286033   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2286034   +
2286035   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2286036   +
2286037   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2286038   +
2286039   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2286040   +
2286041   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2286042   +
2286043   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2286044   +
2286045   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2286046   +
2286047   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2286048   +
2286049   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2286050   +
2286051   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2286052   +
2286053   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2286054   +
2286055   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2286056   +
2286057   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2286058   +
2286059   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2286060   +
2286061   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2286062   +
2286063   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2286064   +
2286065   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2286066   +
2286067   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2286068   +
2286069   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2286070   +
2286071   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2286072   +
2286073   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2286074   +
2286075   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2286076   +
2286077   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2286078   +
2286079   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2286080   +
2286081   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2286082   +
2286083   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2286084   +
2286085   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2286086   +
2286087   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2286088   +
2286089   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2286090   +
2286091   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2286092   +
2286093   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2286094   +
2286095   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2286096   +
2286097   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2286098   +
2286099   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2286100   +
2286101   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2286102   +
2286103   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2286104   +
2286105   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2286106   +
2286107   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2286108   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2286109   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2286110   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2286111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286113   +end;
MPRINT(EM_DIAGRAM):   end;
2286114   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286116   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2286117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286119   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2286120   +   end;
MPRINT(EM_DIAGRAM):   end;
2286121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286122   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2286123   +   end;
MPRINT(EM_DIAGRAM):   end;
2286124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286125   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2286126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286128   +   end;
MPRINT(EM_DIAGRAM):   end;
2286129   +end;
MPRINT(EM_DIAGRAM):   end;
2286130   +
2286131   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2286132   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2286133   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2286134   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2286135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286137   +end;
MPRINT(EM_DIAGRAM):   end;
2286138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286140   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2286141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286143   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2286144   +   end;
MPRINT(EM_DIAGRAM):   end;
2286145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286146   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2286147   +   end;
MPRINT(EM_DIAGRAM):   end;
2286148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286149   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2286150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286152   +   end;
MPRINT(EM_DIAGRAM):   end;
2286153   +end;
MPRINT(EM_DIAGRAM):   end;
2286154   +
2286155   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2286156   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2286157   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2286158   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2286159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286161   +end;
MPRINT(EM_DIAGRAM):   end;
2286162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286164   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2286165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286167   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2286168   +   end;
MPRINT(EM_DIAGRAM):   end;
2286169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286170   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2286171   +   end;
MPRINT(EM_DIAGRAM):   end;
2286172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286173   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2286174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286176   +   end;
MPRINT(EM_DIAGRAM):   end;
2286177   +end;
MPRINT(EM_DIAGRAM):   end;
2286178   +
2286179   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2286180   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2286181   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2286182   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2286183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286185   +end;
MPRINT(EM_DIAGRAM):   end;
2286186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286188   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2286189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286190   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286191   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2286192   +   end;
MPRINT(EM_DIAGRAM):   end;
2286193   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286194   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2286195   +   end;
MPRINT(EM_DIAGRAM):   end;
2286196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286197   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2286198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286200   +   end;
MPRINT(EM_DIAGRAM):   end;
2286201   +end;
MPRINT(EM_DIAGRAM):   end;
2286202   +
2286203   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2286204   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2286205   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2286206   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2286207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286209   +end;
MPRINT(EM_DIAGRAM):   end;
2286210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286212   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2286213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286214   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286215   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2286216   +   end;
MPRINT(EM_DIAGRAM):   end;
2286217   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286218   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2286219   +   end;
MPRINT(EM_DIAGRAM):   end;
2286220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286221   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2286222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286224   +   end;
MPRINT(EM_DIAGRAM):   end;
2286225   +end;
MPRINT(EM_DIAGRAM):   end;
2286226   +
2286227   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2286228   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2286229   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2286230   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2286231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286233   +end;
MPRINT(EM_DIAGRAM):   end;
2286234   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286235   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286236   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2286237   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286238   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2286239   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2286240   +   end;
MPRINT(EM_DIAGRAM):   end;
2286241   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2286242   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2286243   +   end;
MPRINT(EM_DIAGRAM):   end;
2286244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286245   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2286246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286248   +   end;
MPRINT(EM_DIAGRAM):   end;
2286249   +end;
MPRINT(EM_DIAGRAM):   end;
2286250   +
2286251   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2286252   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2286253   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2286254   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2286255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286257   +end;
MPRINT(EM_DIAGRAM):   end;
2286258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2286260   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2286261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286262   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2286263   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2286264   +   end;
MPRINT(EM_DIAGRAM):   end;
2286265   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2286266   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2286267   +   end;
MPRINT(EM_DIAGRAM):   end;
2286268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286269   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2286270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286272   +   end;
MPRINT(EM_DIAGRAM):   end;
2286273   +end;
MPRINT(EM_DIAGRAM):   end;
2286274   +
2286275   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2286276   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2286277   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2286278   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2286279   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2286280   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2286281   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2286282   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2286283   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2286284   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2286285   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2286286   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2286287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286289   +end;
MPRINT(EM_DIAGRAM):   end;
2286290   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286291   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2286292   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2286293   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286294   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2286295   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2286296   +   end;
MPRINT(EM_DIAGRAM):   end;
2286297   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2286298   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2286299   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2286300   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2286301   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2286302   +   end;
MPRINT(EM_DIAGRAM):   end;
2286303   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2286304   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2286305   +   end;
MPRINT(EM_DIAGRAM):   end;
2286306   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2286307   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2286308   +   end;
MPRINT(EM_DIAGRAM):   end;
2286309   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2286310   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2286311   +   end;
MPRINT(EM_DIAGRAM):   end;
2286312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286313   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2286314   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2286315   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2286316   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2286317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286319   +   end;
MPRINT(EM_DIAGRAM):   end;
2286320   +end;
MPRINT(EM_DIAGRAM):   end;
2286321   +
2286322   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2286323   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2286324   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2286325   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2286326   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2286327   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2286328   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2286329   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2286330   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2286331   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2286332   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2286333   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2286334   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2286335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2286336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286337   +end;
MPRINT(EM_DIAGRAM):   end;
2286338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2286339   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2286340   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2286341   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2286342   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2286343   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2286344   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2286345   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2286346   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2286347   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286348   +         end;
MPRINT(EM_DIAGRAM):   end;
2286349   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2286350   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2286351   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2286352   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286353   +            end;
MPRINT(EM_DIAGRAM):   end;
2286354   +         end;
MPRINT(EM_DIAGRAM):   end;
2286355   +      end;
MPRINT(EM_DIAGRAM):   end;
2286356   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2286357   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2286358   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2286359   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286360   +         end;
MPRINT(EM_DIAGRAM):   end;
2286361   +      end;
MPRINT(EM_DIAGRAM):   end;
2286362   +   end;
MPRINT(EM_DIAGRAM):   end;
2286363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2286364   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2286365   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2286366   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286367   +      end;
MPRINT(EM_DIAGRAM):   end;
2286368   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2286369   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2286370   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2286371   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2286372   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2286373   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2286374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2286375   +         end;
MPRINT(EM_DIAGRAM):   end;
2286376   +      end;
MPRINT(EM_DIAGRAM):   end;
2286377   +   end;
MPRINT(EM_DIAGRAM):   end;
2286378   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2286379   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2286380   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2286381   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2286382   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2286383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2286384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286385   +   end;
MPRINT(EM_DIAGRAM):   end;
2286386   +end;
MPRINT(EM_DIAGRAM):   end;
2286387   +
2286388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286389   +*** Checking missing input Interval
2286390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2286391   +
2286392   +IF NMISS(
2286393   +   AcceptedCmpTotal ,
2286394   +   Age ,
2286395   +   Frq ,
2286396   +   Income ,
2286397   +   Kidhome ,
2286398   +   Mnt ,
2286399   +   MntFishProducts ,
2286400   +   MntFruits ,
2286401   +   MntGoldProds ,
2286402   +   MntMeatProducts ,
2286403   +   MntSweetProducts ,
2286404   +   MntWines ,
2286405   +   MonthsAsCustomer ,
2286406   +   NumCatalogPurchases ,
2286407   +   NumDealsPurchases ,
2286408   +   NumDistPurchases ,
2286409   +   NumStorePurchases ,
2286410   +   NumWebPurchases ,
2286411   +   NumWebVisitsMonth ,
2286412   +   RFMstat ,
2286413   +   RMntFrq ,
2286414   +   Recency ,
2286415   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2286416   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2286417   +
2286418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2286419   +END;
MPRINT(EM_DIAGRAM):   END;
2286420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286421   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2286422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286424   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2286425   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2286426   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2286427   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2286428   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2286429   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2286430   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2286431   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2286432   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2286433   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2286434   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2286435   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2286436   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2286437   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2286438   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2286439   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2286440   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2286441   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2286442   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2286443   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2286444   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2286445   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2286446   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2286447   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2286448   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2286449   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2286450   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2286451   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2286452   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2286453   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2286454   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2286455   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2286456   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2286457   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2286458   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2286459   +END;
MPRINT(EM_DIAGRAM):   END;
2286460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286461   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2286462   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2286463   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2286464   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2286465   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2286466   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2286467   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2286468   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2286469   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2286470   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2286471   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2286472   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2286473   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2286474   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2286475   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2286476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2286477   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2286478   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2286479   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2286480   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2286481   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2286482   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2286483   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2286484   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2286485   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2286486   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2286487   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2286488   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2286489   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2286490   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2286491   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2286492   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2286493   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2286494   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2286495   +   ELSE S_NumCatalogPurchases
2286496   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2286497   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2286498   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2286499   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2286500   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2286501   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2286502   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2286503   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2286504   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2286505   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2286506   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2286507   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2286508   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2286509   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2286510   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2286511   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2286512   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2286513   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2286514   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2286515   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2286516   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2286517   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2286518   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2286519   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2286520   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2286521   +END;
MPRINT(EM_DIAGRAM):   END;
2286522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286523   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2286524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286526   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2286527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286529   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2286530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286531   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286532   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2286533   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2286534   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2286535   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2286536   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2286537   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2286538   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2286539   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2286540   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2286541   +          +     3.21215425524619 * S_NumDealsPurchases
2286542   +          +     0.08695198777156 * S_NumDistPurchases
2286543   +          +    -2.58697971128295 * S_NumStorePurchases
2286544   +          +    -0.44431924796059 * S_NumWebPurchases
2286545   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2286546   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2286547   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2286548   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2286549   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2286550   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2286551   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2286552   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2286553   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2286554   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2286555   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2286556   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2286557   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2286558   +          +    -0.83844506398484 * S_NumDealsPurchases
2286559   +          +     0.60831936516804 * S_NumDistPurchases
2286560   +          +     1.79084087761626 * S_NumStorePurchases
2286561   +          +     1.17119196356453 * S_NumWebPurchases
2286562   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2286563   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2286564   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2286565   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2286566   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2286567   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2286568   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2286569   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2286570   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2286571   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2286572   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2286573   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2286574   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2286575   +          +    -0.31484031572628 * S_NumDealsPurchases
2286576   +          +    -0.18273941035679 * S_NumDistPurchases
2286577   +          +     0.99501789733882 * S_NumStorePurchases
2286578   +          +     1.32014078829379 * S_NumWebPurchases
2286579   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2286580   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2286581   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2286582   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2286583   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2286584   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2286585   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2286586   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2286587   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2286588   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2286589   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2286590   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2286591   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2286592   +          +     1.19658719134196 * S_NumDealsPurchases
2286593   +          +     0.87478204472986 * S_NumDistPurchases
2286594   +          +    -0.20635856288784 * S_NumStorePurchases
2286595   +          +    -0.89927356974242 * S_NumWebPurchases
2286596   +          +     2.92285244132576 * S_NumWebVisitsMonth
2286597   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2286598   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2286599   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2286600   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2286601   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2286602   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2286603   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2286604   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2286605   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2286606   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2286607   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2286608   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2286609   +          +       -2.32617124568 * S_NumDealsPurchases
2286610   +          +    -0.56589187730672 * S_NumDistPurchases
2286611   +          +     1.07062299863482 * S_NumStorePurchases
2286612   +          +     0.30077273739578 * S_NumWebPurchases
2286613   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2286614   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2286615   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2286616   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2286617   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2286618   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2286619   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2286620   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2286621   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2286622   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2286623   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2286624   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2286625   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2286626   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2286627   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2286628   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2286629   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2286630   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2286631   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2286632   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2286633   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2286634   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2286635   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2286636   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2286637   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2286638   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2286639   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2286640   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2286641   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2286642   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2286643   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2286644   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2286645   +          +    -0.27797737429678 * Marital_StatusDivorced
2286646   +          +    -0.08137635862327 * Marital_StatusMarried
2286647   +          +     0.06275411820495 * Marital_StatusSingle
2286648   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2286649   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2286650   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2286651   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2286652   +          +     0.05151426841441 * Marital_StatusDivorced
2286653   +          +     1.19165082030442 * Marital_StatusMarried
2286654   +          +    -1.08257080662611 * Marital_StatusSingle
2286655   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2286656   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2286657   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2286658   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2286659   +          +      0.0238206459022 * Marital_StatusDivorced
2286660   +          +     -0.4653244204261 * Marital_StatusMarried
2286661   +          +     0.13051613619882 * Marital_StatusSingle
2286662   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2286663   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2286664   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2286665   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2286666   +          +     -0.7449356409222 * Marital_StatusDivorced
2286667   +          +    -1.46604673521535 * Marital_StatusMarried
2286668   +          +     0.74484771688818 * Marital_StatusSingle
2286669   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2286670   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2286671   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2286672   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2286673   +          +    -3.68044980584423 * Marital_StatusDivorced
2286674   +          +     3.14587407902338 * Marital_StatusMarried
2286675   +          +    -2.66118132753024 * Marital_StatusSingle
2286676   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2286677   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2286678   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2286679   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2286680   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2286681   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2286682   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2286683   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2286684   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2286685   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2286686   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2286687   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2286688   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2286689   +END;
MPRINT(EM_DIAGRAM):   END;
2286690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286691   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2286692   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2286693   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2286694   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2286695   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2286696   +END;
MPRINT(EM_DIAGRAM):   END;
2286697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286698   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2286699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286700   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286701   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2286702   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2286703   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2286704   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2286705   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2286706   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2286707   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2286708   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2286709   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2286710   +          +     0.89261880438741 * S_NumDealsPurchases
2286711   +          +    -1.61647413199892 * S_NumDistPurchases
2286712   +          +    -0.56304669045195 * S_NumStorePurchases
2286713   +          +      0.7766837080945 * S_NumWebPurchases
2286714   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2286715   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2286716   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2286717   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2286718   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2286719   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2286720   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2286721   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2286722   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2286723   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2286724   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2286725   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2286726   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2286727   +          +     1.02431289724643 * S_NumDealsPurchases
2286728   +          +    -0.90960173637405 * S_NumDistPurchases
2286729   +          +     1.24283490404772 * S_NumStorePurchases
2286730   +          +     1.23072413154592 * S_NumWebPurchases
2286731   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2286732   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2286733   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2286734   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2286735   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2286736   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2286737   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2286738   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2286739   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2286740   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2286741   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2286742   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2286743   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2286744   +          +    -0.26249596122198 * S_NumDealsPurchases
2286745   +          +    -0.63328519804758 * S_NumDistPurchases
2286746   +          +    -0.88467503575886 * S_NumStorePurchases
2286747   +          +    -0.83120537310738 * S_NumWebPurchases
2286748   +          +     1.40072282351719 * S_NumWebVisitsMonth
2286749   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2286750   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2286751   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2286752   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2286753   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2286754   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2286755   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2286756   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2286757   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2286758   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2286759   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2286760   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2286761   +          +     1.30167361451945 * S_NumDealsPurchases
2286762   +          +     1.45457613716235 * S_NumDistPurchases
2286763   +          +    -0.40226463685252 * S_NumStorePurchases
2286764   +          +     0.36369161683572 * S_NumWebPurchases
2286765   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2286766   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2286767   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2286768   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2286769   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2286770   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2286771   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2286772   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2286773   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2286774   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2286775   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2286776   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2286777   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2286778   +          +    -0.54572162665338 * S_NumDealsPurchases
2286779   +          +      0.9607390449318 * S_NumDistPurchases
2286780   +          +    -0.03259470545754 * S_NumStorePurchases
2286781   +          +     0.19202241423412 * S_NumWebPurchases
2286782   +          +     0.61085831658456 * S_NumWebVisitsMonth
2286783   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2286784   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2286785   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2286786   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2286787   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2286788   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2286789   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2286790   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2286791   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2286792   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2286793   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2286794   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2286795   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2286796   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2286797   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2286798   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2286799   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2286800   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2286801   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2286802   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2286803   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2286804   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2286805   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2286806   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2286807   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2286808   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2286809   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2286810   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2286811   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2286812   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2286813   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2286814   +          +    -2.32430245081383 * Marital_StatusDivorced
2286815   +          +    -0.09815511356796 * Marital_StatusMarried
2286816   +          +     0.13075504294551 * Marital_StatusSingle
2286817   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2286818   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2286819   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2286820   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2286821   +          +    -0.65574603869224 * Marital_StatusDivorced
2286822   +          +     1.54672472575294 * Marital_StatusMarried
2286823   +          +    -1.59817602340208 * Marital_StatusSingle
2286824   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2286825   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2286826   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2286827   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2286828   +          +    -0.50911604604781 * Marital_StatusDivorced
2286829   +          +     0.30403066135719 * Marital_StatusMarried
2286830   +          +      0.1026950879545 * Marital_StatusSingle
2286831   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2286832   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2286833   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2286834   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2286835   +          +     1.07371507133318 * Marital_StatusDivorced
2286836   +          +    -0.07097334129051 * Marital_StatusMarried
2286837   +          +    -0.48339718568621 * Marital_StatusSingle
2286838   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2286839   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2286840   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2286841   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2286842   +          +     1.04342893515504 * Marital_StatusDivorced
2286843   +          +     1.16171312085032 * Marital_StatusMarried
2286844   +          +    -0.30201646939913 * Marital_StatusSingle
2286845   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2286846   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2286847   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2286848   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2286849   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2286850   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2286851   +END;
MPRINT(EM_DIAGRAM):   END;
2286852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2286853   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2286854   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2286855   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2286856   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2286857   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2286858   +END;
MPRINT(EM_DIAGRAM):   END;
2286859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286860   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2286861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2286862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2286863   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2286864   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2286865   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2286866   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2286867   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2286868   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2286869   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2286870   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2286871   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2286872   +          +     1.32256781010645 * S_NumDealsPurchases
2286873   +          +    -1.43015438973619 * S_NumDistPurchases
2286874   +          +    -0.63489289584421 * S_NumStorePurchases
2286875   +          +     0.90508699686841 * S_NumWebPurchases
2286876   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2286877   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2286878   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2286879   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2286880   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2286881   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2286882   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2286883   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2286884   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2286885   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2286886   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2286887   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2286888   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2286889   +          +     0.85965187264096 * S_NumDealsPurchases
2286890   +          +    -1.15239933286756 * S_NumDistPurchases
2286891   +          +     1.20800889102387 * S_NumStorePurchases
2286892   +          +     1.08790389130242 * S_NumWebPurchases
2286893   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2286894   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2286895   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2286896   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2286897   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2286898   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2286899   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2286900   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2286901   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2286902   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2286903   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2286904   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2286905   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2286906   +          +     -0.5767607129654 * S_NumDealsPurchases
2286907   +          +     -0.2643921429796 * S_NumDistPurchases
2286908   +          +    -0.67417489911206 * S_NumStorePurchases
2286909   +          +    -0.51423877684891 * S_NumWebPurchases
2286910   +          +     1.40328299605176 * S_NumWebVisitsMonth
2286911   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2286912   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2286913   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2286914   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2286915   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2286916   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2286917   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2286918   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2286919   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2286920   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2286921   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2286922   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2286923   +          +      1.2821617657076 * S_NumDealsPurchases
2286924   +          +     1.26584115202735 * S_NumDistPurchases
2286925   +          +    -0.46597664211833 * S_NumStorePurchases
2286926   +          +     0.45652363472866 * S_NumWebPurchases
2286927   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2286928   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2286929   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2286930   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2286931   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2286932   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2286933   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2286934   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2286935   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2286936   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2286937   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2286938   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2286939   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2286940   +          +    -0.85162564171681 * S_NumDealsPurchases
2286941   +          +     0.64631099667221 * S_NumDistPurchases
2286942   +          +    -0.03081963858636 * S_NumStorePurchases
2286943   +          +    -0.24124717624664 * S_NumWebPurchases
2286944   +          +     0.56425980772372 * S_NumWebVisitsMonth
2286945   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2286946   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2286947   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2286948   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2286949   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2286950   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2286951   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2286952   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2286953   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2286954   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2286955   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2286956   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2286957   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2286958   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2286959   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2286960   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2286961   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2286962   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2286963   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2286964   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2286965   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2286966   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2286967   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2286968   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2286969   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2286970   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2286971   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2286972   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2286973   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2286974   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2286975   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2286976   +          +    -2.49973437075558 * Marital_StatusDivorced
2286977   +          +    -0.18076948182574 * Marital_StatusMarried
2286978   +          +     0.13498525495231 * Marital_StatusSingle
2286979   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2286980   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2286981   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2286982   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2286983   +          +       -0.59463732835 * Marital_StatusDivorced
2286984   +          +     1.37741332427598 * Marital_StatusMarried
2286985   +          +     -1.5833455713231 * Marital_StatusSingle
2286986   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2286987   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2286988   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2286989   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2286990   +          +    -0.44569556289443 * Marital_StatusDivorced
2286991   +          +     0.29918053103557 * Marital_StatusMarried
2286992   +          +    -0.10337314064224 * Marital_StatusSingle
2286993   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2286994   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2286995   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2286996   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2286997   +          +     1.13881957277462 * Marital_StatusDivorced
2286998   +          +    -0.35849807146313 * Marital_StatusMarried
2286999   +          +    -0.22168731316885 * Marital_StatusSingle
2287000   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2287001   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2287002   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2287003   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2287004   +          +     1.10774969923269 * Marital_StatusDivorced
2287005   +          +     1.08409594073043 * Marital_StatusMarried
2287006   +          +    -0.33145048007894 * Marital_StatusSingle
2287007   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2287008   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2287009   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2287010   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2287011   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2287012   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2287013   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2287014   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2287015   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2287016   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2287017   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2287018   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2287019   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2287020   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2287021   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2287022   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2287023   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2287024   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2287025   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2287026   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2287027   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2287028   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2287029   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2287030   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2287031   +END;
MPRINT(EM_DIAGRAM):   END;
2287032   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287033   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2287034   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2287035   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2287036   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2287037   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2287038   +END;
MPRINT(EM_DIAGRAM):   END;
2287039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287040   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2287041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287042   +
2287043   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2287044   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2287045   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2287046   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2287047   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2287048   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287049   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2287050   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2287051   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2287052   +end;
MPRINT(EM_DIAGRAM):   end;
2287053   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287054   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2287055   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2287056   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2287057   +   end;
MPRINT(EM_DIAGRAM):   end;
2287058   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2287059   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2287060   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2287061   +   end;
MPRINT(EM_DIAGRAM):   end;
2287062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287063   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2287064   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2287065   +   end;
MPRINT(EM_DIAGRAM):   end;
2287066   +end;
MPRINT(EM_DIAGRAM):   end;
2287067   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287068   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2287069   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2287070   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2287071   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2287072   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2287073   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2287074   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2287075   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2287076   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2287077   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2287078   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2287079   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2287080   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2287081   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2287082   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2287083   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2287084   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2287085   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2287086   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2287087   +END;
MPRINT(EM_DIAGRAM):   END;
2287088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287089   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2287090   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2287091   +END;
MPRINT(EM_DIAGRAM):   END;
2287092   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2287093   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2287094   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2287095   +END;
MPRINT(EM_DIAGRAM):   END;
2287096   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2287097   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2287098   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2287099   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2287100   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2287101   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2287102   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2287103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287104   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2287105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287106   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2287107   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2287108   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2287109   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2287110   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2287111   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2287112   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2287113   +END;
MPRINT(EM_DIAGRAM):   END;
2287114   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2287115   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2287116   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2287117   +drop
2287118   +H1x1_1
2287119   +H1x1_2
2287120   +H1x1_3
2287121   +H1x1_4
2287122   +H1x1_5
2287123   +H1x2_1
2287124   +H1x2_2
2287125   +H1x2_3
2287126   +H1x2_4
2287127   +H1x2_5
2287128   +H1x3_1
2287129   +H1x3_2
2287130   +H1x3_3
2287131   +H1x3_4
2287132   +H1x3_5
2287133   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2287134   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2287135   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2287136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287137   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2287138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287139   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2287140   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2287141   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2287142   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2287143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287144   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2287145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287146   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2287147   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2287148   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2287149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287150   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
2287151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287153   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2287154   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2287155   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2287156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287157   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287158   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2287159   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287160   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2287161   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2287162   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2287163   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2287164   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2287165   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2287166   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2287167   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2287168   +LENGTH _WARN_ $4
2287169   +      F_DepVar  $ 12
2287170   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2287171   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2287172   +
2287173   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2287174   +
2287175   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2287176   +
2287177   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2287178   +
2287179   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2287180   +
2287181   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2287182   +
2287183   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2287184   +
2287185   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2287186   +
2287187   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2287188   +
2287189   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2287190   +
2287191   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2287192   +
2287193   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2287194   +
2287195   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2287196   +
2287197   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2287198   +
2287199   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2287200   +
2287201   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2287202   +
2287203   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2287204   +
2287205   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2287206   +
2287207   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2287208   +
2287209   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2287210   +
2287211   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2287212   +
2287213   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2287214   +
2287215   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2287216   +
2287217   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2287218   +
2287219   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2287220   +
2287221   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2287222   +
2287223   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2287224   +
2287225   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2287226   +
2287227   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2287228   +
2287229   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2287230   +
2287231   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2287232   +
2287233   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2287234   +
2287235   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2287236   +
2287237   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2287238   +
2287239   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2287240   +
2287241   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2287242   +
2287243   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2287244   +
2287245   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2287246   +
2287247   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2287248   +
2287249   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2287250   +
2287251   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2287252   +
2287253   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2287254   +
2287255   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2287256   +
2287257   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2287258   +
2287259   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2287260   +
2287261   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2287262   +
2287263   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2287264   +
2287265   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2287266   +
2287267   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2287268   +
2287269   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2287270   +
2287271   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2287272   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2287273   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2287274   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2287275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287277   +end;
MPRINT(EM_DIAGRAM):   end;
2287278   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287280   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2287281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287283   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2287284   +   end;
MPRINT(EM_DIAGRAM):   end;
2287285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287286   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2287287   +   end;
MPRINT(EM_DIAGRAM):   end;
2287288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287289   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2287290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287292   +   end;
MPRINT(EM_DIAGRAM):   end;
2287293   +end;
MPRINT(EM_DIAGRAM):   end;
2287294   +
2287295   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2287296   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2287297   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2287298   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2287299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287301   +end;
MPRINT(EM_DIAGRAM):   end;
2287302   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287304   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2287305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287306   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287307   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2287308   +   end;
MPRINT(EM_DIAGRAM):   end;
2287309   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287310   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2287311   +   end;
MPRINT(EM_DIAGRAM):   end;
2287312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287313   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2287314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287316   +   end;
MPRINT(EM_DIAGRAM):   end;
2287317   +end;
MPRINT(EM_DIAGRAM):   end;
2287318   +
2287319   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2287320   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2287321   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2287322   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2287323   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287324   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287325   +end;
MPRINT(EM_DIAGRAM):   end;
2287326   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287327   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287328   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2287329   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287330   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287331   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2287332   +   end;
MPRINT(EM_DIAGRAM):   end;
2287333   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287334   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2287335   +   end;
MPRINT(EM_DIAGRAM):   end;
2287336   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287337   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2287338   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287339   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287340   +   end;
MPRINT(EM_DIAGRAM):   end;
2287341   +end;
MPRINT(EM_DIAGRAM):   end;
2287342   +
2287343   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2287344   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2287345   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2287346   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2287347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287349   +end;
MPRINT(EM_DIAGRAM):   end;
2287350   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287351   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287352   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2287353   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287354   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287355   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2287356   +   end;
MPRINT(EM_DIAGRAM):   end;
2287357   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287358   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2287359   +   end;
MPRINT(EM_DIAGRAM):   end;
2287360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287361   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2287362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287364   +   end;
MPRINT(EM_DIAGRAM):   end;
2287365   +end;
MPRINT(EM_DIAGRAM):   end;
2287366   +
2287367   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2287368   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2287369   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2287370   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2287371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287373   +end;
MPRINT(EM_DIAGRAM):   end;
2287374   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287375   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287376   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2287377   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287378   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287379   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2287380   +   end;
MPRINT(EM_DIAGRAM):   end;
2287381   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287382   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2287383   +   end;
MPRINT(EM_DIAGRAM):   end;
2287384   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287385   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2287386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287388   +   end;
MPRINT(EM_DIAGRAM):   end;
2287389   +end;
MPRINT(EM_DIAGRAM):   end;
2287390   +
2287391   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2287392   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2287393   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2287394   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2287395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287397   +end;
MPRINT(EM_DIAGRAM):   end;
2287398   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287400   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2287401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287402   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2287403   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2287404   +   end;
MPRINT(EM_DIAGRAM):   end;
2287405   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2287406   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2287407   +   end;
MPRINT(EM_DIAGRAM):   end;
2287408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287409   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2287410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287412   +   end;
MPRINT(EM_DIAGRAM):   end;
2287413   +end;
MPRINT(EM_DIAGRAM):   end;
2287414   +
2287415   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2287416   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2287417   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2287418   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2287419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287421   +end;
MPRINT(EM_DIAGRAM):   end;
2287422   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2287424   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2287425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287426   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2287427   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2287428   +   end;
MPRINT(EM_DIAGRAM):   end;
2287429   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2287430   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2287431   +   end;
MPRINT(EM_DIAGRAM):   end;
2287432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287433   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2287434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287436   +   end;
MPRINT(EM_DIAGRAM):   end;
2287437   +end;
MPRINT(EM_DIAGRAM):   end;
2287438   +
2287439   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2287440   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2287441   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2287442   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2287443   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2287444   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2287445   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2287446   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2287447   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2287448   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2287449   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2287450   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2287451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287453   +end;
MPRINT(EM_DIAGRAM):   end;
2287454   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287455   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2287456   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2287457   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287458   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2287459   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2287460   +   end;
MPRINT(EM_DIAGRAM):   end;
2287461   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2287462   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2287463   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2287464   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2287465   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2287466   +   end;
MPRINT(EM_DIAGRAM):   end;
2287467   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2287468   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2287469   +   end;
MPRINT(EM_DIAGRAM):   end;
2287470   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2287471   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2287472   +   end;
MPRINT(EM_DIAGRAM):   end;
2287473   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2287474   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2287475   +   end;
MPRINT(EM_DIAGRAM):   end;
2287476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287477   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2287478   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2287479   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2287480   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2287481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287483   +   end;
MPRINT(EM_DIAGRAM):   end;
2287484   +end;
MPRINT(EM_DIAGRAM):   end;
2287485   +
2287486   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2287487   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2287488   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2287489   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2287490   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2287491   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2287492   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2287493   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2287494   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2287495   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2287496   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2287497   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2287498   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2287499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2287500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287501   +end;
MPRINT(EM_DIAGRAM):   end;
2287502   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287503   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2287504   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2287505   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287506   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2287507   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2287508   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2287509   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2287510   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2287511   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287512   +         end;
MPRINT(EM_DIAGRAM):   end;
2287513   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2287514   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2287515   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2287516   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287517   +            end;
MPRINT(EM_DIAGRAM):   end;
2287518   +         end;
MPRINT(EM_DIAGRAM):   end;
2287519   +      end;
MPRINT(EM_DIAGRAM):   end;
2287520   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2287521   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2287522   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2287523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287524   +         end;
MPRINT(EM_DIAGRAM):   end;
2287525   +      end;
MPRINT(EM_DIAGRAM):   end;
2287526   +   end;
MPRINT(EM_DIAGRAM):   end;
2287527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287528   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2287529   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2287530   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287531   +      end;
MPRINT(EM_DIAGRAM):   end;
2287532   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2287533   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2287534   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2287535   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2287536   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2287537   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2287538   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2287539   +         end;
MPRINT(EM_DIAGRAM):   end;
2287540   +      end;
MPRINT(EM_DIAGRAM):   end;
2287541   +   end;
MPRINT(EM_DIAGRAM):   end;
2287542   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2287543   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2287544   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2287545   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2287546   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2287547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2287548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287549   +   end;
MPRINT(EM_DIAGRAM):   end;
2287550   +end;
MPRINT(EM_DIAGRAM):   end;
2287551   +
2287552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287553   +*** Checking missing input Interval
2287554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2287555   +
2287556   +IF NMISS(
2287557   +   AcceptedCmpTotal ,
2287558   +   Age ,
2287559   +   Frq ,
2287560   +   Income ,
2287561   +   Kidhome ,
2287562   +   Mnt ,
2287563   +   MntFishProducts ,
2287564   +   MntFruits ,
2287565   +   MntGoldProds ,
2287566   +   MntMeatProducts ,
2287567   +   MntSweetProducts ,
2287568   +   MntWines ,
2287569   +   MonthsAsCustomer ,
2287570   +   NumCatalogPurchases ,
2287571   +   NumDealsPurchases ,
2287572   +   NumDistPurchases ,
2287573   +   NumStorePurchases ,
2287574   +   NumWebPurchases ,
2287575   +   NumWebVisitsMonth ,
2287576   +   RFMstat ,
2287577   +   RMntFrq ,
2287578   +   Recency ,
2287579   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2287580   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2287581   +
2287582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2287583   +END;
MPRINT(EM_DIAGRAM):   END;
2287584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287585   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2287586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287587   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287588   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2287589   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2287590   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2287591   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2287592   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2287593   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2287594   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2287595   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2287596   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2287597   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2287598   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2287599   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2287600   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2287601   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2287602   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2287603   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2287604   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2287605   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2287606   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2287607   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2287608   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2287609   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2287610   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2287611   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2287612   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2287613   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2287614   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2287615   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2287616   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2287617   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2287618   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2287619   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2287620   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2287621   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2287622   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2287623   +END;
MPRINT(EM_DIAGRAM):   END;
2287624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287625   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2287626   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2287627   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2287628   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2287629   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2287630   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2287631   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2287632   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2287633   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2287634   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2287635   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2287636   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2287637   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2287638   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2287639   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2287640   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2287641   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2287642   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2287643   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2287644   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2287645   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2287646   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2287647   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2287648   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2287649   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2287650   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2287651   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2287652   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2287653   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2287654   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2287655   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2287656   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2287657   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2287658   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2287659   +   ELSE S_NumCatalogPurchases
2287660   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2287661   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2287662   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2287663   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2287664   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2287665   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2287666   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2287667   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2287668   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2287669   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2287670   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2287671   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2287672   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2287673   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2287674   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2287675   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2287676   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2287677   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2287678   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2287679   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2287680   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2287681   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2287682   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2287683   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2287684   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2287685   +END;
MPRINT(EM_DIAGRAM):   END;
2287686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287687   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2287688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287690   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2287691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287693   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2287694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287695   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287696   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2287697   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2287698   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2287699   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2287700   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2287701   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2287702   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2287703   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2287704   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2287705   +          +    -1.09856598010056 * S_NumDealsPurchases
2287706   +          +    -0.10571850472514 * S_NumDistPurchases
2287707   +          +     0.11898210654227 * S_NumStorePurchases
2287708   +          +      0.5984912060231 * S_NumWebPurchases
2287709   +          +     0.78592531126942 * S_NumWebVisitsMonth
2287710   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2287711   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2287712   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2287713   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2287714   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2287715   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2287716   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2287717   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2287718   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2287719   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2287720   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2287721   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2287722   +          +    -0.84042044250624 * S_NumDealsPurchases
2287723   +          +    -0.10246261015488 * S_NumDistPurchases
2287724   +          +     0.06886149708824 * S_NumStorePurchases
2287725   +          +     0.63156910388199 * S_NumWebPurchases
2287726   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2287727   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2287728   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2287729   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2287730   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2287731   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2287732   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2287733   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2287734   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2287735   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2287736   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2287737   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2287738   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2287739   +          +     0.45393712455366 * S_NumDealsPurchases
2287740   +          +    -0.25292198053552 * S_NumDistPurchases
2287741   +          +    -1.35582215064749 * S_NumStorePurchases
2287742   +          +    -0.83132202302639 * S_NumWebPurchases
2287743   +          +     1.87116225272678 * S_NumWebVisitsMonth
2287744   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2287745   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2287746   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2287747   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2287748   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2287749   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2287750   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2287751   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2287752   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2287753   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2287754   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2287755   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2287756   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2287757   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2287758   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2287759   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2287760   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2287761   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2287762   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2287763   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2287764   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2287765   +          +      0.4695898100094 * Marital_StatusDivorced
2287766   +          +    -0.52137742289262 * Marital_StatusMarried
2287767   +          +    -0.32382086914936 * Marital_StatusSingle
2287768   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2287769   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2287770   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2287771   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2287772   +          +    -1.04858218653238 * Marital_StatusDivorced
2287773   +          +     2.41098335093061 * Marital_StatusMarried
2287774   +          +    -1.94696044861334 * Marital_StatusSingle
2287775   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2287776   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2287777   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2287778   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2287779   +          +     0.42964114177062 * Marital_StatusDivorced
2287780   +          +    -0.38607635605816 * Marital_StatusMarried
2287781   +          +    -0.02157405407852 * Marital_StatusSingle
2287782   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2287783   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2287784   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2287785   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2287786   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2287787   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2287788   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2287789   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2287790   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2287791   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2287792   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2287793   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2287794   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2287795   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2287796   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2287797   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2287798   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2287799   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2287800   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2287801   +END;
MPRINT(EM_DIAGRAM):   END;
2287802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287803   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2287804   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2287805   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2287806   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2287807   +END;
MPRINT(EM_DIAGRAM):   END;
2287808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287809   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2287810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287811   +
2287812   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2287813   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2287814   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2287815   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2287816   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2287817   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2287818   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2287819   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2287820   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2287821   +end;
MPRINT(EM_DIAGRAM):   end;
2287822   +else do;
MPRINT(EM_DIAGRAM):   else do;
2287823   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2287824   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2287825   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2287826   +   end;
MPRINT(EM_DIAGRAM):   end;
2287827   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2287828   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2287829   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2287830   +   end;
MPRINT(EM_DIAGRAM):   end;
2287831   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2287832   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2287833   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2287834   +   end;
MPRINT(EM_DIAGRAM):   end;
2287835   +end;
MPRINT(EM_DIAGRAM):   end;
2287836   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2287837   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2287838   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2287839   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2287840   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2287841   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2287842   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2287843   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2287844   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2287845   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2287846   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2287847   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2287848   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2287849   +END;
MPRINT(EM_DIAGRAM):   END;
2287850   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2287851   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2287852   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2287853   +END;
MPRINT(EM_DIAGRAM):   END;
2287854   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2287855   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2287856   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2287857   +END;
MPRINT(EM_DIAGRAM):   END;
2287858   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2287859   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2287860   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2287861   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2287862   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2287863   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2287864   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2287865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287866   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2287867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2287868   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2287869   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2287870   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2287871   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2287872   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2287873   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2287874   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2287875   +END;
MPRINT(EM_DIAGRAM):   END;
2287876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2287877   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2287878   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2287879   +drop
2287880   +H1x1_1
2287881   +H1x1_2
2287882   +H1x1_3
2287883   +H1x1_4
2287884   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2287885   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2287886   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2287887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287888   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2287889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287890   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2287891   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2287892   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2287893   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2287894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287895   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2287896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287897   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2287898   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2287899   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2287900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287901   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
2287902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287904   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2287905   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2287906   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2287907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2287908   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287909   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2287910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2287911   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2287912   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2287913   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2287914   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2287915   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2287916   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2287917   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2287918   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2287919   +LENGTH _WARN_ $4
2287920   +      F_DepVar  $ 12
2287921   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2287922   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2287923   +
2287924   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2287925   +
2287926   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2287927   +
2287928   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2287929   +
2287930   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2287931   +
2287932   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2287933   +
2287934   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2287935   +
2287936   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2287937   +
2287938   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2287939   +
2287940   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2287941   +
2287942   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2287943   +
2287944   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2287945   +
2287946   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2287947   +
2287948   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2287949   +
2287950   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2287951   +
2287952   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2287953   +
2287954   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2287955   +
2287956   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2287957   +
2287958   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2287959   +
2287960   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2287961   +
2287962   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2287963   +
2287964   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2287965   +
2287966   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2287967   +
2287968   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2287969   +
2287970   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2287971   +
2287972   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2287973   +
2287974   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2287975   +
2287976   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2287977   +
2287978   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2287979   +
2287980   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2287981   +
2287982   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2287983   +
2287984   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2287985   +
2287986   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2287987   +
2287988   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2287989   +
2287990   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2287991   +
2287992   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2287993   +
2287994   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2287995   +
2287996   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2287997   +
2287998   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2287999   +
2288000   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2288001   +
2288002   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2288003   +
2288004   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2288005   +
2288006   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2288007   +
2288008   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2288009   +
2288010   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2288011   +
2288012   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2288013   +
2288014   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2288015   +
2288016   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2288017   +
2288018   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2288019   +
2288020   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2288021   +
2288022   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2288023   +
2288024   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2288025   +
2288026   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2288027   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2288028   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2288029   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288032   +end;
MPRINT(EM_DIAGRAM):   end;
2288033   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288035   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2288036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288038   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2288039   +   end;
MPRINT(EM_DIAGRAM):   end;
2288040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288041   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2288042   +   end;
MPRINT(EM_DIAGRAM):   end;
2288043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288044   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288047   +   end;
MPRINT(EM_DIAGRAM):   end;
2288048   +end;
MPRINT(EM_DIAGRAM):   end;
2288049   +
2288050   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2288051   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2288052   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2288053   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288056   +end;
MPRINT(EM_DIAGRAM):   end;
2288057   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288059   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2288060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288062   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2288063   +   end;
MPRINT(EM_DIAGRAM):   end;
2288064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288065   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2288066   +   end;
MPRINT(EM_DIAGRAM):   end;
2288067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288068   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288071   +   end;
MPRINT(EM_DIAGRAM):   end;
2288072   +end;
MPRINT(EM_DIAGRAM):   end;
2288073   +
2288074   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2288075   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2288076   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2288077   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288080   +end;
MPRINT(EM_DIAGRAM):   end;
2288081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288083   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2288084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288086   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2288087   +   end;
MPRINT(EM_DIAGRAM):   end;
2288088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288089   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2288090   +   end;
MPRINT(EM_DIAGRAM):   end;
2288091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288092   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288095   +   end;
MPRINT(EM_DIAGRAM):   end;
2288096   +end;
MPRINT(EM_DIAGRAM):   end;
2288097   +
2288098   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2288099   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2288100   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2288101   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288104   +end;
MPRINT(EM_DIAGRAM):   end;
2288105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288107   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2288108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288110   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2288111   +   end;
MPRINT(EM_DIAGRAM):   end;
2288112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288113   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2288114   +   end;
MPRINT(EM_DIAGRAM):   end;
2288115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288116   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288119   +   end;
MPRINT(EM_DIAGRAM):   end;
2288120   +end;
MPRINT(EM_DIAGRAM):   end;
2288121   +
2288122   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2288123   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2288124   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2288125   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2288126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288128   +end;
MPRINT(EM_DIAGRAM):   end;
2288129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288131   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2288132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288134   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2288135   +   end;
MPRINT(EM_DIAGRAM):   end;
2288136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288137   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2288138   +   end;
MPRINT(EM_DIAGRAM):   end;
2288139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288140   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2288141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288143   +   end;
MPRINT(EM_DIAGRAM):   end;
2288144   +end;
MPRINT(EM_DIAGRAM):   end;
2288145   +
2288146   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2288147   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2288148   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2288149   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2288150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288152   +end;
MPRINT(EM_DIAGRAM):   end;
2288153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288155   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2288156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288158   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2288159   +   end;
MPRINT(EM_DIAGRAM):   end;
2288160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288161   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2288162   +   end;
MPRINT(EM_DIAGRAM):   end;
2288163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288164   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2288165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288167   +   end;
MPRINT(EM_DIAGRAM):   end;
2288168   +end;
MPRINT(EM_DIAGRAM):   end;
2288169   +
2288170   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2288171   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2288172   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2288173   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2288174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288176   +end;
MPRINT(EM_DIAGRAM):   end;
2288177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288179   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2288180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288181   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2288182   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2288183   +   end;
MPRINT(EM_DIAGRAM):   end;
2288184   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2288185   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2288186   +   end;
MPRINT(EM_DIAGRAM):   end;
2288187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288188   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2288189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288191   +   end;
MPRINT(EM_DIAGRAM):   end;
2288192   +end;
MPRINT(EM_DIAGRAM):   end;
2288193   +
2288194   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2288195   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2288196   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2288197   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2288198   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2288199   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2288200   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2288201   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2288202   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2288203   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2288204   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2288205   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2288206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288208   +end;
MPRINT(EM_DIAGRAM):   end;
2288209   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288210   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2288211   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2288212   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288213   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2288214   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2288215   +   end;
MPRINT(EM_DIAGRAM):   end;
2288216   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2288217   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2288218   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2288219   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2288220   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2288221   +   end;
MPRINT(EM_DIAGRAM):   end;
2288222   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2288223   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2288224   +   end;
MPRINT(EM_DIAGRAM):   end;
2288225   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2288226   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2288227   +   end;
MPRINT(EM_DIAGRAM):   end;
2288228   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2288229   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2288230   +   end;
MPRINT(EM_DIAGRAM):   end;
2288231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288232   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2288233   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2288234   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2288235   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2288236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288238   +   end;
MPRINT(EM_DIAGRAM):   end;
2288239   +end;
MPRINT(EM_DIAGRAM):   end;
2288240   +
2288241   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2288242   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2288243   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2288244   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2288245   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2288246   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2288247   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2288248   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2288249   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2288250   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2288251   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2288252   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2288253   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2288254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288256   +end;
MPRINT(EM_DIAGRAM):   end;
2288257   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288258   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2288259   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2288260   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288261   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2288262   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2288263   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2288264   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2288265   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2288266   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288267   +         end;
MPRINT(EM_DIAGRAM):   end;
2288268   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2288269   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2288270   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2288271   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288272   +            end;
MPRINT(EM_DIAGRAM):   end;
2288273   +         end;
MPRINT(EM_DIAGRAM):   end;
2288274   +      end;
MPRINT(EM_DIAGRAM):   end;
2288275   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2288276   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2288277   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2288278   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288279   +         end;
MPRINT(EM_DIAGRAM):   end;
2288280   +      end;
MPRINT(EM_DIAGRAM):   end;
2288281   +   end;
MPRINT(EM_DIAGRAM):   end;
2288282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288283   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2288284   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2288285   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288286   +      end;
MPRINT(EM_DIAGRAM):   end;
2288287   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2288288   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2288289   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2288290   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2288291   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2288292   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2288293   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2288294   +         end;
MPRINT(EM_DIAGRAM):   end;
2288295   +      end;
MPRINT(EM_DIAGRAM):   end;
2288296   +   end;
MPRINT(EM_DIAGRAM):   end;
2288297   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2288298   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2288299   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2288300   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2288301   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2288302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288304   +   end;
MPRINT(EM_DIAGRAM):   end;
2288305   +end;
MPRINT(EM_DIAGRAM):   end;
2288306   +
2288307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288308   +*** Checking missing input Interval
2288309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2288310   +
2288311   +IF NMISS(
2288312   +   AcceptedCmpTotal ,
2288313   +   Age ,
2288314   +   Frq ,
2288315   +   Income ,
2288316   +   Kidhome ,
2288317   +   Mnt ,
2288318   +   MntFishProducts ,
2288319   +   MntFruits ,
2288320   +   MntGoldProds ,
2288321   +   MntMeatProducts ,
2288322   +   MntSweetProducts ,
2288323   +   MntWines ,
2288324   +   MonthsAsCustomer ,
2288325   +   NumCatalogPurchases ,
2288326   +   NumDealsPurchases ,
2288327   +   NumDistPurchases ,
2288328   +   NumStorePurchases ,
2288329   +   NumWebPurchases ,
2288330   +   NumWebVisitsMonth ,
2288331   +   RFMstat ,
2288332   +   RMntFrq ,
2288333   +   Recency ,
2288334   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2288335   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2288336   +
2288337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288338   +END;
MPRINT(EM_DIAGRAM):   END;
2288339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288340   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2288341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288342   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288343   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2288344   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2288345   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2288346   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2288347   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2288348   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2288349   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2288350   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2288351   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2288352   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2288353   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2288354   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2288355   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2288356   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2288357   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2288358   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2288359   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2288360   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2288361   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2288362   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2288363   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2288364   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2288365   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2288366   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2288367   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2288368   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2288369   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2288370   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2288371   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2288372   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2288373   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2288374   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2288375   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2288376   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2288377   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2288378   +END;
MPRINT(EM_DIAGRAM):   END;
2288379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288380   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2288381   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2288382   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2288383   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2288384   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2288385   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2288386   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2288387   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2288388   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2288389   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2288390   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2288391   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2288392   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2288393   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2288394   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2288395   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2288396   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2288397   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2288398   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2288399   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2288400   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2288401   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2288402   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2288403   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2288404   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2288405   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2288406   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2288407   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2288408   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2288409   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2288410   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2288411   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2288412   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2288413   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2288414   +   ELSE S_NumCatalogPurchases
2288415   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2288416   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2288417   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2288418   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2288419   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2288420   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2288421   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2288422   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2288423   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2288424   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2288425   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2288426   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2288427   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2288428   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2288429   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2288430   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2288431   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2288432   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2288433   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2288434   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2288435   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2288436   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2288437   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2288438   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2288439   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2288440   +END;
MPRINT(EM_DIAGRAM):   END;
2288441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288442   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2288443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288445   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2288446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288448   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2288449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288451   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2288452   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2288453   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2288454   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2288455   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2288456   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2288457   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2288458   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2288459   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2288460   +          +     0.19770934886328 * S_NumDealsPurchases
2288461   +          +      0.0515215988111 * S_NumDistPurchases
2288462   +          +    -0.34569346346089 * S_NumStorePurchases
2288463   +          +    -0.27122293596124 * S_NumWebPurchases
2288464   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2288465   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2288466   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2288467   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2288468   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2288469   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2288470   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2288471   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2288472   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2288473   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2288474   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2288475   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2288476   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2288477   +          +     0.54308887602031 * S_NumDealsPurchases
2288478   +          +    -0.22507315320192 * S_NumDistPurchases
2288479   +          +    -0.79861387328361 * S_NumStorePurchases
2288480   +          +    -0.45467494002747 * S_NumWebPurchases
2288481   +          +      0.2119048824613 * S_NumWebVisitsMonth
2288482   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2288483   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2288484   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2288485   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2288486   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2288487   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2288488   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2288489   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2288490   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2288491   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2288492   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2288493   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2288494   +          +     -0.0771083149302 * S_NumDealsPurchases
2288495   +          +     0.03403621221162 * S_NumDistPurchases
2288496   +          +     0.61303946422025 * S_NumStorePurchases
2288497   +          +     0.27126793634053 * S_NumWebPurchases
2288498   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2288499   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2288500   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2288501   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2288502   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2288503   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2288504   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2288505   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2288506   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2288507   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2288508   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2288509   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2288510   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2288511   +          +     0.29894603062327 * S_NumDealsPurchases
2288512   +          +     0.07614620530875 * S_NumDistPurchases
2288513   +          +     0.15402335009896 * S_NumStorePurchases
2288514   +          +     0.10615749096863 * S_NumWebPurchases
2288515   +          +     0.41962286816879 * S_NumWebVisitsMonth
2288516   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2288517   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2288518   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2288519   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2288520   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2288521   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2288522   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2288523   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2288524   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2288525   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2288526   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2288527   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2288528   +          +     0.14392502416642 * S_NumDealsPurchases
2288529   +          +    -0.10026304978633 * S_NumDistPurchases
2288530   +          +     -0.0588453022746 * S_NumStorePurchases
2288531   +          +     0.24799398610395 * S_NumWebPurchases
2288532   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2288533   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2288534   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2288535   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2288536   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2288537   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2288538   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2288539   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2288540   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2288541   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2288542   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2288543   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2288544   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2288545   +          +     0.08149600854964 * S_NumDealsPurchases
2288546   +          +     0.16873541613513 * S_NumDistPurchases
2288547   +          +    -0.20437343413446 * S_NumStorePurchases
2288548   +          +     -0.1671107527288 * S_NumWebPurchases
2288549   +          +     0.03677043100993 * S_NumWebVisitsMonth
2288550   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2288551   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2288552   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2288553   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2288554   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2288555   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2288556   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2288557   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2288558   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2288559   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2288560   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2288561   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2288562   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2288563   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2288564   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2288565   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2288566   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2288567   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2288568   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2288569   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2288570   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2288571   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2288572   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2288573   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2288574   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2288575   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2288576   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2288577   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2288578   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2288579   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2288580   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2288581   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2288582   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2288583   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2288584   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2288585   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2288586   +          +    -0.31045295887604 * Marital_StatusDivorced
2288587   +          +    -0.01109401001539 * Marital_StatusMarried
2288588   +          +     0.01325135981025 * Marital_StatusSingle
2288589   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2288590   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2288591   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2288592   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2288593   +          +     0.02275101861599 * Marital_StatusDivorced
2288594   +          +     0.20271548664903 * Marital_StatusMarried
2288595   +          +    -0.12132069210718 * Marital_StatusSingle
2288596   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2288597   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2288598   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2288599   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2288600   +          +     -0.4992959703281 * Marital_StatusDivorced
2288601   +          +     0.62071659624138 * Marital_StatusMarried
2288602   +          +    -0.21776202274494 * Marital_StatusSingle
2288603   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2288604   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2288605   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2288606   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2288607   +          +     0.05626212670587 * Marital_StatusDivorced
2288608   +          +     0.14353891364597 * Marital_StatusMarried
2288609   +          +    -0.29006765622997 * Marital_StatusSingle
2288610   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2288611   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2288612   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2288613   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2288614   +          +    -0.21206913700604 * Marital_StatusDivorced
2288615   +          +     0.58790643614629 * Marital_StatusMarried
2288616   +          +    -0.65995982578062 * Marital_StatusSingle
2288617   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2288618   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2288619   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2288620   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2288621   +          +    -0.05047370516008 * Marital_StatusDivorced
2288622   +          +    -0.23139090963669 * Marital_StatusMarried
2288623   +          +     0.04816197463249 * Marital_StatusSingle
2288624   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2288625   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2288626   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2288627   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2288628   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2288629   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2288630   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2288631   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2288632   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2288633   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2288634   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2288635   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2288636   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2288637   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2288638   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2288639   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2288640   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2288641   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2288642   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2288643   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2288644   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2288645   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2288646   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2288647   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2288648   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2288649   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2288650   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2288651   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2288652   +END;
MPRINT(EM_DIAGRAM):   END;
2288653   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288654   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2288655   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2288656   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2288657   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2288658   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2288659   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2288660   +END;
MPRINT(EM_DIAGRAM):   END;
2288661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288662   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2288663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288664   +
2288665   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2288666   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2288667   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2288668   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2288669   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2288670   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288671   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2288672   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2288673   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2288674   +end;
MPRINT(EM_DIAGRAM):   end;
2288675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288676   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2288677   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2288678   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2288679   +   end;
MPRINT(EM_DIAGRAM):   end;
2288680   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2288681   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2288682   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2288683   +   end;
MPRINT(EM_DIAGRAM):   end;
2288684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288685   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2288686   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2288687   +   end;
MPRINT(EM_DIAGRAM):   end;
2288688   +end;
MPRINT(EM_DIAGRAM):   end;
2288689   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2288690   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2288691   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2288692   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2288693   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2288694   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2288695   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2288696   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2288697   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2288698   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2288699   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2288700   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2288701   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2288702   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2288703   +END;
MPRINT(EM_DIAGRAM):   END;
2288704   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2288705   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2288706   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2288707   +END;
MPRINT(EM_DIAGRAM):   END;
2288708   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2288709   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2288710   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2288711   +END;
MPRINT(EM_DIAGRAM):   END;
2288712   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2288713   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2288714   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2288715   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2288716   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2288717   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2288718   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2288719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288720   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2288721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2288722   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2288723   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2288724   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2288725   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2288726   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2288727   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2288728   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2288729   +END;
MPRINT(EM_DIAGRAM):   END;
2288730   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2288731   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2288732   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2288733   +drop
2288734   +H1x1_1
2288735   +H1x1_2
2288736   +H1x1_3
2288737   +H1x1_4
2288738   +H1x1_5
2288739   +H1x1_6
2288740   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2288741   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2288742   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2288743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288744   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2288745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288746   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2288747   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2288748   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2288749   +AutoNeural11_P_DepVar0 = P_DepVar0;
The SAS System
 
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2288750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288751   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2288752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288753   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2288754   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2288755   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2288756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288757   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
2288758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288760   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2288761   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2288762   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2288763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2288764   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2288765   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2288766   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2288767   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2288768   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2288769   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2288770   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2288771   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2288772   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2288773   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2288774   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2288775   +LENGTH _WARN_ $4
2288776   +      F_DepVar  $ 12
2288777   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2288778   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2288779   +
2288780   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2288781   +
2288782   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2288783   +
2288784   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2288785   +
2288786   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2288787   +
2288788   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2288789   +
2288790   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2288791   +
2288792   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2288793   +
2288794   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2288795   +
2288796   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2288797   +
2288798   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2288799   +
2288800   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2288801   +
2288802   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2288803   +
2288804   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2288805   +
2288806   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2288807   +
2288808   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2288809   +
2288810   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2288811   +
2288812   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2288813   +
2288814   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2288815   +
2288816   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2288817   +
2288818   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2288819   +
2288820   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2288821   +
2288822   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2288823   +
2288824   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2288825   +
2288826   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2288827   +
2288828   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2288829   +
2288830   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2288831   +
2288832   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2288833   +
2288834   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2288835   +
2288836   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2288837   +
2288838   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2288839   +
2288840   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2288841   +
2288842   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2288843   +
2288844   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2288845   +
2288846   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2288847   +
2288848   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2288849   +
2288850   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2288851   +
2288852   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2288853   +
2288854   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2288855   +
2288856   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2288857   +
2288858   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2288859   +
2288860   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2288861   +
2288862   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2288863   +
2288864   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2288865   +
2288866   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2288867   +
2288868   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2288869   +
2288870   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2288871   +
2288872   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2288873   +
2288874   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2288875   +
2288876   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2288877   +
2288878   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2288879   +
2288880   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2288881   +
2288882   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2288883   +
2288884   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2288885   +
2288886   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2288887   +
2288888   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2288889   +
2288890   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2288891   +
2288892   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2288893   +
2288894   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2288895   +
2288896   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2288897   +
2288898   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2288899   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2288900   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2288901   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288904   +end;
MPRINT(EM_DIAGRAM):   end;
2288905   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288906   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288907   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2288908   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288909   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288910   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2288911   +   end;
MPRINT(EM_DIAGRAM):   end;
2288912   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288913   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2288914   +   end;
MPRINT(EM_DIAGRAM):   end;
2288915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288916   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2288917   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288918   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288919   +   end;
MPRINT(EM_DIAGRAM):   end;
2288920   +end;
MPRINT(EM_DIAGRAM):   end;
2288921   +
2288922   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2288923   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2288924   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2288925   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288928   +end;
MPRINT(EM_DIAGRAM):   end;
2288929   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288931   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2288932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288934   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2288935   +   end;
MPRINT(EM_DIAGRAM):   end;
2288936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288937   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2288938   +   end;
MPRINT(EM_DIAGRAM):   end;
2288939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288940   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2288941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288943   +   end;
MPRINT(EM_DIAGRAM):   end;
2288944   +end;
MPRINT(EM_DIAGRAM):   end;
2288945   +
2288946   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2288947   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2288948   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2288949   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288952   +end;
MPRINT(EM_DIAGRAM):   end;
2288953   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288955   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2288956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288957   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288958   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2288959   +   end;
MPRINT(EM_DIAGRAM):   end;
2288960   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288961   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2288962   +   end;
MPRINT(EM_DIAGRAM):   end;
2288963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288964   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2288965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288967   +   end;
MPRINT(EM_DIAGRAM):   end;
2288968   +end;
MPRINT(EM_DIAGRAM):   end;
2288969   +
2288970   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2288971   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2288972   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2288973   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288976   +end;
MPRINT(EM_DIAGRAM):   end;
2288977   +else do;
MPRINT(EM_DIAGRAM):   else do;
2288978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2288979   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2288980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2288981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2288982   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2288983   +   end;
MPRINT(EM_DIAGRAM):   end;
2288984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2288985   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2288986   +   end;
MPRINT(EM_DIAGRAM):   end;
2288987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2288988   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2288989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2288990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2288991   +   end;
MPRINT(EM_DIAGRAM):   end;
2288992   +end;
MPRINT(EM_DIAGRAM):   end;
2288993   +
2288994   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2288995   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2288996   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2288997   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2288998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2288999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289000   +end;
MPRINT(EM_DIAGRAM):   end;
2289001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2289003   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2289004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2289006   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2289007   +   end;
MPRINT(EM_DIAGRAM):   end;
2289008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2289009   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2289010   +   end;
MPRINT(EM_DIAGRAM):   end;
2289011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289012   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2289013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2289014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289015   +   end;
MPRINT(EM_DIAGRAM):   end;
2289016   +end;
MPRINT(EM_DIAGRAM):   end;
2289017   +
2289018   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2289019   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2289020   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2289021   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2289022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2289023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289024   +end;
MPRINT(EM_DIAGRAM):   end;
2289025   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2289027   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2289028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2289030   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2289031   +   end;
MPRINT(EM_DIAGRAM):   end;
2289032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2289033   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2289034   +   end;
MPRINT(EM_DIAGRAM):   end;
2289035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289036   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2289037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2289038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289039   +   end;
MPRINT(EM_DIAGRAM):   end;
2289040   +end;
MPRINT(EM_DIAGRAM):   end;
2289041   +
2289042   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2289043   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2289044   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2289045   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2289046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2289047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289048   +end;
MPRINT(EM_DIAGRAM):   end;
2289049   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2289051   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2289052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289053   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2289054   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2289055   +   end;
MPRINT(EM_DIAGRAM):   end;
2289056   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2289057   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2289058   +   end;
MPRINT(EM_DIAGRAM):   end;
2289059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289060   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2289061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2289062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289063   +   end;
MPRINT(EM_DIAGRAM):   end;
2289064   +end;
MPRINT(EM_DIAGRAM):   end;
2289065   +
2289066   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2289067   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2289068   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2289069   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2289070   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2289071   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2289072   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2289073   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2289074   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2289075   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2289076   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2289077   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2289078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2289079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289080   +end;
MPRINT(EM_DIAGRAM):   end;
2289081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289082   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2289083   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2289084   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289085   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2289086   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2289087   +   end;
MPRINT(EM_DIAGRAM):   end;
2289088   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2289089   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2289090   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2289091   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2289092   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2289093   +   end;
MPRINT(EM_DIAGRAM):   end;
2289094   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2289095   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2289096   +   end;
MPRINT(EM_DIAGRAM):   end;
2289097   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2289098   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2289099   +   end;
MPRINT(EM_DIAGRAM):   end;
2289100   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2289101   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2289102   +   end;
MPRINT(EM_DIAGRAM):   end;
2289103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289104   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2289105   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2289106   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2289107   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2289108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2289109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289110   +   end;
MPRINT(EM_DIAGRAM):   end;
2289111   +end;
MPRINT(EM_DIAGRAM):   end;
2289112   +
2289113   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2289114   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2289115   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2289116   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2289117   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2289118   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2289119   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2289120   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2289121   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2289122   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2289123   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2289124   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2289125   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2289126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2289127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289128   +end;
MPRINT(EM_DIAGRAM):   end;
2289129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289130   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2289131   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2289132   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289133   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2289134   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2289135   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2289136   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2289137   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2289138   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2289139   +         end;
MPRINT(EM_DIAGRAM):   end;
2289140   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2289141   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2289142   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2289143   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2289144   +            end;
MPRINT(EM_DIAGRAM):   end;
2289145   +         end;
MPRINT(EM_DIAGRAM):   end;
2289146   +      end;
MPRINT(EM_DIAGRAM):   end;
2289147   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2289148   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2289149   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2289150   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2289151   +         end;
MPRINT(EM_DIAGRAM):   end;
2289152   +      end;
MPRINT(EM_DIAGRAM):   end;
2289153   +   end;
MPRINT(EM_DIAGRAM):   end;
2289154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289155   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2289156   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2289157   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2289158   +      end;
MPRINT(EM_DIAGRAM):   end;
2289159   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2289160   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2289161   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2289162   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2289163   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2289164   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2289165   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2289166   +         end;
MPRINT(EM_DIAGRAM):   end;
2289167   +      end;
MPRINT(EM_DIAGRAM):   end;
2289168   +   end;
MPRINT(EM_DIAGRAM):   end;
2289169   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2289170   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2289171   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2289172   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2289173   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2289174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2289175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289176   +   end;
MPRINT(EM_DIAGRAM):   end;
2289177   +end;
MPRINT(EM_DIAGRAM):   end;
2289178   +
2289179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289180   +*** Checking missing input Interval
2289181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2289182   +
2289183   +IF NMISS(
2289184   +   AcceptedCmpTotal ,
2289185   +   Age ,
2289186   +   Frq ,
2289187   +   Income ,
2289188   +   Kidhome ,
2289189   +   Mnt ,
2289190   +   MntFishProducts ,
2289191   +   MntFruits ,
2289192   +   MntGoldProds ,
2289193   +   MntMeatProducts ,
2289194   +   MntSweetProducts ,
2289195   +   MntWines ,
2289196   +   MonthsAsCustomer ,
2289197   +   NumCatalogPurchases ,
2289198   +   NumDealsPurchases ,
2289199   +   NumDistPurchases ,
2289200   +   NumStorePurchases ,
2289201   +   NumWebPurchases ,
2289202   +   NumWebVisitsMonth ,
2289203   +   RFMstat ,
2289204   +   RMntFrq ,
2289205   +   Recency ,
2289206   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2289207   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2289208   +
2289209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2289210   +END;
MPRINT(EM_DIAGRAM):   END;
2289211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289212   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2289213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289214   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289215   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2289216   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2289217   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2289218   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2289219   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2289220   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2289221   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2289222   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2289223   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2289224   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2289225   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2289226   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2289227   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2289228   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2289229   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2289230   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2289231   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2289232   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2289233   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2289234   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2289235   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2289236   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2289237   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2289238   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2289239   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2289240   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2289241   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2289242   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2289243   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2289244   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2289245   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2289246   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2289247   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2289248   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2289249   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2289250   +END;
MPRINT(EM_DIAGRAM):   END;
2289251   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289252   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2289253   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2289254   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2289255   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2289256   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2289257   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2289258   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2289259   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2289260   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2289261   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2289262   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2289263   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2289264   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2289265   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2289266   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2289267   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2289268   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2289269   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2289270   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2289271   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2289272   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2289273   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2289274   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2289275   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2289276   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2289277   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2289278   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2289279   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2289280   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2289281   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2289282   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2289283   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2289284   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2289285   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2289286   +   ELSE S_NumCatalogPurchases
2289287   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2289288   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2289289   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2289290   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2289291   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2289292   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2289293   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2289294   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2289295   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2289296   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2289297   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2289298   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2289299   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2289300   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2289301   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2289302   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2289303   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2289304   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2289305   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2289306   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2289307   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2289308   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2289309   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2289310   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2289311   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2289312   +END;
MPRINT(EM_DIAGRAM):   END;
2289313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289314   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2289315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289317   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2289318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289320   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2289321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289322   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289323   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2289324   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2289325   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2289326   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2289327   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2289328   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2289329   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2289330   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2289331   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2289332   +          +      0.1112677116841 * S_NumDealsPurchases
2289333   +          +     0.01563584187072 * S_NumDistPurchases
2289334   +          +     0.19193969522995 * S_NumStorePurchases
2289335   +          +      0.3133556199984 * S_NumWebPurchases
2289336   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2289337   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2289338   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2289339   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2289340   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2289341   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2289342   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2289343   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2289344   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2289345   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2289346   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2289347   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2289348   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2289349   +          +     0.30225032753275 * S_NumDealsPurchases
2289350   +          +     0.33833359923595 * S_NumDistPurchases
2289351   +          +    -0.20255599575849 * S_NumStorePurchases
2289352   +          +    -0.12040071168942 * S_NumWebPurchases
2289353   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2289354   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2289355   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2289356   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2289357   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2289358   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2289359   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2289360   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2289361   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2289362   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2289363   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2289364   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2289365   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2289366   +          +     0.16792903091627 * S_NumDealsPurchases
2289367   +          +    -0.37408945626745 * S_NumDistPurchases
2289368   +          +    -0.18067262995566 * S_NumStorePurchases
2289369   +          +     0.21192146789881 * S_NumWebPurchases
2289370   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2289371   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2289372   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2289373   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2289374   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2289375   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2289376   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2289377   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2289378   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2289379   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2289380   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2289381   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2289382   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2289383   +          +     0.29407429399136 * S_NumDealsPurchases
2289384   +          +     0.01610745252195 * S_NumDistPurchases
2289385   +          +    -0.17767939085628 * S_NumStorePurchases
2289386   +          +    -0.15168958538637 * S_NumWebPurchases
2289387   +          +     0.17433622143988 * S_NumWebVisitsMonth
2289388   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2289389   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2289390   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2289391   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2289392   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2289393   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2289394   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2289395   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2289396   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2289397   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2289398   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2289399   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2289400   +          +    -0.37976451362108 * S_NumDealsPurchases
2289401   +          +    -0.17027731520801 * S_NumDistPurchases
2289402   +          +     0.59849493667087 * S_NumStorePurchases
2289403   +          +     0.65481480560301 * S_NumWebPurchases
2289404   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2289405   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2289406   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2289407   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2289408   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2289409   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2289410   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2289411   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2289412   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2289413   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2289414   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2289415   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2289416   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2289417   +          +    -0.07686699131623 * S_NumDealsPurchases
2289418   +          +    -0.07220460738926 * S_NumDistPurchases
2289419   +          +    -0.06554027468389 * S_NumStorePurchases
2289420   +          +     0.10422838158001 * S_NumWebPurchases
2289421   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2289422   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2289423   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2289424   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2289425   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2289426   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2289427   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2289428   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2289429   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2289430   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2289431   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2289432   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2289433   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2289434   +          +    -0.07920122387563 * S_NumDealsPurchases
2289435   +          +      0.3649244061347 * S_NumDistPurchases
2289436   +          +     0.36475853688403 * S_NumStorePurchases
2289437   +          +     0.02153991404063 * S_NumWebPurchases
2289438   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2289439   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2289440   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2289441   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2289442   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2289443   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2289444   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2289445   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2289446   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2289447   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2289448   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2289449   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2289450   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2289451   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2289452   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2289453   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2289454   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2289455   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2289456   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2289457   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2289458   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2289459   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2289460   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2289461   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2289462   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2289463   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2289464   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2289465   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2289466   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2289467   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2289468   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2289469   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2289470   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2289471   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2289472   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2289473   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2289474   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2289475   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2289476   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2289477   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2289478   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2289479   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2289480   +          +     0.07744097241553 * Marital_StatusDivorced
2289481   +          +     -0.0247463100385 * Marital_StatusMarried
2289482   +          +     0.05804915234573 * Marital_StatusSingle
2289483   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2289484   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2289485   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2289486   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2289487   +          +     0.01390668926269 * Marital_StatusDivorced
2289488   +          +     0.01136282152074 * Marital_StatusMarried
2289489   +          +     0.12450246418789 * Marital_StatusSingle
2289490   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2289491   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2289492   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2289493   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2289494   +          +    -0.19133456931879 * Marital_StatusDivorced
2289495   +          +     0.56263566654996 * Marital_StatusMarried
2289496   +          +    -0.42172822038882 * Marital_StatusSingle
2289497   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2289498   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2289499   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2289500   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2289501   +          +    -0.19871205065609 * Marital_StatusDivorced
2289502   +          +    -0.14730795681603 * Marital_StatusMarried
2289503   +          +     0.05055432510362 * Marital_StatusSingle
2289504   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2289505   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2289506   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2289507   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2289508   +          +    -0.35623807358995 * Marital_StatusDivorced
2289509   +          +     0.30324726283965 * Marital_StatusMarried
2289510   +          +    -0.18561093467927 * Marital_StatusSingle
2289511   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2289512   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2289513   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2289514   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2289515   +          +     0.11581014663368 * Marital_StatusDivorced
2289516   +          +    -0.31070638037659 * Marital_StatusMarried
2289517   +          +     0.17131747253949 * Marital_StatusSingle
2289518   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2289519   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2289520   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2289521   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2289522   +          +    -0.42450599871892 * Marital_StatusDivorced
2289523   +          +     0.48162905075885 * Marital_StatusMarried
2289524   +          +    -0.26618507749283 * Marital_StatusSingle
2289525   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2289526   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2289527   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2289528   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2289529   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2289530   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2289531   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2289532   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2289533   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2289534   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2289535   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2289536   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2289537   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2289538   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2289539   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2289540   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2289541   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2289542   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2289543   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2289544   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2289545   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2289546   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2289547   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2289548   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2289549   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2289550   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2289551   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2289552   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2289553   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2289554   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2289555   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2289556   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2289557   +END;
MPRINT(EM_DIAGRAM):   END;
2289558   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289559   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2289560   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2289561   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2289562   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2289563   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2289564   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2289565   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2289566   +END;
MPRINT(EM_DIAGRAM):   END;
2289567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289568   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2289569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289571   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2289572   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2289573   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2289574   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2289575   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2289576   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2289577   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2289578   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2289579   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2289580   +          +     1.96719021971894 * S_NumDealsPurchases
2289581   +          +    -0.44535354794671 * S_NumDistPurchases
2289582   +          +    -0.54827762736866 * S_NumStorePurchases
2289583   +          +     1.02703310241897 * S_NumWebPurchases
2289584   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2289585   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2289586   +        S_RMntFrq  +       0.651688575044 * S_Recency
2289587   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2289588   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2289589   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2289590   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2289591   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2289592   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2289593   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2289594   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2289595   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2289596   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2289597   +          +     1.34659447971131 * S_NumDealsPurchases
2289598   +          +    -0.51624251310423 * S_NumDistPurchases
2289599   +          +      -1.283121574848 * S_NumStorePurchases
2289600   +          +    -1.83517806228926 * S_NumWebPurchases
2289601   +          +     0.51321339475285 * S_NumWebVisitsMonth
2289602   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2289603   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2289604   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2289605   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2289606   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2289607   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2289608   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2289609   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2289610   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2289611   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2289612   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2289613   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2289614   +          +     0.67492297345004 * S_NumDealsPurchases
2289615   +          +    -0.40437875375926 * S_NumDistPurchases
2289616   +          +     0.36322603681545 * S_NumStorePurchases
2289617   +          +    -1.15315070635524 * S_NumWebPurchases
2289618   +          +     1.20707272201156 * S_NumWebVisitsMonth
2289619   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2289620   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2289621   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2289622   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2289623   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2289624   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2289625   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2289626   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2289627   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2289628   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2289629   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2289630   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2289631   +          +    -0.41427983342148 * S_NumDealsPurchases
2289632   +          +    -0.22714305629205 * S_NumDistPurchases
2289633   +          +    -0.78763182048862 * S_NumStorePurchases
2289634   +          +    -0.26669253451501 * S_NumWebPurchases
2289635   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2289636   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2289637   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2289638   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2289639   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2289640   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2289641   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2289642   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2289643   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2289644   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2289645   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2289646   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2289647   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2289648   +          +      0.7697882092212 * S_NumDealsPurchases
2289649   +          +     0.51864835453056 * S_NumDistPurchases
2289650   +          +    -1.18320366630444 * S_NumStorePurchases
2289651   +          +     -0.6608394639529 * S_NumWebPurchases
2289652   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2289653   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2289654   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2289655   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2289656   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2289657   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2289658   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2289659   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2289660   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2289661   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2289662   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2289663   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2289664   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2289665   +          +     1.45707983202269 * S_NumDealsPurchases
2289666   +          +     0.83341887728641 * S_NumDistPurchases
2289667   +          +    -0.36664450469423 * S_NumStorePurchases
2289668   +          +     0.63911579043339 * S_NumWebPurchases
2289669   +          +     0.67144790303554 * S_NumWebVisitsMonth
2289670   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2289671   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2289672   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2289673   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2289674   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2289675   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2289676   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2289677   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2289678   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2289679   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2289680   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2289681   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2289682   +          +     0.68491896063662 * S_NumDealsPurchases
2289683   +          +      0.5386312048592 * S_NumDistPurchases
2289684   +          +     1.28108942503912 * S_NumStorePurchases
2289685   +          +    -0.88282270505969 * S_NumWebPurchases
2289686   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2289687   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2289688   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2289689   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2289690   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2289691   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2289692   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2289693   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2289694   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2289695   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2289696   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2289697   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2289698   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2289699   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2289700   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2289701   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2289702   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2289703   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2289704   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2289705   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2289706   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2289707   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2289708   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2289709   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2289710   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2289711   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2289712   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2289713   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2289714   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2289715   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2289716   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2289717   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2289718   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2289719   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2289720   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2289721   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2289722   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2289723   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2289724   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2289725   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2289726   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2289727   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2289728   +          +    -3.97961426831865 * Marital_StatusDivorced
2289729   +          +     0.00932639813867 * Marital_StatusMarried
2289730   +          +     1.29310186574718 * Marital_StatusSingle
2289731   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2289732   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2289733   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2289734   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2289735   +          +    -0.30358516578188 * Marital_StatusDivorced
2289736   +          +    -0.96176709360703 * Marital_StatusMarried
2289737   +          +     1.26977690921649 * Marital_StatusSingle
2289738   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2289739   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2289740   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2289741   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2289742   +          +     0.55272671490757 * Marital_StatusDivorced
2289743   +          +      0.1499239288334 * Marital_StatusMarried
2289744   +          +    -0.46840941760604 * Marital_StatusSingle
2289745   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2289746   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2289747   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2289748   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2289749   +          +      -1.240735370138 * Marital_StatusDivorced
2289750   +          +    -1.20089294883599 * Marital_StatusMarried
2289751   +          +     0.57492674426149 * Marital_StatusSingle
2289752   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2289753   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2289754   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2289755   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2289756   +          +     1.05435442049802 * Marital_StatusDivorced
2289757   +          +      0.3571256349717 * Marital_StatusMarried
2289758   +          +    -0.44741267266578 * Marital_StatusSingle
2289759   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2289760   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2289761   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2289762   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2289763   +          +     2.06026721980778 * Marital_StatusDivorced
2289764   +          +    -0.49583258645166 * Marital_StatusMarried
2289765   +          +    -1.14824900824474 * Marital_StatusSingle
2289766   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2289767   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2289768   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2289769   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2289770   +          +     -1.1890908607447 * Marital_StatusDivorced
2289771   +          +    -0.46668809907123 * Marital_StatusMarried
2289772   +          +     1.20342564763422 * Marital_StatusSingle
2289773   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2289774   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2289775   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2289776   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2289777   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2289778   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2289779   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2289780   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2289781   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2289782   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2289783   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2289784   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2289785   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2289786   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2289787   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2289788   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2289789   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2289790   +END;
MPRINT(EM_DIAGRAM):   END;
2289791   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289792   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2289793   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2289794   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2289795   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2289796   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2289797   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2289798   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2289799   +END;
MPRINT(EM_DIAGRAM):   END;
2289800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289801   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2289802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289803   +
2289804   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2289805   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2289806   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2289807   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2289808   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2289809   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2289810   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2289811   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2289812   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2289813   +end;
MPRINT(EM_DIAGRAM):   end;
2289814   +else do;
MPRINT(EM_DIAGRAM):   else do;
2289815   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2289816   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2289817   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2289818   +   end;
MPRINT(EM_DIAGRAM):   end;
2289819   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2289820   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2289821   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2289822   +   end;
MPRINT(EM_DIAGRAM):   end;
2289823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2289824   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2289825   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2289826   +   end;
MPRINT(EM_DIAGRAM):   end;
2289827   +end;
MPRINT(EM_DIAGRAM):   end;
2289828   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2289829   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2289830   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2289831   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2289832   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2289833   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2289834   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2289835   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2289836   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2289837   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2289838   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2289839   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2289840   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2289841   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2289842   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2289843   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2289844   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2289845   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2289846   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2289847   +END;
MPRINT(EM_DIAGRAM):   END;
2289848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2289849   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2289850   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2289851   +END;
MPRINT(EM_DIAGRAM):   END;
2289852   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2289853   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2289854   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2289855   +END;
MPRINT(EM_DIAGRAM):   END;
2289856   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2289857   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2289858   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2289859   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2289860   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2289861   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2289862   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2289863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289864   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2289865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2289866   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2289867   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2289868   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2289869   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2289870   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2289871   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2289872   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2289873   +END;
MPRINT(EM_DIAGRAM):   END;
2289874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2289875   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2289876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2289877   +drop
2289878   +H1x1_1
2289879   +H1x1_2
2289880   +H1x1_3
2289881   +H1x1_4
2289882   +H1x1_5
2289883   +H1x1_6
2289884   +H1x1_7
2289885   +H1x2_1
2289886   +H1x2_2
2289887   +H1x2_3
2289888   +H1x2_4
2289889   +H1x2_5
2289890   +H1x2_6
2289891   +H1x2_7
2289892   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2289893   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2289894   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2289895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289896   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2289897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289898   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2289899   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2289900   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2289901   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2289902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289903   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2289904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289905   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2289906   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2289907   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2289908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289909   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
2289910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289911   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2289912   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2289913   +P_DepVar1 = max(
2289914   +AutoNeural6_P_DepVar1 ,
2289915   +AutoNeural7_P_DepVar1 ,
2289916   +AutoNeural8_P_DepVar1 ,
2289917   +AutoNeural10_P_DepVar1 ,
2289918   +AutoNeural9_P_DepVar1 ,
2289919   +AutoNeural11_P_DepVar1 ,
2289920   +AutoNeural12_P_DepVar1
2289921   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
2289922   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2289923   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2289924   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2289925   +end;
MPRINT(EM_DIAGRAM):   end;
2289926   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2289927   +P_DepVar0 = max(
2289928   +AutoNeural6_P_DepVar0 ,
2289929   +AutoNeural7_P_DepVar0 ,
2289930   +AutoNeural8_P_DepVar0 ,
2289931   +AutoNeural10_P_DepVar0 ,
2289932   +AutoNeural9_P_DepVar0 ,
2289933   +AutoNeural11_P_DepVar0 ,
2289934   +AutoNeural12_P_DepVar0
2289935   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
2289936   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2289937   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2289938   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2289939   +end;
MPRINT(EM_DIAGRAM):   end;
2289940   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2289941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289942   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
2289943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289944   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2289945   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2289946   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2289947   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2289948   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2289949   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2289950   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2289951   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2289952   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2289953   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2289954   +end;
MPRINT(EM_DIAGRAM):   end;
2289955   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2289956   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2289957   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2289958   +end;
MPRINT(EM_DIAGRAM):   end;
2289959   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2289960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289961   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
2289962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289963   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2289964   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2289965   +else
2289966   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2289967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289968   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
2289969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2289970   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2289971   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2289972   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2289973   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289973  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289974   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289974  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289975   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289975  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289976   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289976  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289977   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289977  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289978   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289978  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289979   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289979  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289980   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289980  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289981   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289981  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289982   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289982  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289983   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289983  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289984   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289984  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289985   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289985  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289986   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289986  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289987   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289987  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289988   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289988  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289989   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289989  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289990   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289990  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289991   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289991  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289992   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289992  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289993   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289993  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289994   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289994  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289995   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289995  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2289996   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2289996  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2289997   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2289997  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2289998   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2289998  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2289999   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2289999  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2290000   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2290000  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2290001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290002   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
2290003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290004   +if
2290005   +F_DepVar NE '1'
2290006   +AND F_DepVar NE '0'
2290007   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2290008   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2290009   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2290010   +end;
MPRINT(EM_DIAGRAM):   end;
2290011   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290012   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2290013   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2290014   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2290015   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2290016   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2290017   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2290018   +END;
MPRINT(EM_DIAGRAM):   END;
2290019   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2290020    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2290021    quit;
2290022    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2290023    filename emflow
2290023  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290024    *------------------------------------------------------------*;
2290025    * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
2290026    *------------------------------------------------------------*;
2290027    data EMWS8.Ensmbl37_VALIDATE
2290028    / view=EMWS8.Ensmbl37_VALIDATE
2290029    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_VALIDATE / view=EMWS8.Ensmbl37_VALIDATE ;
2290030    set EMWS8.AutoNeural6_VALIDATE
2290031    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
2290032    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
2290033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290034   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
2290035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290036   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
2290037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290039   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2290040   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2290041   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2290042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290044   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2290045   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2290046   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2290047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290049   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2290050   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2290051   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2290052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290054   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2290055   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2290056   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2290057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290058   +
2290059   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2290060   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2290060  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2290061   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2290062   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2290063   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2290064   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2290065   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2290066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290067   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2290068   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2290069   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2290070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290072   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2290073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290074   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2290075   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2290076   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2290077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290078   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2290079   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2290080   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2290081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290083   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2290084   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2290085   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2290086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290088   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2290089   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2290090   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2290091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290092   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2290093   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2290094   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2290095   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2290096   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2290097   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2290098   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2290099   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2290100   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2290101   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2290102   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2290103   +LENGTH _WARN_ $4
2290104   +      F_DepVar  $ 12
2290105   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2290106   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2290107   +
2290108   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2290109   +
2290110   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2290111   +
2290112   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2290113   +
2290114   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2290115   +
2290116   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2290117   +
2290118   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2290119   +
2290120   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2290121   +
2290122   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2290123   +
2290124   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2290125   +
2290126   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2290127   +
2290128   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2290129   +
2290130   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2290131   +
2290132   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2290133   +
2290134   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2290135   +
2290136   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2290137   +
2290138   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2290139   +
2290140   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2290141   +
2290142   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2290143   +
2290144   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2290145   +
2290146   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2290147   +
2290148   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2290149   +
2290150   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2290151   +
2290152   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2290153   +
2290154   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2290155   +
2290156   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2290157   +
2290158   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2290159   +
2290160   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2290161   +
2290162   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2290163   +
2290164   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2290165   +
2290166   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2290167   +
2290168   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2290169   +
2290170   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2290171   +
2290172   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2290173   +
2290174   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2290175   +
2290176   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2290177   +
2290178   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2290179   +
2290180   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2290181   +
2290182   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2290183   +
2290184   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2290185   +
2290186   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2290187   +
2290188   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2290189   +
2290190   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2290191   +
2290192   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2290193   +
2290194   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2290195   +
2290196   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2290197   +
2290198   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2290199   +
2290200   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2290201   +
2290202   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2290203   +
2290204   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2290205   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2290206   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2290207   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290210   +end;
MPRINT(EM_DIAGRAM):   end;
2290211   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290213   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2290214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290215   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290216   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2290217   +   end;
MPRINT(EM_DIAGRAM):   end;
2290218   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290219   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2290220   +   end;
MPRINT(EM_DIAGRAM):   end;
2290221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290222   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290225   +   end;
MPRINT(EM_DIAGRAM):   end;
2290226   +end;
MPRINT(EM_DIAGRAM):   end;
2290227   +
2290228   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2290229   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2290230   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2290231   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2290232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290234   +end;
MPRINT(EM_DIAGRAM):   end;
2290235   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290236   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290237   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2290238   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290239   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290240   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2290241   +   end;
MPRINT(EM_DIAGRAM):   end;
2290242   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290243   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2290244   +   end;
MPRINT(EM_DIAGRAM):   end;
2290245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290246   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2290247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290249   +   end;
MPRINT(EM_DIAGRAM):   end;
2290250   +end;
MPRINT(EM_DIAGRAM):   end;
2290251   +
2290252   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2290253   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2290254   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2290255   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2290256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290258   +end;
MPRINT(EM_DIAGRAM):   end;
2290259   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290261   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2290262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290263   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290264   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2290265   +   end;
MPRINT(EM_DIAGRAM):   end;
2290266   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290267   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2290268   +   end;
MPRINT(EM_DIAGRAM):   end;
2290269   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290270   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2290271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290273   +   end;
MPRINT(EM_DIAGRAM):   end;
2290274   +end;
MPRINT(EM_DIAGRAM):   end;
2290275   +
2290276   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2290277   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2290278   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2290279   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2290280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290282   +end;
MPRINT(EM_DIAGRAM):   end;
2290283   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290284   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290285   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2290286   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290287   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290288   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2290289   +   end;
MPRINT(EM_DIAGRAM):   end;
2290290   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290291   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2290292   +   end;
MPRINT(EM_DIAGRAM):   end;
2290293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290294   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2290295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290297   +   end;
MPRINT(EM_DIAGRAM):   end;
2290298   +end;
MPRINT(EM_DIAGRAM):   end;
2290299   +
2290300   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2290301   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2290302   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2290303   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2290304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290306   +end;
MPRINT(EM_DIAGRAM):   end;
2290307   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290308   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290309   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2290310   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290311   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290312   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2290313   +   end;
MPRINT(EM_DIAGRAM):   end;
2290314   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290315   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2290316   +   end;
MPRINT(EM_DIAGRAM):   end;
2290317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290318   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2290319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290321   +   end;
MPRINT(EM_DIAGRAM):   end;
2290322   +end;
MPRINT(EM_DIAGRAM):   end;
2290323   +
2290324   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2290325   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2290326   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2290327   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2290328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290330   +end;
MPRINT(EM_DIAGRAM):   end;
2290331   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290332   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290333   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2290334   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290335   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290336   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2290337   +   end;
MPRINT(EM_DIAGRAM):   end;
2290338   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290339   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2290340   +   end;
MPRINT(EM_DIAGRAM):   end;
2290341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290342   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2290343   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290344   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290345   +   end;
MPRINT(EM_DIAGRAM):   end;
2290346   +end;
MPRINT(EM_DIAGRAM):   end;
2290347   +
2290348   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2290349   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2290350   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2290351   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2290352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290354   +end;
MPRINT(EM_DIAGRAM):   end;
2290355   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290356   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290357   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2290358   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290359   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2290360   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2290361   +   end;
MPRINT(EM_DIAGRAM):   end;
2290362   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2290363   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2290364   +   end;
MPRINT(EM_DIAGRAM):   end;
2290365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290366   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2290367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290369   +   end;
MPRINT(EM_DIAGRAM):   end;
2290370   +end;
MPRINT(EM_DIAGRAM):   end;
2290371   +
2290372   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2290373   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2290374   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2290375   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2290376   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2290377   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2290378   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2290379   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2290380   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2290381   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2290382   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2290383   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2290384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290386   +end;
MPRINT(EM_DIAGRAM):   end;
2290387   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290388   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2290389   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2290390   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290391   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2290392   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2290393   +   end;
MPRINT(EM_DIAGRAM):   end;
2290394   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2290395   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2290396   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2290397   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2290398   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2290399   +   end;
MPRINT(EM_DIAGRAM):   end;
2290400   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2290401   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2290402   +   end;
MPRINT(EM_DIAGRAM):   end;
2290403   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2290404   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2290405   +   end;
MPRINT(EM_DIAGRAM):   end;
2290406   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2290407   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2290408   +   end;
MPRINT(EM_DIAGRAM):   end;
2290409   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290410   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2290411   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2290412   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2290413   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2290414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290416   +   end;
MPRINT(EM_DIAGRAM):   end;
2290417   +end;
MPRINT(EM_DIAGRAM):   end;
2290418   +
2290419   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2290420   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2290421   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2290422   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2290423   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2290424   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2290425   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2290426   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2290427   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2290428   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2290429   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2290430   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2290431   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2290432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290434   +end;
MPRINT(EM_DIAGRAM):   end;
2290435   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290436   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2290437   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2290438   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290439   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2290440   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2290441   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2290442   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2290443   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2290444   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290445   +         end;
MPRINT(EM_DIAGRAM):   end;
2290446   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2290447   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2290448   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2290449   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290450   +            end;
MPRINT(EM_DIAGRAM):   end;
2290451   +         end;
MPRINT(EM_DIAGRAM):   end;
2290452   +      end;
MPRINT(EM_DIAGRAM):   end;
2290453   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2290454   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2290455   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2290456   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290457   +         end;
MPRINT(EM_DIAGRAM):   end;
2290458   +      end;
MPRINT(EM_DIAGRAM):   end;
2290459   +   end;
MPRINT(EM_DIAGRAM):   end;
2290460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290461   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2290462   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2290463   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290464   +      end;
MPRINT(EM_DIAGRAM):   end;
2290465   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2290466   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2290467   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2290468   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2290469   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2290470   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2290471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2290472   +         end;
MPRINT(EM_DIAGRAM):   end;
2290473   +      end;
MPRINT(EM_DIAGRAM):   end;
2290474   +   end;
MPRINT(EM_DIAGRAM):   end;
2290475   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2290476   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2290477   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2290478   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2290479   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2290480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290482   +   end;
MPRINT(EM_DIAGRAM):   end;
2290483   +end;
MPRINT(EM_DIAGRAM):   end;
2290484   +
2290485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290486   +*** Checking missing input Interval
2290487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2290488   +
2290489   +IF NMISS(
2290490   +   AcceptedCmpTotal ,
2290491   +   Age ,
2290492   +   Frq ,
2290493   +   Income ,
2290494   +   Kidhome ,
2290495   +   Mnt ,
2290496   +   MntFishProducts ,
2290497   +   MntFruits ,
2290498   +   MntGoldProds ,
2290499   +   MntMeatProducts ,
2290500   +   MntSweetProducts ,
2290501   +   MntWines ,
2290502   +   MonthsAsCustomer ,
2290503   +   NumCatalogPurchases ,
2290504   +   NumDealsPurchases ,
2290505   +   NumDistPurchases ,
2290506   +   NumStorePurchases ,
2290507   +   NumWebPurchases ,
2290508   +   NumWebVisitsMonth ,
2290509   +   RFMstat ,
2290510   +   RMntFrq ,
2290511   +   Recency ,
2290512   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2290513   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2290514   +
2290515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290516   +END;
MPRINT(EM_DIAGRAM):   END;
2290517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290518   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2290519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290520   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290521   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2290522   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2290523   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2290524   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2290525   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2290526   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2290527   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2290528   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2290529   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2290530   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2290531   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2290532   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2290533   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2290534   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2290535   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2290536   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2290537   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2290538   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2290539   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2290540   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2290541   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2290542   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2290543   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2290544   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2290545   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2290546   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2290547   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2290548   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2290549   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2290550   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2290551   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2290552   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2290553   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2290554   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2290555   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2290556   +END;
MPRINT(EM_DIAGRAM):   END;
2290557   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290558   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2290559   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2290560   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2290561   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2290562   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2290563   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2290564   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2290565   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2290566   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2290567   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2290568   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2290569   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2290570   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2290571   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2290572   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2290573   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2290574   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2290575   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2290576   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2290577   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2290578   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2290579   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2290580   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2290581   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2290582   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2290583   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2290584   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2290585   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2290586   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2290587   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2290588   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2290589   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2290590   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2290591   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2290592   +   ELSE S_NumCatalogPurchases
2290593   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2290594   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2290595   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2290596   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2290597   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2290598   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2290599   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2290600   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2290601   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2290602   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2290603   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2290604   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2290605   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2290606   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2290607   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2290608   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2290609   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2290610   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2290611   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2290612   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2290613   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2290614   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2290615   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2290616   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2290617   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2290618   +END;
MPRINT(EM_DIAGRAM):   END;
2290619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290620   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2290621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290623   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2290624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290626   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2290627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290628   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290629   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2290630   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2290631   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2290632   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2290633   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2290634   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2290635   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2290636   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2290637   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2290638   +          +    -0.20127545393212 * S_NumDealsPurchases
2290639   +          +     0.04506333103933 * S_NumDistPurchases
2290640   +          +     0.35249458492371 * S_NumStorePurchases
2290641   +          +     0.25004284340707 * S_NumWebPurchases
2290642   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2290643   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2290644   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2290645   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2290646   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2290647   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2290648   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2290649   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2290650   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2290651   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2290652   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2290653   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2290654   +          +    -0.19452359839974 * Marital_StatusDivorced
2290655   +          +     0.32327870805716 * Marital_StatusMarried
2290656   +          +    -0.20770545592268 * Marital_StatusSingle
2290657   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2290658   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2290659   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2290660   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2290661   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2290662   +END;
MPRINT(EM_DIAGRAM):   END;
2290663   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290664   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2290665   +END;
MPRINT(EM_DIAGRAM):   END;
2290666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290667   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2290668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290670   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2290671   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2290672   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2290673   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2290674   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2290675   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2290676   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2290677   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2290678   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2290679   +          +    -0.02120959778153 * S_NumDealsPurchases
2290680   +          +     1.49013956394863 * S_NumDistPurchases
2290681   +          +    -0.96806240220463 * S_NumStorePurchases
2290682   +          +    -1.68330472453558 * S_NumWebPurchases
2290683   +          +     3.42976128164256 * S_NumWebVisitsMonth
2290684   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2290685   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2290686   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2290687   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2290688   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2290689   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2290690   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2290691   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2290692   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2290693   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2290694   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2290695   +          +      1.9815992681602 * Marital_StatusDivorced
2290696   +          +    -3.07893181570848 * Marital_StatusMarried
2290697   +          +     1.72965298244219 * Marital_StatusSingle
2290698   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2290699   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2290700   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2290701   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2290702   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2290703   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2290704   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2290705   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2290706   +END;
MPRINT(EM_DIAGRAM):   END;
2290707   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290708   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2290709   +END;
MPRINT(EM_DIAGRAM):   END;
2290710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290711   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2290712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290713   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290714   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2290715   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2290716   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2290717   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2290718   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2290719   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2290720   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2290721   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2290722   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2290723   +          +     -0.5334151509863 * S_NumDealsPurchases
2290724   +          +     0.40600458912114 * S_NumDistPurchases
2290725   +          +    -0.30674653528261 * S_NumStorePurchases
2290726   +          +     0.10785037433743 * S_NumWebPurchases
2290727   +          +     0.99701680073452 * S_NumWebVisitsMonth
2290728   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2290729   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2290730   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2290731   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2290732   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2290733   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2290734   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2290735   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2290736   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2290737   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2290738   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2290739   +          +    -0.72494401881341 * Marital_StatusDivorced
2290740   +          +    -0.82332231639631 * Marital_StatusMarried
2290741   +          +     -0.8863559011195 * Marital_StatusSingle
2290742   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2290743   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2290744   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2290745   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2290746   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2290747   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2290748   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2290749   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2290750   +END;
MPRINT(EM_DIAGRAM):   END;
2290751   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290752   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2290753   +END;
MPRINT(EM_DIAGRAM):   END;
2290754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290755   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2290756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290757   +
2290758   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2290759   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2290760   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2290761   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2290762   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2290763   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290764   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2290765   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2290766   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2290767   +end;
MPRINT(EM_DIAGRAM):   end;
2290768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290769   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2290770   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2290771   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2290772   +   end;
MPRINT(EM_DIAGRAM):   end;
2290773   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2290774   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2290775   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2290776   +   end;
MPRINT(EM_DIAGRAM):   end;
2290777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290778   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2290779   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2290780   +   end;
MPRINT(EM_DIAGRAM):   end;
2290781   +end;
MPRINT(EM_DIAGRAM):   end;
2290782   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2290783   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2290784   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2290785   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2290786   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2290787   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2290788   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2290789   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2290790   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2290791   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2290792   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2290793   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2290794   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2290795   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2290796   +END;
MPRINT(EM_DIAGRAM):   END;
2290797   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2290798   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2290799   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2290800   +END;
MPRINT(EM_DIAGRAM):   END;
2290801   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2290802   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2290803   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2290804   +END;
MPRINT(EM_DIAGRAM):   END;
2290805   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2290806   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2290807   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2290808   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2290809   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2290810   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2290811   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2290812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290813   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2290814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2290815   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2290816   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2290817   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2290818   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2290819   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2290820   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2290821   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2290822   +END;
MPRINT(EM_DIAGRAM):   END;
2290823   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2290824   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2290825   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2290826   +drop
2290827   +H1x1_1
2290828   +H1x2_1
2290829   +H1x3_1
2290830   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2290831   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2290832   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2290833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290834   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2290835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290836   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2290837   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2290838   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2290839   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2290840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290841   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2290842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290843   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2290844   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2290845   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2290846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290847   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
2290848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290849   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290850   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2290851   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2290852   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2290853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2290854   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2290855   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2290856   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2290857   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2290858   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2290859   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2290860   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2290861   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2290862   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2290863   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2290864   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2290865   +LENGTH _WARN_ $4
2290866   +      F_DepVar  $ 12
2290867   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2290868   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2290869   +
2290870   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2290871   +
2290872   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2290873   +
2290874   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2290875   +
2290876   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2290877   +
2290878   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2290879   +
2290880   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2290881   +
2290882   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2290883   +
2290884   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2290885   +
2290886   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2290887   +
2290888   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2290889   +
2290890   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2290891   +
2290892   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2290893   +
2290894   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2290895   +
2290896   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2290897   +
2290898   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2290899   +
2290900   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2290901   +
2290902   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2290903   +
2290904   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2290905   +
2290906   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2290907   +
2290908   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2290909   +
2290910   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2290911   +
2290912   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2290913   +
2290914   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2290915   +
2290916   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2290917   +
2290918   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2290919   +
2290920   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2290921   +
2290922   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2290923   +
2290924   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2290925   +
2290926   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2290927   +
2290928   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2290929   +
2290930   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2290931   +
2290932   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2290933   +
2290934   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2290935   +
2290936   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2290937   +
2290938   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2290939   +
2290940   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2290941   +
2290942   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2290943   +
2290944   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2290945   +
2290946   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2290947   +
2290948   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2290949   +
2290950   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2290951   +
2290952   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2290953   +
2290954   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2290955   +
2290956   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2290957   +
2290958   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2290959   +
2290960   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2290961   +
2290962   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2290963   +
2290964   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2290965   +
2290966   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2290967   +
2290968   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2290969   +
2290970   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2290971   +
2290972   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2290973   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2290974   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2290975   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2290977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290978   +end;
MPRINT(EM_DIAGRAM):   end;
2290979   +else do;
MPRINT(EM_DIAGRAM):   else do;
2290980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2290981   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2290982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2290983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2290984   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2290985   +   end;
MPRINT(EM_DIAGRAM):   end;
2290986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2290987   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2290988   +   end;
MPRINT(EM_DIAGRAM):   end;
2290989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2290990   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2290991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2290992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2290993   +   end;
MPRINT(EM_DIAGRAM):   end;
2290994   +end;
MPRINT(EM_DIAGRAM):   end;
2290995   +
2290996   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2290997   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2290998   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2290999   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2291000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291002   +end;
MPRINT(EM_DIAGRAM):   end;
2291003   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291005   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2291006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291007   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291008   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2291009   +   end;
MPRINT(EM_DIAGRAM):   end;
2291010   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291011   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2291012   +   end;
MPRINT(EM_DIAGRAM):   end;
2291013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291014   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2291015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291017   +   end;
MPRINT(EM_DIAGRAM):   end;
2291018   +end;
MPRINT(EM_DIAGRAM):   end;
2291019   +
2291020   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2291021   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2291022   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2291023   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2291024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291026   +end;
MPRINT(EM_DIAGRAM):   end;
2291027   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291028   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291029   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2291030   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291031   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291032   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2291033   +   end;
MPRINT(EM_DIAGRAM):   end;
2291034   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291035   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2291036   +   end;
MPRINT(EM_DIAGRAM):   end;
2291037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291038   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2291039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291041   +   end;
MPRINT(EM_DIAGRAM):   end;
2291042   +end;
MPRINT(EM_DIAGRAM):   end;
2291043   +
2291044   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2291045   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2291046   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2291047   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2291048   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291050   +end;
MPRINT(EM_DIAGRAM):   end;
2291051   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291052   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291053   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2291054   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291055   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291056   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2291057   +   end;
MPRINT(EM_DIAGRAM):   end;
2291058   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291059   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2291060   +   end;
MPRINT(EM_DIAGRAM):   end;
2291061   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291062   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2291063   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291064   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291065   +   end;
MPRINT(EM_DIAGRAM):   end;
2291066   +end;
MPRINT(EM_DIAGRAM):   end;
2291067   +
2291068   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2291069   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2291070   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2291071   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2291072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291074   +end;
MPRINT(EM_DIAGRAM):   end;
2291075   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291077   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2291078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291079   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291080   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2291081   +   end;
MPRINT(EM_DIAGRAM):   end;
2291082   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291083   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2291084   +   end;
MPRINT(EM_DIAGRAM):   end;
2291085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291086   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2291087   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291088   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291089   +   end;
MPRINT(EM_DIAGRAM):   end;
2291090   +end;
MPRINT(EM_DIAGRAM):   end;
2291091   +
2291092   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2291093   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2291094   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2291095   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2291096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291098   +end;
MPRINT(EM_DIAGRAM):   end;
2291099   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291100   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291101   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2291102   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291103   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291104   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2291105   +   end;
MPRINT(EM_DIAGRAM):   end;
2291106   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291107   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2291108   +   end;
MPRINT(EM_DIAGRAM):   end;
2291109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291110   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2291111   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291112   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291113   +   end;
MPRINT(EM_DIAGRAM):   end;
2291114   +end;
MPRINT(EM_DIAGRAM):   end;
2291115   +
2291116   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2291117   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2291118   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2291119   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2291120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291122   +end;
MPRINT(EM_DIAGRAM):   end;
2291123   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291125   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2291126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291127   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2291128   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2291129   +   end;
MPRINT(EM_DIAGRAM):   end;
2291130   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2291131   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2291132   +   end;
MPRINT(EM_DIAGRAM):   end;
2291133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291134   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2291135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291137   +   end;
MPRINT(EM_DIAGRAM):   end;
2291138   +end;
MPRINT(EM_DIAGRAM):   end;
2291139   +
2291140   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2291141   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2291142   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2291143   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2291144   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2291145   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2291146   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2291147   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2291148   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2291149   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2291150   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2291151   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2291152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291154   +end;
MPRINT(EM_DIAGRAM):   end;
2291155   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291156   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2291157   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2291158   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291159   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2291160   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2291161   +   end;
MPRINT(EM_DIAGRAM):   end;
2291162   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2291163   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2291164   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2291165   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2291166   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2291167   +   end;
MPRINT(EM_DIAGRAM):   end;
2291168   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2291169   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2291170   +   end;
MPRINT(EM_DIAGRAM):   end;
2291171   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2291172   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2291173   +   end;
MPRINT(EM_DIAGRAM):   end;
2291174   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2291175   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2291176   +   end;
MPRINT(EM_DIAGRAM):   end;
2291177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291178   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2291179   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2291180   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2291181   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2291182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291184   +   end;
MPRINT(EM_DIAGRAM):   end;
2291185   +end;
MPRINT(EM_DIAGRAM):   end;
2291186   +
2291187   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2291188   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2291189   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2291190   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2291191   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2291192   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2291193   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2291194   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2291195   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2291196   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2291197   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2291198   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2291199   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2291200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291202   +end;
MPRINT(EM_DIAGRAM):   end;
2291203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291204   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2291205   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2291206   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291207   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2291208   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2291209   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2291210   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2291211   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2291212   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2291213   +         end;
MPRINT(EM_DIAGRAM):   end;
2291214   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2291215   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2291216   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2291217   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2291218   +            end;
MPRINT(EM_DIAGRAM):   end;
2291219   +         end;
MPRINT(EM_DIAGRAM):   end;
2291220   +      end;
MPRINT(EM_DIAGRAM):   end;
2291221   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2291222   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2291223   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2291224   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2291225   +         end;
MPRINT(EM_DIAGRAM):   end;
2291226   +      end;
MPRINT(EM_DIAGRAM):   end;
2291227   +   end;
MPRINT(EM_DIAGRAM):   end;
2291228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291229   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2291230   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2291231   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2291232   +      end;
MPRINT(EM_DIAGRAM):   end;
2291233   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2291234   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2291235   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2291236   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2291237   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2291238   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2291239   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2291240   +         end;
MPRINT(EM_DIAGRAM):   end;
2291241   +      end;
MPRINT(EM_DIAGRAM):   end;
2291242   +   end;
MPRINT(EM_DIAGRAM):   end;
2291243   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2291244   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2291245   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2291246   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2291247   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2291248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291250   +   end;
MPRINT(EM_DIAGRAM):   end;
2291251   +end;
MPRINT(EM_DIAGRAM):   end;
2291252   +
2291253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291254   +*** Checking missing input Interval
2291255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2291256   +
2291257   +IF NMISS(
2291258   +   AcceptedCmpTotal ,
2291259   +   Age ,
2291260   +   Frq ,
2291261   +   Income ,
2291262   +   Kidhome ,
2291263   +   Mnt ,
2291264   +   MntFishProducts ,
2291265   +   MntFruits ,
2291266   +   MntGoldProds ,
2291267   +   MntMeatProducts ,
2291268   +   MntSweetProducts ,
2291269   +   MntWines ,
2291270   +   MonthsAsCustomer ,
2291271   +   NumCatalogPurchases ,
2291272   +   NumDealsPurchases ,
2291273   +   NumDistPurchases ,
2291274   +   NumStorePurchases ,
2291275   +   NumWebPurchases ,
2291276   +   NumWebVisitsMonth ,
2291277   +   RFMstat ,
2291278   +   RMntFrq ,
2291279   +   Recency ,
2291280   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2291281   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2291282   +
2291283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291284   +END;
MPRINT(EM_DIAGRAM):   END;
2291285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291286   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2291287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291288   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291289   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2291290   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2291291   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2291292   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2291293   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2291294   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2291295   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2291296   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2291297   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2291298   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2291299   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2291300   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2291301   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2291302   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2291303   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2291304   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2291305   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2291306   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2291307   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2291308   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2291309   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2291310   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2291311   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2291312   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2291313   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2291314   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2291315   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2291316   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2291317   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2291318   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2291319   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2291320   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2291321   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2291322   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2291323   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2291324   +END;
MPRINT(EM_DIAGRAM):   END;
2291325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291326   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2291327   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2291328   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2291329   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2291330   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2291331   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2291332   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2291333   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2291334   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2291335   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2291336   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2291337   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2291338   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2291339   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2291340   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2291341   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2291342   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2291343   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2291344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2291345   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2291346   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2291347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2291348   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2291349   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2291350   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2291351   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2291352   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2291353   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2291354   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2291355   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2291356   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2291357   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2291358   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2291359   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2291360   +   ELSE S_NumCatalogPurchases
2291361   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2291362   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2291363   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2291364   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2291365   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2291366   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2291367   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2291368   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2291369   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2291370   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2291371   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2291372   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2291373   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2291374   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2291375   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2291376   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2291377   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2291378   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2291379   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2291380   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2291381   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2291382   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2291383   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2291384   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2291385   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2291386   +END;
MPRINT(EM_DIAGRAM):   END;
2291387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291388   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2291389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291391   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2291392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291394   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2291395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291397   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2291398   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2291399   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2291400   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2291401   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2291402   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2291403   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2291404   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2291405   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2291406   +          +     0.08390531145773 * S_NumDealsPurchases
2291407   +          +    -0.29505970645775 * S_NumDistPurchases
2291408   +          +    -0.13820571170194 * S_NumStorePurchases
2291409   +          +     0.11468011313368 * S_NumWebPurchases
2291410   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2291411   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2291412   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2291413   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2291414   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2291415   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2291416   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2291417   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2291418   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2291419   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2291420   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2291421   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2291422   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2291423   +          +     0.18009076035363 * S_NumDealsPurchases
2291424   +          +     0.03853861006587 * S_NumDistPurchases
2291425   +          +    -0.05118063952874 * S_NumStorePurchases
2291426   +          +    -0.03282286120473 * S_NumWebPurchases
2291427   +          +     0.31160900419026 * S_NumWebVisitsMonth
2291428   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2291429   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2291430   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2291431   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2291432   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2291433   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2291434   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2291435   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2291436   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2291437   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2291438   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2291439   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2291440   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2291441   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2291442   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2291443   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2291444   +          +    -0.04750981393889 * Marital_StatusDivorced
2291445   +          +     0.28216925676677 * Marital_StatusMarried
2291446   +          +    -0.20757827413964 * Marital_StatusSingle
2291447   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2291448   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2291449   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2291450   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2291451   +          +     0.05981919620577 * Marital_StatusDivorced
2291452   +          +    -0.17161573846062 * Marital_StatusMarried
2291453   +          +     0.15869440681091 * Marital_StatusSingle
2291454   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2291455   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2291456   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2291457   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2291458   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2291459   +END;
MPRINT(EM_DIAGRAM):   END;
2291460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291461   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2291462   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2291463   +END;
MPRINT(EM_DIAGRAM):   END;
2291464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291465   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2291466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291468   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2291469   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2291470   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2291471   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2291472   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2291473   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2291474   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2291475   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2291476   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2291477   +          +     0.00741910846933 * S_NumDealsPurchases
2291478   +          +       1.334289252268 * S_NumDistPurchases
2291479   +          +    -0.29851567180932 * S_NumStorePurchases
2291480   +          +    -0.52115313259666 * S_NumWebPurchases
2291481   +          +     0.93907168501909 * S_NumWebVisitsMonth
2291482   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2291483   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2291484   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2291485   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2291486   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2291487   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2291488   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2291489   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2291490   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2291491   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2291492   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2291493   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2291494   +          +     1.60427001186844 * S_NumDealsPurchases
2291495   +          +    -0.18447618033353 * S_NumDistPurchases
2291496   +          +    -1.29966073003539 * S_NumStorePurchases
2291497   +          +    -1.12373457341536 * S_NumWebPurchases
2291498   +          +     1.46099221440494 * S_NumWebVisitsMonth
2291499   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2291500   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2291501   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2291502   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2291503   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2291504   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2291505   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2291506   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2291507   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2291508   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2291509   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2291510   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2291511   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2291512   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2291513   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2291514   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2291515   +          +     0.59819559998538 * Marital_StatusDivorced
2291516   +          +     0.92957772553633 * Marital_StatusMarried
2291517   +          +    -1.11796266958894 * Marital_StatusSingle
2291518   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2291519   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2291520   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2291521   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2291522   +          +      1.0870909562212 * Marital_StatusDivorced
2291523   +          +     1.50333961797515 * Marital_StatusMarried
2291524   +          +    -1.41407780765932 * Marital_StatusSingle
2291525   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2291526   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2291527   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2291528   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2291529   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2291530   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2291531   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2291532   +END;
MPRINT(EM_DIAGRAM):   END;
2291533   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291534   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2291535   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2291536   +END;
MPRINT(EM_DIAGRAM):   END;
2291537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291538   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2291539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291541   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2291542   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2291543   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2291544   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2291545   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2291546   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2291547   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2291548   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2291549   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2291550   +          +     -1.1174504455343 * S_NumDealsPurchases
2291551   +          +    -0.18561253113498 * S_NumDistPurchases
2291552   +          +    -0.35231054612792 * S_NumStorePurchases
2291553   +          +      0.9249490354172 * S_NumWebPurchases
2291554   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2291555   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2291556   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2291557   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2291558   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2291559   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2291560   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2291561   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2291562   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2291563   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2291564   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2291565   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2291566   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2291567   +          +     1.05434863590054 * S_NumDealsPurchases
2291568   +          +    -0.73255174632068 * S_NumDistPurchases
2291569   +          +     0.53949953455044 * S_NumStorePurchases
2291570   +          +    -0.61709467816649 * S_NumWebPurchases
2291571   +          +     1.36235282484348 * S_NumWebVisitsMonth
2291572   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2291573   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2291574   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2291575   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2291576   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2291577   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2291578   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2291579   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2291580   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2291581   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2291582   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2291583   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2291584   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2291585   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2291586   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2291587   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2291588   +          +     0.22253248036322 * Marital_StatusDivorced
2291589   +          +    -1.72455332745001 * Marital_StatusMarried
2291590   +          +     0.57787272107232 * Marital_StatusSingle
2291591   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2291592   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2291593   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2291594   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2291595   +          +     0.14637124403046 * Marital_StatusDivorced
2291596   +          +     0.18905186437528 * Marital_StatusMarried
2291597   +          +     0.00511958458521 * Marital_StatusSingle
2291598   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2291599   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2291600   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2291601   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2291602   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2291603   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2291604   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2291605   +END;
MPRINT(EM_DIAGRAM):   END;
2291606   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291607   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2291608   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2291609   +END;
MPRINT(EM_DIAGRAM):   END;
2291610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291611   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2291612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291613   +
2291614   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2291615   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2291616   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2291617   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2291618   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2291619   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291620   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2291621   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2291622   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2291623   +end;
MPRINT(EM_DIAGRAM):   end;
2291624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291625   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2291626   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2291627   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2291628   +   end;
MPRINT(EM_DIAGRAM):   end;
2291629   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2291630   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2291631   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2291632   +   end;
MPRINT(EM_DIAGRAM):   end;
2291633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291634   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2291635   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2291636   +   end;
MPRINT(EM_DIAGRAM):   end;
2291637   +end;
MPRINT(EM_DIAGRAM):   end;
2291638   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2291639   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2291640   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2291641   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2291642   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2291643   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2291644   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2291645   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2291646   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2291647   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2291648   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2291649   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2291650   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2291651   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2291652   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2291653   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2291654   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2291655   +END;
MPRINT(EM_DIAGRAM):   END;
2291656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2291657   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2291658   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2291659   +END;
MPRINT(EM_DIAGRAM):   END;
2291660   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2291661   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2291662   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2291663   +END;
MPRINT(EM_DIAGRAM):   END;
2291664   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2291665   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2291666   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2291667   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2291668   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2291669   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2291670   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2291671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291672   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2291673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2291674   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2291675   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2291676   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2291677   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2291678   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2291679   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2291680   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2291681   +END;
MPRINT(EM_DIAGRAM):   END;
2291682   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2291683   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2291684   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2291685   +drop
2291686   +H1x1_1
2291687   +H1x1_2
2291688   +H1x2_1
2291689   +H1x2_2
2291690   +H1x3_1
2291691   +H1x3_2
2291692   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2291693   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2291694   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2291695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291696   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2291697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291698   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2291699   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2291700   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2291701   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2291702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291703   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2291704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291705   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2291706   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2291707   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2291708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291709   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
2291710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291712   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2291713   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2291714   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2291715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2291716   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2291717   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2291718   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2291719   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2291720   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2291721   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2291722   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2291723   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2291724   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2291725   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2291726   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2291727   +LENGTH _WARN_ $4
2291728   +      F_DepVar  $ 12
2291729   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2291730   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2291731   +
2291732   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2291733   +
2291734   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2291735   +
2291736   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2291737   +
2291738   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2291739   +
2291740   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2291741   +
2291742   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2291743   +
2291744   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2291745   +
2291746   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2291747   +
2291748   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2291749   +
2291750   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2291751   +
2291752   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2291753   +
2291754   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2291755   +
2291756   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2291757   +
2291758   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2291759   +
2291760   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2291761   +
2291762   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2291763   +
2291764   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2291765   +
2291766   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2291767   +
2291768   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2291769   +
2291770   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2291771   +
2291772   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2291773   +
2291774   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2291775   +
2291776   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2291777   +
2291778   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2291779   +
2291780   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2291781   +
2291782   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2291783   +
2291784   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2291785   +
2291786   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2291787   +
2291788   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2291789   +
2291790   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2291791   +
2291792   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2291793   +
2291794   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2291795   +
2291796   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2291797   +
2291798   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2291799   +
2291800   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2291801   +
2291802   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2291803   +
2291804   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2291805   +
2291806   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2291807   +
2291808   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2291809   +
2291810   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2291811   +
2291812   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2291813   +
2291814   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2291815   +
2291816   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2291817   +
2291818   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2291819   +
2291820   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2291821   +
2291822   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2291823   +
2291824   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2291825   +
2291826   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2291827   +
2291828   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2291829   +
2291830   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2291831   +
2291832   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2291833   +
2291834   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2291835   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2291836   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2291837   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2291838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291840   +end;
MPRINT(EM_DIAGRAM):   end;
2291841   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291843   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2291844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291846   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2291847   +   end;
MPRINT(EM_DIAGRAM):   end;
2291848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291849   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2291850   +   end;
MPRINT(EM_DIAGRAM):   end;
2291851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291852   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2291853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291855   +   end;
MPRINT(EM_DIAGRAM):   end;
2291856   +end;
MPRINT(EM_DIAGRAM):   end;
2291857   +
2291858   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2291859   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2291860   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2291861   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2291862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291864   +end;
MPRINT(EM_DIAGRAM):   end;
2291865   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291867   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2291868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291870   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2291871   +   end;
MPRINT(EM_DIAGRAM):   end;
2291872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291873   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2291874   +   end;
MPRINT(EM_DIAGRAM):   end;
2291875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291876   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2291877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291879   +   end;
MPRINT(EM_DIAGRAM):   end;
2291880   +end;
MPRINT(EM_DIAGRAM):   end;
2291881   +
2291882   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2291883   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2291884   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2291885   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2291886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291888   +end;
MPRINT(EM_DIAGRAM):   end;
2291889   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291891   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2291892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291893   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291894   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2291895   +   end;
MPRINT(EM_DIAGRAM):   end;
2291896   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291897   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2291898   +   end;
MPRINT(EM_DIAGRAM):   end;
2291899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291900   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2291901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291903   +   end;
MPRINT(EM_DIAGRAM):   end;
2291904   +end;
MPRINT(EM_DIAGRAM):   end;
2291905   +
2291906   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2291907   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2291908   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2291909   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2291910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291912   +end;
MPRINT(EM_DIAGRAM):   end;
2291913   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291915   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2291916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291918   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2291919   +   end;
MPRINT(EM_DIAGRAM):   end;
2291920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291921   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2291922   +   end;
MPRINT(EM_DIAGRAM):   end;
2291923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291924   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2291925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291927   +   end;
MPRINT(EM_DIAGRAM):   end;
2291928   +end;
MPRINT(EM_DIAGRAM):   end;
2291929   +
2291930   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2291931   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2291932   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2291933   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2291934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291936   +end;
MPRINT(EM_DIAGRAM):   end;
2291937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291939   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2291940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291942   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2291943   +   end;
MPRINT(EM_DIAGRAM):   end;
2291944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291945   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2291946   +   end;
MPRINT(EM_DIAGRAM):   end;
2291947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291948   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2291949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291951   +   end;
MPRINT(EM_DIAGRAM):   end;
2291952   +end;
MPRINT(EM_DIAGRAM):   end;
2291953   +
2291954   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2291955   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2291956   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2291957   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2291958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291960   +end;
MPRINT(EM_DIAGRAM):   end;
2291961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291963   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2291964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2291966   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2291967   +   end;
MPRINT(EM_DIAGRAM):   end;
2291968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2291969   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2291970   +   end;
MPRINT(EM_DIAGRAM):   end;
2291971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291972   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2291973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291975   +   end;
MPRINT(EM_DIAGRAM):   end;
2291976   +end;
MPRINT(EM_DIAGRAM):   end;
2291977   +
2291978   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2291979   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2291980   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2291981   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2291982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2291983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291984   +end;
MPRINT(EM_DIAGRAM):   end;
2291985   +else do;
MPRINT(EM_DIAGRAM):   else do;
2291986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2291987   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2291988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2291989   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2291990   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2291991   +   end;
MPRINT(EM_DIAGRAM):   end;
2291992   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2291993   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2291994   +   end;
MPRINT(EM_DIAGRAM):   end;
2291995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2291996   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2291997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2291998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2291999   +   end;
MPRINT(EM_DIAGRAM):   end;
2292000   +end;
MPRINT(EM_DIAGRAM):   end;
2292001   +
2292002   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2292003   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2292004   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2292005   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2292006   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2292007   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2292008   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2292009   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2292010   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2292011   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2292012   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2292013   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2292014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292016   +end;
MPRINT(EM_DIAGRAM):   end;
2292017   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292018   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2292019   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2292020   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292021   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2292022   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2292023   +   end;
MPRINT(EM_DIAGRAM):   end;
2292024   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2292025   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2292026   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2292027   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2292028   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2292029   +   end;
MPRINT(EM_DIAGRAM):   end;
2292030   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2292031   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2292032   +   end;
MPRINT(EM_DIAGRAM):   end;
2292033   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2292034   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2292035   +   end;
MPRINT(EM_DIAGRAM):   end;
2292036   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2292037   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2292038   +   end;
MPRINT(EM_DIAGRAM):   end;
2292039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292040   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2292041   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2292042   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2292043   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2292044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292046   +   end;
MPRINT(EM_DIAGRAM):   end;
2292047   +end;
MPRINT(EM_DIAGRAM):   end;
2292048   +
2292049   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2292050   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2292051   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2292052   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2292053   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2292054   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2292055   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2292056   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2292057   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2292058   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2292059   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2292060   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2292061   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2292062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292064   +end;
MPRINT(EM_DIAGRAM):   end;
2292065   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292066   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2292067   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2292068   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292069   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2292070   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2292071   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2292072   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2292073   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2292074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292075   +         end;
MPRINT(EM_DIAGRAM):   end;
2292076   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2292077   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2292078   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2292079   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292080   +            end;
MPRINT(EM_DIAGRAM):   end;
2292081   +         end;
MPRINT(EM_DIAGRAM):   end;
2292082   +      end;
MPRINT(EM_DIAGRAM):   end;
2292083   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2292084   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2292085   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2292086   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292087   +         end;
MPRINT(EM_DIAGRAM):   end;
2292088   +      end;
MPRINT(EM_DIAGRAM):   end;
2292089   +   end;
MPRINT(EM_DIAGRAM):   end;
2292090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292091   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2292092   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2292093   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292094   +      end;
MPRINT(EM_DIAGRAM):   end;
2292095   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2292096   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2292097   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2292098   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2292099   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2292100   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2292101   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292102   +         end;
MPRINT(EM_DIAGRAM):   end;
2292103   +      end;
MPRINT(EM_DIAGRAM):   end;
2292104   +   end;
MPRINT(EM_DIAGRAM):   end;
2292105   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2292106   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2292107   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2292108   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2292109   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2292110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292112   +   end;
MPRINT(EM_DIAGRAM):   end;
2292113   +end;
MPRINT(EM_DIAGRAM):   end;
2292114   +
2292115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292116   +*** Checking missing input Interval
2292117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2292118   +
2292119   +IF NMISS(
2292120   +   AcceptedCmpTotal ,
2292121   +   Age ,
2292122   +   Frq ,
2292123   +   Income ,
2292124   +   Kidhome ,
2292125   +   Mnt ,
2292126   +   MntFishProducts ,
2292127   +   MntFruits ,
2292128   +   MntGoldProds ,
2292129   +   MntMeatProducts ,
2292130   +   MntSweetProducts ,
2292131   +   MntWines ,
2292132   +   MonthsAsCustomer ,
2292133   +   NumCatalogPurchases ,
2292134   +   NumDealsPurchases ,
2292135   +   NumDistPurchases ,
2292136   +   NumStorePurchases ,
2292137   +   NumWebPurchases ,
2292138   +   NumWebVisitsMonth ,
2292139   +   RFMstat ,
2292140   +   RMntFrq ,
2292141   +   Recency ,
2292142   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2292143   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2292144   +
2292145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292146   +END;
MPRINT(EM_DIAGRAM):   END;
2292147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292148   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2292149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2292151   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2292152   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2292153   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2292154   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2292155   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2292156   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2292157   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2292158   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2292159   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2292160   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2292161   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2292162   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2292163   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2292164   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2292165   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2292166   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2292167   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2292168   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2292169   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2292170   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2292171   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2292172   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2292173   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2292174   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2292175   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2292176   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2292177   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2292178   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2292179   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2292180   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2292181   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2292182   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2292183   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2292184   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2292185   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2292186   +END;
MPRINT(EM_DIAGRAM):   END;
2292187   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2292188   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2292189   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2292190   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2292191   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2292192   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2292193   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2292194   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2292195   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2292196   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2292197   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2292198   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2292199   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2292200   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2292201   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2292202   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2292203   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2292204   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2292205   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2292206   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2292207   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2292208   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2292209   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2292210   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2292211   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2292212   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2292213   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2292214   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2292215   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2292216   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2292217   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2292218   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2292219   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2292220   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2292221   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2292222   +   ELSE S_NumCatalogPurchases
2292223   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2292224   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2292225   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2292226   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2292227   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2292228   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2292229   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2292230   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2292231   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2292232   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2292233   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2292234   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2292235   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2292236   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2292237   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2292238   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2292239   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2292240   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2292241   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2292242   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2292243   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2292244   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2292245   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2292246   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2292247   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2292248   +END;
MPRINT(EM_DIAGRAM):   END;
2292249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292250   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2292251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292253   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2292254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292256   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2292257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292258   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2292259   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2292260   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2292261   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2292262   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2292263   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2292264   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2292265   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2292266   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2292267   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2292268   +          +     0.30381426454211 * S_NumDealsPurchases
2292269   +          +     0.39966076372974 * S_NumDistPurchases
2292270   +          +    -0.58875986801139 * S_NumStorePurchases
2292271   +          +    -0.78850031558536 * S_NumWebPurchases
2292272   +          +     0.35182997415921 * S_NumWebVisitsMonth
2292273   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2292274   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2292275   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2292276   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2292277   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2292278   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2292279   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2292280   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2292281   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2292282   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2292283   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2292284   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2292285   +          +     0.33734772994048 * S_NumDealsPurchases
2292286   +          +     0.06152222921422 * S_NumDistPurchases
2292287   +          +    -0.32068333792942 * S_NumStorePurchases
2292288   +          +    -0.26971366415104 * S_NumWebPurchases
2292289   +          +     0.57693239481071 * S_NumWebVisitsMonth
2292290   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2292291   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2292292   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2292293   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2292294   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2292295   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2292296   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2292297   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2292298   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2292299   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2292300   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2292301   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2292302   +          +     0.22142792900578 * S_NumDealsPurchases
2292303   +          +     -0.0291983445755 * S_NumDistPurchases
2292304   +          +     -0.1997372957954 * S_NumStorePurchases
2292305   +          +    -0.01286201468794 * S_NumWebPurchases
2292306   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2292307   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2292308   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2292309   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2292310   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2292311   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2292312   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2292313   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2292314   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
2292315   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2292316   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2292317   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2292318   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2292319   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
2292320   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2292321   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2292322   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2292323   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2292324   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
2292325   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2292326   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2292327   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2292328   +          +    -0.22358326722482 * Marital_StatusDivorced
2292329   +          +     0.09394210085787 * Marital_StatusMarried
2292330   +          +    -0.10381546554982 * Marital_StatusSingle
2292331   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
2292332   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2292333   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2292334   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2292335   +          +     0.16606212232833 * Marital_StatusDivorced
2292336   +          +    -0.33252488631677 * Marital_StatusMarried
2292337   +          +     0.26735237322144 * Marital_StatusSingle
2292338   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
2292339   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2292340   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2292341   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2292342   +          +    -0.30275479651076 * Marital_StatusDivorced
2292343   +          +     0.50273719874035 * Marital_StatusMarried
2292344   +          +    -0.39588303956293 * Marital_StatusSingle
2292345   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
2292346   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2292347   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2292348   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2292349   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2292350   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2292351   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2292352   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2292353   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2292354   +END;
MPRINT(EM_DIAGRAM):   END;
2292355   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2292356   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2292357   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2292358   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2292359   +END;
MPRINT(EM_DIAGRAM):   END;
2292360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292361   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2292362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2292364   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2292365   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2292366   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2292367   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2292368   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2292369   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2292370   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2292371   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2292372   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2292373   +          +    -2.59470529821377 * S_NumDealsPurchases
2292374   +          +      0.7668756449818 * S_NumDistPurchases
2292375   +          +     0.61064641547208 * S_NumStorePurchases
2292376   +          +    -0.87106335660846 * S_NumWebPurchases
2292377   +          +      0.1188879348197 * S_NumWebVisitsMonth
2292378   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2292379   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2292380   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2292381   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2292382   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2292383   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2292384   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2292385   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2292386   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2292387   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2292388   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2292389   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2292390   +          +    -0.41834528691349 * S_NumDealsPurchases
2292391   +          +    -0.07802605490227 * S_NumDistPurchases
2292392   +          +    -0.62261476153139 * S_NumStorePurchases
2292393   +          +    -0.84011953180231 * S_NumWebPurchases
2292394   +          +     0.95169092183885 * S_NumWebVisitsMonth
2292395   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2292396   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2292397   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2292398   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2292399   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2292400   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2292401   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2292402   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2292403   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2292404   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2292405   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2292406   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2292407   +          +     1.50811278700924 * S_NumDealsPurchases
2292408   +          +    -0.40025710583484 * S_NumDistPurchases
2292409   +          +     0.16539197954198 * S_NumStorePurchases
2292410   +          +    -1.50803186935431 * S_NumWebPurchases
2292411   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2292412   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2292413   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2292414   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2292415   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2292416   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2292417   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2292418   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2292419   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
2292420   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2292421   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2292422   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2292423   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2292424   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
2292425   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2292426   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2292427   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2292428   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2292429   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
2292430   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2292431   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2292432   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2292433   +          +    -0.48199299977856 * Marital_StatusDivorced
2292434   +          +    -1.61546983135535 * Marital_StatusMarried
2292435   +          +     1.25890289649165 * Marital_StatusSingle
2292436   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
2292437   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2292438   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2292439   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2292440   +          +    -0.69719138781358 * Marital_StatusDivorced
2292441   +          +     0.26964883367384 * Marital_StatusMarried
2292442   +          +      0.4656663467381 * Marital_StatusSingle
2292443   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
2292444   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2292445   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2292446   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2292447   +          +     1.40407968804704 * Marital_StatusDivorced
2292448   +          +    -1.35468203106214 * Marital_StatusMarried
2292449   +          +      1.0644996414042 * Marital_StatusSingle
2292450   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
2292451   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2292452   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2292453   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2292454   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2292455   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2292456   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2292457   +END;
MPRINT(EM_DIAGRAM):   END;
2292458   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2292459   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2292460   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2292461   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2292462   +END;
MPRINT(EM_DIAGRAM):   END;
2292463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292464   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2292465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292466   +
2292467   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2292468   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2292469   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2292470   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2292471   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2292472   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292473   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2292474   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2292475   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2292476   +end;
MPRINT(EM_DIAGRAM):   end;
2292477   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292478   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2292479   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2292480   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2292481   +   end;
MPRINT(EM_DIAGRAM):   end;
2292482   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2292483   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2292484   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2292485   +   end;
MPRINT(EM_DIAGRAM):   end;
2292486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292487   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2292488   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2292489   +   end;
MPRINT(EM_DIAGRAM):   end;
2292490   +end;
MPRINT(EM_DIAGRAM):   end;
2292491   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2292492   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2292493   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
2292494   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2292495   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2292496   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2292497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2292498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2292499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2292500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2292501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2292502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2292503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2292504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2292505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2292506   +END;
MPRINT(EM_DIAGRAM):   END;
2292507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2292508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2292509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2292510   +END;
MPRINT(EM_DIAGRAM):   END;
2292511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2292512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2292513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2292514   +END;
MPRINT(EM_DIAGRAM):   END;
2292515   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2292516   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2292517   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2292518   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2292519   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2292520   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2292521   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2292522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292523   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2292524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292525   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2292526   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2292527   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2292528   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2292529   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2292530   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2292531   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2292532   +END;
MPRINT(EM_DIAGRAM):   END;
2292533   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2292534   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2292535   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2292536   +drop
2292537   +H1x1_1
2292538   +H1x1_2
2292539   +H1x1_3
2292540   +H1x2_1
2292541   +H1x2_2
2292542   +H1x2_3
2292543   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2292544   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2292545   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2292546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292547   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2292548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292549   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2292550   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2292551   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2292552   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2292553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292554   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2292555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292556   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2292557   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2292558   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2292559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292560   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
2292561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292563   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2292564   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2292565   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2292566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2292567   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2292568   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2292569   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2292570   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2292571   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2292572   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2292573   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2292574   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2292575   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2292576   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2292577   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2292578   +LENGTH _WARN_ $4
2292579   +      F_DepVar  $ 12
2292580   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2292581   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2292582   +
2292583   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2292584   +
2292585   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2292586   +
2292587   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2292588   +
2292589   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2292590   +
2292591   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2292592   +
2292593   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2292594   +
2292595   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2292596   +
2292597   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2292598   +
2292599   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2292600   +
2292601   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2292602   +
2292603   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2292604   +
2292605   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2292606   +
2292607   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2292608   +
2292609   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2292610   +
2292611   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2292612   +
2292613   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2292614   +
2292615   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2292616   +
2292617   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2292618   +
2292619   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2292620   +
2292621   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2292622   +
2292623   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2292624   +
2292625   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2292626   +
2292627   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2292628   +
2292629   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2292630   +
2292631   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2292632   +
2292633   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2292634   +
2292635   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2292636   +
2292637   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2292638   +
2292639   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2292640   +
2292641   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2292642   +
2292643   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2292644   +
2292645   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2292646   +
2292647   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2292648   +
2292649   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2292650   +
2292651   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2292652   +
2292653   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2292654   +
2292655   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2292656   +
2292657   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2292658   +
2292659   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2292660   +
2292661   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2292662   +
2292663   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2292664   +
2292665   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2292666   +
2292667   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2292668   +
2292669   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2292670   +
2292671   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2292672   +
2292673   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2292674   +
2292675   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2292676   +
2292677   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2292678   +
2292679   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2292680   +
2292681   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2292682   +
2292683   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2292684   +
2292685   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2292686   +
2292687   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2292688   +
2292689   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2292690   +
2292691   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2292692   +
2292693   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2292694   +
2292695   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2292696   +
2292697   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2292698   +
2292699   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2292700   +
2292701   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2292702   +
2292703   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2292704   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2292705   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2292706   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2292707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292709   +end;
MPRINT(EM_DIAGRAM):   end;
2292710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292712   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2292713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292715   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2292716   +   end;
MPRINT(EM_DIAGRAM):   end;
2292717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292718   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2292719   +   end;
MPRINT(EM_DIAGRAM):   end;
2292720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292721   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2292722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292724   +   end;
MPRINT(EM_DIAGRAM):   end;
2292725   +end;
MPRINT(EM_DIAGRAM):   end;
2292726   +
2292727   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2292728   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2292729   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2292730   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2292731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292733   +end;
MPRINT(EM_DIAGRAM):   end;
2292734   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292736   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2292737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292738   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292739   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2292740   +   end;
MPRINT(EM_DIAGRAM):   end;
2292741   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292742   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2292743   +   end;
MPRINT(EM_DIAGRAM):   end;
2292744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292745   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2292746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292748   +   end;
MPRINT(EM_DIAGRAM):   end;
2292749   +end;
MPRINT(EM_DIAGRAM):   end;
2292750   +
2292751   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2292752   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2292753   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2292754   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2292755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292757   +end;
MPRINT(EM_DIAGRAM):   end;
2292758   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292759   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292760   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2292761   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292762   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292763   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2292764   +   end;
MPRINT(EM_DIAGRAM):   end;
2292765   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292766   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2292767   +   end;
MPRINT(EM_DIAGRAM):   end;
2292768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292769   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2292770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292772   +   end;
MPRINT(EM_DIAGRAM):   end;
2292773   +end;
MPRINT(EM_DIAGRAM):   end;
2292774   +
2292775   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2292776   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2292777   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2292778   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2292779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292781   +end;
MPRINT(EM_DIAGRAM):   end;
2292782   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292784   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2292785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292786   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292787   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2292788   +   end;
MPRINT(EM_DIAGRAM):   end;
2292789   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292790   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2292791   +   end;
MPRINT(EM_DIAGRAM):   end;
2292792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292793   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2292794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292796   +   end;
MPRINT(EM_DIAGRAM):   end;
2292797   +end;
MPRINT(EM_DIAGRAM):   end;
2292798   +
2292799   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2292800   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2292801   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2292802   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2292803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292805   +end;
MPRINT(EM_DIAGRAM):   end;
2292806   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292808   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2292809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292810   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292811   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2292812   +   end;
MPRINT(EM_DIAGRAM):   end;
2292813   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292814   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2292815   +   end;
MPRINT(EM_DIAGRAM):   end;
2292816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292817   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2292818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292820   +   end;
MPRINT(EM_DIAGRAM):   end;
2292821   +end;
MPRINT(EM_DIAGRAM):   end;
2292822   +
2292823   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2292824   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2292825   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2292826   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2292827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292829   +end;
MPRINT(EM_DIAGRAM):   end;
2292830   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292831   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292832   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2292833   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292834   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2292835   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2292836   +   end;
MPRINT(EM_DIAGRAM):   end;
2292837   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2292838   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2292839   +   end;
MPRINT(EM_DIAGRAM):   end;
2292840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292841   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2292842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292844   +   end;
MPRINT(EM_DIAGRAM):   end;
2292845   +end;
MPRINT(EM_DIAGRAM):   end;
2292846   +
2292847   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2292848   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2292849   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2292850   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2292851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292853   +end;
MPRINT(EM_DIAGRAM):   end;
2292854   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2292856   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2292857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292858   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2292859   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2292860   +   end;
MPRINT(EM_DIAGRAM):   end;
2292861   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2292862   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2292863   +   end;
MPRINT(EM_DIAGRAM):   end;
2292864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292865   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2292866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292868   +   end;
MPRINT(EM_DIAGRAM):   end;
2292869   +end;
MPRINT(EM_DIAGRAM):   end;
2292870   +
2292871   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2292872   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2292873   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2292874   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2292875   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2292876   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2292877   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2292878   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2292879   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2292880   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2292881   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2292882   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2292883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292885   +end;
MPRINT(EM_DIAGRAM):   end;
2292886   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292887   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2292888   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2292889   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292890   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2292891   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2292892   +   end;
MPRINT(EM_DIAGRAM):   end;
2292893   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2292894   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2292895   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2292896   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2292897   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2292898   +   end;
MPRINT(EM_DIAGRAM):   end;
2292899   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2292900   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2292901   +   end;
MPRINT(EM_DIAGRAM):   end;
2292902   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2292903   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2292904   +   end;
MPRINT(EM_DIAGRAM):   end;
2292905   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2292906   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2292907   +   end;
MPRINT(EM_DIAGRAM):   end;
2292908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292909   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2292910   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2292911   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2292912   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2292913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292915   +   end;
MPRINT(EM_DIAGRAM):   end;
2292916   +end;
MPRINT(EM_DIAGRAM):   end;
2292917   +
2292918   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2292919   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2292920   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2292921   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2292922   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2292923   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2292924   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2292925   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2292926   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2292927   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2292928   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2292929   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2292930   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2292931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2292932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292933   +end;
MPRINT(EM_DIAGRAM):   end;
2292934   +else do;
MPRINT(EM_DIAGRAM):   else do;
2292935   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2292936   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2292937   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2292938   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2292939   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2292940   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2292941   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2292942   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2292943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292944   +         end;
MPRINT(EM_DIAGRAM):   end;
2292945   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2292946   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2292947   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2292948   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292949   +            end;
MPRINT(EM_DIAGRAM):   end;
2292950   +         end;
MPRINT(EM_DIAGRAM):   end;
2292951   +      end;
MPRINT(EM_DIAGRAM):   end;
2292952   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2292953   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2292954   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2292955   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292956   +         end;
MPRINT(EM_DIAGRAM):   end;
2292957   +      end;
MPRINT(EM_DIAGRAM):   end;
2292958   +   end;
MPRINT(EM_DIAGRAM):   end;
2292959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2292960   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2292961   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2292962   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292963   +      end;
MPRINT(EM_DIAGRAM):   end;
2292964   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2292965   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2292966   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2292967   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2292968   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2292969   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2292970   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2292971   +         end;
MPRINT(EM_DIAGRAM):   end;
2292972   +      end;
MPRINT(EM_DIAGRAM):   end;
2292973   +   end;
MPRINT(EM_DIAGRAM):   end;
2292974   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2292975   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2292976   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2292977   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2292978   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2292979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2292980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2292981   +   end;
MPRINT(EM_DIAGRAM):   end;
2292982   +end;
MPRINT(EM_DIAGRAM):   end;
2292983   +
2292984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2292985   +*** Checking missing input Interval
2292986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2292987   +
2292988   +IF NMISS(
2292989   +   AcceptedCmpTotal ,
2292990   +   Age ,
2292991   +   Frq ,
2292992   +   Income ,
2292993   +   Kidhome ,
2292994   +   Mnt ,
2292995   +   MntFishProducts ,
2292996   +   MntFruits ,
2292997   +   MntGoldProds ,
2292998   +   MntMeatProducts ,
2292999   +   MntSweetProducts ,
2293000   +   MntWines ,
2293001   +   MonthsAsCustomer ,
2293002   +   NumCatalogPurchases ,
2293003   +   NumDealsPurchases ,
2293004   +   NumDistPurchases ,
2293005   +   NumStorePurchases ,
2293006   +   NumWebPurchases ,
2293007   +   NumWebVisitsMonth ,
2293008   +   RFMstat ,
2293009   +   RMntFrq ,
2293010   +   Recency ,
2293011   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2293012   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2293013   +
2293014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293015   +END;
MPRINT(EM_DIAGRAM):   END;
2293016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293017   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2293018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293019   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2293020   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2293021   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2293022   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2293023   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2293024   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2293025   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2293026   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2293027   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2293028   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2293029   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2293030   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2293031   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2293032   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2293033   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2293034   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2293035   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2293036   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2293037   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2293038   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2293039   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2293040   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2293041   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2293042   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2293043   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2293044   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2293045   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2293046   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2293047   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2293048   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2293049   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2293050   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2293051   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2293052   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2293053   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2293054   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2293055   +END;
MPRINT(EM_DIAGRAM):   END;
2293056   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2293057   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2293058   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2293059   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2293060   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2293061   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2293062   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2293063   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2293064   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2293065   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2293066   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2293067   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2293068   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2293069   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2293070   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2293071   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2293072   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2293073   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2293074   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2293075   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2293076   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2293077   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2293078   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2293079   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2293080   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2293081   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2293082   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2293083   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2293084   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2293085   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2293086   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2293087   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2293088   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2293089   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2293090   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2293091   +   ELSE S_NumCatalogPurchases
2293092   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2293093   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2293094   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2293095   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2293096   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2293097   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2293098   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2293099   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2293100   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2293101   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2293102   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2293103   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2293104   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2293105   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2293106   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2293107   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2293108   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2293109   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2293110   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2293111   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2293112   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2293113   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2293114   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2293115   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2293116   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2293117   +END;
MPRINT(EM_DIAGRAM):   END;
2293118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293119   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2293120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293122   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2293123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293125   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2293126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293127   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2293128   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2293129   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2293130   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2293131   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2293132   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2293133   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2293134   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2293135   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2293136   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2293137   +          +     3.21215425524619 * S_NumDealsPurchases
2293138   +          +     0.08695198777156 * S_NumDistPurchases
2293139   +          +    -2.58697971128295 * S_NumStorePurchases
2293140   +          +    -0.44431924796059 * S_NumWebPurchases
2293141   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2293142   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2293143   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2293144   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2293145   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2293146   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2293147   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2293148   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2293149   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2293150   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2293151   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2293152   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2293153   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2293154   +          +    -0.83844506398484 * S_NumDealsPurchases
2293155   +          +     0.60831936516804 * S_NumDistPurchases
2293156   +          +     1.79084087761626 * S_NumStorePurchases
2293157   +          +     1.17119196356453 * S_NumWebPurchases
2293158   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2293159   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2293160   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2293161   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2293162   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2293163   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2293164   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2293165   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2293166   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2293167   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2293168   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2293169   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2293170   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2293171   +          +    -0.31484031572628 * S_NumDealsPurchases
2293172   +          +    -0.18273941035679 * S_NumDistPurchases
2293173   +          +     0.99501789733882 * S_NumStorePurchases
2293174   +          +     1.32014078829379 * S_NumWebPurchases
2293175   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2293176   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2293177   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2293178   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2293179   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2293180   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2293181   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2293182   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2293183   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2293184   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2293185   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2293186   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2293187   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2293188   +          +     1.19658719134196 * S_NumDealsPurchases
2293189   +          +     0.87478204472986 * S_NumDistPurchases
2293190   +          +    -0.20635856288784 * S_NumStorePurchases
2293191   +          +    -0.89927356974242 * S_NumWebPurchases
2293192   +          +     2.92285244132576 * S_NumWebVisitsMonth
2293193   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2293194   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2293195   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2293196   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2293197   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2293198   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2293199   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2293200   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2293201   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2293202   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2293203   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2293204   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2293205   +          +       -2.32617124568 * S_NumDealsPurchases
2293206   +          +    -0.56589187730672 * S_NumDistPurchases
2293207   +          +     1.07062299863482 * S_NumStorePurchases
2293208   +          +     0.30077273739578 * S_NumWebPurchases
2293209   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2293210   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2293211   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2293212   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2293213   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2293214   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2293215   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2293216   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2293217   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2293218   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2293219   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2293220   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2293221   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2293222   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2293223   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2293224   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2293225   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2293226   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2293227   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2293228   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2293229   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2293230   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2293231   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2293232   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2293233   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2293234   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2293235   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2293236   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2293237   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2293238   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2293239   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2293240   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2293241   +          +    -0.27797737429678 * Marital_StatusDivorced
2293242   +          +    -0.08137635862327 * Marital_StatusMarried
2293243   +          +     0.06275411820495 * Marital_StatusSingle
2293244   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2293245   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2293246   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2293247   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2293248   +          +     0.05151426841441 * Marital_StatusDivorced
2293249   +          +     1.19165082030442 * Marital_StatusMarried
2293250   +          +    -1.08257080662611 * Marital_StatusSingle
2293251   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2293252   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2293253   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2293254   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2293255   +          +      0.0238206459022 * Marital_StatusDivorced
2293256   +          +     -0.4653244204261 * Marital_StatusMarried
2293257   +          +     0.13051613619882 * Marital_StatusSingle
2293258   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2293259   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2293260   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2293261   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2293262   +          +     -0.7449356409222 * Marital_StatusDivorced
2293263   +          +    -1.46604673521535 * Marital_StatusMarried
2293264   +          +     0.74484771688818 * Marital_StatusSingle
2293265   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2293266   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2293267   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2293268   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2293269   +          +    -3.68044980584423 * Marital_StatusDivorced
2293270   +          +     3.14587407902338 * Marital_StatusMarried
2293271   +          +    -2.66118132753024 * Marital_StatusSingle
2293272   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2293273   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2293274   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2293275   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2293276   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2293277   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2293278   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2293279   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2293280   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2293281   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2293282   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2293283   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2293284   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2293285   +END;
MPRINT(EM_DIAGRAM):   END;
2293286   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2293287   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2293288   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2293289   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2293290   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2293291   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2293292   +END;
MPRINT(EM_DIAGRAM):   END;
2293293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293294   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2293295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293296   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2293297   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2293298   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2293299   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2293300   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2293301   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2293302   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2293303   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2293304   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2293305   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2293306   +          +     0.89261880438741 * S_NumDealsPurchases
2293307   +          +    -1.61647413199892 * S_NumDistPurchases
2293308   +          +    -0.56304669045195 * S_NumStorePurchases
2293309   +          +      0.7766837080945 * S_NumWebPurchases
2293310   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2293311   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2293312   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2293313   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2293314   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2293315   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2293316   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2293317   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2293318   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2293319   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2293320   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2293321   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2293322   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2293323   +          +     1.02431289724643 * S_NumDealsPurchases
2293324   +          +    -0.90960173637405 * S_NumDistPurchases
2293325   +          +     1.24283490404772 * S_NumStorePurchases
2293326   +          +     1.23072413154592 * S_NumWebPurchases
2293327   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2293328   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2293329   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2293330   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2293331   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2293332   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2293333   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2293334   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2293335   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2293336   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2293337   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2293338   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2293339   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2293340   +          +    -0.26249596122198 * S_NumDealsPurchases
2293341   +          +    -0.63328519804758 * S_NumDistPurchases
2293342   +          +    -0.88467503575886 * S_NumStorePurchases
2293343   +          +    -0.83120537310738 * S_NumWebPurchases
2293344   +          +     1.40072282351719 * S_NumWebVisitsMonth
2293345   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2293346   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2293347   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2293348   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2293349   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2293350   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2293351   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2293352   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2293353   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2293354   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2293355   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2293356   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2293357   +          +     1.30167361451945 * S_NumDealsPurchases
2293358   +          +     1.45457613716235 * S_NumDistPurchases
2293359   +          +    -0.40226463685252 * S_NumStorePurchases
2293360   +          +     0.36369161683572 * S_NumWebPurchases
2293361   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2293362   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2293363   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2293364   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2293365   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2293366   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2293367   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2293368   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2293369   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2293370   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2293371   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2293372   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2293373   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2293374   +          +    -0.54572162665338 * S_NumDealsPurchases
2293375   +          +      0.9607390449318 * S_NumDistPurchases
2293376   +          +    -0.03259470545754 * S_NumStorePurchases
2293377   +          +     0.19202241423412 * S_NumWebPurchases
2293378   +          +     0.61085831658456 * S_NumWebVisitsMonth
2293379   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2293380   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2293381   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2293382   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2293383   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2293384   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2293385   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2293386   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2293387   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2293388   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2293389   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2293390   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2293391   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2293392   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2293393   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2293394   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2293395   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2293396   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2293397   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2293398   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2293399   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2293400   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2293401   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2293402   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2293403   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2293404   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2293405   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2293406   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2293407   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2293408   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2293409   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2293410   +          +    -2.32430245081383 * Marital_StatusDivorced
2293411   +          +    -0.09815511356796 * Marital_StatusMarried
2293412   +          +     0.13075504294551 * Marital_StatusSingle
2293413   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2293414   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2293415   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2293416   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2293417   +          +    -0.65574603869224 * Marital_StatusDivorced
2293418   +          +     1.54672472575294 * Marital_StatusMarried
2293419   +          +    -1.59817602340208 * Marital_StatusSingle
2293420   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2293421   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2293422   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2293423   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2293424   +          +    -0.50911604604781 * Marital_StatusDivorced
2293425   +          +     0.30403066135719 * Marital_StatusMarried
2293426   +          +      0.1026950879545 * Marital_StatusSingle
2293427   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2293428   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2293429   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2293430   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2293431   +          +     1.07371507133318 * Marital_StatusDivorced
2293432   +          +    -0.07097334129051 * Marital_StatusMarried
2293433   +          +    -0.48339718568621 * Marital_StatusSingle
2293434   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2293435   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2293436   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2293437   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2293438   +          +     1.04342893515504 * Marital_StatusDivorced
2293439   +          +     1.16171312085032 * Marital_StatusMarried
2293440   +          +    -0.30201646939913 * Marital_StatusSingle
2293441   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2293442   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2293443   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2293444   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2293445   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2293446   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2293447   +END;
MPRINT(EM_DIAGRAM):   END;
2293448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2293449   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2293450   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2293451   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2293452   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2293453   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2293454   +END;
MPRINT(EM_DIAGRAM):   END;
2293455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293456   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2293457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293458   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2293459   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2293460   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2293461   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2293462   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2293463   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2293464   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2293465   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2293466   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2293467   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2293468   +          +     1.32256781010645 * S_NumDealsPurchases
2293469   +          +    -1.43015438973619 * S_NumDistPurchases
2293470   +          +    -0.63489289584421 * S_NumStorePurchases
2293471   +          +     0.90508699686841 * S_NumWebPurchases
2293472   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2293473   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2293474   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2293475   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2293476   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2293477   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2293478   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2293479   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2293480   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2293481   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2293482   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2293483   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2293484   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2293485   +          +     0.85965187264096 * S_NumDealsPurchases
2293486   +          +    -1.15239933286756 * S_NumDistPurchases
2293487   +          +     1.20800889102387 * S_NumStorePurchases
2293488   +          +     1.08790389130242 * S_NumWebPurchases
2293489   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2293490   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2293491   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2293492   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2293493   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2293494   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2293495   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2293496   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2293497   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2293498   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2293499   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2293500   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2293501   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2293502   +          +     -0.5767607129654 * S_NumDealsPurchases
2293503   +          +     -0.2643921429796 * S_NumDistPurchases
2293504   +          +    -0.67417489911206 * S_NumStorePurchases
2293505   +          +    -0.51423877684891 * S_NumWebPurchases
2293506   +          +     1.40328299605176 * S_NumWebVisitsMonth
2293507   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2293508   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2293509   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2293510   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2293511   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2293512   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2293513   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2293514   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2293515   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2293516   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2293517   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2293518   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2293519   +          +      1.2821617657076 * S_NumDealsPurchases
2293520   +          +     1.26584115202735 * S_NumDistPurchases
2293521   +          +    -0.46597664211833 * S_NumStorePurchases
2293522   +          +     0.45652363472866 * S_NumWebPurchases
2293523   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2293524   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2293525   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2293526   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2293527   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2293528   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2293529   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2293530   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2293531   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2293532   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2293533   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2293534   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2293535   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2293536   +          +    -0.85162564171681 * S_NumDealsPurchases
2293537   +          +     0.64631099667221 * S_NumDistPurchases
2293538   +          +    -0.03081963858636 * S_NumStorePurchases
2293539   +          +    -0.24124717624664 * S_NumWebPurchases
2293540   +          +     0.56425980772372 * S_NumWebVisitsMonth
2293541   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2293542   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2293543   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2293544   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2293545   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2293546   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2293547   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2293548   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2293549   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2293550   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2293551   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2293552   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2293553   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2293554   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2293555   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2293556   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2293557   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2293558   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2293559   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2293560   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2293561   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2293562   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2293563   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2293564   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2293565   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2293566   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2293567   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2293568   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2293569   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2293570   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2293571   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2293572   +          +    -2.49973437075558 * Marital_StatusDivorced
2293573   +          +    -0.18076948182574 * Marital_StatusMarried
2293574   +          +     0.13498525495231 * Marital_StatusSingle
2293575   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2293576   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2293577   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2293578   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2293579   +          +       -0.59463732835 * Marital_StatusDivorced
2293580   +          +     1.37741332427598 * Marital_StatusMarried
2293581   +          +     -1.5833455713231 * Marital_StatusSingle
2293582   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2293583   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2293584   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2293585   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2293586   +          +    -0.44569556289443 * Marital_StatusDivorced
2293587   +          +     0.29918053103557 * Marital_StatusMarried
2293588   +          +    -0.10337314064224 * Marital_StatusSingle
2293589   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2293590   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2293591   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2293592   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2293593   +          +     1.13881957277462 * Marital_StatusDivorced
2293594   +          +    -0.35849807146313 * Marital_StatusMarried
2293595   +          +    -0.22168731316885 * Marital_StatusSingle
2293596   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2293597   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2293598   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2293599   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2293600   +          +     1.10774969923269 * Marital_StatusDivorced
2293601   +          +     1.08409594073043 * Marital_StatusMarried
2293602   +          +    -0.33145048007894 * Marital_StatusSingle
2293603   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2293604   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2293605   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2293606   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2293607   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2293608   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2293609   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2293610   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2293611   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2293612   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2293613   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2293614   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2293615   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2293616   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2293617   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2293618   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2293619   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2293620   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2293621   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2293622   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2293623   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2293624   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2293625   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2293626   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2293627   +END;
MPRINT(EM_DIAGRAM):   END;
2293628   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2293629   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2293630   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2293631   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2293632   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2293633   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2293634   +END;
MPRINT(EM_DIAGRAM):   END;
2293635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293636   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2293637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293638   +
2293639   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2293640   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2293641   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2293642   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2293643   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2293644   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293645   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2293646   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2293647   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2293648   +end;
MPRINT(EM_DIAGRAM):   end;
2293649   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293650   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2293651   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2293652   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2293653   +   end;
MPRINT(EM_DIAGRAM):   end;
2293654   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2293655   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2293656   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2293657   +   end;
MPRINT(EM_DIAGRAM):   end;
2293658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293659   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2293660   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2293661   +   end;
MPRINT(EM_DIAGRAM):   end;
2293662   +end;
MPRINT(EM_DIAGRAM):   end;
2293663   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2293664   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2293665   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2293666   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2293667   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2293668   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2293669   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2293670   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2293671   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2293672   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2293673   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2293674   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2293675   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2293676   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2293677   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2293678   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2293679   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2293680   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2293681   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2293682   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2293683   +END;
MPRINT(EM_DIAGRAM):   END;
2293684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2293685   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2293686   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2293687   +END;
MPRINT(EM_DIAGRAM):   END;
2293688   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2293689   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2293690   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2293691   +END;
MPRINT(EM_DIAGRAM):   END;
2293692   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2293693   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2293694   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2293695   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2293696   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2293697   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2293698   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2293699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293700   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2293701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2293702   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2293703   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2293704   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2293705   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2293706   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2293707   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2293708   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2293709   +END;
MPRINT(EM_DIAGRAM):   END;
2293710   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2293711   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2293712   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2293713   +drop
2293714   +H1x1_1
2293715   +H1x1_2
2293716   +H1x1_3
2293717   +H1x1_4
2293718   +H1x1_5
2293719   +H1x2_1
2293720   +H1x2_2
2293721   +H1x2_3
2293722   +H1x2_4
2293723   +H1x2_5
2293724   +H1x3_1
2293725   +H1x3_2
2293726   +H1x3_3
2293727   +H1x3_4
2293728   +H1x3_5
2293729   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2293730   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2293731   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2293732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293733   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2293734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293735   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2293736   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2293737   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2293738   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2293739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293740   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2293741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293742   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2293743   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2293744   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2293745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293746   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
2293747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293749   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2293750   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2293751   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2293752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2293753   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2293754   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2293755   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2293756   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2293757   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2293758   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2293759   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2293760   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2293761   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2293762   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2293763   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2293764   +LENGTH _WARN_ $4
2293765   +      F_DepVar  $ 12
2293766   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2293767   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2293768   +
2293769   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2293770   +
2293771   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2293772   +
2293773   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2293774   +
2293775   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2293776   +
2293777   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2293778   +
2293779   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2293780   +
2293781   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2293782   +
2293783   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2293784   +
2293785   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2293786   +
2293787   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2293788   +
2293789   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2293790   +
2293791   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2293792   +
2293793   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2293794   +
2293795   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2293796   +
2293797   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2293798   +
2293799   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2293800   +
2293801   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2293802   +
2293803   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2293804   +
2293805   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2293806   +
2293807   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2293808   +
2293809   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2293810   +
2293811   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2293812   +
2293813   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2293814   +
2293815   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2293816   +
2293817   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2293818   +
2293819   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2293820   +
2293821   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2293822   +
2293823   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2293824   +
2293825   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2293826   +
2293827   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2293828   +
2293829   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2293830   +
2293831   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2293832   +
2293833   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2293834   +
2293835   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2293836   +
2293837   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2293838   +
2293839   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2293840   +
2293841   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2293842   +
2293843   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2293844   +
2293845   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2293846   +
2293847   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2293848   +
2293849   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2293850   +
2293851   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2293852   +
2293853   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2293854   +
2293855   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2293856   +
2293857   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2293858   +
2293859   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2293860   +
2293861   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2293862   +
2293863   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2293864   +
2293865   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2293866   +
2293867   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2293868   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2293869   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2293870   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2293871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293873   +end;
MPRINT(EM_DIAGRAM):   end;
2293874   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293876   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2293877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293878   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293879   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2293880   +   end;
MPRINT(EM_DIAGRAM):   end;
2293881   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2293882   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2293883   +   end;
MPRINT(EM_DIAGRAM):   end;
2293884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293885   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2293886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2293887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293888   +   end;
MPRINT(EM_DIAGRAM):   end;
2293889   +end;
MPRINT(EM_DIAGRAM):   end;
2293890   +
2293891   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2293892   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2293893   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2293894   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2293895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293897   +end;
MPRINT(EM_DIAGRAM):   end;
2293898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293900   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2293901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293903   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2293904   +   end;
MPRINT(EM_DIAGRAM):   end;
2293905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2293906   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2293907   +   end;
MPRINT(EM_DIAGRAM):   end;
2293908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293909   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2293910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2293911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293912   +   end;
MPRINT(EM_DIAGRAM):   end;
2293913   +end;
MPRINT(EM_DIAGRAM):   end;
2293914   +
2293915   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2293916   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2293917   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2293918   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2293919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293921   +end;
MPRINT(EM_DIAGRAM):   end;
2293922   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293924   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2293925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293926   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293927   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2293928   +   end;
MPRINT(EM_DIAGRAM):   end;
2293929   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2293930   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2293931   +   end;
MPRINT(EM_DIAGRAM):   end;
2293932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293933   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2293934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2293935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293936   +   end;
MPRINT(EM_DIAGRAM):   end;
2293937   +end;
MPRINT(EM_DIAGRAM):   end;
2293938   +
2293939   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2293940   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2293941   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2293942   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2293943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293945   +end;
MPRINT(EM_DIAGRAM):   end;
2293946   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293948   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2293949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293950   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293951   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2293952   +   end;
MPRINT(EM_DIAGRAM):   end;
2293953   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2293954   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2293955   +   end;
MPRINT(EM_DIAGRAM):   end;
2293956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293957   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2293958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2293959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293960   +   end;
MPRINT(EM_DIAGRAM):   end;
2293961   +end;
MPRINT(EM_DIAGRAM):   end;
2293962   +
2293963   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2293964   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2293965   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2293966   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2293967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293969   +end;
MPRINT(EM_DIAGRAM):   end;
2293970   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293972   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2293973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293974   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293975   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2293976   +   end;
MPRINT(EM_DIAGRAM):   end;
2293977   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2293978   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2293979   +   end;
MPRINT(EM_DIAGRAM):   end;
2293980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2293981   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2293982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2293983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293984   +   end;
MPRINT(EM_DIAGRAM):   end;
2293985   +end;
MPRINT(EM_DIAGRAM):   end;
2293986   +
2293987   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2293988   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2293989   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2293990   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2293991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2293992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2293993   +end;
MPRINT(EM_DIAGRAM):   end;
2293994   +else do;
MPRINT(EM_DIAGRAM):   else do;
2293995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2293996   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2293997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2293998   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2293999   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2294000   +   end;
MPRINT(EM_DIAGRAM):   end;
2294001   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294002   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2294003   +   end;
MPRINT(EM_DIAGRAM):   end;
2294004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294005   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2294006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294008   +   end;
MPRINT(EM_DIAGRAM):   end;
2294009   +end;
MPRINT(EM_DIAGRAM):   end;
2294010   +
2294011   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2294012   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2294013   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2294014   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2294015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294017   +end;
MPRINT(EM_DIAGRAM):   end;
2294018   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294019   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294020   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2294021   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294022   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2294023   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2294024   +   end;
MPRINT(EM_DIAGRAM):   end;
2294025   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2294026   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2294027   +   end;
MPRINT(EM_DIAGRAM):   end;
2294028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294029   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2294030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294032   +   end;
MPRINT(EM_DIAGRAM):   end;
2294033   +end;
MPRINT(EM_DIAGRAM):   end;
2294034   +
2294035   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2294036   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2294037   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2294038   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2294039   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2294040   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2294041   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2294042   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2294043   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2294044   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2294045   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2294046   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2294047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294049   +end;
MPRINT(EM_DIAGRAM):   end;
2294050   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294051   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2294052   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2294053   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294054   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2294055   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2294056   +   end;
MPRINT(EM_DIAGRAM):   end;
2294057   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2294058   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2294059   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2294060   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2294061   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2294062   +   end;
MPRINT(EM_DIAGRAM):   end;
2294063   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2294064   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2294065   +   end;
MPRINT(EM_DIAGRAM):   end;
2294066   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2294067   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2294068   +   end;
MPRINT(EM_DIAGRAM):   end;
2294069   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2294070   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2294071   +   end;
MPRINT(EM_DIAGRAM):   end;
2294072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294073   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2294074   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2294075   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2294076   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2294077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294079   +   end;
MPRINT(EM_DIAGRAM):   end;
2294080   +end;
MPRINT(EM_DIAGRAM):   end;
2294081   +
2294082   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2294083   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2294084   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2294085   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2294086   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2294087   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2294088   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2294089   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2294090   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2294091   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2294092   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2294093   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2294094   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2294095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294097   +end;
MPRINT(EM_DIAGRAM):   end;
2294098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294099   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2294100   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2294101   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294102   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2294103   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2294104   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2294105   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2294106   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2294107   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294108   +         end;
MPRINT(EM_DIAGRAM):   end;
2294109   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2294110   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2294111   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2294112   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294113   +            end;
MPRINT(EM_DIAGRAM):   end;
2294114   +         end;
MPRINT(EM_DIAGRAM):   end;
2294115   +      end;
MPRINT(EM_DIAGRAM):   end;
2294116   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2294117   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2294118   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2294119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294120   +         end;
MPRINT(EM_DIAGRAM):   end;
2294121   +      end;
MPRINT(EM_DIAGRAM):   end;
2294122   +   end;
MPRINT(EM_DIAGRAM):   end;
2294123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294124   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2294125   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2294126   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294127   +      end;
MPRINT(EM_DIAGRAM):   end;
2294128   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2294129   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2294130   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2294131   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
The SAS System
 
2294132   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2294133   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2294134   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294135   +         end;
MPRINT(EM_DIAGRAM):   end;
2294136   +      end;
MPRINT(EM_DIAGRAM):   end;
2294137   +   end;
MPRINT(EM_DIAGRAM):   end;
2294138   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2294139   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2294140   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2294141   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2294142   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2294143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294145   +   end;
MPRINT(EM_DIAGRAM):   end;
2294146   +end;
MPRINT(EM_DIAGRAM):   end;
2294147   +
2294148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294149   +*** Checking missing input Interval
2294150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2294151   +
2294152   +IF NMISS(
2294153   +   AcceptedCmpTotal ,
2294154   +   Age ,
2294155   +   Frq ,
2294156   +   Income ,
2294157   +   Kidhome ,
2294158   +   Mnt ,
2294159   +   MntFishProducts ,
2294160   +   MntFruits ,
2294161   +   MntGoldProds ,
2294162   +   MntMeatProducts ,
2294163   +   MntSweetProducts ,
2294164   +   MntWines ,
2294165   +   MonthsAsCustomer ,
2294166   +   NumCatalogPurchases ,
2294167   +   NumDealsPurchases ,
2294168   +   NumDistPurchases ,
2294169   +   NumStorePurchases ,
2294170   +   NumWebPurchases ,
2294171   +   NumWebVisitsMonth ,
2294172   +   RFMstat ,
2294173   +   RMntFrq ,
2294174   +   Recency ,
2294175   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2294176   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2294177   +
2294178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294179   +END;
MPRINT(EM_DIAGRAM):   END;
2294180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294181   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2294182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294183   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2294184   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2294185   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2294186   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2294187   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2294188   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2294189   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2294190   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2294191   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2294192   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2294193   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2294194   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2294195   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2294196   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2294197   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2294198   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2294199   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2294200   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2294201   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2294202   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2294203   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2294204   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2294205   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2294206   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2294207   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2294208   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2294209   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2294210   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2294211   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2294212   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2294213   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2294214   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2294215   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2294216   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2294217   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2294218   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2294219   +END;
MPRINT(EM_DIAGRAM):   END;
2294220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2294221   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2294222   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2294223   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2294224   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2294225   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2294226   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2294227   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2294228   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2294229   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2294230   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2294231   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2294232   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2294233   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2294234   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2294235   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2294236   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2294237   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2294238   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2294239   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2294240   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2294241   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2294242   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2294243   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2294244   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2294245   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2294246   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2294247   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2294248   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2294249   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2294250   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2294251   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2294252   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2294253   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2294254   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2294255   +   ELSE S_NumCatalogPurchases
2294256   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2294257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2294258   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2294259   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2294260   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2294261   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2294262   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2294263   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2294264   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2294265   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2294266   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2294267   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2294268   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2294269   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2294270   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2294271   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2294272   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2294273   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2294274   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2294275   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2294276   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2294277   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2294278   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2294279   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2294280   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2294281   +END;
MPRINT(EM_DIAGRAM):   END;
2294282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294283   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2294284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294286   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2294287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294289   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2294290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2294292   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2294293   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2294294   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2294295   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2294296   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2294297   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2294298   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2294299   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2294300   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2294301   +          +    -1.09856598010056 * S_NumDealsPurchases
2294302   +          +    -0.10571850472514 * S_NumDistPurchases
2294303   +          +     0.11898210654227 * S_NumStorePurchases
2294304   +          +      0.5984912060231 * S_NumWebPurchases
2294305   +          +     0.78592531126942 * S_NumWebVisitsMonth
2294306   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2294307   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2294308   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2294309   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2294310   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2294311   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2294312   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2294313   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2294314   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2294315   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2294316   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2294317   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2294318   +          +    -0.84042044250624 * S_NumDealsPurchases
2294319   +          +    -0.10246261015488 * S_NumDistPurchases
2294320   +          +     0.06886149708824 * S_NumStorePurchases
2294321   +          +     0.63156910388199 * S_NumWebPurchases
2294322   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2294323   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2294324   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2294325   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2294326   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2294327   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2294328   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2294329   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2294330   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2294331   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2294332   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2294333   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2294334   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2294335   +          +     0.45393712455366 * S_NumDealsPurchases
2294336   +          +    -0.25292198053552 * S_NumDistPurchases
2294337   +          +    -1.35582215064749 * S_NumStorePurchases
2294338   +          +    -0.83132202302639 * S_NumWebPurchases
2294339   +          +     1.87116225272678 * S_NumWebVisitsMonth
2294340   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2294341   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2294342   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2294343   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2294344   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2294345   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2294346   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2294347   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2294348   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2294349   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2294350   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2294351   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2294352   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2294353   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2294354   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2294355   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2294356   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2294357   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2294358   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2294359   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2294360   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2294361   +          +      0.4695898100094 * Marital_StatusDivorced
2294362   +          +    -0.52137742289262 * Marital_StatusMarried
2294363   +          +    -0.32382086914936 * Marital_StatusSingle
2294364   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2294365   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2294366   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2294367   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2294368   +          +    -1.04858218653238 * Marital_StatusDivorced
2294369   +          +     2.41098335093061 * Marital_StatusMarried
2294370   +          +    -1.94696044861334 * Marital_StatusSingle
2294371   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2294372   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2294373   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2294374   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2294375   +          +     0.42964114177062 * Marital_StatusDivorced
2294376   +          +    -0.38607635605816 * Marital_StatusMarried
2294377   +          +    -0.02157405407852 * Marital_StatusSingle
2294378   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2294379   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2294380   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2294381   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2294382   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2294383   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2294384   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2294385   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2294386   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2294387   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2294388   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2294389   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2294390   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2294391   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2294392   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2294393   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2294394   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2294395   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2294396   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2294397   +END;
MPRINT(EM_DIAGRAM):   END;
2294398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2294399   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2294400   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2294401   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2294402   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2294403   +END;
MPRINT(EM_DIAGRAM):   END;
2294404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294405   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2294406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294407   +
2294408   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2294409   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2294410   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2294411   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2294412   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2294413   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294414   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2294415   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2294416   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2294417   +end;
MPRINT(EM_DIAGRAM):   end;
2294418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294419   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2294420   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2294421   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2294422   +   end;
MPRINT(EM_DIAGRAM):   end;
2294423   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2294424   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2294425   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2294426   +   end;
MPRINT(EM_DIAGRAM):   end;
2294427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294428   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2294429   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2294430   +   end;
MPRINT(EM_DIAGRAM):   end;
2294431   +end;
MPRINT(EM_DIAGRAM):   end;
2294432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2294433   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2294434   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2294435   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2294436   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2294437   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2294438   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2294439   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2294440   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2294441   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2294442   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2294443   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2294444   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2294445   +END;
MPRINT(EM_DIAGRAM):   END;
2294446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2294447   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2294448   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2294449   +END;
MPRINT(EM_DIAGRAM):   END;
2294450   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2294451   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2294452   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2294453   +END;
MPRINT(EM_DIAGRAM):   END;
2294454   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2294455   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2294456   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2294457   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2294458   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2294459   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2294460   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2294461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294462   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2294463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294464   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2294465   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2294466   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2294467   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2294468   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2294469   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2294470   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2294471   +END;
MPRINT(EM_DIAGRAM):   END;
2294472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2294473   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2294474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2294475   +drop
2294476   +H1x1_1
2294477   +H1x1_2
2294478   +H1x1_3
2294479   +H1x1_4
2294480   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2294481   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2294482   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2294483   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294484   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2294485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294486   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2294487   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2294488   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2294489   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2294490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294491   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2294492   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294493   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2294494   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2294495   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2294496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294497   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
2294498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294500   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2294501   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2294502   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2294503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2294504   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2294505   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2294506   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2294507   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2294508   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2294509   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2294510   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2294511   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2294512   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2294513   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2294514   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2294515   +LENGTH _WARN_ $4
2294516   +      F_DepVar  $ 12
2294517   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2294518   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2294519   +
2294520   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2294521   +
2294522   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2294523   +
2294524   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2294525   +
2294526   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2294527   +
2294528   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2294529   +
2294530   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2294531   +
2294532   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2294533   +
2294534   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2294535   +
2294536   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2294537   +
2294538   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2294539   +
2294540   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2294541   +
2294542   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2294543   +
2294544   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2294545   +
2294546   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2294547   +
2294548   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2294549   +
2294550   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2294551   +
2294552   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2294553   +
2294554   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2294555   +
2294556   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2294557   +
2294558   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2294559   +
2294560   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2294561   +
2294562   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2294563   +
2294564   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2294565   +
2294566   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2294567   +
2294568   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2294569   +
2294570   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2294571   +
2294572   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2294573   +
2294574   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2294575   +
2294576   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2294577   +
2294578   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2294579   +
2294580   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2294581   +
2294582   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2294583   +
2294584   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2294585   +
2294586   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2294587   +
2294588   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2294589   +
2294590   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2294591   +
2294592   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2294593   +
2294594   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2294595   +
2294596   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2294597   +
2294598   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2294599   +
2294600   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2294601   +
2294602   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2294603   +
2294604   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2294605   +
2294606   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2294607   +
2294608   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2294609   +
2294610   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2294611   +
2294612   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2294613   +
2294614   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2294615   +
2294616   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2294617   +
2294618   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2294619   +
2294620   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2294621   +
2294622   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2294623   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2294624   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2294625   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2294626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294628   +end;
MPRINT(EM_DIAGRAM):   end;
2294629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294631   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2294632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294634   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2294635   +   end;
MPRINT(EM_DIAGRAM):   end;
2294636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294637   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2294638   +   end;
MPRINT(EM_DIAGRAM):   end;
2294639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294640   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2294641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294643   +   end;
MPRINT(EM_DIAGRAM):   end;
2294644   +end;
MPRINT(EM_DIAGRAM):   end;
2294645   +
2294646   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2294647   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2294648   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2294649   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2294650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294652   +end;
MPRINT(EM_DIAGRAM):   end;
2294653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294655   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2294656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294658   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2294659   +   end;
MPRINT(EM_DIAGRAM):   end;
2294660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294661   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2294662   +   end;
MPRINT(EM_DIAGRAM):   end;
2294663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294664   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2294665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294667   +   end;
MPRINT(EM_DIAGRAM):   end;
2294668   +end;
MPRINT(EM_DIAGRAM):   end;
2294669   +
2294670   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2294671   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2294672   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2294673   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2294674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294676   +end;
MPRINT(EM_DIAGRAM):   end;
2294677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294679   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2294680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294682   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2294683   +   end;
MPRINT(EM_DIAGRAM):   end;
2294684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294685   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2294686   +   end;
MPRINT(EM_DIAGRAM):   end;
2294687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294688   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2294689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294691   +   end;
MPRINT(EM_DIAGRAM):   end;
2294692   +end;
MPRINT(EM_DIAGRAM):   end;
2294693   +
2294694   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2294695   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2294696   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2294697   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2294698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294700   +end;
MPRINT(EM_DIAGRAM):   end;
2294701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294703   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2294704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294706   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2294707   +   end;
MPRINT(EM_DIAGRAM):   end;
2294708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294709   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2294710   +   end;
MPRINT(EM_DIAGRAM):   end;
2294711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294712   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2294713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294715   +   end;
MPRINT(EM_DIAGRAM):   end;
2294716   +end;
MPRINT(EM_DIAGRAM):   end;
2294717   +
2294718   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2294719   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2294720   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2294721   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2294722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294724   +end;
MPRINT(EM_DIAGRAM):   end;
2294725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294727   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2294728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294730   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2294731   +   end;
MPRINT(EM_DIAGRAM):   end;
2294732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294733   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2294734   +   end;
MPRINT(EM_DIAGRAM):   end;
2294735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294736   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2294737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294739   +   end;
MPRINT(EM_DIAGRAM):   end;
2294740   +end;
MPRINT(EM_DIAGRAM):   end;
2294741   +
2294742   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2294743   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2294744   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2294745   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2294746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294748   +end;
MPRINT(EM_DIAGRAM):   end;
2294749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294751   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2294752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2294754   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2294755   +   end;
MPRINT(EM_DIAGRAM):   end;
2294756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2294757   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2294758   +   end;
MPRINT(EM_DIAGRAM):   end;
2294759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294760   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2294761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294763   +   end;
MPRINT(EM_DIAGRAM):   end;
2294764   +end;
MPRINT(EM_DIAGRAM):   end;
2294765   +
2294766   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2294767   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2294768   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2294769   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2294770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294772   +end;
MPRINT(EM_DIAGRAM):   end;
2294773   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2294775   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2294776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294777   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2294778   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2294779   +   end;
MPRINT(EM_DIAGRAM):   end;
2294780   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2294781   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2294782   +   end;
MPRINT(EM_DIAGRAM):   end;
2294783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294784   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2294785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294787   +   end;
MPRINT(EM_DIAGRAM):   end;
2294788   +end;
MPRINT(EM_DIAGRAM):   end;
2294789   +
2294790   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2294791   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2294792   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2294793   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2294794   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2294795   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2294796   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2294797   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2294798   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2294799   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2294800   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2294801   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2294802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294804   +end;
MPRINT(EM_DIAGRAM):   end;
2294805   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294806   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2294807   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2294808   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294809   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2294810   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2294811   +   end;
MPRINT(EM_DIAGRAM):   end;
2294812   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2294813   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2294814   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2294815   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2294816   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2294817   +   end;
MPRINT(EM_DIAGRAM):   end;
2294818   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2294819   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2294820   +   end;
MPRINT(EM_DIAGRAM):   end;
2294821   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2294822   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2294823   +   end;
MPRINT(EM_DIAGRAM):   end;
2294824   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2294825   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2294826   +   end;
MPRINT(EM_DIAGRAM):   end;
2294827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294828   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2294829   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2294830   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2294831   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2294832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294834   +   end;
MPRINT(EM_DIAGRAM):   end;
2294835   +end;
MPRINT(EM_DIAGRAM):   end;
2294836   +
2294837   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2294838   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2294839   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2294840   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2294841   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2294842   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2294843   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2294844   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2294845   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2294846   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2294847   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2294848   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2294849   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2294850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2294851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294852   +end;
MPRINT(EM_DIAGRAM):   end;
2294853   +else do;
MPRINT(EM_DIAGRAM):   else do;
2294854   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2294855   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2294856   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2294857   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2294858   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2294859   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2294860   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2294861   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2294862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294863   +         end;
MPRINT(EM_DIAGRAM):   end;
2294864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2294865   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2294866   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2294867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294868   +            end;
MPRINT(EM_DIAGRAM):   end;
2294869   +         end;
MPRINT(EM_DIAGRAM):   end;
2294870   +      end;
MPRINT(EM_DIAGRAM):   end;
2294871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2294872   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2294873   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2294874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294875   +         end;
MPRINT(EM_DIAGRAM):   end;
2294876   +      end;
MPRINT(EM_DIAGRAM):   end;
2294877   +   end;
MPRINT(EM_DIAGRAM):   end;
2294878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2294879   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2294880   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2294881   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294882   +      end;
MPRINT(EM_DIAGRAM):   end;
2294883   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2294884   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2294885   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2294886   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2294887   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2294888   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2294889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2294890   +         end;
MPRINT(EM_DIAGRAM):   end;
2294891   +      end;
MPRINT(EM_DIAGRAM):   end;
2294892   +   end;
MPRINT(EM_DIAGRAM):   end;
2294893   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2294894   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2294895   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2294896   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2294897   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2294898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2294899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294900   +   end;
MPRINT(EM_DIAGRAM):   end;
2294901   +end;
MPRINT(EM_DIAGRAM):   end;
2294902   +
2294903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294904   +*** Checking missing input Interval
2294905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2294906   +
2294907   +IF NMISS(
2294908   +   AcceptedCmpTotal ,
2294909   +   Age ,
2294910   +   Frq ,
2294911   +   Income ,
2294912   +   Kidhome ,
2294913   +   Mnt ,
2294914   +   MntFishProducts ,
2294915   +   MntFruits ,
2294916   +   MntGoldProds ,
2294917   +   MntMeatProducts ,
2294918   +   MntSweetProducts ,
2294919   +   MntWines ,
2294920   +   MonthsAsCustomer ,
2294921   +   NumCatalogPurchases ,
2294922   +   NumDealsPurchases ,
2294923   +   NumDistPurchases ,
2294924   +   NumStorePurchases ,
2294925   +   NumWebPurchases ,
2294926   +   NumWebVisitsMonth ,
2294927   +   RFMstat ,
2294928   +   RMntFrq ,
2294929   +   Recency ,
2294930   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2294931   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2294932   +
2294933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2294934   +END;
MPRINT(EM_DIAGRAM):   END;
2294935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294936   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2294937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2294938   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2294939   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2294940   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2294941   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2294942   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2294943   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2294944   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2294945   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2294946   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2294947   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2294948   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2294949   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2294950   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2294951   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2294952   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2294953   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2294954   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2294955   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2294956   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2294957   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2294958   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2294959   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2294960   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2294961   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2294962   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2294963   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2294964   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2294965   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2294966   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2294967   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2294968   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2294969   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2294970   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2294971   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2294972   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2294973   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2294974   +END;
MPRINT(EM_DIAGRAM):   END;
2294975   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2294976   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2294977   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2294978   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2294979   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2294980   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2294981   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2294982   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2294983   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2294984   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2294985   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2294986   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2294987   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2294988   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2294989   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2294990   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2294991   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2294992   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2294993   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2294994   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2294995   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2294996   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2294997   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2294998   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2294999   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2295000   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2295001   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2295002   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2295003   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2295004   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2295005   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2295006   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2295007   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2295008   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2295009   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2295010   +   ELSE S_NumCatalogPurchases
2295011   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2295012   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2295013   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2295014   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2295015   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2295016   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2295017   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2295018   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2295019   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2295020   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2295021   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2295022   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2295023   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2295024   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2295025   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2295026   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2295027   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2295028   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2295029   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2295030   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2295031   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2295032   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2295033   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2295034   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2295035   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2295036   +END;
MPRINT(EM_DIAGRAM):   END;
2295037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295038   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2295039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295041   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2295042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295044   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2295045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2295047   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2295048   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2295049   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2295050   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2295051   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2295052   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2295053   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2295054   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2295055   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2295056   +          +     0.19770934886328 * S_NumDealsPurchases
2295057   +          +      0.0515215988111 * S_NumDistPurchases
2295058   +          +    -0.34569346346089 * S_NumStorePurchases
2295059   +          +    -0.27122293596124 * S_NumWebPurchases
2295060   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2295061   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2295062   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2295063   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2295064   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2295065   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2295066   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2295067   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2295068   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2295069   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2295070   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2295071   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2295072   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2295073   +          +     0.54308887602031 * S_NumDealsPurchases
2295074   +          +    -0.22507315320192 * S_NumDistPurchases
2295075   +          +    -0.79861387328361 * S_NumStorePurchases
2295076   +          +    -0.45467494002747 * S_NumWebPurchases
2295077   +          +      0.2119048824613 * S_NumWebVisitsMonth
2295078   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2295079   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2295080   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2295081   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2295082   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2295083   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2295084   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2295085   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2295086   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2295087   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2295088   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2295089   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2295090   +          +     -0.0771083149302 * S_NumDealsPurchases
2295091   +          +     0.03403621221162 * S_NumDistPurchases
2295092   +          +     0.61303946422025 * S_NumStorePurchases
2295093   +          +     0.27126793634053 * S_NumWebPurchases
2295094   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2295095   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2295096   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2295097   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2295098   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2295099   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2295100   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2295101   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2295102   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2295103   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2295104   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2295105   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2295106   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2295107   +          +     0.29894603062327 * S_NumDealsPurchases
2295108   +          +     0.07614620530875 * S_NumDistPurchases
2295109   +          +     0.15402335009896 * S_NumStorePurchases
2295110   +          +     0.10615749096863 * S_NumWebPurchases
2295111   +          +     0.41962286816879 * S_NumWebVisitsMonth
2295112   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2295113   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2295114   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2295115   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2295116   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2295117   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2295118   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2295119   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2295120   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2295121   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2295122   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2295123   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2295124   +          +     0.14392502416642 * S_NumDealsPurchases
2295125   +          +    -0.10026304978633 * S_NumDistPurchases
2295126   +          +     -0.0588453022746 * S_NumStorePurchases
2295127   +          +     0.24799398610395 * S_NumWebPurchases
2295128   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2295129   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2295130   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2295131   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2295132   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2295133   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2295134   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2295135   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2295136   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2295137   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2295138   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2295139   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2295140   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2295141   +          +     0.08149600854964 * S_NumDealsPurchases
2295142   +          +     0.16873541613513 * S_NumDistPurchases
2295143   +          +    -0.20437343413446 * S_NumStorePurchases
2295144   +          +     -0.1671107527288 * S_NumWebPurchases
2295145   +          +     0.03677043100993 * S_NumWebVisitsMonth
2295146   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2295147   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2295148   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2295149   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2295150   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2295151   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2295152   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2295153   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2295154   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2295155   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2295156   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2295157   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2295158   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2295159   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2295160   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2295161   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2295162   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2295163   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2295164   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2295165   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2295166   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2295167   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2295168   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2295169   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2295170   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2295171   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2295172   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2295173   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2295174   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2295175   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2295176   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2295177   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2295178   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2295179   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2295180   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2295181   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2295182   +          +    -0.31045295887604 * Marital_StatusDivorced
2295183   +          +    -0.01109401001539 * Marital_StatusMarried
2295184   +          +     0.01325135981025 * Marital_StatusSingle
2295185   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2295186   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2295187   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2295188   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2295189   +          +     0.02275101861599 * Marital_StatusDivorced
2295190   +          +     0.20271548664903 * Marital_StatusMarried
2295191   +          +    -0.12132069210718 * Marital_StatusSingle
2295192   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2295193   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2295194   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2295195   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2295196   +          +     -0.4992959703281 * Marital_StatusDivorced
2295197   +          +     0.62071659624138 * Marital_StatusMarried
2295198   +          +    -0.21776202274494 * Marital_StatusSingle
2295199   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2295200   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2295201   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2295202   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2295203   +          +     0.05626212670587 * Marital_StatusDivorced
2295204   +          +     0.14353891364597 * Marital_StatusMarried
2295205   +          +    -0.29006765622997 * Marital_StatusSingle
2295206   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2295207   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2295208   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2295209   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2295210   +          +    -0.21206913700604 * Marital_StatusDivorced
2295211   +          +     0.58790643614629 * Marital_StatusMarried
2295212   +          +    -0.65995982578062 * Marital_StatusSingle
2295213   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2295214   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2295215   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2295216   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2295217   +          +    -0.05047370516008 * Marital_StatusDivorced
2295218   +          +    -0.23139090963669 * Marital_StatusMarried
2295219   +          +     0.04816197463249 * Marital_StatusSingle
2295220   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2295221   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2295222   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2295223   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2295224   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2295225   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2295226   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2295227   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2295228   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2295229   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2295230   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2295231   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2295232   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2295233   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2295234   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2295235   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2295236   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2295237   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2295238   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2295239   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2295240   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2295241   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2295242   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2295243   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2295244   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2295245   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2295246   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2295247   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2295248   +END;
MPRINT(EM_DIAGRAM):   END;
2295249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2295250   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2295251   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2295252   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2295253   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2295254   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2295255   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2295256   +END;
MPRINT(EM_DIAGRAM):   END;
2295257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295258   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2295259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295260   +
2295261   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2295262   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2295263   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2295264   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2295265   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2295266   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295267   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2295268   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2295269   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2295270   +end;
MPRINT(EM_DIAGRAM):   end;
2295271   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295272   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2295273   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2295274   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2295275   +   end;
MPRINT(EM_DIAGRAM):   end;
2295276   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2295277   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2295278   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2295279   +   end;
MPRINT(EM_DIAGRAM):   end;
2295280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295281   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2295282   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2295283   +   end;
MPRINT(EM_DIAGRAM):   end;
2295284   +end;
MPRINT(EM_DIAGRAM):   end;
2295285   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2295286   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2295287   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2295288   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2295289   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2295290   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2295291   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2295292   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2295293   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2295294   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2295295   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2295296   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2295297   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2295298   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2295299   +END;
MPRINT(EM_DIAGRAM):   END;
2295300   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2295301   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2295302   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2295303   +END;
MPRINT(EM_DIAGRAM):   END;
2295304   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2295305   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2295306   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2295307   +END;
MPRINT(EM_DIAGRAM):   END;
2295308   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2295309   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2295310   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2295311   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2295312   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2295313   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2295314   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2295315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295316   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2295317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295318   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2295319   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2295320   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2295321   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2295322   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2295323   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2295324   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2295325   +END;
MPRINT(EM_DIAGRAM):   END;
2295326   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2295327   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2295328   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2295329   +drop
2295330   +H1x1_1
2295331   +H1x1_2
2295332   +H1x1_3
2295333   +H1x1_4
2295334   +H1x1_5
2295335   +H1x1_6
2295336   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2295337   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2295338   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2295339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295340   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2295341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295342   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2295343   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2295344   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2295345   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2295346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295347   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2295348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295349   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2295350   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2295351   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2295352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295353   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
2295354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295356   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2295357   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2295358   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2295359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2295360   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2295361   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2295362   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2295363   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2295364   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2295365   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2295366   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2295367   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2295368   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2295369   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2295370   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2295371   +LENGTH _WARN_ $4
2295372   +      F_DepVar  $ 12
2295373   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2295374   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2295375   +
2295376   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2295377   +
2295378   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2295379   +
2295380   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2295381   +
2295382   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2295383   +
2295384   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2295385   +
2295386   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2295387   +
2295388   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2295389   +
2295390   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2295391   +
2295392   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2295393   +
2295394   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2295395   +
2295396   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2295397   +
2295398   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2295399   +
2295400   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2295401   +
2295402   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2295403   +
2295404   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2295405   +
2295406   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2295407   +
2295408   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2295409   +
2295410   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2295411   +
2295412   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2295413   +
2295414   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2295415   +
2295416   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2295417   +
2295418   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2295419   +
2295420   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2295421   +
2295422   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2295423   +
2295424   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2295425   +
2295426   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2295427   +
2295428   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2295429   +
2295430   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2295431   +
2295432   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2295433   +
2295434   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2295435   +
2295436   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2295437   +
2295438   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2295439   +
2295440   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2295441   +
2295442   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2295443   +
2295444   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2295445   +
2295446   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2295447   +
2295448   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2295449   +
2295450   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2295451   +
2295452   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2295453   +
2295454   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2295455   +
2295456   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2295457   +
2295458   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2295459   +
2295460   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2295461   +
2295462   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2295463   +
2295464   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2295465   +
2295466   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2295467   +
2295468   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2295469   +
2295470   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2295471   +
2295472   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2295473   +
2295474   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2295475   +
2295476   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2295477   +
2295478   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2295479   +
2295480   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2295481   +
2295482   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2295483   +
2295484   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2295485   +
2295486   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2295487   +
2295488   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2295489   +
2295490   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2295491   +
2295492   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2295493   +
2295494   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2295495   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2295496   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2295497   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2295498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295500   +end;
MPRINT(EM_DIAGRAM):   end;
2295501   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295503   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2295504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295506   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2295507   +   end;
MPRINT(EM_DIAGRAM):   end;
2295508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295509   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2295510   +   end;
MPRINT(EM_DIAGRAM):   end;
2295511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295512   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2295513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295515   +   end;
MPRINT(EM_DIAGRAM):   end;
2295516   +end;
MPRINT(EM_DIAGRAM):   end;
2295517   +
2295518   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2295519   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2295520   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2295521   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2295522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295524   +end;
MPRINT(EM_DIAGRAM):   end;
2295525   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295527   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2295528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295529   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295530   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2295531   +   end;
MPRINT(EM_DIAGRAM):   end;
2295532   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295533   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2295534   +   end;
MPRINT(EM_DIAGRAM):   end;
2295535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295536   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2295537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295539   +   end;
MPRINT(EM_DIAGRAM):   end;
2295540   +end;
MPRINT(EM_DIAGRAM):   end;
2295541   +
2295542   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2295543   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2295544   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2295545   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2295546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295548   +end;
MPRINT(EM_DIAGRAM):   end;
2295549   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295551   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2295552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295553   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295554   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2295555   +   end;
MPRINT(EM_DIAGRAM):   end;
2295556   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295557   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2295558   +   end;
MPRINT(EM_DIAGRAM):   end;
2295559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295560   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2295561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295563   +   end;
MPRINT(EM_DIAGRAM):   end;
2295564   +end;
MPRINT(EM_DIAGRAM):   end;
2295565   +
2295566   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2295567   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2295568   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2295569   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2295570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295572   +end;
MPRINT(EM_DIAGRAM):   end;
2295573   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295574   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295575   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2295576   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295577   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295578   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2295579   +   end;
MPRINT(EM_DIAGRAM):   end;
2295580   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295581   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2295582   +   end;
MPRINT(EM_DIAGRAM):   end;
2295583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295584   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2295585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295587   +   end;
MPRINT(EM_DIAGRAM):   end;
2295588   +end;
MPRINT(EM_DIAGRAM):   end;
2295589   +
2295590   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2295591   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2295592   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2295593   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2295594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295596   +end;
MPRINT(EM_DIAGRAM):   end;
2295597   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295599   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2295600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295601   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295602   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2295603   +   end;
MPRINT(EM_DIAGRAM):   end;
2295604   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295605   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2295606   +   end;
MPRINT(EM_DIAGRAM):   end;
2295607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295608   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2295609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295611   +   end;
MPRINT(EM_DIAGRAM):   end;
2295612   +end;
MPRINT(EM_DIAGRAM):   end;
2295613   +
2295614   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2295615   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2295616   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2295617   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2295618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295620   +end;
MPRINT(EM_DIAGRAM):   end;
2295621   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295622   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295623   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2295624   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295625   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2295626   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2295627   +   end;
MPRINT(EM_DIAGRAM):   end;
2295628   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2295629   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2295630   +   end;
MPRINT(EM_DIAGRAM):   end;
2295631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295632   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2295633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295635   +   end;
MPRINT(EM_DIAGRAM):   end;
2295636   +end;
MPRINT(EM_DIAGRAM):   end;
2295637   +
2295638   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2295639   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2295640   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2295641   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2295642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295644   +end;
MPRINT(EM_DIAGRAM):   end;
2295645   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295646   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2295647   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2295648   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295649   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2295650   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2295651   +   end;
MPRINT(EM_DIAGRAM):   end;
2295652   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2295653   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2295654   +   end;
MPRINT(EM_DIAGRAM):   end;
2295655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295656   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2295657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295659   +   end;
MPRINT(EM_DIAGRAM):   end;
2295660   +end;
MPRINT(EM_DIAGRAM):   end;
2295661   +
2295662   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2295663   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2295664   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2295665   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2295666   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2295667   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2295668   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2295669   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2295670   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2295671   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2295672   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2295673   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2295674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295676   +end;
MPRINT(EM_DIAGRAM):   end;
2295677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295678   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2295679   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2295680   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295681   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2295682   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2295683   +   end;
MPRINT(EM_DIAGRAM):   end;
2295684   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2295685   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2295686   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2295687   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2295688   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2295689   +   end;
MPRINT(EM_DIAGRAM):   end;
2295690   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2295691   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2295692   +   end;
MPRINT(EM_DIAGRAM):   end;
2295693   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2295694   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2295695   +   end;
MPRINT(EM_DIAGRAM):   end;
2295696   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2295697   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2295698   +   end;
MPRINT(EM_DIAGRAM):   end;
2295699   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295700   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2295701   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2295702   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2295703   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2295704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295706   +   end;
MPRINT(EM_DIAGRAM):   end;
2295707   +end;
MPRINT(EM_DIAGRAM):   end;
2295708   +
2295709   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2295710   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2295711   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2295712   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2295713   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2295714   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2295715   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2295716   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2295717   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2295718   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2295719   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2295720   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2295721   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2295722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2295723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295724   +end;
MPRINT(EM_DIAGRAM):   end;
2295725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2295726   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2295727   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2295728   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2295729   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2295730   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2295731   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2295732   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2295733   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2295734   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2295735   +         end;
MPRINT(EM_DIAGRAM):   end;
2295736   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2295737   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2295738   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2295739   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2295740   +            end;
MPRINT(EM_DIAGRAM):   end;
2295741   +         end;
MPRINT(EM_DIAGRAM):   end;
2295742   +      end;
MPRINT(EM_DIAGRAM):   end;
2295743   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2295744   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2295745   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2295746   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2295747   +         end;
MPRINT(EM_DIAGRAM):   end;
2295748   +      end;
MPRINT(EM_DIAGRAM):   end;
2295749   +   end;
MPRINT(EM_DIAGRAM):   end;
2295750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2295751   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2295752   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2295753   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2295754   +      end;
MPRINT(EM_DIAGRAM):   end;
2295755   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2295756   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2295757   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2295758   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2295759   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2295760   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2295761   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2295762   +         end;
MPRINT(EM_DIAGRAM):   end;
2295763   +      end;
MPRINT(EM_DIAGRAM):   end;
2295764   +   end;
MPRINT(EM_DIAGRAM):   end;
2295765   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2295766   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2295767   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2295768   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2295769   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2295770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2295771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295772   +   end;
MPRINT(EM_DIAGRAM):   end;
2295773   +end;
MPRINT(EM_DIAGRAM):   end;
2295774   +
2295775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295776   +*** Checking missing input Interval
2295777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2295778   +
2295779   +IF NMISS(
2295780   +   AcceptedCmpTotal ,
2295781   +   Age ,
2295782   +   Frq ,
2295783   +   Income ,
2295784   +   Kidhome ,
2295785   +   Mnt ,
2295786   +   MntFishProducts ,
2295787   +   MntFruits ,
2295788   +   MntGoldProds ,
2295789   +   MntMeatProducts ,
2295790   +   MntSweetProducts ,
2295791   +   MntWines ,
2295792   +   MonthsAsCustomer ,
2295793   +   NumCatalogPurchases ,
2295794   +   NumDealsPurchases ,
2295795   +   NumDistPurchases ,
2295796   +   NumStorePurchases ,
2295797   +   NumWebPurchases ,
2295798   +   NumWebVisitsMonth ,
2295799   +   RFMstat ,
2295800   +   RMntFrq ,
2295801   +   Recency ,
2295802   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2295803   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2295804   +
2295805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2295806   +END;
MPRINT(EM_DIAGRAM):   END;
2295807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295808   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2295809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295810   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2295811   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2295812   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2295813   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2295814   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2295815   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2295816   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2295817   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2295818   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2295819   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2295820   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2295821   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2295822   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2295823   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2295824   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2295825   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2295826   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2295827   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2295828   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2295829   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2295830   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2295831   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2295832   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2295833   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2295834   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2295835   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2295836   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2295837   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2295838   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2295839   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2295840   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2295841   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2295842   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2295843   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2295844   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2295845   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2295846   +END;
MPRINT(EM_DIAGRAM):   END;
2295847   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2295848   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2295849   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2295850   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2295851   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2295852   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2295853   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2295854   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2295855   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2295856   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2295857   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2295858   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2295859   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2295860   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2295861   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2295862   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2295863   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2295864   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2295865   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2295866   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2295867   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2295868   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2295869   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2295870   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2295871   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2295872   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2295873   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2295874   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2295875   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2295876   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2295877   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2295878   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2295879   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2295880   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2295881   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2295882   +   ELSE S_NumCatalogPurchases
2295883   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2295884   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2295885   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2295886   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2295887   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2295888   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2295889   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2295890   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2295891   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2295892   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2295893   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2295894   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2295895   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2295896   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2295897   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2295898   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2295899   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2295900   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2295901   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2295902   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2295903   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2295904   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2295905   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2295906   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2295907   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2295908   +END;
MPRINT(EM_DIAGRAM):   END;
2295909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295910   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2295911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295913   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2295914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295916   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2295917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2295918   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2295919   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2295920   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2295921   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2295922   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2295923   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2295924   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2295925   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2295926   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2295927   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2295928   +          +      0.1112677116841 * S_NumDealsPurchases
2295929   +          +     0.01563584187072 * S_NumDistPurchases
2295930   +          +     0.19193969522995 * S_NumStorePurchases
2295931   +          +      0.3133556199984 * S_NumWebPurchases
2295932   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2295933   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2295934   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2295935   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2295936   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2295937   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2295938   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2295939   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2295940   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2295941   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2295942   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2295943   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2295944   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2295945   +          +     0.30225032753275 * S_NumDealsPurchases
2295946   +          +     0.33833359923595 * S_NumDistPurchases
2295947   +          +    -0.20255599575849 * S_NumStorePurchases
2295948   +          +    -0.12040071168942 * S_NumWebPurchases
2295949   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2295950   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2295951   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2295952   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2295953   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2295954   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2295955   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2295956   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2295957   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2295958   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2295959   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2295960   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2295961   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2295962   +          +     0.16792903091627 * S_NumDealsPurchases
2295963   +          +    -0.37408945626745 * S_NumDistPurchases
2295964   +          +    -0.18067262995566 * S_NumStorePurchases
2295965   +          +     0.21192146789881 * S_NumWebPurchases
2295966   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2295967   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2295968   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2295969   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2295970   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2295971   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2295972   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2295973   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2295974   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2295975   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2295976   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2295977   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2295978   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2295979   +          +     0.29407429399136 * S_NumDealsPurchases
2295980   +          +     0.01610745252195 * S_NumDistPurchases
2295981   +          +    -0.17767939085628 * S_NumStorePurchases
2295982   +          +    -0.15168958538637 * S_NumWebPurchases
2295983   +          +     0.17433622143988 * S_NumWebVisitsMonth
2295984   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2295985   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2295986   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2295987   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2295988   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2295989   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2295990   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2295991   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2295992   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2295993   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2295994   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2295995   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2295996   +          +    -0.37976451362108 * S_NumDealsPurchases
2295997   +          +    -0.17027731520801 * S_NumDistPurchases
2295998   +          +     0.59849493667087 * S_NumStorePurchases
2295999   +          +     0.65481480560301 * S_NumWebPurchases
2296000   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2296001   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2296002   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2296003   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2296004   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2296005   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2296006   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2296007   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2296008   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2296009   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2296010   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2296011   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2296012   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2296013   +          +    -0.07686699131623 * S_NumDealsPurchases
2296014   +          +    -0.07220460738926 * S_NumDistPurchases
2296015   +          +    -0.06554027468389 * S_NumStorePurchases
2296016   +          +     0.10422838158001 * S_NumWebPurchases
2296017   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2296018   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2296019   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2296020   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2296021   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2296022   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2296023   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2296024   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2296025   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2296026   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2296027   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2296028   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2296029   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2296030   +          +    -0.07920122387563 * S_NumDealsPurchases
2296031   +          +      0.3649244061347 * S_NumDistPurchases
2296032   +          +     0.36475853688403 * S_NumStorePurchases
2296033   +          +     0.02153991404063 * S_NumWebPurchases
2296034   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2296035   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2296036   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2296037   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2296038   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2296039   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2296040   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2296041   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2296042   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2296043   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2296044   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2296045   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2296046   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2296047   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2296048   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2296049   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2296050   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2296051   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2296052   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2296053   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2296054   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2296055   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2296056   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2296057   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2296058   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2296059   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2296060   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2296061   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2296062   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2296063   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2296064   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2296065   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2296066   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2296067   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2296068   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2296069   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2296070   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2296071   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2296072   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2296073   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2296074   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2296075   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2296076   +          +     0.07744097241553 * Marital_StatusDivorced
2296077   +          +     -0.0247463100385 * Marital_StatusMarried
2296078   +          +     0.05804915234573 * Marital_StatusSingle
2296079   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2296080   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2296081   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2296082   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2296083   +          +     0.01390668926269 * Marital_StatusDivorced
2296084   +          +     0.01136282152074 * Marital_StatusMarried
2296085   +          +     0.12450246418789 * Marital_StatusSingle
2296086   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2296087   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2296088   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2296089   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2296090   +          +    -0.19133456931879 * Marital_StatusDivorced
2296091   +          +     0.56263566654996 * Marital_StatusMarried
2296092   +          +    -0.42172822038882 * Marital_StatusSingle
2296093   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2296094   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2296095   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2296096   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2296097   +          +    -0.19871205065609 * Marital_StatusDivorced
2296098   +          +    -0.14730795681603 * Marital_StatusMarried
2296099   +          +     0.05055432510362 * Marital_StatusSingle
2296100   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2296101   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2296102   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2296103   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2296104   +          +    -0.35623807358995 * Marital_StatusDivorced
2296105   +          +     0.30324726283965 * Marital_StatusMarried
2296106   +          +    -0.18561093467927 * Marital_StatusSingle
2296107   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2296108   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2296109   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2296110   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2296111   +          +     0.11581014663368 * Marital_StatusDivorced
2296112   +          +    -0.31070638037659 * Marital_StatusMarried
2296113   +          +     0.17131747253949 * Marital_StatusSingle
2296114   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2296115   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2296116   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2296117   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2296118   +          +    -0.42450599871892 * Marital_StatusDivorced
2296119   +          +     0.48162905075885 * Marital_StatusMarried
2296120   +          +    -0.26618507749283 * Marital_StatusSingle
2296121   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2296122   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2296123   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2296124   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2296125   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2296126   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2296127   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2296128   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2296129   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2296130   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2296131   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2296132   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2296133   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2296134   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2296135   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2296136   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2296137   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2296138   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2296139   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2296140   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2296141   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2296142   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2296143   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2296144   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2296145   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2296146   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2296147   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2296148   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2296149   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2296150   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2296151   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2296152   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2296153   +END;
MPRINT(EM_DIAGRAM):   END;
2296154   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2296155   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2296156   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2296157   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2296158   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2296159   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2296160   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2296161   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2296162   +END;
MPRINT(EM_DIAGRAM):   END;
2296163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296164   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2296165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296166   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2296167   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2296168   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2296169   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2296170   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2296171   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2296172   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2296173   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2296174   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2296175   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2296176   +          +     1.96719021971894 * S_NumDealsPurchases
2296177   +          +    -0.44535354794671 * S_NumDistPurchases
2296178   +          +    -0.54827762736866 * S_NumStorePurchases
2296179   +          +     1.02703310241897 * S_NumWebPurchases
2296180   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2296181   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2296182   +        S_RMntFrq  +       0.651688575044 * S_Recency
2296183   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2296184   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2296185   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2296186   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2296187   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2296188   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2296189   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2296190   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2296191   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2296192   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2296193   +          +     1.34659447971131 * S_NumDealsPurchases
2296194   +          +    -0.51624251310423 * S_NumDistPurchases
2296195   +          +      -1.283121574848 * S_NumStorePurchases
2296196   +          +    -1.83517806228926 * S_NumWebPurchases
2296197   +          +     0.51321339475285 * S_NumWebVisitsMonth
2296198   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2296199   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2296200   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2296201   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2296202   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2296203   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2296204   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2296205   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2296206   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2296207   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2296208   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2296209   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2296210   +          +     0.67492297345004 * S_NumDealsPurchases
2296211   +          +    -0.40437875375926 * S_NumDistPurchases
2296212   +          +     0.36322603681545 * S_NumStorePurchases
2296213   +          +    -1.15315070635524 * S_NumWebPurchases
2296214   +          +     1.20707272201156 * S_NumWebVisitsMonth
2296215   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2296216   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2296217   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2296218   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2296219   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2296220   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2296221   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2296222   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2296223   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2296224   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2296225   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2296226   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2296227   +          +    -0.41427983342148 * S_NumDealsPurchases
2296228   +          +    -0.22714305629205 * S_NumDistPurchases
2296229   +          +    -0.78763182048862 * S_NumStorePurchases
2296230   +          +    -0.26669253451501 * S_NumWebPurchases
2296231   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2296232   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2296233   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2296234   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2296235   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2296236   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2296237   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2296238   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2296239   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2296240   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2296241   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2296242   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2296243   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2296244   +          +      0.7697882092212 * S_NumDealsPurchases
2296245   +          +     0.51864835453056 * S_NumDistPurchases
2296246   +          +    -1.18320366630444 * S_NumStorePurchases
2296247   +          +     -0.6608394639529 * S_NumWebPurchases
2296248   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2296249   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2296250   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2296251   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2296252   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2296253   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2296254   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2296255   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2296256   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2296257   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2296258   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2296259   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2296260   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2296261   +          +     1.45707983202269 * S_NumDealsPurchases
2296262   +          +     0.83341887728641 * S_NumDistPurchases
2296263   +          +    -0.36664450469423 * S_NumStorePurchases
2296264   +          +     0.63911579043339 * S_NumWebPurchases
2296265   +          +     0.67144790303554 * S_NumWebVisitsMonth
2296266   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2296267   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2296268   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2296269   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2296270   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2296271   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2296272   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2296273   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2296274   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2296275   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2296276   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2296277   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2296278   +          +     0.68491896063662 * S_NumDealsPurchases
2296279   +          +      0.5386312048592 * S_NumDistPurchases
2296280   +          +     1.28108942503912 * S_NumStorePurchases
2296281   +          +    -0.88282270505969 * S_NumWebPurchases
2296282   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2296283   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2296284   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2296285   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2296286   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2296287   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2296288   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2296289   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2296290   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2296291   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2296292   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2296293   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2296294   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2296295   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2296296   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2296297   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2296298   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2296299   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2296300   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2296301   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2296302   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2296303   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2296304   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2296305   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2296306   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2296307   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2296308   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2296309   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2296310   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2296311   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2296312   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2296313   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2296314   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2296315   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2296316   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2296317   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2296318   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2296319   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2296320   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2296321   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2296322   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2296323   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2296324   +          +    -3.97961426831865 * Marital_StatusDivorced
2296325   +          +     0.00932639813867 * Marital_StatusMarried
2296326   +          +     1.29310186574718 * Marital_StatusSingle
2296327   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2296328   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2296329   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2296330   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2296331   +          +    -0.30358516578188 * Marital_StatusDivorced
2296332   +          +    -0.96176709360703 * Marital_StatusMarried
2296333   +          +     1.26977690921649 * Marital_StatusSingle
2296334   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2296335   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2296336   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2296337   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2296338   +          +     0.55272671490757 * Marital_StatusDivorced
2296339   +          +      0.1499239288334 * Marital_StatusMarried
2296340   +          +    -0.46840941760604 * Marital_StatusSingle
2296341   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2296342   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2296343   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2296344   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2296345   +          +      -1.240735370138 * Marital_StatusDivorced
2296346   +          +    -1.20089294883599 * Marital_StatusMarried
2296347   +          +     0.57492674426149 * Marital_StatusSingle
2296348   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2296349   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2296350   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2296351   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2296352   +          +     1.05435442049802 * Marital_StatusDivorced
2296353   +          +      0.3571256349717 * Marital_StatusMarried
2296354   +          +    -0.44741267266578 * Marital_StatusSingle
2296355   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2296356   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2296357   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2296358   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2296359   +          +     2.06026721980778 * Marital_StatusDivorced
2296360   +          +    -0.49583258645166 * Marital_StatusMarried
2296361   +          +    -1.14824900824474 * Marital_StatusSingle
2296362   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2296363   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2296364   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2296365   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2296366   +          +     -1.1890908607447 * Marital_StatusDivorced
2296367   +          +    -0.46668809907123 * Marital_StatusMarried
2296368   +          +     1.20342564763422 * Marital_StatusSingle
2296369   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2296370   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2296371   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2296372   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2296373   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2296374   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2296375   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2296376   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2296377   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2296378   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2296379   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2296380   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2296381   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2296382   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2296383   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2296384   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2296385   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2296386   +END;
MPRINT(EM_DIAGRAM):   END;
2296387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2296388   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2296389   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2296390   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2296391   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2296392   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2296393   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2296394   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2296395   +END;
MPRINT(EM_DIAGRAM):   END;
2296396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296397   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2296398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296399   +
2296400   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2296401   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2296402   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2296403   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2296404   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2296405   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296406   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2296407   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2296408   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2296409   +end;
MPRINT(EM_DIAGRAM):   end;
2296410   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296411   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2296412   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2296413   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2296414   +   end;
MPRINT(EM_DIAGRAM):   end;
2296415   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2296416   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2296417   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2296418   +   end;
MPRINT(EM_DIAGRAM):   end;
2296419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296420   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2296421   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2296422   +   end;
MPRINT(EM_DIAGRAM):   end;
2296423   +end;
MPRINT(EM_DIAGRAM):   end;
2296424   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2296425   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2296426   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2296427   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2296428   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2296429   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2296430   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2296431   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2296432   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2296433   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2296434   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2296435   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2296436   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2296437   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2296438   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2296439   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2296440   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2296441   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2296442   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2296443   +END;
MPRINT(EM_DIAGRAM):   END;
2296444   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2296445   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2296446   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2296447   +END;
MPRINT(EM_DIAGRAM):   END;
2296448   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2296449   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2296450   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2296451   +END;
MPRINT(EM_DIAGRAM):   END;
2296452   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2296453   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2296454   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2296455   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2296456   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2296457   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2296458   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2296459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296460   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2296461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2296462   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2296463   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2296464   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2296465   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2296466   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2296467   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2296468   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2296469   +END;
MPRINT(EM_DIAGRAM):   END;
2296470   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2296471   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2296472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2296473   +drop
2296474   +H1x1_1
2296475   +H1x1_2
2296476   +H1x1_3
2296477   +H1x1_4
2296478   +H1x1_5
2296479   +H1x1_6
2296480   +H1x1_7
2296481   +H1x2_1
2296482   +H1x2_2
2296483   +H1x2_3
2296484   +H1x2_4
2296485   +H1x2_5
2296486   +H1x2_6
2296487   +H1x2_7
2296488   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2296489   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2296490   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2296491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296492   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2296493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296494   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2296495   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2296496   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2296497   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2296498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296499   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2296500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296501   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2296502   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2296503   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2296504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296505   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
2296506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296507   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
2296508   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
2296509   +P_DepVar1 = max(
2296510   +AutoNeural6_P_DepVar1 ,
2296511   +AutoNeural7_P_DepVar1 ,
2296512   +AutoNeural8_P_DepVar1 ,
2296513   +AutoNeural10_P_DepVar1 ,
2296514   +AutoNeural9_P_DepVar1 ,
2296515   +AutoNeural11_P_DepVar1 ,
2296516   +AutoNeural12_P_DepVar1
2296517   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
2296518   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2296519   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
2296520   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
2296521   +end;
MPRINT(EM_DIAGRAM):   end;
2296522   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
2296523   +P_DepVar0 = max(
2296524   +AutoNeural6_P_DepVar0 ,
2296525   +AutoNeural7_P_DepVar0 ,
2296526   +AutoNeural8_P_DepVar0 ,
2296527   +AutoNeural10_P_DepVar0 ,
2296528   +AutoNeural9_P_DepVar0 ,
2296529   +AutoNeural11_P_DepVar0 ,
2296530   +AutoNeural12_P_DepVar0
2296531   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
2296532   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
2296533   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
2296534   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
2296535   +end;
MPRINT(EM_DIAGRAM):   end;
2296536   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
2296537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296538   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
2296539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296540   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2296541   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2296542   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2296543   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2296544   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2296545   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2296546   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2296547   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2296548   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2296549   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2296550   +end;
MPRINT(EM_DIAGRAM):   end;
2296551   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2296552   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2296553   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2296554   +end;
MPRINT(EM_DIAGRAM):   end;
2296555   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2296556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296557   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
2296558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296559   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2296560   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2296561   +else
2296562   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2296563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296564   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
2296565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296566   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2296567   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2296568   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2296569   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296569  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296570   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296570  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296571   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296571  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296572   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296572  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296573   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296573  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296574   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296574  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296575   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296575  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296576   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296576  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296577   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296577  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296578   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296578  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296579   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296579  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296580   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296580  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296581   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296581  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296582   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296582  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296583   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296583  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296584   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296584  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296585   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296585  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296586   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296586  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296587   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296587  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296588   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296588  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296589   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296589  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296590   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296590  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296591   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296591  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296592   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296592  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296593   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2296593  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2296594   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2296594  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2296595   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2296595  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2296596   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2296596  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2296597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296598   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
2296599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2296600   +if
2296601   +F_DepVar NE '1'
2296602   +AND F_DepVar NE '0'
2296603   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2296604   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2296605   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2296606   +end;
MPRINT(EM_DIAGRAM):   end;
2296607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296608   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2296609   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2296610   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2296611   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2296612   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2296613   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2296614   +END;
MPRINT(EM_DIAGRAM):   END;
2296615   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2296616    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2296617    quit;
2296618    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl37_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2296678    filename _pref
2296678  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2296679    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2296680    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2296681   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2296682   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2296683   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2296684   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2296685   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2296686   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2296687   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2296688   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2296689   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2296690   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2296691   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2296692   +LENGTH _WARN_ $4
2296693   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2296694   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2296695   +
2296696   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2296697   +
2296698   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2296699   +
2296700   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2296701   +
2296702   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2296703   +
2296704   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2296705   +
2296706   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2296707   +
2296708   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2296709   +
2296710   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2296711   +
2296712   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2296713   +
2296714   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2296715   +
2296716   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2296717   +
2296718   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2296719   +
2296720   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2296721   +
2296722   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2296723   +
2296724   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2296725   +
2296726   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2296727   +
2296728   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2296729   +
2296730   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2296731   +
2296732   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2296733   +
2296734   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2296735   +
2296736   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2296737   +
2296738   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2296739   +
2296740   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2296741   +
2296742   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2296743   +
2296744   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2296745   +
2296746   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2296747   +
2296748   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2296749   +
2296750   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2296751   +
2296752   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2296753   +
2296754   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2296755   +
2296756   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2296757   +
2296758   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2296759   +
2296760   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2296761   +
2296762   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2296763   +
2296764   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2296765   +
2296766   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2296767   +
2296768   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2296769   +
2296770   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2296771   +
2296772   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2296773   +
2296774   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2296775   +
2296776   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2296777   +
2296778   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2296779   +
2296780   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2296781   +
2296782   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2296783   +
2296784   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2296785   +
2296786   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2296787   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2296788   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2296789   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2296790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296792   +end;
MPRINT(EM_DIAGRAM):   end;
2296793   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296795   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2296796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296798   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2296799   +   end;
MPRINT(EM_DIAGRAM):   end;
2296800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296801   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2296802   +   end;
MPRINT(EM_DIAGRAM):   end;
2296803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296804   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2296805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296807   +   end;
MPRINT(EM_DIAGRAM):   end;
2296808   +end;
MPRINT(EM_DIAGRAM):   end;
2296809   +
2296810   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2296811   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2296812   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2296813   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2296814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296816   +end;
MPRINT(EM_DIAGRAM):   end;
2296817   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296819   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2296820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296821   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296822   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2296823   +   end;
MPRINT(EM_DIAGRAM):   end;
2296824   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296825   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2296826   +   end;
MPRINT(EM_DIAGRAM):   end;
2296827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296828   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2296829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296831   +   end;
MPRINT(EM_DIAGRAM):   end;
2296832   +end;
MPRINT(EM_DIAGRAM):   end;
2296833   +
2296834   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2296835   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2296836   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2296837   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2296838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296840   +end;
MPRINT(EM_DIAGRAM):   end;
2296841   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296843   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2296844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296846   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2296847   +   end;
MPRINT(EM_DIAGRAM):   end;
2296848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296849   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2296850   +   end;
MPRINT(EM_DIAGRAM):   end;
2296851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296852   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2296853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296855   +   end;
MPRINT(EM_DIAGRAM):   end;
2296856   +end;
MPRINT(EM_DIAGRAM):   end;
2296857   +
2296858   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2296859   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2296860   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2296861   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2296862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296864   +end;
MPRINT(EM_DIAGRAM):   end;
2296865   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296867   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2296868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296870   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2296871   +   end;
MPRINT(EM_DIAGRAM):   end;
2296872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296873   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2296874   +   end;
MPRINT(EM_DIAGRAM):   end;
2296875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296876   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2296877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296879   +   end;
MPRINT(EM_DIAGRAM):   end;
2296880   +end;
MPRINT(EM_DIAGRAM):   end;
2296881   +
2296882   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2296883   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2296884   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2296885   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2296886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296888   +end;
MPRINT(EM_DIAGRAM):   end;
2296889   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296891   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2296892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296893   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296894   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2296895   +   end;
MPRINT(EM_DIAGRAM):   end;
2296896   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296897   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2296898   +   end;
MPRINT(EM_DIAGRAM):   end;
2296899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296900   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2296901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296903   +   end;
MPRINT(EM_DIAGRAM):   end;
2296904   +end;
MPRINT(EM_DIAGRAM):   end;
2296905   +
2296906   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2296907   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2296908   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2296909   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2296910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296912   +end;
MPRINT(EM_DIAGRAM):   end;
2296913   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296915   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2296916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2296918   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2296919   +   end;
MPRINT(EM_DIAGRAM):   end;
2296920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2296921   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2296922   +   end;
MPRINT(EM_DIAGRAM):   end;
2296923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296924   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2296925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296927   +   end;
MPRINT(EM_DIAGRAM):   end;
2296928   +end;
MPRINT(EM_DIAGRAM):   end;
2296929   +
2296930   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2296931   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2296932   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2296933   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2296934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296936   +end;
MPRINT(EM_DIAGRAM):   end;
2296937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2296939   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2296940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296941   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2296942   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2296943   +   end;
MPRINT(EM_DIAGRAM):   end;
2296944   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2296945   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2296946   +   end;
MPRINT(EM_DIAGRAM):   end;
2296947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296948   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2296949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296951   +   end;
MPRINT(EM_DIAGRAM):   end;
2296952   +end;
MPRINT(EM_DIAGRAM):   end;
2296953   +
2296954   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2296955   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2296956   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2296957   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2296958   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2296959   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2296960   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2296961   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2296962   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2296963   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2296964   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2296965   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2296966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2296967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296968   +end;
MPRINT(EM_DIAGRAM):   end;
2296969   +else do;
MPRINT(EM_DIAGRAM):   else do;
2296970   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2296971   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2296972   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2296973   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2296974   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2296975   +   end;
MPRINT(EM_DIAGRAM):   end;
2296976   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2296977   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2296978   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2296979   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2296980   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2296981   +   end;
MPRINT(EM_DIAGRAM):   end;
2296982   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2296983   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2296984   +   end;
MPRINT(EM_DIAGRAM):   end;
2296985   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2296986   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2296987   +   end;
MPRINT(EM_DIAGRAM):   end;
2296988   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2296989   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2296990   +   end;
MPRINT(EM_DIAGRAM):   end;
2296991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2296992   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2296993   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2296994   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2296995   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2296996   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2296997   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2296998   +   end;
MPRINT(EM_DIAGRAM):   end;
2296999   +end;
MPRINT(EM_DIAGRAM):   end;
2297000   +
2297001   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2297002   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2297003   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2297004   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2297005   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2297006   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2297007   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2297008   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2297009   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2297010   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2297011   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2297012   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2297013   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2297014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297016   +end;
MPRINT(EM_DIAGRAM):   end;
2297017   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297018   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2297019   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2297020   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297021   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2297022   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2297023   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2297024   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2297025   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2297026   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2297027   +         end;
MPRINT(EM_DIAGRAM):   end;
2297028   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2297029   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2297030   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2297031   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2297032   +            end;
MPRINT(EM_DIAGRAM):   end;
2297033   +         end;
MPRINT(EM_DIAGRAM):   end;
2297034   +      end;
MPRINT(EM_DIAGRAM):   end;
2297035   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2297036   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2297037   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2297038   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2297039   +         end;
MPRINT(EM_DIAGRAM):   end;
2297040   +      end;
MPRINT(EM_DIAGRAM):   end;
2297041   +   end;
MPRINT(EM_DIAGRAM):   end;
2297042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297043   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2297044   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2297045   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2297046   +      end;
MPRINT(EM_DIAGRAM):   end;
2297047   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2297048   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2297049   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2297050   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2297051   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2297052   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2297053   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2297054   +         end;
MPRINT(EM_DIAGRAM):   end;
2297055   +      end;
MPRINT(EM_DIAGRAM):   end;
2297056   +   end;
MPRINT(EM_DIAGRAM):   end;
2297057   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2297058   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2297059   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2297060   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2297061   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2297062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297064   +   end;
MPRINT(EM_DIAGRAM):   end;
2297065   +end;
MPRINT(EM_DIAGRAM):   end;
2297066   +
2297067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297068   +*** Checking missing input Interval
2297069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2297070   +
2297071   +IF NMISS(
2297072   +   AcceptedCmpTotal ,
2297073   +   Age ,
2297074   +   Frq ,
2297075   +   Income ,
2297076   +   Kidhome ,
2297077   +   Mnt ,
2297078   +   MntFishProducts ,
2297079   +   MntFruits ,
2297080   +   MntGoldProds ,
2297081   +   MntMeatProducts ,
2297082   +   MntSweetProducts ,
2297083   +   MntWines ,
2297084   +   MonthsAsCustomer ,
2297085   +   NumCatalogPurchases ,
2297086   +   NumDealsPurchases ,
2297087   +   NumDistPurchases ,
2297088   +   NumStorePurchases ,
2297089   +   NumWebPurchases ,
2297090   +   NumWebVisitsMonth ,
2297091   +   RFMstat ,
2297092   +   RMntFrq ,
2297093   +   Recency ,
2297094   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2297095   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2297096   +
2297097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297098   +END;
MPRINT(EM_DIAGRAM):   END;
2297099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297100   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2297101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297102   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2297103   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2297104   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2297105   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2297106   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2297107   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2297108   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2297109   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2297110   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2297111   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2297112   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2297113   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2297114   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2297115   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2297116   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2297117   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2297118   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2297119   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2297120   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2297121   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2297122   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2297123   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2297124   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2297125   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2297126   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2297127   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2297128   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2297129   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2297130   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2297131   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2297132   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2297133   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2297134   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2297135   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2297136   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2297137   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2297138   +END;
MPRINT(EM_DIAGRAM):   END;
2297139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2297140   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2297141   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2297142   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2297143   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2297144   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2297145   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2297146   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2297147   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2297148   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2297149   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2297150   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2297151   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2297152   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2297153   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2297154   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2297155   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2297156   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2297157   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2297158   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2297159   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2297160   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2297161   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2297162   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2297163   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2297164   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2297165   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2297166   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2297167   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2297168   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2297169   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2297170   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2297171   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2297172   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2297173   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2297174   +   ELSE S_NumCatalogPurchases
2297175   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2297176   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2297177   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2297178   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2297179   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2297180   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2297181   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2297182   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2297183   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2297184   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2297185   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2297186   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2297187   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2297188   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2297189   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2297190   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2297191   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2297192   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2297193   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2297194   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2297195   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2297196   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2297197   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2297198   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2297199   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2297200   +END;
MPRINT(EM_DIAGRAM):   END;
2297201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297202   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2297203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297205   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2297206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297208   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2297209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297210   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2297211   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2297212   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2297213   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2297214   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2297215   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2297216   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2297217   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2297218   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2297219   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2297220   +          +    -0.20127545393212 * S_NumDealsPurchases
2297221   +          +     0.04506333103933 * S_NumDistPurchases
2297222   +          +     0.35249458492371 * S_NumStorePurchases
2297223   +          +     0.25004284340707 * S_NumWebPurchases
2297224   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2297225   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2297226   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2297227   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2297228   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2297229   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2297230   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2297231   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2297232   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2297233   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2297234   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2297235   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2297236   +          +    -0.19452359839974 * Marital_StatusDivorced
2297237   +          +     0.32327870805716 * Marital_StatusMarried
2297238   +          +    -0.20770545592268 * Marital_StatusSingle
2297239   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2297240   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2297241   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2297242   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2297243   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2297244   +END;
MPRINT(EM_DIAGRAM):   END;
2297245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2297246   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2297247   +END;
MPRINT(EM_DIAGRAM):   END;
2297248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297249   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2297250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2297252   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2297253   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2297254   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2297255   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2297256   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2297257   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2297258   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2297259   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2297260   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2297261   +          +    -0.02120959778153 * S_NumDealsPurchases
2297262   +          +     1.49013956394863 * S_NumDistPurchases
2297263   +          +    -0.96806240220463 * S_NumStorePurchases
2297264   +          +    -1.68330472453558 * S_NumWebPurchases
2297265   +          +     3.42976128164256 * S_NumWebVisitsMonth
2297266   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2297267   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2297268   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2297269   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2297270   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2297271   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2297272   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2297273   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2297274   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2297275   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2297276   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2297277   +          +      1.9815992681602 * Marital_StatusDivorced
2297278   +          +    -3.07893181570848 * Marital_StatusMarried
2297279   +          +     1.72965298244219 * Marital_StatusSingle
2297280   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2297281   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2297282   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2297283   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2297284   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2297285   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2297286   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2297287   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2297288   +END;
MPRINT(EM_DIAGRAM):   END;
2297289   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2297290   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2297291   +END;
MPRINT(EM_DIAGRAM):   END;
2297292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297293   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2297294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297295   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2297296   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2297297   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2297298   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2297299   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2297300   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2297301   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2297302   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2297303   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2297304   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2297305   +          +     -0.5334151509863 * S_NumDealsPurchases
2297306   +          +     0.40600458912114 * S_NumDistPurchases
2297307   +          +    -0.30674653528261 * S_NumStorePurchases
2297308   +          +     0.10785037433743 * S_NumWebPurchases
2297309   +          +     0.99701680073452 * S_NumWebVisitsMonth
2297310   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2297311   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2297312   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2297313   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2297314   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2297315   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2297316   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2297317   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2297318   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2297319   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2297320   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2297321   +          +    -0.72494401881341 * Marital_StatusDivorced
2297322   +          +    -0.82332231639631 * Marital_StatusMarried
2297323   +          +     -0.8863559011195 * Marital_StatusSingle
2297324   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2297325   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2297326   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2297327   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2297328   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2297329   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2297330   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2297331   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2297332   +END;
MPRINT(EM_DIAGRAM):   END;
2297333   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2297334   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2297335   +END;
MPRINT(EM_DIAGRAM):   END;
2297336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297337   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2297338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297339   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2297340   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2297341   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2297342   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2297343   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2297344   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2297345   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2297346   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2297347   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2297348   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2297349   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2297350   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2297351   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2297352   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2297353   +END;
MPRINT(EM_DIAGRAM):   END;
2297354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2297355   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2297356   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2297357   +END;
MPRINT(EM_DIAGRAM):   END;
2297358   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2297359   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2297360   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2297361   +END;
MPRINT(EM_DIAGRAM):   END;
2297362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297363   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2297364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2297365   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2297366   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2297367   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2297368   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2297369   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2297370   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2297371   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2297372   +END;
MPRINT(EM_DIAGRAM):   END;
2297373   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2297374   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2297375   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2297376   +drop
2297377   +H1x1_1
2297378   +H1x2_1
2297379   +H1x3_1
2297380   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2297381   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2297382    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2297383    quit;
2297384    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2297385    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2297386    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2297387    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
2297388    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2297389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297390    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2297391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297393    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME
CREATOR);
2297394    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297396    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297397    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2297398    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2297399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297400    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2297401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2297402    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2297403    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297405    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297406    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2297407    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297408    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297409    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2297410    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2297410  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1495 rows and 5 columns.
 
2297411    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297412    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2297413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1495 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1495 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297414    filename _pref
2297414  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2297415    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2297416    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2297417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2297418   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2297419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2297420   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2297421   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2297422   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2297423    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2297424    quit;
2297425    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2297426    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2297427    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2297428    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2297429    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2297430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297431    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2297432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297434    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2297435    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297437    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297438    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2297439    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2297440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297441    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2297442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2297443    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2297444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297445    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297446    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297447    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2297448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297449    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297450    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2297451    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2297451  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2297452    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297453    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2297454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1499 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297455    filename _pref
2297455  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2297456    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2297457    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2297458   +
2297459   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2297460   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2297460  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2297461   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2297462   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2297463   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2297464   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2297465   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2297466    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2297467    quit;
2297468    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2297469    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2297470    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2297471    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2297472    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2297473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297474    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2297475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297477    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2297478    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297480    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297481    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2297482    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2297483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297484    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2297485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297486    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2297487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297489    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297490    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2297491    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297492    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297493    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2297494    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2297494  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2297495    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297496    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2297497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1538 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297498    filename _pref
2297498  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2297499    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2297500    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2297501   +
2297502   +
2297503   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2297504   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2297505   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2297506   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2297507   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2297508   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297509   +
2297510   +
2297511   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2297512   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2297513   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2297514   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2297515   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2297516   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297517   +
2297518   +
2297519   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2297520   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2297521   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2297522   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2297523   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2297524   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297525   +
2297526   +
2297527   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2297528   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2297529   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2297530   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2297531   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2297532   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297533   +
2297534   +
2297535   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2297536   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2297537   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2297538   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2297539   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2297540   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297541   +
2297542   +
2297543   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2297544   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2297545   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2297546   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2297547   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2297548   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297549   +
2297550   +
2297551   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2297552   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2297553   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2297554   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2297555   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2297556   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297557   +
2297558   +
2297559   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2297560   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2297561   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2297562   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2297563   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2297564   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2297565   +if
2297566   +_FILTERNORM1 not in ( '.')
2297567   + and
2297568   +_FILTERNORM2 not in ( '.')
2297569   + and
2297570   +_FILTERNORM3 not in ( '.')
2297571   + and
2297572   +_FILTERNORM4 not in ( '.')
2297573   + and
2297574   +_FILTERNORM5 not in ( '.')
2297575   + and
2297576   +_FILTERNORM6 not in ( '.')
2297577   + and
2297578   +_FILTERNORM7 not in ( ' ')
2297579   + and
2297580   +_FILTERNORM8 not in ( ' ')
2297581   +and
2297582   +( Dt_Customer ne .)
2297583   +and ( Income ne . and (Income<=107000))
2297584   +and ( Kidhome ne .)
2297585   +and ( MntFishProducts ne .)
2297586   +and ( MntFruits ne .)
2297587   +and ( MntGoldProds ne .)
2297588   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2297589   +and ( MntSweetProducts ne .)
2297590   +and ( MntWines ne .)
2297591   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2297592   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2297593   +and ( NumStorePurchases ne .)
2297594   +and ( NumWebPurchases ne .)
2297595   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2297596   +and ( Recency ne .)
2297597   +and ( Teenhome ne .)
2297598   +and ( Year_Birth ne .)
2297599   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2297600   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2297601   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2297602   +end;
MPRINT(EM_DIAGRAM):   end;
2297603   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2297604   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2297605    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2297606    quit;
2297607    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2297608    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2297609    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2297610    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2297611    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2297612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297613    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2297614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297616    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2297617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297619    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297620    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2297621    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2297622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297623    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2297624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2297625    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2297626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2297629    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2297630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2297631    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297632    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2297633    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2297633  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2297634    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297635    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2297636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1604 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297637    %macro varDept(fcmpdata=,id=);
2297638    %global nobs&id scoreFlag&id;
2297639    %let scoreFlag&id = 0;
2297640    %if &id=1 or ^&fcmpStart %then %do;
2297641    proc sort data=&fcmpdata out=_temp&id nodupkey;
2297642    by NAME;
2297643    where id=&id and LHS in( %let j=1;
2297644    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2297645    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2297646    "&var" %let j = %eval(&j+1);
2297647    %end;
2297648    );
2297649    run;
2297650    %let dsid = %sysfunc(open(_temp&id));
2297651    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2297652    %let dsid = %sysfunc(close(&dsid));
2297653    %if &&nobs&id %then %do;
2297654    %let scoreFlag&id = 1;
2297655    %let fcmpStart = 1;
2297656    %end;
2297657    %else %let fcmpStart = 0;
2297658    %end;
2297659    %else %do;
2297660    proc sort data=&fcmpdata out=_tempid;
2297661    where id=&id;
2297662    by LHS;
2297663    run;
2297664    %let dsid = %sysfunc(open(_tempid));
2297665    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2297666    %let dsid = %sysfunc(close(&dsid));
2297667    %if ^&&nobs&id %then %do;
2297668    proc datasets lib=work nolist;
2297669    delete _tempid;
2297670    run;
2297671    quit;
2297672    %end;
2297673    %else %do;
2297674    data _tempAll;
2297675    set %let j=%eval(&id-1);
2297676    %do x=1 %to &j;
2297677    %if &&nobs&x %then %do;
2297678    _temp&x %end;
2297679    %end;
2297680    ;
2297681    run;
2297682    proc sql;
2297683    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2297683  ! work._tempid p2 where p.name=p2.lhs;
2297684    quit;
2297685    data _temp&id;
2297686    set _temp&id;
2297687    where LHS ne '' and NAME ne '' and Node ne '';
2297688    run;
2297689    proc datasets lib=work nolist;
2297690    delete _tempAll;
2297691    run;
2297692    %let dsid = %sysfunc(open(_temp&id));
2297693    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2297694    %let dsid = %sysfunc(close(&dsid));
2297695    %if ^&&nobs&id %then %do;
2297696    proc datasets lib=work nolist;
2297697    delete _temp&id;
2297698    run;
2297699    quit;
2297700    %end;
2297701    %else %do;
2297702    %let scoreFlag&id = 1;
2297703    data _temp&id;
2297704    set _temp&id;
2297705    where LHS ne NAME and node ne '';
2297706    run;
2297707    %let dsid = %sysfunc(open(_temp&id));
2297708    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2297709    %let dsid = %sysfunc(close(&dsid));
2297710    %if ^&&nobs&id %then %do;
2297711    proc datasets lib=work nolist;
2297712    delete _temp&id;
2297713    run;
2297714    quit;
2297715    %end;
2297716    %else %do;
2297717    proc sort data=_temp&id nodupkey;
2297718    by LHS NAME;
2297719    run;
2297720    %end;
2297721    %end;
2297722    %end;
2297723    %end;
2297724    %mend varDept;
2297725    %macro optCode(outdata=fcmpdata);
2297726    %global fcmpStart;
2297727    %let fcmpStart = 0;
2297728    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2297729    %let NumNodes=9;
2297730    %do k=1 %to &NumNodes;
2297731    %vardept(fcmpdata=&outdata, id=&k);
2297732    %end;
2297733    %mend optCode;
2297734    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2297735    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2297736    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2297737    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2297738    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297739    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2297740    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2297741    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2297742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297743    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2297744    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2297744  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2297745    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2297746    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2297747    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2297748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2297749    filename _pref
2297749  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2297750    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2297751    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2297752   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2297753   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2297754   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2297755   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2297756   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2297757   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2297758   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2297759   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2297760   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2297761   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2297762   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2297763   +LENGTH _WARN_ $4
2297764   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2297765   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2297766   +
2297767   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2297768   +
2297769   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2297770   +
2297771   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2297772   +
2297773   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2297774   +
2297775   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2297776   +
2297777   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2297778   +
2297779   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2297780   +
2297781   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2297782   +
2297783   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2297784   +
2297785   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2297786   +
2297787   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2297788   +
2297789   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2297790   +
2297791   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2297792   +
2297793   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2297794   +
2297795   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2297796   +
2297797   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2297798   +
2297799   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2297800   +
2297801   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2297802   +
2297803   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2297804   +
2297805   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2297806   +
2297807   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2297808   +
2297809   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2297810   +
2297811   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2297812   +
2297813   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2297814   +
2297815   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2297816   +
2297817   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2297818   +
2297819   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2297820   +
2297821   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2297822   +
2297823   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2297824   +
2297825   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2297826   +
2297827   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2297828   +
2297829   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2297830   +
2297831   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2297832   +
2297833   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2297834   +
2297835   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2297836   +
2297837   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2297838   +
2297839   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2297840   +
2297841   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2297842   +
2297843   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2297844   +
2297845   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2297846   +
2297847   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2297848   +
2297849   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2297850   +
2297851   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2297852   +
2297853   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2297854   +
2297855   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2297856   +
2297857   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2297858   +
2297859   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2297860   +
2297861   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2297862   +
2297863   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2297864   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2297865   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2297866   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2297867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297869   +end;
MPRINT(EM_DIAGRAM):   end;
2297870   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297871   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297872   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2297873   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297874   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297875   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2297876   +   end;
MPRINT(EM_DIAGRAM):   end;
2297877   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297878   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2297879   +   end;
MPRINT(EM_DIAGRAM):   end;
2297880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297881   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2297882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297884   +   end;
MPRINT(EM_DIAGRAM):   end;
2297885   +end;
MPRINT(EM_DIAGRAM):   end;
2297886   +
2297887   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2297888   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2297889   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2297890   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2297891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297893   +end;
MPRINT(EM_DIAGRAM):   end;
2297894   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297895   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297896   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2297897   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297898   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297899   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2297900   +   end;
MPRINT(EM_DIAGRAM):   end;
2297901   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297902   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2297903   +   end;
MPRINT(EM_DIAGRAM):   end;
2297904   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297905   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2297906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297908   +   end;
MPRINT(EM_DIAGRAM):   end;
2297909   +end;
MPRINT(EM_DIAGRAM):   end;
2297910   +
2297911   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2297912   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2297913   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2297914   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2297915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297917   +end;
MPRINT(EM_DIAGRAM):   end;
2297918   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297920   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2297921   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297922   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297923   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2297924   +   end;
MPRINT(EM_DIAGRAM):   end;
2297925   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297926   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2297927   +   end;
MPRINT(EM_DIAGRAM):   end;
2297928   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297929   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2297930   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297931   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297932   +   end;
MPRINT(EM_DIAGRAM):   end;
2297933   +end;
MPRINT(EM_DIAGRAM):   end;
2297934   +
2297935   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2297936   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2297937   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2297938   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2297939   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297941   +end;
MPRINT(EM_DIAGRAM):   end;
2297942   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297943   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297944   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2297945   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297946   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297947   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2297948   +   end;
MPRINT(EM_DIAGRAM):   end;
2297949   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297950   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2297951   +   end;
MPRINT(EM_DIAGRAM):   end;
2297952   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297953   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2297954   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297955   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297956   +   end;
MPRINT(EM_DIAGRAM):   end;
2297957   +end;
MPRINT(EM_DIAGRAM):   end;
2297958   +
2297959   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2297960   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2297961   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2297962   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2297963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297965   +end;
MPRINT(EM_DIAGRAM):   end;
2297966   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297968   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2297969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297971   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2297972   +   end;
MPRINT(EM_DIAGRAM):   end;
2297973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297974   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2297975   +   end;
MPRINT(EM_DIAGRAM):   end;
2297976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2297977   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2297978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2297979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297980   +   end;
MPRINT(EM_DIAGRAM):   end;
2297981   +end;
MPRINT(EM_DIAGRAM):   end;
2297982   +
2297983   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2297984   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2297985   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2297986   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2297987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2297988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2297989   +end;
MPRINT(EM_DIAGRAM):   end;
2297990   +else do;
MPRINT(EM_DIAGRAM):   else do;
2297991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2297992   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2297993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2297994   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2297995   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2297996   +   end;
MPRINT(EM_DIAGRAM):   end;
2297997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2297998   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2297999   +   end;
MPRINT(EM_DIAGRAM):   end;
2298000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2298001   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2298002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2298003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298004   +   end;
MPRINT(EM_DIAGRAM):   end;
2298005   +end;
MPRINT(EM_DIAGRAM):   end;
2298006   +
2298007   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2298008   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2298009   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2298010   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2298011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2298012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298013   +end;
MPRINT(EM_DIAGRAM):   end;
2298014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2298015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2298016   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2298017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2298018   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2298019   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2298020   +   end;
MPRINT(EM_DIAGRAM):   end;
2298021   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2298022   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2298023   +   end;
MPRINT(EM_DIAGRAM):   end;
2298024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2298025   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2298026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2298027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298028   +   end;
MPRINT(EM_DIAGRAM):   end;
2298029   +end;
MPRINT(EM_DIAGRAM):   end;
2298030   +
2298031   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2298032   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2298033   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2298034   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2298035   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2298036   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2298037   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2298038   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2298039   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2298040   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2298041   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2298042   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2298043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2298044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298045   +end;
MPRINT(EM_DIAGRAM):   end;
2298046   +else do;
MPRINT(EM_DIAGRAM):   else do;
2298047   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2298048   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2298049   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2298050   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2298051   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2298052   +   end;
MPRINT(EM_DIAGRAM):   end;
2298053   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2298054   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2298055   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2298056   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2298057   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2298058   +   end;
MPRINT(EM_DIAGRAM):   end;
2298059   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2298060   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2298061   +   end;
MPRINT(EM_DIAGRAM):   end;
2298062   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2298063   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2298064   +   end;
MPRINT(EM_DIAGRAM):   end;
2298065   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2298066   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2298067   +   end;
MPRINT(EM_DIAGRAM):   end;
2298068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2298069   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2298070   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2298071   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2298072   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2298073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2298074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298075   +   end;
MPRINT(EM_DIAGRAM):   end;
2298076   +end;
MPRINT(EM_DIAGRAM):   end;
2298077   +
2298078   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2298079   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2298080   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2298081   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2298082   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2298083   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2298084   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2298085   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2298086   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2298087   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2298088   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2298089   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2298090   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2298091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2298092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298093   +end;
MPRINT(EM_DIAGRAM):   end;
2298094   +else do;
MPRINT(EM_DIAGRAM):   else do;
2298095   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2298096   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2298097   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2298098   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2298099   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2298100   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2298101   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2298102   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2298103   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2298104   +         end;
MPRINT(EM_DIAGRAM):   end;
2298105   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2298106   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2298107   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2298108   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2298109   +            end;
MPRINT(EM_DIAGRAM):   end;
2298110   +         end;
MPRINT(EM_DIAGRAM):   end;
2298111   +      end;
MPRINT(EM_DIAGRAM):   end;
2298112   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2298113   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2298114   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2298115   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2298116   +         end;
MPRINT(EM_DIAGRAM):   end;
2298117   +      end;
MPRINT(EM_DIAGRAM):   end;
2298118   +   end;
MPRINT(EM_DIAGRAM):   end;
2298119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2298120   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2298121   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2298122   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2298123   +      end;
MPRINT(EM_DIAGRAM):   end;
2298124   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2298125   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2298126   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2298127   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2298128   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2298129   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2298130   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2298131   +         end;
MPRINT(EM_DIAGRAM):   end;
2298132   +      end;
MPRINT(EM_DIAGRAM):   end;
2298133   +   end;
MPRINT(EM_DIAGRAM):   end;
2298134   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2298135   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2298136   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2298137   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2298138   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2298139   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2298140   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298141   +   end;
MPRINT(EM_DIAGRAM):   end;
2298142   +end;
MPRINT(EM_DIAGRAM):   end;
2298143   +
2298144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298145   +*** Checking missing input Interval
2298146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2298147   +
2298148   +IF NMISS(
2298149   +   AcceptedCmpTotal ,
2298150   +   Age ,
2298151   +   Frq ,
2298152   +   Income ,
2298153   +   Kidhome ,
2298154   +   Mnt ,
2298155   +   MntFishProducts ,
2298156   +   MntFruits ,
2298157   +   MntGoldProds ,
2298158   +   MntMeatProducts ,
2298159   +   MntSweetProducts ,
2298160   +   MntWines ,
2298161   +   MonthsAsCustomer ,
2298162   +   NumCatalogPurchases ,
2298163   +   NumDealsPurchases ,
2298164   +   NumDistPurchases ,
2298165   +   NumStorePurchases ,
2298166   +   NumWebPurchases ,
2298167   +   NumWebVisitsMonth ,
2298168   +   RFMstat ,
2298169   +   RMntFrq ,
2298170   +   Recency ,
2298171   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2298172   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2298173   +
2298174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2298175   +END;
MPRINT(EM_DIAGRAM):   END;
2298176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298177   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2298178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2298180   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2298181   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2298182   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2298183   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2298184   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2298185   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2298186   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2298187   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2298188   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2298189   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2298190   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2298191   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2298192   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2298193   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2298194   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2298195   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2298196   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2298197   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2298198   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2298199   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2298200   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2298201   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2298202   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2298203   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2298204   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2298205   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2298206   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2298207   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2298208   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2298209   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2298210   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2298211   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2298212   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2298213   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2298214   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2298215   +END;
MPRINT(EM_DIAGRAM):   END;
2298216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2298217   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2298218   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2298219   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2298220   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2298221   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2298222   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2298223   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2298224   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2298225   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2298226   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2298227   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2298228   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2298229   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2298230   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2298231   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2298232   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2298233   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2298234   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2298235   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2298236   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2298237   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2298238   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2298239   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2298240   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2298241   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2298242   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2298243   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2298244   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2298245   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2298246   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2298247   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2298248   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2298249   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2298250   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2298251   +   ELSE S_NumCatalogPurchases
2298252   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2298253   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2298254   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2298255   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2298256   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2298257   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2298258   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2298259   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2298260   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2298261   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2298262   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2298263   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2298264   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2298265   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2298266   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2298267   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2298268   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2298269   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2298270   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2298271   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2298272   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2298273   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2298274   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2298275   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2298276   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2298277   +END;
MPRINT(EM_DIAGRAM):   END;
2298278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298279   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2298280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298282   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2298283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298285   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2298286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298287   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2298288   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2298289   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2298290   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2298291   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2298292   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2298293   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2298294   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2298295   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2298296   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2298297   +          +     0.08390531145773 * S_NumDealsPurchases
2298298   +          +    -0.29505970645775 * S_NumDistPurchases
2298299   +          +    -0.13820571170194 * S_NumStorePurchases
2298300   +          +     0.11468011313368 * S_NumWebPurchases
2298301   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2298302   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2298303   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2298304   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2298305   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2298306   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2298307   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2298308   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2298309   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2298310   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2298311   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2298312   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2298313   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2298314   +          +     0.18009076035363 * S_NumDealsPurchases
2298315   +          +     0.03853861006587 * S_NumDistPurchases
2298316   +          +    -0.05118063952874 * S_NumStorePurchases
2298317   +          +    -0.03282286120473 * S_NumWebPurchases
2298318   +          +     0.31160900419026 * S_NumWebVisitsMonth
2298319   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2298320   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2298321   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2298322   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2298323   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2298324   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2298325   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2298326   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2298327   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2298328   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2298329   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2298330   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2298331   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2298332   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2298333   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2298334   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2298335   +          +    -0.04750981393889 * Marital_StatusDivorced
2298336   +          +     0.28216925676677 * Marital_StatusMarried
2298337   +          +    -0.20757827413964 * Marital_StatusSingle
2298338   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2298339   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2298340   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2298341   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2298342   +          +     0.05981919620577 * Marital_StatusDivorced
2298343   +          +    -0.17161573846062 * Marital_StatusMarried
2298344   +          +     0.15869440681091 * Marital_StatusSingle
2298345   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2298346   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2298347   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2298348   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2298349   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2298350   +END;
MPRINT(EM_DIAGRAM):   END;
2298351   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2298352   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2298353   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2298354   +END;
MPRINT(EM_DIAGRAM):   END;
2298355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298356   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2298357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298358   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2298359   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2298360   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2298361   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2298362   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2298363   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2298364   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2298365   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2298366   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2298367   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2298368   +          +     0.00741910846933 * S_NumDealsPurchases
2298369   +          +       1.334289252268 * S_NumDistPurchases
2298370   +          +    -0.29851567180932 * S_NumStorePurchases
2298371   +          +    -0.52115313259666 * S_NumWebPurchases
2298372   +          +     0.93907168501909 * S_NumWebVisitsMonth
2298373   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2298374   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2298375   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2298376   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2298377   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2298378   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2298379   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2298380   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2298381   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2298382   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2298383   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2298384   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2298385   +          +     1.60427001186844 * S_NumDealsPurchases
2298386   +          +    -0.18447618033353 * S_NumDistPurchases
2298387   +          +    -1.29966073003539 * S_NumStorePurchases
2298388   +          +    -1.12373457341536 * S_NumWebPurchases
2298389   +          +     1.46099221440494 * S_NumWebVisitsMonth
2298390   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2298391   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2298392   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2298393   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2298394   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2298395   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2298396   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2298397   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2298398   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2298399   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2298400   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2298401   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2298402   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2298403   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2298404   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2298405   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2298406   +          +     0.59819559998538 * Marital_StatusDivorced
2298407   +          +     0.92957772553633 * Marital_StatusMarried
2298408   +          +    -1.11796266958894 * Marital_StatusSingle
2298409   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2298410   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2298411   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2298412   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2298413   +          +      1.0870909562212 * Marital_StatusDivorced
2298414   +          +     1.50333961797515 * Marital_StatusMarried
2298415   +          +    -1.41407780765932 * Marital_StatusSingle
2298416   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2298417   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2298418   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2298419   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2298420   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2298421   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2298422   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2298423   +END;
MPRINT(EM_DIAGRAM):   END;
2298424   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2298425   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2298426   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2298427   +END;
MPRINT(EM_DIAGRAM):   END;
2298428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298429   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2298430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2298432   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2298433   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2298434   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2298435   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2298436   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2298437   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2298438   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2298439   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2298440   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2298441   +          +     -1.1174504455343 * S_NumDealsPurchases
2298442   +          +    -0.18561253113498 * S_NumDistPurchases
2298443   +          +    -0.35231054612792 * S_NumStorePurchases
2298444   +          +      0.9249490354172 * S_NumWebPurchases
2298445   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2298446   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2298447   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2298448   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2298449   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2298450   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2298451   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2298452   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2298453   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2298454   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2298455   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2298456   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2298457   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2298458   +          +     1.05434863590054 * S_NumDealsPurchases
2298459   +          +    -0.73255174632068 * S_NumDistPurchases
2298460   +          +     0.53949953455044 * S_NumStorePurchases
2298461   +          +    -0.61709467816649 * S_NumWebPurchases
2298462   +          +     1.36235282484348 * S_NumWebVisitsMonth
2298463   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2298464   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2298465   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2298466   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2298467   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2298468   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2298469   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2298470   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2298471   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2298472   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2298473   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2298474   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2298475   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2298476   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2298477   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2298478   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2298479   +          +     0.22253248036322 * Marital_StatusDivorced
2298480   +          +    -1.72455332745001 * Marital_StatusMarried
2298481   +          +     0.57787272107232 * Marital_StatusSingle
2298482   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2298483   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2298484   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2298485   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2298486   +          +     0.14637124403046 * Marital_StatusDivorced
2298487   +          +     0.18905186437528 * Marital_StatusMarried
2298488   +          +     0.00511958458521 * Marital_StatusSingle
2298489   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2298490   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2298491   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2298492   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2298493   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2298494   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2298495   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2298496   +END;
MPRINT(EM_DIAGRAM):   END;
2298497   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2298498   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2298499   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2298500   +END;
MPRINT(EM_DIAGRAM):   END;
2298501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298502   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2298503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2298505   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2298506   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2298507   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2298508   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2298509   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2298510   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2298511   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2298512   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2298513   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2298514   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2298515   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2298516   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2298517   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2298518   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2298519   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2298520   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2298521   +END;
MPRINT(EM_DIAGRAM):   END;
2298522   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2298523   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2298524   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2298525   +END;
MPRINT(EM_DIAGRAM):   END;
2298526   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2298527   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2298528   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2298529   +END;
MPRINT(EM_DIAGRAM):   END;
2298530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298531   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2298532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2298533   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2298534   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2298535   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2298536   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2298537   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2298538   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2298539   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2298540   +END;
MPRINT(EM_DIAGRAM):   END;
2298541   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2298542   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2298543   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2298544   +drop
2298545   +H1x1_1
2298546   +H1x1_2
2298547   +H1x2_1
2298548   +H1x2_2
2298549   +H1x3_1
2298550   +H1x3_2
2298551   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2298552   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2298553    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2298554    quit;
2298555    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2298556    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2298557    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2298558    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2298559    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2298560    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298561    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2298562    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298563    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298564    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
2298565    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298567    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298568    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2298569    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2298570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298571    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2298572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2298573    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2298574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298575    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298576    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298577    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2298578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298579    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298580    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2298581    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2298581  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.
 
2298582    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298583    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2298584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298585    filename _pref
2298585  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2298586    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2298587    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2298588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2298589   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2298590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2298591   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2298592   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2298593   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2298594    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2298595    quit;
2298596    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2298597    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2298598    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2298599    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2298600    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2298601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298602    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2298603    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298604    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298605    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2298606    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298608    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298609    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2298610    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2298611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298612    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2298613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2298614    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2298615    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298617    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298618    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2298619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298620    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298621    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2298622    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2298622  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2298623    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298624    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2298625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298626    filename _pref
2298626  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2298627    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2298628    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2298629   +
2298630   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2298631   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2298631  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2298632   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2298633   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2298634   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2298635   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2298636   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2298637    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2298638    quit;
2298639    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2298640    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2298641    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2298642    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2298643    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2298644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298645    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2298646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298648    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2298649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298651    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298652    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2298653    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2298654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298655    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2298656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298657    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2298658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298661    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2298662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298663    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298664    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2298665    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2298665  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2298666    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298667    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2298668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298669    filename _pref
2298669  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2298670    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2298671    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2298672   +
2298673   +
2298674   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2298675   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2298676   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2298677   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2298678   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2298679   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298680   +
2298681   +
2298682   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2298683   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2298684   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2298685   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2298686   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2298687   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298688   +
2298689   +
2298690   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2298691   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2298692   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2298693   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2298694   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2298695   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298696   +
2298697   +
2298698   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2298699   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2298700   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2298701   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2298702   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2298703   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298704   +
2298705   +
2298706   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2298707   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2298708   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2298709   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2298710   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2298711   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298712   +
2298713   +
2298714   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2298715   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2298716   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2298717   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2298718   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2298719   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298720   +
2298721   +
2298722   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2298723   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2298724   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2298725   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2298726   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2298727   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298728   +
2298729   +
2298730   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2298731   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2298732   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2298733   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2298734   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2298735   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2298736   +if
2298737   +_FILTERNORM1 not in ( '.')
2298738   + and
2298739   +_FILTERNORM2 not in ( '.')
2298740   + and
2298741   +_FILTERNORM3 not in ( '.')
2298742   + and
2298743   +_FILTERNORM4 not in ( '.')
2298744   + and
2298745   +_FILTERNORM5 not in ( '.')
2298746   + and
2298747   +_FILTERNORM6 not in ( '.')
2298748   + and
2298749   +_FILTERNORM7 not in ( ' ')
2298750   + and
2298751   +_FILTERNORM8 not in ( ' ')
2298752   +and
2298753   +( Dt_Customer ne .)
2298754   +and ( Income ne . and (Income<=107000))
2298755   +and ( Kidhome ne .)
2298756   +and ( MntFishProducts ne .)
2298757   +and ( MntFruits ne .)
2298758   +and ( MntGoldProds ne .)
2298759   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2298760   +and ( MntSweetProducts ne .)
2298761   +and ( MntWines ne .)
2298762   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2298763   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2298764   +and ( NumStorePurchases ne .)
2298765   +and ( NumWebPurchases ne .)
2298766   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2298767   +and ( Recency ne .)
2298768   +and ( Teenhome ne .)
2298769   +and ( Year_Birth ne .)
2298770   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2298771   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2298772   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2298773   +end;
MPRINT(EM_DIAGRAM):   end;
2298774   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2298775   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2298776    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2298777    quit;
2298778    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2298779    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2298780    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2298781    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2298782    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2298783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298784    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2298785    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298787    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2298788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298790    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298791    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2298792    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2298793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298794    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2298795    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2298796    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2298797    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298799    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2298800    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2298801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2298802    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298803    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2298804    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2298804  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2298805    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2298806    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2298807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298808    %macro varDept(fcmpdata=,id=);
2298809    %global nobs&id scoreFlag&id;
2298810    %let scoreFlag&id = 0;
2298811    %if &id=1 or ^&fcmpStart %then %do;
2298812    proc sort data=&fcmpdata out=_temp&id nodupkey;
2298813    by NAME;
2298814    where id=&id and LHS in( %let j=1;
2298815    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2298816    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2298817    "&var" %let j = %eval(&j+1);
2298818    %end;
2298819    );
2298820    run;
2298821    %let dsid = %sysfunc(open(_temp&id));
2298822    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2298823    %let dsid = %sysfunc(close(&dsid));
2298824    %if &&nobs&id %then %do;
2298825    %let scoreFlag&id = 1;
2298826    %let fcmpStart = 1;
2298827    %end;
2298828    %else %let fcmpStart = 0;
2298829    %end;
2298830    %else %do;
2298831    proc sort data=&fcmpdata out=_tempid;
2298832    where id=&id;
2298833    by LHS;
2298834    run;
2298835    %let dsid = %sysfunc(open(_tempid));
2298836    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2298837    %let dsid = %sysfunc(close(&dsid));
2298838    %if ^&&nobs&id %then %do;
2298839    proc datasets lib=work nolist;
2298840    delete _tempid;
2298841    run;
2298842    quit;
2298843    %end;
2298844    %else %do;
2298845    data _tempAll;
2298846    set %let j=%eval(&id-1);
2298847    %do x=1 %to &j;
2298848    %if &&nobs&x %then %do;
2298849    _temp&x %end;
2298850    %end;
2298851    ;
2298852    run;
2298853    proc sql;
2298854    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2298854  ! work._tempid p2 where p.name=p2.lhs;
2298855    quit;
2298856    data _temp&id;
2298857    set _temp&id;
2298858    where LHS ne '' and NAME ne '' and Node ne '';
2298859    run;
2298860    proc datasets lib=work nolist;
2298861    delete _tempAll;
2298862    run;
2298863    %let dsid = %sysfunc(open(_temp&id));
2298864    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2298865    %let dsid = %sysfunc(close(&dsid));
2298866    %if ^&&nobs&id %then %do;
2298867    proc datasets lib=work nolist;
2298868    delete _temp&id;
2298869    run;
2298870    quit;
2298871    %end;
2298872    %else %do;
2298873    %let scoreFlag&id = 1;
2298874    data _temp&id;
2298875    set _temp&id;
2298876    where LHS ne NAME and node ne '';
2298877    run;
2298878    %let dsid = %sysfunc(open(_temp&id));
2298879    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2298880    %let dsid = %sysfunc(close(&dsid));
2298881    %if ^&&nobs&id %then %do;
2298882    proc datasets lib=work nolist;
2298883    delete _temp&id;
2298884    run;
2298885    quit;
2298886    %end;
2298887    %else %do;
2298888    proc sort data=_temp&id nodupkey;
2298889    by LHS NAME;
2298890    run;
2298891    %end;
2298892    %end;
2298893    %end;
2298894    %end;
2298895    %mend varDept;
2298896    %macro optCode(outdata=fcmpdata);
2298897    %global fcmpStart;
2298898    %let fcmpStart = 0;
2298899    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2298900    %let NumNodes=9;
2298901    %do k=1 %to &NumNodes;
2298902    %vardept(fcmpdata=&outdata, id=&k);
2298903    %end;
2298904    %mend optCode;
2298905    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
The SAS System
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2298906    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2298907    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2298908    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2298909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298910    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2298911    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2298912    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2298913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298914    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2298915    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2298915  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2298916    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2298917    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2298918    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2298919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2298920    filename _pref
2298920  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
2298921    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2298922    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
2298923   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2298924   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2298925   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2298926   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2298927   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2298928   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2298929   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2298930   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2298931   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2298932   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2298933   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2298934   +LENGTH _WARN_ $4
2298935   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2298936   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2298937   +
2298938   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2298939   +
2298940   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2298941   +
2298942   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2298943   +
2298944   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2298945   +
2298946   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2298947   +
2298948   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2298949   +
2298950   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2298951   +
2298952   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2298953   +
2298954   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2298955   +
2298956   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2298957   +
2298958   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2298959   +
2298960   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2298961   +
2298962   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2298963   +
2298964   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2298965   +
2298966   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2298967   +
2298968   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2298969   +
2298970   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2298971   +
2298972   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2298973   +
2298974   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2298975   +
2298976   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2298977   +
2298978   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2298979   +
2298980   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2298981   +
2298982   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2298983   +
2298984   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2298985   +
2298986   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2298987   +
2298988   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2298989   +
2298990   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2298991   +
2298992   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2298993   +
2298994   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2298995   +
2298996   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2298997   +
2298998   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2298999   +
2299000   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2299001   +
2299002   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2299003   +
2299004   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2299005   +
2299006   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2299007   +
2299008   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2299009   +
2299010   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2299011   +
2299012   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2299013   +
2299014   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2299015   +
2299016   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2299017   +
2299018   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2299019   +
2299020   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2299021   +
2299022   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2299023   +
2299024   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2299025   +
2299026   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2299027   +
2299028   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2299029   +
2299030   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2299031   +
2299032   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2299033   +
2299034   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2299035   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2299036   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2299037   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2299038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299040   +end;
MPRINT(EM_DIAGRAM):   end;
2299041   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299043   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2299044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299046   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2299047   +   end;
MPRINT(EM_DIAGRAM):   end;
2299048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299049   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2299050   +   end;
MPRINT(EM_DIAGRAM):   end;
2299051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299052   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2299053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299055   +   end;
MPRINT(EM_DIAGRAM):   end;
2299056   +end;
MPRINT(EM_DIAGRAM):   end;
2299057   +
2299058   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2299059   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2299060   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2299061   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2299062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299064   +end;
MPRINT(EM_DIAGRAM):   end;
2299065   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299067   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2299068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299069   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299070   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2299071   +   end;
MPRINT(EM_DIAGRAM):   end;
2299072   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299073   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2299074   +   end;
MPRINT(EM_DIAGRAM):   end;
2299075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299076   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2299077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299079   +   end;
MPRINT(EM_DIAGRAM):   end;
2299080   +end;
MPRINT(EM_DIAGRAM):   end;
2299081   +
2299082   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2299083   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2299084   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2299085   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2299086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299088   +end;
MPRINT(EM_DIAGRAM):   end;
2299089   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299091   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2299092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299093   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299094   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2299095   +   end;
MPRINT(EM_DIAGRAM):   end;
2299096   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299097   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2299098   +   end;
MPRINT(EM_DIAGRAM):   end;
2299099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299100   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2299101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299103   +   end;
MPRINT(EM_DIAGRAM):   end;
2299104   +end;
MPRINT(EM_DIAGRAM):   end;
2299105   +
2299106   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2299107   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2299108   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2299109   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2299110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299112   +end;
MPRINT(EM_DIAGRAM):   end;
2299113   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299115   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2299116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299117   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299118   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2299119   +   end;
MPRINT(EM_DIAGRAM):   end;
2299120   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299121   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2299122   +   end;
MPRINT(EM_DIAGRAM):   end;
2299123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299124   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2299125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299127   +   end;
MPRINT(EM_DIAGRAM):   end;
2299128   +end;
MPRINT(EM_DIAGRAM):   end;
2299129   +
2299130   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2299131   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2299132   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2299133   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2299134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299136   +end;
MPRINT(EM_DIAGRAM):   end;
2299137   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299138   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299139   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2299140   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299141   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299142   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2299143   +   end;
MPRINT(EM_DIAGRAM):   end;
2299144   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299145   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2299146   +   end;
MPRINT(EM_DIAGRAM):   end;
2299147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299148   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2299149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299151   +   end;
MPRINT(EM_DIAGRAM):   end;
2299152   +end;
MPRINT(EM_DIAGRAM):   end;
2299153   +
2299154   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2299155   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2299156   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2299157   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2299158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299160   +end;
MPRINT(EM_DIAGRAM):   end;
2299161   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299162   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299163   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2299164   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299165   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2299166   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2299167   +   end;
MPRINT(EM_DIAGRAM):   end;
2299168   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2299169   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2299170   +   end;
MPRINT(EM_DIAGRAM):   end;
2299171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299172   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2299173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299175   +   end;
MPRINT(EM_DIAGRAM):   end;
2299176   +end;
MPRINT(EM_DIAGRAM):   end;
2299177   +
2299178   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2299179   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2299180   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2299181   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2299182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299184   +end;
MPRINT(EM_DIAGRAM):   end;
2299185   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299186   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2299187   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2299188   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299189   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2299190   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2299191   +   end;
MPRINT(EM_DIAGRAM):   end;
2299192   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2299193   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2299194   +   end;
MPRINT(EM_DIAGRAM):   end;
2299195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299196   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2299197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299199   +   end;
MPRINT(EM_DIAGRAM):   end;
2299200   +end;
MPRINT(EM_DIAGRAM):   end;
2299201   +
2299202   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2299203   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2299204   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2299205   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2299206   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2299207   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2299208   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2299209   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2299210   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2299211   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2299212   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2299213   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2299214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299216   +end;
MPRINT(EM_DIAGRAM):   end;
2299217   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299218   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2299219   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2299220   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299221   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2299222   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2299223   +   end;
MPRINT(EM_DIAGRAM):   end;
2299224   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2299225   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2299226   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2299227   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2299228   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2299229   +   end;
MPRINT(EM_DIAGRAM):   end;
2299230   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2299231   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2299232   +   end;
MPRINT(EM_DIAGRAM):   end;
2299233   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2299234   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2299235   +   end;
MPRINT(EM_DIAGRAM):   end;
2299236   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2299237   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2299238   +   end;
MPRINT(EM_DIAGRAM):   end;
2299239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299240   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2299241   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2299242   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2299243   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2299244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299246   +   end;
MPRINT(EM_DIAGRAM):   end;
2299247   +end;
MPRINT(EM_DIAGRAM):   end;
2299248   +
2299249   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2299250   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2299251   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2299252   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2299253   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2299254   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2299255   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2299256   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2299257   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2299258   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2299259   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2299260   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2299261   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2299262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2299263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299264   +end;
MPRINT(EM_DIAGRAM):   end;
2299265   +else do;
MPRINT(EM_DIAGRAM):   else do;
2299266   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2299267   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2299268   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2299269   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2299270   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2299271   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2299272   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2299273   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2299274   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2299275   +         end;
MPRINT(EM_DIAGRAM):   end;
2299276   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2299277   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2299278   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2299279   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2299280   +            end;
MPRINT(EM_DIAGRAM):   end;
2299281   +         end;
MPRINT(EM_DIAGRAM):   end;
2299282   +      end;
MPRINT(EM_DIAGRAM):   end;
2299283   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2299284   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2299285   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2299286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2299287   +         end;
MPRINT(EM_DIAGRAM):   end;
2299288   +      end;
MPRINT(EM_DIAGRAM):   end;
2299289   +   end;
MPRINT(EM_DIAGRAM):   end;
2299290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2299291   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2299292   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2299293   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2299294   +      end;
MPRINT(EM_DIAGRAM):   end;
2299295   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2299296   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2299297   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2299298   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2299299   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2299300   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2299301   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2299302   +         end;
MPRINT(EM_DIAGRAM):   end;
2299303   +      end;
MPRINT(EM_DIAGRAM):   end;
2299304   +   end;
MPRINT(EM_DIAGRAM):   end;
2299305   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2299306   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2299307   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2299308   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2299309   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2299310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2299311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299312   +   end;
MPRINT(EM_DIAGRAM):   end;
2299313   +end;
MPRINT(EM_DIAGRAM):   end;
2299314   +
2299315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299316   +*** Checking missing input Interval
2299317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2299318   +
2299319   +IF NMISS(
2299320   +   AcceptedCmpTotal ,
2299321   +   Age ,
2299322   +   Frq ,
2299323   +   Income ,
2299324   +   Kidhome ,
2299325   +   Mnt ,
2299326   +   MntFishProducts ,
2299327   +   MntFruits ,
2299328   +   MntGoldProds ,
2299329   +   MntMeatProducts ,
2299330   +   MntSweetProducts ,
2299331   +   MntWines ,
2299332   +   MonthsAsCustomer ,
2299333   +   NumCatalogPurchases ,
2299334   +   NumDealsPurchases ,
2299335   +   NumDistPurchases ,
2299336   +   NumStorePurchases ,
2299337   +   NumWebPurchases ,
2299338   +   NumWebVisitsMonth ,
2299339   +   RFMstat ,
2299340   +   RMntFrq ,
2299341   +   Recency ,
2299342   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2299343   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2299344   +
2299345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2299346   +END;
MPRINT(EM_DIAGRAM):   END;
2299347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299348   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2299349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2299351   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2299352   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2299353   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2299354   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2299355   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2299356   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2299357   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2299358   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2299359   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2299360   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2299361   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2299362   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2299363   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2299364   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2299365   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2299366   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2299367   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2299368   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2299369   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2299370   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2299371   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2299372   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2299373   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2299374   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2299375   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2299376   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2299377   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2299378   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2299379   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2299380   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2299381   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2299382   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2299383   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2299384   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2299385   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2299386   +END;
MPRINT(EM_DIAGRAM):   END;
2299387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2299388   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2299389   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2299390   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2299391   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2299392   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2299393   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2299394   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2299395   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2299396   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2299397   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2299398   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2299399   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2299400   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2299401   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2299402   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2299403   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2299404   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2299405   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2299406   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2299407   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2299408   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2299409   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2299410   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2299411   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2299412   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2299413   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2299414   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2299415   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2299416   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2299417   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2299418   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2299419   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2299420   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2299421   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2299422   +   ELSE S_NumCatalogPurchases
2299423   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2299424   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2299425   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2299426   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2299427   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2299428   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2299429   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2299430   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2299431   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2299432   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2299433   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2299434   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2299435   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2299436   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2299437   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2299438   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2299439   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2299440   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2299441   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2299442   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2299443   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2299444   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2299445   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2299446   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2299447   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2299448   +END;
MPRINT(EM_DIAGRAM):   END;
2299449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299450   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2299451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299453   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2299454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299456   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2299457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299458   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2299459   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2299460   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2299461   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2299462   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2299463   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2299464   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2299465   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2299466   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2299467   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2299468   +          +     0.30381426454211 * S_NumDealsPurchases
2299469   +          +     0.39966076372974 * S_NumDistPurchases
2299470   +          +    -0.58875986801139 * S_NumStorePurchases
2299471   +          +    -0.78850031558536 * S_NumWebPurchases
2299472   +          +     0.35182997415921 * S_NumWebVisitsMonth
2299473   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2299474   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2299475   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2299476   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2299477   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2299478   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2299479   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2299480   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2299481   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2299482   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2299483   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2299484   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2299485   +          +     0.33734772994048 * S_NumDealsPurchases
2299486   +          +     0.06152222921422 * S_NumDistPurchases
2299487   +          +    -0.32068333792942 * S_NumStorePurchases
2299488   +          +    -0.26971366415104 * S_NumWebPurchases
2299489   +          +     0.57693239481071 * S_NumWebVisitsMonth
2299490   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2299491   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2299492   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2299493   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2299494   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2299495   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2299496   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2299497   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2299498   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2299499   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2299500   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2299501   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2299502   +          +     0.22142792900578 * S_NumDealsPurchases
2299503   +          +     -0.0291983445755 * S_NumDistPurchases
2299504   +          +     -0.1997372957954 * S_NumStorePurchases
2299505   +          +    -0.01286201468794 * S_NumWebPurchases
2299506   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2299507   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2299508   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2299509   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2299510   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2299511   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2299512   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2299513   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2299514   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
2299515   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2299516   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2299517   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2299518   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2299519   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
2299520   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2299521   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2299522   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2299523   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2299524   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
2299525   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2299526   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2299527   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2299528   +          +    -0.22358326722482 * Marital_StatusDivorced
2299529   +          +     0.09394210085787 * Marital_StatusMarried
2299530   +          +    -0.10381546554982 * Marital_StatusSingle
2299531   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
2299532   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2299533   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2299534   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2299535   +          +     0.16606212232833 * Marital_StatusDivorced
2299536   +          +    -0.33252488631677 * Marital_StatusMarried
2299537   +          +     0.26735237322144 * Marital_StatusSingle
2299538   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
2299539   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2299540   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2299541   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2299542   +          +    -0.30275479651076 * Marital_StatusDivorced
2299543   +          +     0.50273719874035 * Marital_StatusMarried
2299544   +          +    -0.39588303956293 * Marital_StatusSingle
2299545   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
2299546   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2299547   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2299548   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2299549   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2299550   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2299551   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2299552   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2299553   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2299554   +END;
MPRINT(EM_DIAGRAM):   END;
2299555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2299556   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2299557   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2299558   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2299559   +END;
MPRINT(EM_DIAGRAM):   END;
2299560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299561   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2299562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299563   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2299564   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2299565   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2299566   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2299567   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2299568   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2299569   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2299570   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2299571   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2299572   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2299573   +          +    -2.59470529821377 * S_NumDealsPurchases
2299574   +          +      0.7668756449818 * S_NumDistPurchases
2299575   +          +     0.61064641547208 * S_NumStorePurchases
2299576   +          +    -0.87106335660846 * S_NumWebPurchases
2299577   +          +      0.1188879348197 * S_NumWebVisitsMonth
2299578   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2299579   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2299580   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2299581   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2299582   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2299583   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2299584   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2299585   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2299586   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2299587   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2299588   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2299589   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2299590   +          +    -0.41834528691349 * S_NumDealsPurchases
2299591   +          +    -0.07802605490227 * S_NumDistPurchases
2299592   +          +    -0.62261476153139 * S_NumStorePurchases
2299593   +          +    -0.84011953180231 * S_NumWebPurchases
2299594   +          +     0.95169092183885 * S_NumWebVisitsMonth
2299595   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2299596   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2299597   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2299598   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2299599   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2299600   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2299601   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2299602   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2299603   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2299604   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2299605   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2299606   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2299607   +          +     1.50811278700924 * S_NumDealsPurchases
2299608   +          +    -0.40025710583484 * S_NumDistPurchases
2299609   +          +     0.16539197954198 * S_NumStorePurchases
2299610   +          +    -1.50803186935431 * S_NumWebPurchases
2299611   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2299612   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2299613   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2299614   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2299615   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2299616   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2299617   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2299618   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2299619   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
2299620   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2299621   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2299622   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2299623   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2299624   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
2299625   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2299626   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2299627   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2299628   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2299629   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
2299630   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2299631   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2299632   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2299633   +          +    -0.48199299977856 * Marital_StatusDivorced
2299634   +          +    -1.61546983135535 * Marital_StatusMarried
2299635   +          +     1.25890289649165 * Marital_StatusSingle
2299636   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
2299637   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2299638   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2299639   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2299640   +          +    -0.69719138781358 * Marital_StatusDivorced
2299641   +          +     0.26964883367384 * Marital_StatusMarried
2299642   +          +      0.4656663467381 * Marital_StatusSingle
2299643   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
2299644   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2299645   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2299646   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2299647   +          +     1.40407968804704 * Marital_StatusDivorced
2299648   +          +    -1.35468203106214 * Marital_StatusMarried
2299649   +          +      1.0644996414042 * Marital_StatusSingle
2299650   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
2299651   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2299652   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2299653   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2299654   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2299655   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2299656   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2299657   +END;
MPRINT(EM_DIAGRAM):   END;
2299658   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2299659   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2299660   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2299661   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2299662   +END;
MPRINT(EM_DIAGRAM):   END;
2299663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299664   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2299665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2299667   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2299668   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
2299669   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2299670   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2299671   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2299672   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2299673   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2299674   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2299675   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2299676   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2299677   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2299678   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2299679   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2299680   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2299681   +END;
MPRINT(EM_DIAGRAM):   END;
2299682   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2299683   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2299684   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2299685   +END;
MPRINT(EM_DIAGRAM):   END;
2299686   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2299687   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2299688   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2299689   +END;
MPRINT(EM_DIAGRAM):   END;
2299690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299691   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2299692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2299693   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2299694   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2299695   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2299696   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2299697   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2299698   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2299699   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2299700   +END;
MPRINT(EM_DIAGRAM):   END;
2299701   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2299702   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2299703   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2299704   +drop
2299705   +H1x1_1
2299706   +H1x1_2
2299707   +H1x1_3
2299708   +H1x2_1
2299709   +H1x2_2
2299710   +H1x2_3
2299711   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2299712   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2299713    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2299714    quit;
2299715    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2299716    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2299717    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2299718    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
2299719    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2299720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299721    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2299722    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299723    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299724    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME
CREATOR);
2299725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299727    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299728    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2299729    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2299730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299731    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
2299732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2299733    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2299734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299736    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299737    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2299738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299739    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299740    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2299741    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2299741  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.
 
2299742    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299743    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2299744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299745    filename _pref
2299745  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2299746    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2299747    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2299748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2299749   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2299750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2299751   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2299752   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2299753   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2299754    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2299755    quit;
2299756    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2299757    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2299758    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2299759    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2299760    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2299761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299762    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2299763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299765    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2299766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299768    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299769    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2299770    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2299771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299772    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2299773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2299774    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2299775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299777    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299778    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2299779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299780    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299781    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2299782    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2299782  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2299783    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299784    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2299785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299786    filename _pref
2299786  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2299787    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2299788    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2299789   +
2299790   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2299791   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2299791  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2299792   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2299793   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2299794   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2299795   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2299796   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2299797    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2299798    quit;
2299799    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2299800    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2299801    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2299802    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2299803    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2299804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299805    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2299806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299808    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2299809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299811    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299812    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2299813    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2299814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299815    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2299816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299817    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2299818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299820    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299821    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2299822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299823    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299824    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2299825    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2299825  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2299826    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299827    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2299828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299829    filename _pref
2299829  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2299830    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2299831    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2299832   +
2299833   +
2299834   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2299835   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2299836   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2299837   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2299838   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2299839   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299840   +
2299841   +
2299842   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2299843   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2299844   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2299845   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2299846   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2299847   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299848   +
2299849   +
2299850   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2299851   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2299852   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2299853   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2299854   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2299855   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299856   +
2299857   +
2299858   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2299859   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2299860   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2299861   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2299862   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2299863   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299864   +
2299865   +
2299866   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2299867   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2299868   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2299869   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2299870   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2299871   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299872   +
2299873   +
2299874   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2299875   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2299876   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2299877   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2299878   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2299879   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299880   +
2299881   +
2299882   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2299883   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2299884   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2299885   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2299886   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2299887   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299888   +
2299889   +
2299890   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2299891   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2299892   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2299893   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2299894   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2299895   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2299896   +if
2299897   +_FILTERNORM1 not in ( '.')
2299898   + and
2299899   +_FILTERNORM2 not in ( '.')
2299900   + and
2299901   +_FILTERNORM3 not in ( '.')
2299902   + and
2299903   +_FILTERNORM4 not in ( '.')
2299904   + and
2299905   +_FILTERNORM5 not in ( '.')
2299906   + and
2299907   +_FILTERNORM6 not in ( '.')
2299908   + and
2299909   +_FILTERNORM7 not in ( ' ')
2299910   + and
2299911   +_FILTERNORM8 not in ( ' ')
2299912   +and
2299913   +( Dt_Customer ne .)
2299914   +and ( Income ne . and (Income<=107000))
2299915   +and ( Kidhome ne .)
2299916   +and ( MntFishProducts ne .)
2299917   +and ( MntFruits ne .)
2299918   +and ( MntGoldProds ne .)
2299919   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2299920   +and ( MntSweetProducts ne .)
2299921   +and ( MntWines ne .)
2299922   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2299923   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2299924   +and ( NumStorePurchases ne .)
2299925   +and ( NumWebPurchases ne .)
2299926   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2299927   +and ( Recency ne .)
2299928   +and ( Teenhome ne .)
2299929   +and ( Year_Birth ne .)
2299930   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2299931   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2299932   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2299933   +end;
MPRINT(EM_DIAGRAM):   end;
2299934   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2299935   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2299936    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2299937    quit;
2299938    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2299939    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2299940    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2299941    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2299942    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2299943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299944    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2299945    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299947    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2299948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299950    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299951    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2299952    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2299953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299954    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2299955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2299956    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2299957    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299959    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2299960    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2299961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2299962    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2299963    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2299964    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2299964  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2299965    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299966    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2299967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2299968    %macro varDept(fcmpdata=,id=);
2299969    %global nobs&id scoreFlag&id;
2299970    %let scoreFlag&id = 0;
2299971    %if &id=1 or ^&fcmpStart %then %do;
2299972    proc sort data=&fcmpdata out=_temp&id nodupkey;
2299973    by NAME;
2299974    where id=&id and LHS in( %let j=1;
2299975    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2299976    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2299977    "&var" %let j = %eval(&j+1);
2299978    %end;
2299979    );
2299980    run;
2299981    %let dsid = %sysfunc(open(_temp&id));
2299982    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2299983    %let dsid = %sysfunc(close(&dsid));
2299984    %if &&nobs&id %then %do;
2299985    %let scoreFlag&id = 1;
2299986    %let fcmpStart = 1;
2299987    %end;
2299988    %else %let fcmpStart = 0;
2299989    %end;
2299990    %else %do;
2299991    proc sort data=&fcmpdata out=_tempid;
2299992    where id=&id;
2299993    by LHS;
2299994    run;
2299995    %let dsid = %sysfunc(open(_tempid));
2299996    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2299997    %let dsid = %sysfunc(close(&dsid));
2299998    %if ^&&nobs&id %then %do;
2299999    proc datasets lib=work nolist;
2300000    delete _tempid;
2300001    run;
2300002    quit;
2300003    %end;
2300004    %else %do;
2300005    data _tempAll;
2300006    set %let j=%eval(&id-1);
2300007    %do x=1 %to &j;
2300008    %if &&nobs&x %then %do;
2300009    _temp&x %end;
2300010    %end;
2300011    ;
2300012    run;
2300013    proc sql;
2300014    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2300014  ! work._tempid p2 where p.name=p2.lhs;
2300015    quit;
2300016    data _temp&id;
2300017    set _temp&id;
2300018    where LHS ne '' and NAME ne '' and Node ne '';
2300019    run;
2300020    proc datasets lib=work nolist;
2300021    delete _tempAll;
2300022    run;
2300023    %let dsid = %sysfunc(open(_temp&id));
2300024    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2300025    %let dsid = %sysfunc(close(&dsid));
2300026    %if ^&&nobs&id %then %do;
2300027    proc datasets lib=work nolist;
2300028    delete _temp&id;
2300029    run;
2300030    quit;
2300031    %end;
2300032    %else %do;
2300033    %let scoreFlag&id = 1;
2300034    data _temp&id;
2300035    set _temp&id;
2300036    where LHS ne NAME and node ne '';
2300037    run;
2300038    %let dsid = %sysfunc(open(_temp&id));
2300039    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2300040    %let dsid = %sysfunc(close(&dsid));
2300041    %if ^&&nobs&id %then %do;
2300042    proc datasets lib=work nolist;
2300043    delete _temp&id;
2300044    run;
2300045    quit;
2300046    %end;
2300047    %else %do;
2300048    proc sort data=_temp&id nodupkey;
2300049    by LHS NAME;
2300050    run;
2300051    %end;
2300052    %end;
2300053    %end;
2300054    %end;
2300055    %mend varDept;
2300056    %macro optCode(outdata=fcmpdata);
2300057    %global fcmpStart;
2300058    %let fcmpStart = 0;
2300059    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2300060    %let NumNodes=9;
2300061    %do k=1 %to &NumNodes;
2300062    %vardept(fcmpdata=&outdata, id=&k);
2300063    %end;
2300064    %mend optCode;
2300065    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2300066    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2300067    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2300068    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2300069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2300070    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2300071    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2300072    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2300073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2300074    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2300075    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2300075  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2300076    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300077    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2300078    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2300079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2300080    filename _pref
2300080  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2300081    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2300082    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2300083   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2300084   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2300085   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2300086   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2300087   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2300088   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2300089   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2300090   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2300091   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2300092   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2300093   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2300094   +LENGTH _WARN_ $4
2300095   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2300096   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2300097   +
2300098   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2300099   +
2300100   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2300101   +
2300102   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2300103   +
2300104   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2300105   +
2300106   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2300107   +
2300108   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2300109   +
2300110   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2300111   +
2300112   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2300113   +
2300114   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2300115   +
2300116   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2300117   +
2300118   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2300119   +
2300120   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2300121   +
2300122   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2300123   +
2300124   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2300125   +
2300126   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2300127   +
2300128   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2300129   +
2300130   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2300131   +
2300132   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2300133   +
2300134   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2300135   +
2300136   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2300137   +
2300138   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2300139   +
2300140   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2300141   +
2300142   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2300143   +
2300144   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2300145   +
2300146   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2300147   +
2300148   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2300149   +
2300150   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2300151   +
2300152   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2300153   +
2300154   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2300155   +
2300156   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2300157   +
2300158   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2300159   +
2300160   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2300161   +
2300162   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2300163   +
2300164   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2300165   +
2300166   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2300167   +
2300168   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2300169   +
2300170   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2300171   +
2300172   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2300173   +
2300174   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2300175   +
2300176   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2300177   +
2300178   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2300179   +
2300180   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2300181   +
2300182   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2300183   +
2300184   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2300185   +
2300186   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2300187   +
2300188   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2300189   +
2300190   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2300191   +
2300192   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2300193   +
2300194   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2300195   +
2300196   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2300197   +
2300198   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2300199   +
2300200   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2300201   +
2300202   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2300203   +
2300204   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2300205   +
2300206   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2300207   +
2300208   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2300209   +
2300210   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2300211   +
2300212   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2300213   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2300214   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2300215   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2300216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300218   +end;
MPRINT(EM_DIAGRAM):   end;
2300219   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300221   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2300222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300224   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2300225   +   end;
MPRINT(EM_DIAGRAM):   end;
2300226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300227   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2300228   +   end;
MPRINT(EM_DIAGRAM):   end;
2300229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300230   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2300231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300233   +   end;
MPRINT(EM_DIAGRAM):   end;
2300234   +end;
MPRINT(EM_DIAGRAM):   end;
2300235   +
2300236   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2300237   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2300238   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2300239   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2300240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300242   +end;
MPRINT(EM_DIAGRAM):   end;
2300243   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300245   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2300246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300248   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2300249   +   end;
MPRINT(EM_DIAGRAM):   end;
2300250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300251   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2300252   +   end;
MPRINT(EM_DIAGRAM):   end;
2300253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300254   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2300255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300257   +   end;
MPRINT(EM_DIAGRAM):   end;
2300258   +end;
MPRINT(EM_DIAGRAM):   end;
2300259   +
2300260   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2300261   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2300262   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2300263   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2300264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300266   +end;
MPRINT(EM_DIAGRAM):   end;
2300267   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300269   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2300270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300271   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300272   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2300273   +   end;
MPRINT(EM_DIAGRAM):   end;
2300274   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300275   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2300276   +   end;
MPRINT(EM_DIAGRAM):   end;
2300277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300278   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2300279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300281   +   end;
MPRINT(EM_DIAGRAM):   end;
2300282   +end;
MPRINT(EM_DIAGRAM):   end;
2300283   +
2300284   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2300285   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2300286   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2300287   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2300288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300290   +end;
MPRINT(EM_DIAGRAM):   end;
2300291   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300293   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2300294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300295   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300296   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2300297   +   end;
MPRINT(EM_DIAGRAM):   end;
2300298   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300299   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2300300   +   end;
MPRINT(EM_DIAGRAM):   end;
2300301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300302   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2300303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300305   +   end;
MPRINT(EM_DIAGRAM):   end;
2300306   +end;
MPRINT(EM_DIAGRAM):   end;
2300307   +
2300308   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2300309   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2300310   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2300311   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2300312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300314   +end;
MPRINT(EM_DIAGRAM):   end;
2300315   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300317   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2300318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300320   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2300321   +   end;
MPRINT(EM_DIAGRAM):   end;
2300322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300323   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2300324   +   end;
MPRINT(EM_DIAGRAM):   end;
2300325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300326   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2300327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300329   +   end;
MPRINT(EM_DIAGRAM):   end;
2300330   +end;
MPRINT(EM_DIAGRAM):   end;
2300331   +
2300332   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2300333   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2300334   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2300335   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2300336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300338   +end;
MPRINT(EM_DIAGRAM):   end;
2300339   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300341   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2300342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300343   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2300344   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2300345   +   end;
MPRINT(EM_DIAGRAM):   end;
2300346   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2300347   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2300348   +   end;
MPRINT(EM_DIAGRAM):   end;
2300349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300350   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2300351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300353   +   end;
MPRINT(EM_DIAGRAM):   end;
2300354   +end;
MPRINT(EM_DIAGRAM):   end;
2300355   +
2300356   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2300357   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2300358   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2300359   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2300360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300362   +end;
MPRINT(EM_DIAGRAM):   end;
2300363   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300364   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2300365   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2300366   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300367   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2300368   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2300369   +   end;
MPRINT(EM_DIAGRAM):   end;
2300370   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2300371   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2300372   +   end;
MPRINT(EM_DIAGRAM):   end;
2300373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300374   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2300375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300377   +   end;
MPRINT(EM_DIAGRAM):   end;
2300378   +end;
MPRINT(EM_DIAGRAM):   end;
2300379   +
2300380   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2300381   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2300382   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2300383   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2300384   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2300385   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2300386   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2300387   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2300388   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2300389   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2300390   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2300391   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2300392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300394   +end;
MPRINT(EM_DIAGRAM):   end;
2300395   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300396   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2300397   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2300398   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300399   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2300400   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2300401   +   end;
MPRINT(EM_DIAGRAM):   end;
2300402   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2300403   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2300404   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2300405   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2300406   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2300407   +   end;
MPRINT(EM_DIAGRAM):   end;
2300408   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2300409   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2300410   +   end;
MPRINT(EM_DIAGRAM):   end;
2300411   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2300412   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2300413   +   end;
MPRINT(EM_DIAGRAM):   end;
2300414   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2300415   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2300416   +   end;
MPRINT(EM_DIAGRAM):   end;
2300417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300418   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2300419   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2300420   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2300421   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2300422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300424   +   end;
MPRINT(EM_DIAGRAM):   end;
2300425   +end;
MPRINT(EM_DIAGRAM):   end;
2300426   +
2300427   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2300428   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2300429   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2300430   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2300431   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2300432   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2300433   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2300434   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2300435   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2300436   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2300437   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2300438   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2300439   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2300440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2300441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300442   +end;
MPRINT(EM_DIAGRAM):   end;
2300443   +else do;
MPRINT(EM_DIAGRAM):   else do;
2300444   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2300445   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2300446   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2300447   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2300448   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2300449   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2300450   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2300451   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2300452   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2300453   +         end;
MPRINT(EM_DIAGRAM):   end;
2300454   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2300455   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2300456   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2300457   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2300458   +            end;
MPRINT(EM_DIAGRAM):   end;
2300459   +         end;
MPRINT(EM_DIAGRAM):   end;
2300460   +      end;
MPRINT(EM_DIAGRAM):   end;
2300461   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2300462   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2300463   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2300464   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2300465   +         end;
MPRINT(EM_DIAGRAM):   end;
2300466   +      end;
MPRINT(EM_DIAGRAM):   end;
2300467   +   end;
MPRINT(EM_DIAGRAM):   end;
2300468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2300469   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2300470   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2300471   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2300472   +      end;
MPRINT(EM_DIAGRAM):   end;
2300473   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2300474   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2300475   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2300476   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2300477   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2300478   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2300479   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2300480   +         end;
MPRINT(EM_DIAGRAM):   end;
2300481   +      end;
MPRINT(EM_DIAGRAM):   end;
2300482   +   end;
MPRINT(EM_DIAGRAM):   end;
2300483   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2300484   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2300485   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2300486   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2300487   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2300488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2300489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300490   +   end;
MPRINT(EM_DIAGRAM):   end;
2300491   +end;
MPRINT(EM_DIAGRAM):   end;
2300492   +
2300493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300494   +*** Checking missing input Interval
2300495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2300496   +
2300497   +IF NMISS(
2300498   +   AcceptedCmpTotal ,
2300499   +   Age ,
2300500   +   Frq ,
2300501   +   Income ,
2300502   +   Kidhome ,
2300503   +   Mnt ,
2300504   +   MntFishProducts ,
2300505   +   MntFruits ,
2300506   +   MntGoldProds ,
2300507   +   MntMeatProducts ,
2300508   +   MntSweetProducts ,
2300509   +   MntWines ,
2300510   +   MonthsAsCustomer ,
2300511   +   NumCatalogPurchases ,
2300512   +   NumDealsPurchases ,
2300513   +   NumDistPurchases ,
2300514   +   NumStorePurchases ,
2300515   +   NumWebPurchases ,
2300516   +   NumWebVisitsMonth ,
2300517   +   RFMstat ,
2300518   +   RMntFrq ,
2300519   +   Recency ,
2300520   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2300521   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2300522   +
2300523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2300524   +END;
MPRINT(EM_DIAGRAM):   END;
2300525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300526   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2300527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300528   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2300529   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2300530   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2300531   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2300532   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2300533   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2300534   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2300535   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2300536   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2300537   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2300538   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2300539   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2300540   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2300541   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2300542   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2300543   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2300544   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2300545   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2300546   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2300547   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2300548   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2300549   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2300550   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2300551   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2300552   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2300553   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2300554   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2300555   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2300556   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2300557   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2300558   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2300559   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2300560   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2300561   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2300562   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2300563   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2300564   +END;
MPRINT(EM_DIAGRAM):   END;
2300565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2300566   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2300567   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2300568   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2300569   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2300570   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2300571   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2300572   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2300573   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2300574   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2300575   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2300576   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2300577   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2300578   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2300579   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2300580   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2300581   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2300582   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2300583   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2300584   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2300585   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2300586   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2300587   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2300588   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2300589   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2300590   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2300591   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2300592   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2300593   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2300594   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2300595   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2300596   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2300597   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2300598   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2300599   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2300600   +   ELSE S_NumCatalogPurchases
2300601   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2300602   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2300603   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2300604   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2300605   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2300606   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2300607   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2300608   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2300609   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2300610   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2300611   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2300612   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2300613   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2300614   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2300615   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2300616   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2300617   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2300618   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2300619   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2300620   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2300621   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2300622   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2300623   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2300624   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2300625   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2300626   +END;
MPRINT(EM_DIAGRAM):   END;
2300627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300628   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2300629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300631   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2300632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300634   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2300635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2300637   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2300638   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2300639   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2300640   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2300641   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2300642   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2300643   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2300644   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2300645   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2300646   +          +     3.21215425524619 * S_NumDealsPurchases
2300647   +          +     0.08695198777156 * S_NumDistPurchases
2300648   +          +    -2.58697971128295 * S_NumStorePurchases
2300649   +          +    -0.44431924796059 * S_NumWebPurchases
2300650   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2300651   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2300652   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2300653   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2300654   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2300655   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2300656   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2300657   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2300658   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2300659   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2300660   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2300661   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2300662   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2300663   +          +    -0.83844506398484 * S_NumDealsPurchases
2300664   +          +     0.60831936516804 * S_NumDistPurchases
2300665   +          +     1.79084087761626 * S_NumStorePurchases
2300666   +          +     1.17119196356453 * S_NumWebPurchases
2300667   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2300668   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2300669   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2300670   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2300671   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2300672   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2300673   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2300674   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2300675   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2300676   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2300677   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2300678   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2300679   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2300680   +          +    -0.31484031572628 * S_NumDealsPurchases
2300681   +          +    -0.18273941035679 * S_NumDistPurchases
2300682   +          +     0.99501789733882 * S_NumStorePurchases
2300683   +          +     1.32014078829379 * S_NumWebPurchases
2300684   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2300685   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2300686   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2300687   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2300688   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2300689   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2300690   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2300691   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2300692   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2300693   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2300694   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2300695   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2300696   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2300697   +          +     1.19658719134196 * S_NumDealsPurchases
2300698   +          +     0.87478204472986 * S_NumDistPurchases
2300699   +          +    -0.20635856288784 * S_NumStorePurchases
2300700   +          +    -0.89927356974242 * S_NumWebPurchases
2300701   +          +     2.92285244132576 * S_NumWebVisitsMonth
2300702   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2300703   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2300704   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2300705   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2300706   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2300707   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2300708   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2300709   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2300710   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2300711   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2300712   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2300713   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2300714   +          +       -2.32617124568 * S_NumDealsPurchases
2300715   +          +    -0.56589187730672 * S_NumDistPurchases
2300716   +          +     1.07062299863482 * S_NumStorePurchases
2300717   +          +     0.30077273739578 * S_NumWebPurchases
2300718   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2300719   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2300720   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2300721   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2300722   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2300723   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2300724   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2300725   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2300726   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2300727   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2300728   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2300729   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2300730   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2300731   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2300732   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2300733   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2300734   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2300735   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2300736   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2300737   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2300738   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2300739   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2300740   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2300741   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2300742   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2300743   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2300744   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2300745   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2300746   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2300747   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2300748   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2300749   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2300750   +          +    -0.27797737429678 * Marital_StatusDivorced
2300751   +          +    -0.08137635862327 * Marital_StatusMarried
2300752   +          +     0.06275411820495 * Marital_StatusSingle
2300753   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2300754   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2300755   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2300756   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2300757   +          +     0.05151426841441 * Marital_StatusDivorced
2300758   +          +     1.19165082030442 * Marital_StatusMarried
2300759   +          +    -1.08257080662611 * Marital_StatusSingle
2300760   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2300761   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2300762   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2300763   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2300764   +          +      0.0238206459022 * Marital_StatusDivorced
2300765   +          +     -0.4653244204261 * Marital_StatusMarried
2300766   +          +     0.13051613619882 * Marital_StatusSingle
2300767   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2300768   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2300769   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2300770   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2300771   +          +     -0.7449356409222 * Marital_StatusDivorced
2300772   +          +    -1.46604673521535 * Marital_StatusMarried
2300773   +          +     0.74484771688818 * Marital_StatusSingle
2300774   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2300775   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2300776   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2300777   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2300778   +          +    -3.68044980584423 * Marital_StatusDivorced
2300779   +          +     3.14587407902338 * Marital_StatusMarried
2300780   +          +    -2.66118132753024 * Marital_StatusSingle
2300781   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2300782   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2300783   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2300784   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2300785   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2300786   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2300787   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2300788   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2300789   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2300790   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2300791   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2300792   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2300793   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2300794   +END;
MPRINT(EM_DIAGRAM):   END;
2300795   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2300796   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2300797   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2300798   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2300799   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2300800   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2300801   +END;
MPRINT(EM_DIAGRAM):   END;
2300802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300803   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2300804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2300806   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2300807   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2300808   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2300809   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2300810   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2300811   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2300812   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2300813   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2300814   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2300815   +          +     0.89261880438741 * S_NumDealsPurchases
2300816   +          +    -1.61647413199892 * S_NumDistPurchases
2300817   +          +    -0.56304669045195 * S_NumStorePurchases
2300818   +          +      0.7766837080945 * S_NumWebPurchases
2300819   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2300820   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2300821   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2300822   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2300823   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2300824   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2300825   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2300826   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2300827   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2300828   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2300829   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2300830   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2300831   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2300832   +          +     1.02431289724643 * S_NumDealsPurchases
2300833   +          +    -0.90960173637405 * S_NumDistPurchases
2300834   +          +     1.24283490404772 * S_NumStorePurchases
2300835   +          +     1.23072413154592 * S_NumWebPurchases
2300836   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2300837   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2300838   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2300839   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2300840   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2300841   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2300842   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2300843   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2300844   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2300845   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2300846   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2300847   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2300848   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2300849   +          +    -0.26249596122198 * S_NumDealsPurchases
2300850   +          +    -0.63328519804758 * S_NumDistPurchases
2300851   +          +    -0.88467503575886 * S_NumStorePurchases
2300852   +          +    -0.83120537310738 * S_NumWebPurchases
2300853   +          +     1.40072282351719 * S_NumWebVisitsMonth
2300854   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2300855   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2300856   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2300857   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2300858   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2300859   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2300860   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2300861   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2300862   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2300863   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2300864   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2300865   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2300866   +          +     1.30167361451945 * S_NumDealsPurchases
2300867   +          +     1.45457613716235 * S_NumDistPurchases
2300868   +          +    -0.40226463685252 * S_NumStorePurchases
2300869   +          +     0.36369161683572 * S_NumWebPurchases
2300870   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2300871   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2300872   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2300873   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2300874   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2300875   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2300876   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2300877   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2300878   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2300879   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2300880   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2300881   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2300882   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2300883   +          +    -0.54572162665338 * S_NumDealsPurchases
2300884   +          +      0.9607390449318 * S_NumDistPurchases
2300885   +          +    -0.03259470545754 * S_NumStorePurchases
2300886   +          +     0.19202241423412 * S_NumWebPurchases
2300887   +          +     0.61085831658456 * S_NumWebVisitsMonth
2300888   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2300889   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2300890   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2300891   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2300892   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2300893   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2300894   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2300895   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2300896   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2300897   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2300898   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2300899   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2300900   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2300901   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2300902   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2300903   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2300904   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2300905   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2300906   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2300907   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2300908   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2300909   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2300910   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2300911   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2300912   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2300913   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2300914   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2300915   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2300916   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2300917   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2300918   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2300919   +          +    -2.32430245081383 * Marital_StatusDivorced
2300920   +          +    -0.09815511356796 * Marital_StatusMarried
2300921   +          +     0.13075504294551 * Marital_StatusSingle
2300922   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2300923   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2300924   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2300925   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2300926   +          +    -0.65574603869224 * Marital_StatusDivorced
2300927   +          +     1.54672472575294 * Marital_StatusMarried
2300928   +          +    -1.59817602340208 * Marital_StatusSingle
2300929   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2300930   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2300931   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2300932   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2300933   +          +    -0.50911604604781 * Marital_StatusDivorced
2300934   +          +     0.30403066135719 * Marital_StatusMarried
2300935   +          +      0.1026950879545 * Marital_StatusSingle
2300936   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2300937   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2300938   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2300939   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2300940   +          +     1.07371507133318 * Marital_StatusDivorced
2300941   +          +    -0.07097334129051 * Marital_StatusMarried
2300942   +          +    -0.48339718568621 * Marital_StatusSingle
2300943   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2300944   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2300945   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2300946   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2300947   +          +     1.04342893515504 * Marital_StatusDivorced
2300948   +          +     1.16171312085032 * Marital_StatusMarried
2300949   +          +    -0.30201646939913 * Marital_StatusSingle
2300950   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2300951   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2300952   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2300953   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2300954   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2300955   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2300956   +END;
MPRINT(EM_DIAGRAM):   END;
2300957   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2300958   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2300959   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2300960   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2300961   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2300962   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2300963   +END;
MPRINT(EM_DIAGRAM):   END;
2300964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300965   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2300966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2300967   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2300968   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2300969   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2300970   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2300971   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2300972   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2300973   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2300974   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2300975   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2300976   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2300977   +          +     1.32256781010645 * S_NumDealsPurchases
2300978   +          +    -1.43015438973619 * S_NumDistPurchases
2300979   +          +    -0.63489289584421 * S_NumStorePurchases
2300980   +          +     0.90508699686841 * S_NumWebPurchases
2300981   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2300982   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2300983   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2300984   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2300985   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2300986   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2300987   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2300988   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2300989   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2300990   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2300991   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2300992   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2300993   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2300994   +          +     0.85965187264096 * S_NumDealsPurchases
2300995   +          +    -1.15239933286756 * S_NumDistPurchases
2300996   +          +     1.20800889102387 * S_NumStorePurchases
2300997   +          +     1.08790389130242 * S_NumWebPurchases
2300998   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2300999   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2301000   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2301001   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2301002   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2301003   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2301004   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2301005   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2301006   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2301007   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2301008   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2301009   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2301010   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2301011   +          +     -0.5767607129654 * S_NumDealsPurchases
2301012   +          +     -0.2643921429796 * S_NumDistPurchases
2301013   +          +    -0.67417489911206 * S_NumStorePurchases
2301014   +          +    -0.51423877684891 * S_NumWebPurchases
2301015   +          +     1.40328299605176 * S_NumWebVisitsMonth
2301016   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2301017   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2301018   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2301019   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2301020   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2301021   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2301022   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2301023   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2301024   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2301025   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2301026   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2301027   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2301028   +          +      1.2821617657076 * S_NumDealsPurchases
2301029   +          +     1.26584115202735 * S_NumDistPurchases
2301030   +          +    -0.46597664211833 * S_NumStorePurchases
2301031   +          +     0.45652363472866 * S_NumWebPurchases
2301032   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2301033   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2301034   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2301035   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2301036   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2301037   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2301038   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2301039   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2301040   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2301041   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2301042   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2301043   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2301044   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2301045   +          +    -0.85162564171681 * S_NumDealsPurchases
2301046   +          +     0.64631099667221 * S_NumDistPurchases
2301047   +          +    -0.03081963858636 * S_NumStorePurchases
2301048   +          +    -0.24124717624664 * S_NumWebPurchases
2301049   +          +     0.56425980772372 * S_NumWebVisitsMonth
2301050   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2301051   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2301052   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2301053   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2301054   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2301055   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2301056   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2301057   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2301058   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2301059   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2301060   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2301061   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2301062   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2301063   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2301064   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2301065   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2301066   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2301067   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2301068   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2301069   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2301070   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2301071   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2301072   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2301073   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2301074   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2301075   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2301076   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2301077   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2301078   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2301079   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2301080   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2301081   +          +    -2.49973437075558 * Marital_StatusDivorced
2301082   +          +    -0.18076948182574 * Marital_StatusMarried
2301083   +          +     0.13498525495231 * Marital_StatusSingle
2301084   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2301085   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2301086   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2301087   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2301088   +          +       -0.59463732835 * Marital_StatusDivorced
2301089   +          +     1.37741332427598 * Marital_StatusMarried
2301090   +          +     -1.5833455713231 * Marital_StatusSingle
2301091   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2301092   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2301093   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2301094   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2301095   +          +    -0.44569556289443 * Marital_StatusDivorced
2301096   +          +     0.29918053103557 * Marital_StatusMarried
2301097   +          +    -0.10337314064224 * Marital_StatusSingle
2301098   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2301099   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2301100   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2301101   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2301102   +          +     1.13881957277462 * Marital_StatusDivorced
2301103   +          +    -0.35849807146313 * Marital_StatusMarried
2301104   +          +    -0.22168731316885 * Marital_StatusSingle
2301105   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2301106   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2301107   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2301108   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2301109   +          +     1.10774969923269 * Marital_StatusDivorced
2301110   +          +     1.08409594073043 * Marital_StatusMarried
2301111   +          +    -0.33145048007894 * Marital_StatusSingle
2301112   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2301113   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2301114   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2301115   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2301116   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2301117   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2301118   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2301119   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2301120   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2301121   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2301122   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2301123   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2301124   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2301125   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2301126   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2301127   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2301128   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2301129   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2301130   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2301131   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2301132   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2301133   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2301134   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2301135   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2301136   +END;
MPRINT(EM_DIAGRAM):   END;
2301137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2301138   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2301139   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2301140   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2301141   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2301142   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2301143   +END;
MPRINT(EM_DIAGRAM):   END;
2301144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301145   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2301146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301147   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2301148   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2301149   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2301150   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2301151   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2301152   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2301153   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2301154   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2301155   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2301156   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2301157   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2301158   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2301159   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2301160   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2301161   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2301162   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2301163   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2301164   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2301165   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2301166   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2301167   +END;
MPRINT(EM_DIAGRAM):   END;
2301168   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2301169   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2301170   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2301171   +END;
MPRINT(EM_DIAGRAM):   END;
2301172   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2301173   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2301174   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2301175   +END;
MPRINT(EM_DIAGRAM):   END;
2301176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301177   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2301178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301179   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2301180   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2301181   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2301182   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2301183   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2301184   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2301185   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2301186   +END;
MPRINT(EM_DIAGRAM):   END;
2301187   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2301188   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2301189   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2301190   +drop
2301191   +H1x1_1
2301192   +H1x1_2
2301193   +H1x1_3
2301194   +H1x1_4
2301195   +H1x1_5
2301196   +H1x2_1
2301197   +H1x2_2
2301198   +H1x2_3
2301199   +H1x2_4
2301200   +H1x2_5
2301201   +H1x3_1
2301202   +H1x3_2
2301203   +H1x3_3
2301204   +H1x3_4
2301205   +H1x3_5
2301206   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2301207   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2301208    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2301209    quit;
2301210    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2301211    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2301212    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2301213    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2301214    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2301215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301216    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2301217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301219    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
2301220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301222    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301223    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2301224    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2301225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301226    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2301227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2301228    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2301229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301231    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301232    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2301233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301234    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301235    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2301236    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2301236  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.
 
2301237    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301238    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2301239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301240    filename _pref
2301240  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2301241    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2301242    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2301243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2301244   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2301245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2301246   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2301247   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2301248   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2301249    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2301250    quit;
2301251    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2301252    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2301253    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2301254    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2301255    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2301256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301257    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2301258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301260    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2301261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301263    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301264    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2301265    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2301266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301267    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2301268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
2301269    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2301270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301273    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2301274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301275    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301276    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2301277    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2301277  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2301278    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301279    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2301280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301281    filename _pref
2301281  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2301282    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2301283    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2301284   +
2301285   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2301286   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2301286  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2301287   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2301288   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2301289   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2301290   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2301291   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2301292    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2301293    quit;
2301294    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2301295    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2301296    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2301297    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2301298    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2301299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301300    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2301301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301303    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2301304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301306    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301307    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2301308    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2301309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301310    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2301311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301312    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2301313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301316    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2301317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301318    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301319    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2301320    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2301320  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2301321    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301322    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2301323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301324    filename _pref
2301324  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2301325    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2301326    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2301327   +
2301328   +
2301329   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2301330   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2301331   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2301332   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2301333   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2301334   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301335   +
2301336   +
2301337   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2301338   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2301339   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2301340   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2301341   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2301342   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301343   +
2301344   +
2301345   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2301346   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2301347   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2301348   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2301349   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2301350   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301351   +
2301352   +
2301353   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2301354   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2301355   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2301356   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2301357   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2301358   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301359   +
2301360   +
2301361   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2301362   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2301363   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2301364   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2301365   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2301366   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301367   +
2301368   +
2301369   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2301370   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2301371   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2301372   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2301373   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2301374   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301375   +
2301376   +
2301377   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2301378   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2301379   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2301380   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2301381   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2301382   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301383   +
2301384   +
2301385   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2301386   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2301387   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2301388   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2301389   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2301390   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2301391   +if
2301392   +_FILTERNORM1 not in ( '.')
2301393   + and
2301394   +_FILTERNORM2 not in ( '.')
2301395   + and
2301396   +_FILTERNORM3 not in ( '.')
2301397   + and
2301398   +_FILTERNORM4 not in ( '.')
2301399   + and
2301400   +_FILTERNORM5 not in ( '.')
2301401   + and
2301402   +_FILTERNORM6 not in ( '.')
2301403   + and
2301404   +_FILTERNORM7 not in ( ' ')
2301405   + and
2301406   +_FILTERNORM8 not in ( ' ')
2301407   +and
2301408   +( Dt_Customer ne .)
2301409   +and ( Income ne . and (Income<=107000))
2301410   +and ( Kidhome ne .)
2301411   +and ( MntFishProducts ne .)
2301412   +and ( MntFruits ne .)
2301413   +and ( MntGoldProds ne .)
2301414   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2301415   +and ( MntSweetProducts ne .)
2301416   +and ( MntWines ne .)
2301417   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2301418   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2301419   +and ( NumStorePurchases ne .)
2301420   +and ( NumWebPurchases ne .)
2301421   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2301422   +and ( Recency ne .)
2301423   +and ( Teenhome ne .)
2301424   +and ( Year_Birth ne .)
2301425   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2301426   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2301427   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2301428   +end;
MPRINT(EM_DIAGRAM):   end;
2301429   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2301430   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2301431    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2301432    quit;
2301433    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2301434    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2301435    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2301436    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2301437    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2301438    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301439    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2301440    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301441    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301442    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2301443    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301444    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301445    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301446    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2301447    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2301448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301449    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2301450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2301451    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2301452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301454    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2301455    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2301456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2301457    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301458    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2301459    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2301459  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2301460    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301461    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2301462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301463    %macro varDept(fcmpdata=,id=);
2301464    %global nobs&id scoreFlag&id;
2301465    %let scoreFlag&id = 0;
2301466    %if &id=1 or ^&fcmpStart %then %do;
2301467    proc sort data=&fcmpdata out=_temp&id nodupkey;
2301468    by NAME;
2301469    where id=&id and LHS in( %let j=1;
2301470    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2301471    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2301472    "&var" %let j = %eval(&j+1);
2301473    %end;
2301474    );
2301475    run;
2301476    %let dsid = %sysfunc(open(_temp&id));
2301477    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2301478    %let dsid = %sysfunc(close(&dsid));
2301479    %if &&nobs&id %then %do;
2301480    %let scoreFlag&id = 1;
2301481    %let fcmpStart = 1;
2301482    %end;
2301483    %else %let fcmpStart = 0;
2301484    %end;
2301485    %else %do;
2301486    proc sort data=&fcmpdata out=_tempid;
2301487    where id=&id;
2301488    by LHS;
2301489    run;
2301490    %let dsid = %sysfunc(open(_tempid));
2301491    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2301492    %let dsid = %sysfunc(close(&dsid));
2301493    %if ^&&nobs&id %then %do;
2301494    proc datasets lib=work nolist;
2301495    delete _tempid;
2301496    run;
2301497    quit;
2301498    %end;
2301499    %else %do;
2301500    data _tempAll;
2301501    set %let j=%eval(&id-1);
2301502    %do x=1 %to &j;
2301503    %if &&nobs&x %then %do;
2301504    _temp&x %end;
2301505    %end;
2301506    ;
2301507    run;
2301508    proc sql;
2301509    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2301509  ! work._tempid p2 where p.name=p2.lhs;
2301510    quit;
2301511    data _temp&id;
2301512    set _temp&id;
2301513    where LHS ne '' and NAME ne '' and Node ne '';
2301514    run;
2301515    proc datasets lib=work nolist;
2301516    delete _tempAll;
2301517    run;
2301518    %let dsid = %sysfunc(open(_temp&id));
2301519    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2301520    %let dsid = %sysfunc(close(&dsid));
2301521    %if ^&&nobs&id %then %do;
2301522    proc datasets lib=work nolist;
2301523    delete _temp&id;
2301524    run;
2301525    quit;
2301526    %end;
2301527    %else %do;
2301528    %let scoreFlag&id = 1;
2301529    data _temp&id;
2301530    set _temp&id;
2301531    where LHS ne NAME and node ne '';
2301532    run;
2301533    %let dsid = %sysfunc(open(_temp&id));
2301534    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2301535    %let dsid = %sysfunc(close(&dsid));
2301536    %if ^&&nobs&id %then %do;
2301537    proc datasets lib=work nolist;
2301538    delete _temp&id;
2301539    run;
2301540    quit;
2301541    %end;
2301542    %else %do;
2301543    proc sort data=_temp&id nodupkey;
2301544    by LHS NAME;
2301545    run;
2301546    %end;
2301547    %end;
2301548    %end;
2301549    %end;
2301550    %mend varDept;
2301551    %macro optCode(outdata=fcmpdata);
2301552    %global fcmpStart;
2301553    %let fcmpStart = 0;
2301554    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2301555    %let NumNodes=9;
2301556    %do k=1 %to &NumNodes;
2301557    %vardept(fcmpdata=&outdata, id=&k);
2301558    %end;
2301559    %mend optCode;
2301560    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2301561    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2301562    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2301563    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2301564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301565    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2301566    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2301567    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2301568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301569    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2301570    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2301570  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2301571    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2301572    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2301573    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2301574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2301575    filename _pref
2301575  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2301576    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2301577    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2301578   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2301579   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2301580   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2301581   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2301582   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2301583   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2301584   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2301585   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2301586   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2301587   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2301588   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2301589   +LENGTH _WARN_ $4
2301590   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2301591   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2301592   +
2301593   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2301594   +
2301595   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2301596   +
2301597   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2301598   +
2301599   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2301600   +
2301601   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2301602   +
2301603   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2301604   +
2301605   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2301606   +
2301607   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2301608   +
2301609   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2301610   +
2301611   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2301612   +
2301613   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2301614   +
2301615   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2301616   +
2301617   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2301618   +
2301619   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2301620   +
2301621   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2301622   +
2301623   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2301624   +
2301625   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2301626   +
2301627   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2301628   +
2301629   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2301630   +
2301631   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2301632   +
2301633   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2301634   +
2301635   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2301636   +
2301637   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2301638   +
2301639   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2301640   +
2301641   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2301642   +
2301643   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2301644   +
2301645   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2301646   +
2301647   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2301648   +
2301649   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2301650   +
2301651   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2301652   +
2301653   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2301654   +
2301655   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2301656   +
2301657   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2301658   +
2301659   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2301660   +
2301661   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2301662   +
2301663   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2301664   +
2301665   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2301666   +
2301667   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2301668   +
2301669   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2301670   +
2301671   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2301672   +
2301673   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2301674   +
2301675   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2301676   +
2301677   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2301678   +
2301679   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2301680   +
2301681   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2301682   +
2301683   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2301684   +
2301685   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2301686   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2301687   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2301688   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2301689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301691   +end;
MPRINT(EM_DIAGRAM):   end;
2301692   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301694   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2301695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301697   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2301698   +   end;
MPRINT(EM_DIAGRAM):   end;
2301699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301700   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2301701   +   end;
MPRINT(EM_DIAGRAM):   end;
2301702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301703   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2301704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301706   +   end;
MPRINT(EM_DIAGRAM):   end;
2301707   +end;
MPRINT(EM_DIAGRAM):   end;
2301708   +
2301709   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2301710   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2301711   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2301712   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2301713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301715   +end;
MPRINT(EM_DIAGRAM):   end;
2301716   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301718   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2301719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301721   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2301722   +   end;
MPRINT(EM_DIAGRAM):   end;
2301723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301724   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2301725   +   end;
MPRINT(EM_DIAGRAM):   end;
2301726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301727   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2301728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301730   +   end;
MPRINT(EM_DIAGRAM):   end;
2301731   +end;
MPRINT(EM_DIAGRAM):   end;
2301732   +
2301733   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2301734   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2301735   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2301736   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2301737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301739   +end;
MPRINT(EM_DIAGRAM):   end;
2301740   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301742   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2301743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301744   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301745   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2301746   +   end;
MPRINT(EM_DIAGRAM):   end;
2301747   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301748   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2301749   +   end;
MPRINT(EM_DIAGRAM):   end;
2301750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301751   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2301752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301754   +   end;
MPRINT(EM_DIAGRAM):   end;
2301755   +end;
MPRINT(EM_DIAGRAM):   end;
2301756   +
2301757   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2301758   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2301759   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2301760   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2301761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301763   +end;
MPRINT(EM_DIAGRAM):   end;
2301764   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301766   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2301767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301768   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301769   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2301770   +   end;
MPRINT(EM_DIAGRAM):   end;
2301771   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301772   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2301773   +   end;
MPRINT(EM_DIAGRAM):   end;
2301774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301775   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2301776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301778   +   end;
MPRINT(EM_DIAGRAM):   end;
2301779   +end;
MPRINT(EM_DIAGRAM):   end;
2301780   +
2301781   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2301782   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2301783   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2301784   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2301785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301787   +end;
MPRINT(EM_DIAGRAM):   end;
2301788   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301790   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2301791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301793   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2301794   +   end;
MPRINT(EM_DIAGRAM):   end;
2301795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301796   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2301797   +   end;
MPRINT(EM_DIAGRAM):   end;
2301798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301799   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2301800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301802   +   end;
MPRINT(EM_DIAGRAM):   end;
2301803   +end;
MPRINT(EM_DIAGRAM):   end;
2301804   +
2301805   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2301806   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2301807   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2301808   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2301809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301811   +end;
MPRINT(EM_DIAGRAM):   end;
2301812   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301814   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2301815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2301817   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2301818   +   end;
MPRINT(EM_DIAGRAM):   end;
2301819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2301820   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2301821   +   end;
MPRINT(EM_DIAGRAM):   end;
2301822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301823   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2301824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301826   +   end;
MPRINT(EM_DIAGRAM):   end;
2301827   +end;
MPRINT(EM_DIAGRAM):   end;
2301828   +
2301829   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2301830   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2301831   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2301832   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2301833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301835   +end;
MPRINT(EM_DIAGRAM):   end;
2301836   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2301838   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2301839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301840   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2301841   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2301842   +   end;
MPRINT(EM_DIAGRAM):   end;
2301843   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2301844   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2301845   +   end;
MPRINT(EM_DIAGRAM):   end;
2301846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301847   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2301848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301850   +   end;
MPRINT(EM_DIAGRAM):   end;
2301851   +end;
MPRINT(EM_DIAGRAM):   end;
2301852   +
2301853   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2301854   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2301855   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2301856   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2301857   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2301858   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2301859   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2301860   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2301861   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2301862   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2301863   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2301864   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2301865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301867   +end;
MPRINT(EM_DIAGRAM):   end;
2301868   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301869   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2301870   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2301871   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301872   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2301873   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2301874   +   end;
MPRINT(EM_DIAGRAM):   end;
2301875   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2301876   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2301877   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2301878   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2301879   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2301880   +   end;
MPRINT(EM_DIAGRAM):   end;
2301881   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2301882   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2301883   +   end;
MPRINT(EM_DIAGRAM):   end;
2301884   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2301885   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2301886   +   end;
MPRINT(EM_DIAGRAM):   end;
2301887   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2301888   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2301889   +   end;
MPRINT(EM_DIAGRAM):   end;
2301890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301891   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2301892   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2301893   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2301894   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2301895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301897   +   end;
MPRINT(EM_DIAGRAM):   end;
2301898   +end;
MPRINT(EM_DIAGRAM):   end;
2301899   +
2301900   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2301901   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2301902   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2301903   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2301904   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2301905   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2301906   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2301907   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2301908   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2301909   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2301910   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2301911   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2301912   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2301913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2301914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301915   +end;
MPRINT(EM_DIAGRAM):   end;
2301916   +else do;
MPRINT(EM_DIAGRAM):   else do;
2301917   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2301918   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2301919   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2301920   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2301921   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2301922   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2301923   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2301924   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2301925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2301926   +         end;
MPRINT(EM_DIAGRAM):   end;
2301927   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2301928   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2301929   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2301930   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2301931   +            end;
MPRINT(EM_DIAGRAM):   end;
2301932   +         end;
MPRINT(EM_DIAGRAM):   end;
2301933   +      end;
MPRINT(EM_DIAGRAM):   end;
2301934   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2301935   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2301936   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2301937   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2301938   +         end;
MPRINT(EM_DIAGRAM):   end;
2301939   +      end;
MPRINT(EM_DIAGRAM):   end;
2301940   +   end;
MPRINT(EM_DIAGRAM):   end;
2301941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2301942   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2301943   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2301944   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2301945   +      end;
MPRINT(EM_DIAGRAM):   end;
2301946   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2301947   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2301948   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2301949   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2301950   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2301951   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2301952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2301953   +         end;
MPRINT(EM_DIAGRAM):   end;
2301954   +      end;
MPRINT(EM_DIAGRAM):   end;
2301955   +   end;
MPRINT(EM_DIAGRAM):   end;
2301956   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2301957   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2301958   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2301959   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2301960   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2301961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2301962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301963   +   end;
MPRINT(EM_DIAGRAM):   end;
2301964   +end;
MPRINT(EM_DIAGRAM):   end;
2301965   +
2301966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301967   +*** Checking missing input Interval
2301968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2301969   +
2301970   +IF NMISS(
2301971   +   AcceptedCmpTotal ,
2301972   +   Age ,
2301973   +   Frq ,
2301974   +   Income ,
2301975   +   Kidhome ,
2301976   +   Mnt ,
2301977   +   MntFishProducts ,
2301978   +   MntFruits ,
2301979   +   MntGoldProds ,
2301980   +   MntMeatProducts ,
2301981   +   MntSweetProducts ,
2301982   +   MntWines ,
2301983   +   MonthsAsCustomer ,
2301984   +   NumCatalogPurchases ,
2301985   +   NumDealsPurchases ,
2301986   +   NumDistPurchases ,
2301987   +   NumStorePurchases ,
2301988   +   NumWebPurchases ,
2301989   +   NumWebVisitsMonth ,
2301990   +   RFMstat ,
2301991   +   RMntFrq ,
2301992   +   Recency ,
2301993   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2301994   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2301995   +
2301996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2301997   +END;
MPRINT(EM_DIAGRAM):   END;
2301998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2301999   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2302000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2302002   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2302003   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2302004   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2302005   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2302006   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2302007   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2302008   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2302009   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2302010   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2302011   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2302012   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2302013   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2302014   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2302015   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2302016   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2302017   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2302018   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2302019   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2302020   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2302021   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2302022   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2302023   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2302024   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2302025   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2302026   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2302027   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2302028   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2302029   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2302030   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2302031   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2302032   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2302033   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2302034   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2302035   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2302036   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2302037   +END;
MPRINT(EM_DIAGRAM):   END;
2302038   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2302039   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2302040   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2302041   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2302042   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2302043   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2302044   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2302045   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2302046   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2302047   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2302048   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2302049   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2302050   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2302051   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2302052   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2302053   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2302054   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2302055   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2302056   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2302057   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2302058   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2302059   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2302060   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2302061   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2302062   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2302063   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2302064   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2302065   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2302066   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2302067   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2302068   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2302069   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2302070   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2302071   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2302072   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2302073   +   ELSE S_NumCatalogPurchases
2302074   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2302075   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2302076   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2302077   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2302078   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2302079   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2302080   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2302081   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2302082   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2302083   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2302084   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2302085   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2302086   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2302087   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2302088   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2302089   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2302090   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2302091   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2302092   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2302093   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2302094   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2302095   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2302096   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2302097   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2302098   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2302099   +END;
MPRINT(EM_DIAGRAM):   END;
2302100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302101   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2302102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302104   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2302105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302107   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2302108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2302110   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2302111   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2302112   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2302113   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2302114   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2302115   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2302116   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2302117   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2302118   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2302119   +          +    -1.09856598010056 * S_NumDealsPurchases
2302120   +          +    -0.10571850472514 * S_NumDistPurchases
2302121   +          +     0.11898210654227 * S_NumStorePurchases
2302122   +          +      0.5984912060231 * S_NumWebPurchases
2302123   +          +     0.78592531126942 * S_NumWebVisitsMonth
2302124   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2302125   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2302126   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2302127   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2302128   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2302129   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2302130   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2302131   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2302132   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2302133   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2302134   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2302135   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2302136   +          +    -0.84042044250624 * S_NumDealsPurchases
2302137   +          +    -0.10246261015488 * S_NumDistPurchases
2302138   +          +     0.06886149708824 * S_NumStorePurchases
2302139   +          +     0.63156910388199 * S_NumWebPurchases
2302140   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2302141   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2302142   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2302143   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2302144   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2302145   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2302146   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2302147   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2302148   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2302149   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2302150   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2302151   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2302152   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2302153   +          +     0.45393712455366 * S_NumDealsPurchases
2302154   +          +    -0.25292198053552 * S_NumDistPurchases
2302155   +          +    -1.35582215064749 * S_NumStorePurchases
2302156   +          +    -0.83132202302639 * S_NumWebPurchases
2302157   +          +     1.87116225272678 * S_NumWebVisitsMonth
2302158   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2302159   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2302160   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2302161   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2302162   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2302163   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2302164   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2302165   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2302166   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2302167   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2302168   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2302169   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2302170   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2302171   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2302172   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2302173   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2302174   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2302175   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2302176   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2302177   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2302178   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2302179   +          +      0.4695898100094 * Marital_StatusDivorced
2302180   +          +    -0.52137742289262 * Marital_StatusMarried
2302181   +          +    -0.32382086914936 * Marital_StatusSingle
2302182   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2302183   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2302184   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2302185   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2302186   +          +    -1.04858218653238 * Marital_StatusDivorced
2302187   +          +     2.41098335093061 * Marital_StatusMarried
2302188   +          +    -1.94696044861334 * Marital_StatusSingle
2302189   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2302190   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2302191   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2302192   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2302193   +          +     0.42964114177062 * Marital_StatusDivorced
2302194   +          +    -0.38607635605816 * Marital_StatusMarried
2302195   +          +    -0.02157405407852 * Marital_StatusSingle
2302196   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2302197   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2302198   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2302199   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2302200   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2302201   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2302202   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2302203   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2302204   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2302205   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2302206   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2302207   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2302208   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2302209   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2302210   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2302211   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2302212   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2302213   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2302214   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2302215   +END;
MPRINT(EM_DIAGRAM):   END;
2302216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2302217   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2302218   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2302219   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2302220   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2302221   +END;
MPRINT(EM_DIAGRAM):   END;
2302222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302223   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2302224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2302226   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2302227   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2302228   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2302229   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2302230   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2302231   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2302232   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2302233   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2302234   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2302235   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2302236   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2302237   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2302238   +END;
MPRINT(EM_DIAGRAM):   END;
2302239   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2302240   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2302241   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2302242   +END;
MPRINT(EM_DIAGRAM):   END;
2302243   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2302244   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2302245   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2302246   +END;
MPRINT(EM_DIAGRAM):   END;
2302247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302248   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2302249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2302250   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2302251   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2302252   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2302253   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2302254   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2302255   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2302256   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2302257   +END;
MPRINT(EM_DIAGRAM):   END;
2302258   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2302259   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2302260   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2302261   +drop
2302262   +H1x1_1
2302263   +H1x1_2
2302264   +H1x1_3
2302265   +H1x1_4
2302266   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2302267   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2302268    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2302269    quit;
2302270    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2302271    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2302272    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2302273    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2302274    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2302275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302276    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2302277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302279    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2302280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302282    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302283    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2302284    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2302285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302286    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2302287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2302288    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2302289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302291    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302292    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2302293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302294    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302295    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2302296    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2302296  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.
 
2302297    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302298    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2302299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302300    filename _pref
2302300  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2302301    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2302302    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2302303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2302304   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2302305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2302306   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2302307   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2302308   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2302309    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2302310    quit;
2302311    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2302312    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2302313    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2302314    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2302315    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2302316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302317    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2302318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302320    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2302321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302323    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302324    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2302325    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2302326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302327    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2302328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2302329    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2302330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302332    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302333    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2302334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302335    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302336    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2302337    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2302337  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2302338    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302339    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2302340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302341    filename _pref
2302341  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2302342    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2302343    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2302344   +
2302345   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2302346   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2302346  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2302347   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2302348   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2302349   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2302350   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2302351   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2302352    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2302353    quit;
2302354    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2302355    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2302356    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2302357    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2302358    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2302359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302360    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2302361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302363    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2302364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302365    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302366    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302367    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2302368    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2302369    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302370    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2302371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302372    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2302373    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302375    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302376    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2302377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302378    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302379    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2302380    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2302380  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2302381    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302382    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2302383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302384    filename _pref
2302384  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2302385    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2302386    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2302387   +
2302388   +
2302389   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2302390   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2302391   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2302392   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2302393   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2302394   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302395   +
2302396   +
2302397   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2302398   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2302399   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2302400   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2302401   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2302402   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302403   +
2302404   +
2302405   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2302406   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2302407   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2302408   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2302409   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2302410   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302411   +
2302412   +
2302413   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2302414   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2302415   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2302416   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2302417   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2302418   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302419   +
2302420   +
2302421   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2302422   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2302423   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2302424   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2302425   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2302426   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302427   +
2302428   +
2302429   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2302430   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2302431   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2302432   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2302433   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2302434   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302435   +
2302436   +
2302437   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2302438   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2302439   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2302440   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2302441   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2302442   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302443   +
2302444   +
2302445   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2302446   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2302447   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2302448   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2302449   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2302450   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2302451   +if
2302452   +_FILTERNORM1 not in ( '.')
2302453   + and
2302454   +_FILTERNORM2 not in ( '.')
2302455   + and
2302456   +_FILTERNORM3 not in ( '.')
2302457   + and
2302458   +_FILTERNORM4 not in ( '.')
2302459   + and
2302460   +_FILTERNORM5 not in ( '.')
2302461   + and
2302462   +_FILTERNORM6 not in ( '.')
2302463   + and
2302464   +_FILTERNORM7 not in ( ' ')
2302465   + and
2302466   +_FILTERNORM8 not in ( ' ')
2302467   +and
2302468   +( Dt_Customer ne .)
2302469   +and ( Income ne . and (Income<=107000))
2302470   +and ( Kidhome ne .)
2302471   +and ( MntFishProducts ne .)
2302472   +and ( MntFruits ne .)
2302473   +and ( MntGoldProds ne .)
2302474   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2302475   +and ( MntSweetProducts ne .)
2302476   +and ( MntWines ne .)
2302477   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2302478   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2302479   +and ( NumStorePurchases ne .)
2302480   +and ( NumWebPurchases ne .)
2302481   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2302482   +and ( Recency ne .)
2302483   +and ( Teenhome ne .)
2302484   +and ( Year_Birth ne .)
2302485   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2302486   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2302487   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2302488   +end;
MPRINT(EM_DIAGRAM):   end;
2302489   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2302490   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2302491    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2302492    quit;
2302493    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2302494    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2302495    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2302496    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2302497    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2302498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302499    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2302500    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302502    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2302503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302505    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302506    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2302507    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2302508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302509    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2302510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
2302511    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2302512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302514    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2302515    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2302516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2302517    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302518    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2302519    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2302519  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2302520    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302521    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2302522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302523    %macro varDept(fcmpdata=,id=);
2302524    %global nobs&id scoreFlag&id;
2302525    %let scoreFlag&id = 0;
2302526    %if &id=1 or ^&fcmpStart %then %do;
2302527    proc sort data=&fcmpdata out=_temp&id nodupkey;
2302528    by NAME;
2302529    where id=&id and LHS in( %let j=1;
2302530    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2302531    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2302532    "&var" %let j = %eval(&j+1);
2302533    %end;
2302534    );
2302535    run;
2302536    %let dsid = %sysfunc(open(_temp&id));
2302537    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2302538    %let dsid = %sysfunc(close(&dsid));
2302539    %if &&nobs&id %then %do;
2302540    %let scoreFlag&id = 1;
2302541    %let fcmpStart = 1;
2302542    %end;
2302543    %else %let fcmpStart = 0;
2302544    %end;
2302545    %else %do;
2302546    proc sort data=&fcmpdata out=_tempid;
2302547    where id=&id;
2302548    by LHS;
2302549    run;
2302550    %let dsid = %sysfunc(open(_tempid));
2302551    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2302552    %let dsid = %sysfunc(close(&dsid));
2302553    %if ^&&nobs&id %then %do;
2302554    proc datasets lib=work nolist;
2302555    delete _tempid;
2302556    run;
2302557    quit;
2302558    %end;
2302559    %else %do;
2302560    data _tempAll;
2302561    set %let j=%eval(&id-1);
2302562    %do x=1 %to &j;
2302563    %if &&nobs&x %then %do;
2302564    _temp&x %end;
2302565    %end;
2302566    ;
2302567    run;
2302568    proc sql;
2302569    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2302569  ! work._tempid p2 where p.name=p2.lhs;
2302570    quit;
2302571    data _temp&id;
2302572    set _temp&id;
2302573    where LHS ne '' and NAME ne '' and Node ne '';
2302574    run;
2302575    proc datasets lib=work nolist;
2302576    delete _tempAll;
2302577    run;
2302578    %let dsid = %sysfunc(open(_temp&id));
2302579    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2302580    %let dsid = %sysfunc(close(&dsid));
2302581    %if ^&&nobs&id %then %do;
2302582    proc datasets lib=work nolist;
2302583    delete _temp&id;
2302584    run;
2302585    quit;
2302586    %end;
2302587    %else %do;
2302588    %let scoreFlag&id = 1;
2302589    data _temp&id;
2302590    set _temp&id;
2302591    where LHS ne NAME and node ne '';
2302592    run;
2302593    %let dsid = %sysfunc(open(_temp&id));
2302594    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2302595    %let dsid = %sysfunc(close(&dsid));
2302596    %if ^&&nobs&id %then %do;
2302597    proc datasets lib=work nolist;
2302598    delete _temp&id;
2302599    run;
2302600    quit;
2302601    %end;
2302602    %else %do;
2302603    proc sort data=_temp&id nodupkey;
2302604    by LHS NAME;
2302605    run;
2302606    %end;
2302607    %end;
2302608    %end;
2302609    %end;
2302610    %mend varDept;
2302611    %macro optCode(outdata=fcmpdata);
2302612    %global fcmpStart;
2302613    %let fcmpStart = 0;
2302614    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2302615    %let NumNodes=9;
2302616    %do k=1 %to &NumNodes;
2302617    %vardept(fcmpdata=&outdata, id=&k);
2302618    %end;
2302619    %mend optCode;
2302620    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2302621    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2302622    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2302623    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2302624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2302625    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2302626    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2302627    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2302628    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302629    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2302630    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2302630  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2302631    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2302632    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2302633    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2302634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2302635    filename _pref
2302635  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2302636    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2302637    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2302638   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2302639   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2302640   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2302641   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2302642   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2302643   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2302644   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2302645   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2302646   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2302647   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2302648   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2302649   +LENGTH _WARN_ $4
2302650   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2302651   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2302652   +
2302653   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2302654   +
2302655   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2302656   +
2302657   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2302658   +
2302659   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2302660   +
2302661   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2302662   +
2302663   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2302664   +
2302665   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2302666   +
2302667   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2302668   +
2302669   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2302670   +
2302671   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2302672   +
2302673   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2302674   +
2302675   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2302676   +
2302677   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2302678   +
2302679   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2302680   +
2302681   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2302682   +
2302683   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2302684   +
2302685   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2302686   +
2302687   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2302688   +
2302689   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2302690   +
2302691   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2302692   +
2302693   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2302694   +
2302695   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2302696   +
2302697   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2302698   +
2302699   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2302700   +
2302701   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2302702   +
2302703   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2302704   +
2302705   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2302706   +
2302707   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2302708   +
2302709   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2302710   +
2302711   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2302712   +
2302713   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2302714   +
2302715   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2302716   +
2302717   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2302718   +
2302719   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2302720   +
2302721   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2302722   +
2302723   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2302724   +
2302725   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2302726   +
2302727   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2302728   +
2302729   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2302730   +
2302731   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2302732   +
2302733   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2302734   +
2302735   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2302736   +
2302737   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2302738   +
2302739   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2302740   +
2302741   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2302742   +
2302743   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2302744   +
2302745   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2302746   +
2302747   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2302748   +
2302749   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2302750   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2302751   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2302752   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2302753   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302755   +end;
MPRINT(EM_DIAGRAM):   end;
2302756   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302757   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302758   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2302759   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302760   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302761   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2302762   +   end;
MPRINT(EM_DIAGRAM):   end;
2302763   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302764   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2302765   +   end;
MPRINT(EM_DIAGRAM):   end;
2302766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302767   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2302768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302770   +   end;
MPRINT(EM_DIAGRAM):   end;
2302771   +end;
MPRINT(EM_DIAGRAM):   end;
2302772   +
2302773   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2302774   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2302775   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2302776   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2302777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302779   +end;
MPRINT(EM_DIAGRAM):   end;
2302780   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302781   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302782   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2302783   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302784   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302785   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2302786   +   end;
MPRINT(EM_DIAGRAM):   end;
2302787   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302788   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2302789   +   end;
MPRINT(EM_DIAGRAM):   end;
2302790   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302791   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2302792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302794   +   end;
MPRINT(EM_DIAGRAM):   end;
2302795   +end;
MPRINT(EM_DIAGRAM):   end;
2302796   +
2302797   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2302798   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2302799   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2302800   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2302801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302803   +end;
MPRINT(EM_DIAGRAM):   end;
2302804   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302806   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2302807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302809   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2302810   +   end;
MPRINT(EM_DIAGRAM):   end;
2302811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302812   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2302813   +   end;
MPRINT(EM_DIAGRAM):   end;
2302814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302815   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2302816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302818   +   end;
MPRINT(EM_DIAGRAM):   end;
2302819   +end;
MPRINT(EM_DIAGRAM):   end;
2302820   +
2302821   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2302822   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2302823   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2302824   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2302825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302827   +end;
MPRINT(EM_DIAGRAM):   end;
2302828   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302830   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2302831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302833   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2302834   +   end;
MPRINT(EM_DIAGRAM):   end;
2302835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302836   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2302837   +   end;
MPRINT(EM_DIAGRAM):   end;
2302838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302839   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2302840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302842   +   end;
MPRINT(EM_DIAGRAM):   end;
2302843   +end;
MPRINT(EM_DIAGRAM):   end;
2302844   +
2302845   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2302846   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2302847   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2302848   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2302849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302851   +end;
MPRINT(EM_DIAGRAM):   end;
2302852   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302854   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2302855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302857   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2302858   +   end;
MPRINT(EM_DIAGRAM):   end;
2302859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302860   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2302861   +   end;
MPRINT(EM_DIAGRAM):   end;
2302862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302863   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2302864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302866   +   end;
MPRINT(EM_DIAGRAM):   end;
2302867   +end;
MPRINT(EM_DIAGRAM):   end;
2302868   +
2302869   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2302870   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2302871   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2302872   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2302873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302875   +end;
MPRINT(EM_DIAGRAM):   end;
2302876   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302878   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2302879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2302881   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2302882   +   end;
MPRINT(EM_DIAGRAM):   end;
2302883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2302884   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2302885   +   end;
MPRINT(EM_DIAGRAM):   end;
2302886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302887   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2302888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302890   +   end;
MPRINT(EM_DIAGRAM):   end;
2302891   +end;
MPRINT(EM_DIAGRAM):   end;
2302892   +
2302893   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2302894   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2302895   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2302896   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2302897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302899   +end;
MPRINT(EM_DIAGRAM):   end;
2302900   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2302902   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2302903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302904   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2302905   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2302906   +   end;
MPRINT(EM_DIAGRAM):   end;
2302907   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2302908   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2302909   +   end;
MPRINT(EM_DIAGRAM):   end;
2302910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302911   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2302912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302914   +   end;
MPRINT(EM_DIAGRAM):   end;
2302915   +end;
MPRINT(EM_DIAGRAM):   end;
2302916   +
2302917   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2302918   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2302919   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2302920   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2302921   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2302922   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2302923   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2302924   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2302925   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2302926   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2302927   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2302928   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2302929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302931   +end;
MPRINT(EM_DIAGRAM):   end;
2302932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302933   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2302934   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2302935   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302936   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2302937   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2302938   +   end;
MPRINT(EM_DIAGRAM):   end;
2302939   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2302940   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2302941   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2302942   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2302943   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2302944   +   end;
MPRINT(EM_DIAGRAM):   end;
2302945   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2302946   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2302947   +   end;
MPRINT(EM_DIAGRAM):   end;
2302948   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2302949   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2302950   +   end;
MPRINT(EM_DIAGRAM):   end;
2302951   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2302952   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2302953   +   end;
MPRINT(EM_DIAGRAM):   end;
2302954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2302955   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2302956   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2302957   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2302958   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2302959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2302960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302961   +   end;
MPRINT(EM_DIAGRAM):   end;
2302962   +end;
MPRINT(EM_DIAGRAM):   end;
2302963   +
2302964   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2302965   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2302966   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2302967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2302968   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2302969   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2302970   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2302971   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2302972   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2302973   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2302974   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2302975   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2302976   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2302977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2302978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2302979   +end;
MPRINT(EM_DIAGRAM):   end;
2302980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2302981   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2302982   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2302983   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2302984   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2302985   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2302986   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2302987   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2302988   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2302989   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2302990   +         end;
MPRINT(EM_DIAGRAM):   end;
2302991   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2302992   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2302993   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2302994   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2302995   +            end;
MPRINT(EM_DIAGRAM):   end;
2302996   +         end;
MPRINT(EM_DIAGRAM):   end;
2302997   +      end;
MPRINT(EM_DIAGRAM):   end;
2302998   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2302999   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2303000   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2303001   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2303002   +         end;
MPRINT(EM_DIAGRAM):   end;
2303003   +      end;
MPRINT(EM_DIAGRAM):   end;
2303004   +   end;
MPRINT(EM_DIAGRAM):   end;
2303005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2303006   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2303007   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2303008   +         _dm_find = 1;
The SAS System
 
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2303009   +      end;
MPRINT(EM_DIAGRAM):   end;
2303010   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2303011   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2303012   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2303013   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2303014   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2303015   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2303016   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2303017   +         end;
MPRINT(EM_DIAGRAM):   end;
2303018   +      end;
MPRINT(EM_DIAGRAM):   end;
2303019   +   end;
MPRINT(EM_DIAGRAM):   end;
2303020   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2303021   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2303022   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2303023   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2303024   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2303025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2303026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303027   +   end;
MPRINT(EM_DIAGRAM):   end;
2303028   +end;
MPRINT(EM_DIAGRAM):   end;
2303029   +
2303030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303031   +*** Checking missing input Interval
2303032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2303033   +
2303034   +IF NMISS(
2303035   +   AcceptedCmpTotal ,
2303036   +   Age ,
2303037   +   Frq ,
2303038   +   Income ,
2303039   +   Kidhome ,
2303040   +   Mnt ,
2303041   +   MntFishProducts ,
2303042   +   MntFruits ,
2303043   +   MntGoldProds ,
2303044   +   MntMeatProducts ,
2303045   +   MntSweetProducts ,
2303046   +   MntWines ,
2303047   +   MonthsAsCustomer ,
2303048   +   NumCatalogPurchases ,
2303049   +   NumDealsPurchases ,
2303050   +   NumDistPurchases ,
2303051   +   NumStorePurchases ,
2303052   +   NumWebPurchases ,
2303053   +   NumWebVisitsMonth ,
2303054   +   RFMstat ,
2303055   +   RMntFrq ,
2303056   +   Recency ,
2303057   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2303058   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2303059   +
2303060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303061   +END;
MPRINT(EM_DIAGRAM):   END;
2303062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303063   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2303064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303065   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2303066   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2303067   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2303068   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2303069   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2303070   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2303071   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2303072   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2303073   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2303074   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2303075   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2303076   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2303077   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2303078   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2303079   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2303080   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2303081   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2303082   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2303083   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2303084   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2303085   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2303086   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2303087   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2303088   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2303089   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2303090   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2303091   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2303092   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2303093   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2303094   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2303095   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2303096   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2303097   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2303098   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2303099   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2303100   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2303101   +END;
MPRINT(EM_DIAGRAM):   END;
2303102   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2303103   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2303104   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2303105   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2303106   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2303107   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2303108   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2303109   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2303110   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2303111   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2303112   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2303113   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2303114   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2303115   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2303116   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2303117   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2303118   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2303119   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2303120   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2303121   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2303122   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2303123   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2303124   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2303125   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2303126   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2303127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2303128   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2303129   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2303130   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2303131   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2303132   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2303133   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2303134   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2303135   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2303136   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2303137   +   ELSE S_NumCatalogPurchases
2303138   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2303139   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2303140   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2303141   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2303142   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2303143   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2303144   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2303145   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2303146   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2303147   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2303148   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2303149   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2303150   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2303151   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2303152   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2303153   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2303154   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2303155   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2303156   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2303157   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2303158   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2303159   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2303160   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2303161   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2303162   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2303163   +END;
MPRINT(EM_DIAGRAM):   END;
2303164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303165   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2303166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303168   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2303169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303171   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2303172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2303174   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2303175   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2303176   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2303177   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2303178   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2303179   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2303180   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2303181   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2303182   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2303183   +          +     0.19770934886328 * S_NumDealsPurchases
2303184   +          +      0.0515215988111 * S_NumDistPurchases
2303185   +          +    -0.34569346346089 * S_NumStorePurchases
2303186   +          +    -0.27122293596124 * S_NumWebPurchases
2303187   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2303188   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2303189   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2303190   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2303191   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2303192   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2303193   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2303194   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2303195   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2303196   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2303197   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2303198   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2303199   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2303200   +          +     0.54308887602031 * S_NumDealsPurchases
2303201   +          +    -0.22507315320192 * S_NumDistPurchases
2303202   +          +    -0.79861387328361 * S_NumStorePurchases
2303203   +          +    -0.45467494002747 * S_NumWebPurchases
2303204   +          +      0.2119048824613 * S_NumWebVisitsMonth
2303205   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2303206   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2303207   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2303208   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2303209   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2303210   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2303211   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2303212   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2303213   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2303214   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2303215   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2303216   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2303217   +          +     -0.0771083149302 * S_NumDealsPurchases
2303218   +          +     0.03403621221162 * S_NumDistPurchases
2303219   +          +     0.61303946422025 * S_NumStorePurchases
2303220   +          +     0.27126793634053 * S_NumWebPurchases
2303221   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2303222   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2303223   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2303224   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2303225   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2303226   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2303227   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2303228   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2303229   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2303230   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2303231   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2303232   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2303233   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2303234   +          +     0.29894603062327 * S_NumDealsPurchases
2303235   +          +     0.07614620530875 * S_NumDistPurchases
2303236   +          +     0.15402335009896 * S_NumStorePurchases
2303237   +          +     0.10615749096863 * S_NumWebPurchases
2303238   +          +     0.41962286816879 * S_NumWebVisitsMonth
2303239   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2303240   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2303241   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2303242   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2303243   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2303244   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2303245   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2303246   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2303247   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2303248   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2303249   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2303250   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2303251   +          +     0.14392502416642 * S_NumDealsPurchases
2303252   +          +    -0.10026304978633 * S_NumDistPurchases
2303253   +          +     -0.0588453022746 * S_NumStorePurchases
2303254   +          +     0.24799398610395 * S_NumWebPurchases
2303255   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2303256   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2303257   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2303258   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2303259   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2303260   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2303261   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2303262   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2303263   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2303264   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2303265   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2303266   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2303267   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2303268   +          +     0.08149600854964 * S_NumDealsPurchases
2303269   +          +     0.16873541613513 * S_NumDistPurchases
2303270   +          +    -0.20437343413446 * S_NumStorePurchases
2303271   +          +     -0.1671107527288 * S_NumWebPurchases
2303272   +          +     0.03677043100993 * S_NumWebVisitsMonth
2303273   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2303274   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2303275   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2303276   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2303277   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2303278   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2303279   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2303280   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2303281   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2303282   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2303283   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2303284   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2303285   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2303286   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2303287   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2303288   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2303289   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2303290   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2303291   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2303292   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2303293   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2303294   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2303295   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2303296   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2303297   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2303298   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2303299   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2303300   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2303301   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2303302   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2303303   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2303304   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2303305   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2303306   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2303307   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2303308   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2303309   +          +    -0.31045295887604 * Marital_StatusDivorced
2303310   +          +    -0.01109401001539 * Marital_StatusMarried
2303311   +          +     0.01325135981025 * Marital_StatusSingle
2303312   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2303313   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2303314   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2303315   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2303316   +          +     0.02275101861599 * Marital_StatusDivorced
2303317   +          +     0.20271548664903 * Marital_StatusMarried
2303318   +          +    -0.12132069210718 * Marital_StatusSingle
2303319   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2303320   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2303321   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2303322   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2303323   +          +     -0.4992959703281 * Marital_StatusDivorced
2303324   +          +     0.62071659624138 * Marital_StatusMarried
2303325   +          +    -0.21776202274494 * Marital_StatusSingle
2303326   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2303327   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2303328   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2303329   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2303330   +          +     0.05626212670587 * Marital_StatusDivorced
2303331   +          +     0.14353891364597 * Marital_StatusMarried
2303332   +          +    -0.29006765622997 * Marital_StatusSingle
2303333   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2303334   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2303335   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2303336   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2303337   +          +    -0.21206913700604 * Marital_StatusDivorced
2303338   +          +     0.58790643614629 * Marital_StatusMarried
2303339   +          +    -0.65995982578062 * Marital_StatusSingle
2303340   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2303341   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2303342   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2303343   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2303344   +          +    -0.05047370516008 * Marital_StatusDivorced
2303345   +          +    -0.23139090963669 * Marital_StatusMarried
2303346   +          +     0.04816197463249 * Marital_StatusSingle
2303347   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2303348   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2303349   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2303350   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2303351   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2303352   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2303353   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2303354   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2303355   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2303356   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2303357   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2303358   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2303359   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2303360   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2303361   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2303362   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2303363   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2303364   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2303365   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2303366   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2303367   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2303368   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2303369   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2303370   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2303371   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2303372   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2303373   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2303374   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2303375   +END;
MPRINT(EM_DIAGRAM):   END;
2303376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2303377   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2303378   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2303379   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2303380   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2303381   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2303382   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2303383   +END;
MPRINT(EM_DIAGRAM):   END;
2303384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303385   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2303386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2303388   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2303389   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2303390   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2303391   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2303392   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2303393   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2303394   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2303395   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2303396   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2303397   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2303398   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2303399   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2303400   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2303401   +END;
MPRINT(EM_DIAGRAM):   END;
2303402   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2303403   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2303404   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2303405   +END;
MPRINT(EM_DIAGRAM):   END;
2303406   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2303407   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2303408   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2303409   +END;
MPRINT(EM_DIAGRAM):   END;
2303410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303411   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2303412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2303413   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2303414   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2303415   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2303416   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2303417   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2303418   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2303419   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2303420   +END;
MPRINT(EM_DIAGRAM):   END;
2303421   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2303422   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2303423   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2303424   +drop
2303425   +H1x1_1
2303426   +H1x1_2
2303427   +H1x1_3
2303428   +H1x1_4
2303429   +H1x1_5
2303430   +H1x1_6
2303431   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2303432   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2303433    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2303434    quit;
2303435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2303436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2303437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2303438    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2303439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2303440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2303442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303444    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2303445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2303449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2303450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303451    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2303452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2303453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2303454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2303458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303459    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2303461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2303461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
2303462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303463    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2303464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303465    filename _pref
2303465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2303466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2303467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2303468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2303469   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2303470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2303471   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2303472   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2303473   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2303474    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2303475    quit;
2303476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2303477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2303478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2303479    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2303480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2303481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2303483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303485    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2303486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2303490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2303491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303492    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2303493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2303494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2303495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2303499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303500    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2303502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2303502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2303503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303504    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2303505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303506    filename _pref
2303506  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2303507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2303508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2303509   +
2303510   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2303511   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2303511  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2303512   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2303513   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2303514   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2303515   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2303516   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2303517    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2303518    quit;
2303519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2303520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2303521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2303522    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2303523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2303524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2303526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303528    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2303529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303530    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2303533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2303534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303535    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2303536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2303538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2303542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303543    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2303545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2303545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2303546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303547    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2303548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303549    filename _pref
2303549  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2303550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2303551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2303552   +
2303553   +
2303554   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2303555   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2303556   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2303557   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2303558   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2303559   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303560   +
2303561   +
2303562   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2303563   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2303564   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2303565   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2303566   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2303567   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303568   +
2303569   +
2303570   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2303571   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2303572   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2303573   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2303574   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2303575   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303576   +
2303577   +
2303578   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2303579   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2303580   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2303581   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2303582   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2303583   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303584   +
2303585   +
2303586   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2303587   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2303588   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2303589   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2303590   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2303591   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303592   +
2303593   +
2303594   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2303595   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2303596   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2303597   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2303598   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2303599   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303600   +
2303601   +
2303602   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2303603   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2303604   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2303605   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2303606   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2303607   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303608   +
2303609   +
2303610   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2303611   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2303612   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2303613   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2303614   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2303615   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2303616   +if
2303617   +_FILTERNORM1 not in ( '.')
2303618   + and
2303619   +_FILTERNORM2 not in ( '.')
2303620   + and
2303621   +_FILTERNORM3 not in ( '.')
2303622   + and
2303623   +_FILTERNORM4 not in ( '.')
2303624   + and
2303625   +_FILTERNORM5 not in ( '.')
2303626   + and
2303627   +_FILTERNORM6 not in ( '.')
2303628   + and
2303629   +_FILTERNORM7 not in ( ' ')
2303630   + and
2303631   +_FILTERNORM8 not in ( ' ')
2303632   +and
2303633   +( Dt_Customer ne .)
2303634   +and ( Income ne . and (Income<=107000))
2303635   +and ( Kidhome ne .)
2303636   +and ( MntFishProducts ne .)
2303637   +and ( MntFruits ne .)
2303638   +and ( MntGoldProds ne .)
2303639   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2303640   +and ( MntSweetProducts ne .)
2303641   +and ( MntWines ne .)
2303642   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2303643   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2303644   +and ( NumStorePurchases ne .)
2303645   +and ( NumWebPurchases ne .)
2303646   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2303647   +and ( Recency ne .)
2303648   +and ( Teenhome ne .)
2303649   +and ( Year_Birth ne .)
2303650   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2303651   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2303652   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2303653   +end;
MPRINT(EM_DIAGRAM):   end;
2303654   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2303655   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2303656    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2303657    quit;
2303658    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2303659    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2303660    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2303661    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2303662    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2303663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303664    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2303665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303667    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2303668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303671    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2303672    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2303673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303674    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2303675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2303676    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2303677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303679    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2303680    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2303681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2303682    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2303684    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2303684  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2303685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303686    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2303687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303688    %macro varDept(fcmpdata=,id=);
2303689    %global nobs&id scoreFlag&id;
2303690    %let scoreFlag&id = 0;
2303691    %if &id=1 or ^&fcmpStart %then %do;
2303692    proc sort data=&fcmpdata out=_temp&id nodupkey;
2303693    by NAME;
2303694    where id=&id and LHS in( %let j=1;
2303695    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2303696    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2303697    "&var" %let j = %eval(&j+1);
2303698    %end;
2303699    );
2303700    run;
2303701    %let dsid = %sysfunc(open(_temp&id));
2303702    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2303703    %let dsid = %sysfunc(close(&dsid));
2303704    %if &&nobs&id %then %do;
2303705    %let scoreFlag&id = 1;
2303706    %let fcmpStart = 1;
2303707    %end;
2303708    %else %let fcmpStart = 0;
2303709    %end;
2303710    %else %do;
2303711    proc sort data=&fcmpdata out=_tempid;
2303712    where id=&id;
2303713    by LHS;
2303714    run;
2303715    %let dsid = %sysfunc(open(_tempid));
2303716    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2303717    %let dsid = %sysfunc(close(&dsid));
2303718    %if ^&&nobs&id %then %do;
2303719    proc datasets lib=work nolist;
2303720    delete _tempid;
2303721    run;
2303722    quit;
2303723    %end;
2303724    %else %do;
2303725    data _tempAll;
2303726    set %let j=%eval(&id-1);
2303727    %do x=1 %to &j;
2303728    %if &&nobs&x %then %do;
2303729    _temp&x %end;
2303730    %end;
2303731    ;
2303732    run;
2303733    proc sql;
2303734    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2303734  ! work._tempid p2 where p.name=p2.lhs;
2303735    quit;
2303736    data _temp&id;
2303737    set _temp&id;
2303738    where LHS ne '' and NAME ne '' and Node ne '';
2303739    run;
2303740    proc datasets lib=work nolist;
2303741    delete _tempAll;
2303742    run;
2303743    %let dsid = %sysfunc(open(_temp&id));
2303744    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2303745    %let dsid = %sysfunc(close(&dsid));
2303746    %if ^&&nobs&id %then %do;
2303747    proc datasets lib=work nolist;
2303748    delete _temp&id;
2303749    run;
2303750    quit;
2303751    %end;
2303752    %else %do;
2303753    %let scoreFlag&id = 1;
2303754    data _temp&id;
2303755    set _temp&id;
2303756    where LHS ne NAME and node ne '';
2303757    run;
2303758    %let dsid = %sysfunc(open(_temp&id));
2303759    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2303760    %let dsid = %sysfunc(close(&dsid));
2303761    %if ^&&nobs&id %then %do;
2303762    proc datasets lib=work nolist;
2303763    delete _temp&id;
2303764    run;
2303765    quit;
2303766    %end;
2303767    %else %do;
2303768    proc sort data=_temp&id nodupkey;
2303769    by LHS NAME;
2303770    run;
2303771    %end;
2303772    %end;
2303773    %end;
2303774    %end;
2303775    %mend varDept;
2303776    %macro optCode(outdata=fcmpdata);
2303777    %global fcmpStart;
2303778    %let fcmpStart = 0;
2303779    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2303780    %let NumNodes=9;
2303781    %do k=1 %to &NumNodes;
2303782    %vardept(fcmpdata=&outdata, id=&k);
2303783    %end;
2303784    %mend optCode;
2303785    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2303786    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2303787    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2303788    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2303789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2303790    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2303791    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2303792    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2303793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303794    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2303795    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2303795  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2303796    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2303797    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2303798    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2303799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2303800    filename _pref
2303800  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2303801    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2303802    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2303803   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2303804   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2303805   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2303806   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2303807   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2303808   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2303809   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2303810   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2303811   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2303812   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2303813   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2303814   +LENGTH _WARN_ $4
2303815   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2303816   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2303817   +
2303818   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2303819   +
2303820   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2303821   +
2303822   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2303823   +
2303824   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2303825   +
2303826   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2303827   +
2303828   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2303829   +
2303830   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2303831   +
2303832   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2303833   +
2303834   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2303835   +
2303836   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2303837   +
2303838   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2303839   +
2303840   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2303841   +
2303842   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2303843   +
2303844   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2303845   +
2303846   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2303847   +
2303848   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2303849   +
2303850   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2303851   +
2303852   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2303853   +
2303854   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2303855   +
2303856   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2303857   +
2303858   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2303859   +
2303860   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2303861   +
2303862   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2303863   +
2303864   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2303865   +
2303866   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2303867   +
2303868   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2303869   +
2303870   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2303871   +
2303872   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2303873   +
2303874   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2303875   +
2303876   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2303877   +
2303878   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2303879   +
2303880   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2303881   +
2303882   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2303883   +
2303884   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2303885   +
2303886   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2303887   +
2303888   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2303889   +
2303890   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2303891   +
2303892   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2303893   +
2303894   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2303895   +
2303896   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2303897   +
2303898   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2303899   +
2303900   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2303901   +
2303902   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2303903   +
2303904   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2303905   +
2303906   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2303907   +
2303908   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2303909   +
2303910   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2303911   +
2303912   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2303913   +
2303914   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2303915   +
2303916   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2303917   +
2303918   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2303919   +
2303920   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2303921   +
2303922   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2303923   +
2303924   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2303925   +
2303926   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2303927   +
2303928   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2303929   +
2303930   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2303931   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2303932   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2303933   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2303934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2303935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303936   +end;
MPRINT(EM_DIAGRAM):   end;
2303937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2303938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2303939   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2303940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2303941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2303942   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2303943   +   end;
MPRINT(EM_DIAGRAM):   end;
2303944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2303945   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2303946   +   end;
MPRINT(EM_DIAGRAM):   end;
2303947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2303948   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2303949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2303950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303951   +   end;
MPRINT(EM_DIAGRAM):   end;
2303952   +end;
MPRINT(EM_DIAGRAM):   end;
2303953   +
2303954   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2303955   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2303956   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2303957   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2303958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2303959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303960   +end;
MPRINT(EM_DIAGRAM):   end;
2303961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2303962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2303963   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2303964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2303965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2303966   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2303967   +   end;
MPRINT(EM_DIAGRAM):   end;
2303968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2303969   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2303970   +   end;
MPRINT(EM_DIAGRAM):   end;
2303971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2303972   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2303973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2303974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303975   +   end;
MPRINT(EM_DIAGRAM):   end;
2303976   +end;
MPRINT(EM_DIAGRAM):   end;
2303977   +
2303978   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2303979   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2303980   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2303981   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2303982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2303983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303984   +end;
MPRINT(EM_DIAGRAM):   end;
2303985   +else do;
MPRINT(EM_DIAGRAM):   else do;
2303986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2303987   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2303988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2303989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2303990   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2303991   +   end;
MPRINT(EM_DIAGRAM):   end;
2303992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2303993   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2303994   +   end;
MPRINT(EM_DIAGRAM):   end;
2303995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2303996   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2303997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2303998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2303999   +   end;
MPRINT(EM_DIAGRAM):   end;
2304000   +end;
MPRINT(EM_DIAGRAM):   end;
2304001   +
2304002   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2304003   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2304004   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2304005   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2304006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304008   +end;
MPRINT(EM_DIAGRAM):   end;
2304009   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2304011   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2304012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2304014   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2304015   +   end;
MPRINT(EM_DIAGRAM):   end;
2304016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2304017   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2304018   +   end;
MPRINT(EM_DIAGRAM):   end;
2304019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304020   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2304021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304023   +   end;
MPRINT(EM_DIAGRAM):   end;
2304024   +end;
MPRINT(EM_DIAGRAM):   end;
2304025   +
2304026   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2304027   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2304028   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2304029   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2304030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304032   +end;
MPRINT(EM_DIAGRAM):   end;
2304033   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2304035   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2304036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2304038   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2304039   +   end;
MPRINT(EM_DIAGRAM):   end;
2304040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2304041   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2304042   +   end;
MPRINT(EM_DIAGRAM):   end;
2304043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304044   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2304045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304047   +   end;
MPRINT(EM_DIAGRAM):   end;
2304048   +end;
MPRINT(EM_DIAGRAM):   end;
2304049   +
2304050   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2304051   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2304052   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2304053   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2304054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304056   +end;
MPRINT(EM_DIAGRAM):   end;
2304057   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2304059   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2304060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2304062   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2304063   +   end;
MPRINT(EM_DIAGRAM):   end;
2304064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2304065   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2304066   +   end;
MPRINT(EM_DIAGRAM):   end;
2304067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304068   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2304069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304071   +   end;
MPRINT(EM_DIAGRAM):   end;
2304072   +end;
MPRINT(EM_DIAGRAM):   end;
2304073   +
2304074   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2304075   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2304076   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2304077   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2304078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304080   +end;
MPRINT(EM_DIAGRAM):   end;
2304081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2304083   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2304084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304085   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2304086   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2304087   +   end;
MPRINT(EM_DIAGRAM):   end;
2304088   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2304089   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2304090   +   end;
MPRINT(EM_DIAGRAM):   end;
2304091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304092   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2304093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304095   +   end;
MPRINT(EM_DIAGRAM):   end;
2304096   +end;
MPRINT(EM_DIAGRAM):   end;
2304097   +
2304098   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2304099   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2304100   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2304101   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2304102   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2304103   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2304104   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2304105   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2304106   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2304107   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2304108   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2304109   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2304110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304112   +end;
MPRINT(EM_DIAGRAM):   end;
2304113   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304114   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2304115   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2304116   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304117   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2304118   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2304119   +   end;
MPRINT(EM_DIAGRAM):   end;
2304120   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2304121   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2304122   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2304123   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2304124   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2304125   +   end;
MPRINT(EM_DIAGRAM):   end;
2304126   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2304127   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2304128   +   end;
MPRINT(EM_DIAGRAM):   end;
2304129   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2304130   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2304131   +   end;
MPRINT(EM_DIAGRAM):   end;
2304132   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2304133   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2304134   +   end;
MPRINT(EM_DIAGRAM):   end;
2304135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304136   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2304137   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2304138   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2304139   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2304140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304142   +   end;
MPRINT(EM_DIAGRAM):   end;
2304143   +end;
MPRINT(EM_DIAGRAM):   end;
2304144   +
2304145   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2304146   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2304147   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2304148   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2304149   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2304150   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2304151   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2304152   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2304153   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2304154   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2304155   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2304156   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2304157   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2304158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2304159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304160   +end;
MPRINT(EM_DIAGRAM):   end;
2304161   +else do;
MPRINT(EM_DIAGRAM):   else do;
2304162   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2304163   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2304164   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2304165   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2304166   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2304167   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2304168   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2304169   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2304170   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2304171   +         end;
MPRINT(EM_DIAGRAM):   end;
2304172   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2304173   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2304174   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2304175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2304176   +            end;
MPRINT(EM_DIAGRAM):   end;
2304177   +         end;
MPRINT(EM_DIAGRAM):   end;
2304178   +      end;
MPRINT(EM_DIAGRAM):   end;
2304179   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2304180   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2304181   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2304182   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2304183   +         end;
MPRINT(EM_DIAGRAM):   end;
2304184   +      end;
MPRINT(EM_DIAGRAM):   end;
2304185   +   end;
MPRINT(EM_DIAGRAM):   end;
2304186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2304187   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2304188   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2304189   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2304190   +      end;
MPRINT(EM_DIAGRAM):   end;
2304191   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2304192   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2304193   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2304194   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2304195   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2304196   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2304197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2304198   +         end;
MPRINT(EM_DIAGRAM):   end;
2304199   +      end;
MPRINT(EM_DIAGRAM):   end;
2304200   +   end;
MPRINT(EM_DIAGRAM):   end;
2304201   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2304202   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2304203   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2304204   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2304205   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2304206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2304207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304208   +   end;
MPRINT(EM_DIAGRAM):   end;
2304209   +end;
MPRINT(EM_DIAGRAM):   end;
2304210   +
2304211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304212   +*** Checking missing input Interval
2304213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2304214   +
2304215   +IF NMISS(
2304216   +   AcceptedCmpTotal ,
2304217   +   Age ,
2304218   +   Frq ,
2304219   +   Income ,
2304220   +   Kidhome ,
2304221   +   Mnt ,
2304222   +   MntFishProducts ,
2304223   +   MntFruits ,
2304224   +   MntGoldProds ,
2304225   +   MntMeatProducts ,
2304226   +   MntSweetProducts ,
2304227   +   MntWines ,
2304228   +   MonthsAsCustomer ,
2304229   +   NumCatalogPurchases ,
2304230   +   NumDealsPurchases ,
2304231   +   NumDistPurchases ,
2304232   +   NumStorePurchases ,
2304233   +   NumWebPurchases ,
2304234   +   NumWebVisitsMonth ,
2304235   +   RFMstat ,
2304236   +   RMntFrq ,
2304237   +   Recency ,
2304238   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2304239   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2304240   +
2304241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2304242   +END;
MPRINT(EM_DIAGRAM):   END;
2304243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304244   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2304245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2304247   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2304248   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2304249   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2304250   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2304251   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2304252   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2304253   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2304254   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2304255   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2304256   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2304257   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2304258   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2304259   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2304260   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2304261   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2304262   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2304263   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2304264   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2304265   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2304266   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2304267   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2304268   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2304269   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2304270   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2304271   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2304272   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2304273   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2304274   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2304275   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2304276   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2304277   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2304278   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2304279   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2304280   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2304281   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2304282   +END;
MPRINT(EM_DIAGRAM):   END;
2304283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2304284   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2304285   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2304286   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2304287   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2304288   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2304289   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2304290   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2304291   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2304292   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2304293   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2304294   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2304295   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2304296   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2304297   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2304298   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2304299   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2304300   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2304301   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2304302   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2304303   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2304304   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2304305   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2304306   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2304307   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2304308   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2304309   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2304310   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2304311   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2304312   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2304313   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2304314   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2304315   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2304316   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2304317   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2304318   +   ELSE S_NumCatalogPurchases
2304319   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2304320   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2304321   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2304322   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2304323   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2304324   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2304325   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2304326   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2304327   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2304328   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2304329   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2304330   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2304331   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2304332   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2304333   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2304334   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2304335   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2304336   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2304337   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2304338   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2304339   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2304340   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2304341   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2304342   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2304343   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2304344   +END;
MPRINT(EM_DIAGRAM):   END;
2304345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304346   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2304347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304349   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2304350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304352   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2304353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2304355   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2304356   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2304357   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2304358   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2304359   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2304360   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2304361   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2304362   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2304363   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2304364   +          +      0.1112677116841 * S_NumDealsPurchases
2304365   +          +     0.01563584187072 * S_NumDistPurchases
2304366   +          +     0.19193969522995 * S_NumStorePurchases
2304367   +          +      0.3133556199984 * S_NumWebPurchases
2304368   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2304369   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2304370   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2304371   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2304372   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2304373   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2304374   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2304375   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2304376   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2304377   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2304378   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2304379   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2304380   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2304381   +          +     0.30225032753275 * S_NumDealsPurchases
2304382   +          +     0.33833359923595 * S_NumDistPurchases
2304383   +          +    -0.20255599575849 * S_NumStorePurchases
2304384   +          +    -0.12040071168942 * S_NumWebPurchases
2304385   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2304386   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2304387   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2304388   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2304389   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2304390   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2304391   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2304392   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2304393   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2304394   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2304395   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2304396   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2304397   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2304398   +          +     0.16792903091627 * S_NumDealsPurchases
2304399   +          +    -0.37408945626745 * S_NumDistPurchases
2304400   +          +    -0.18067262995566 * S_NumStorePurchases
2304401   +          +     0.21192146789881 * S_NumWebPurchases
2304402   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2304403   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2304404   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2304405   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2304406   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2304407   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2304408   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2304409   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2304410   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2304411   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2304412   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2304413   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2304414   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2304415   +          +     0.29407429399136 * S_NumDealsPurchases
2304416   +          +     0.01610745252195 * S_NumDistPurchases
2304417   +          +    -0.17767939085628 * S_NumStorePurchases
2304418   +          +    -0.15168958538637 * S_NumWebPurchases
2304419   +          +     0.17433622143988 * S_NumWebVisitsMonth
2304420   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2304421   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2304422   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2304423   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2304424   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2304425   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2304426   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2304427   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2304428   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2304429   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2304430   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2304431   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2304432   +          +    -0.37976451362108 * S_NumDealsPurchases
2304433   +          +    -0.17027731520801 * S_NumDistPurchases
2304434   +          +     0.59849493667087 * S_NumStorePurchases
2304435   +          +     0.65481480560301 * S_NumWebPurchases
2304436   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2304437   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2304438   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2304439   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2304440   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2304441   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2304442   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2304443   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2304444   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2304445   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2304446   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2304447   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2304448   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2304449   +          +    -0.07686699131623 * S_NumDealsPurchases
2304450   +          +    -0.07220460738926 * S_NumDistPurchases
2304451   +          +    -0.06554027468389 * S_NumStorePurchases
2304452   +          +     0.10422838158001 * S_NumWebPurchases
2304453   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2304454   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2304455   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2304456   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2304457   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2304458   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2304459   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2304460   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2304461   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2304462   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2304463   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2304464   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2304465   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2304466   +          +    -0.07920122387563 * S_NumDealsPurchases
2304467   +          +      0.3649244061347 * S_NumDistPurchases
2304468   +          +     0.36475853688403 * S_NumStorePurchases
2304469   +          +     0.02153991404063 * S_NumWebPurchases
2304470   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2304471   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2304472   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2304473   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2304474   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2304475   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2304476   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2304477   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2304478   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2304479   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2304480   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2304481   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2304482   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2304483   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2304484   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2304485   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2304486   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2304487   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2304488   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2304489   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2304490   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2304491   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2304492   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2304493   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2304494   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2304495   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2304496   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2304497   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2304498   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2304499   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2304500   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2304501   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2304502   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2304503   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2304504   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2304505   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2304506   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2304507   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2304508   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2304509   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2304510   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2304511   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2304512   +          +     0.07744097241553 * Marital_StatusDivorced
2304513   +          +     -0.0247463100385 * Marital_StatusMarried
2304514   +          +     0.05804915234573 * Marital_StatusSingle
2304515   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2304516   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2304517   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2304518   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2304519   +          +     0.01390668926269 * Marital_StatusDivorced
2304520   +          +     0.01136282152074 * Marital_StatusMarried
2304521   +          +     0.12450246418789 * Marital_StatusSingle
2304522   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2304523   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2304524   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2304525   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2304526   +          +    -0.19133456931879 * Marital_StatusDivorced
2304527   +          +     0.56263566654996 * Marital_StatusMarried
2304528   +          +    -0.42172822038882 * Marital_StatusSingle
2304529   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2304530   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2304531   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2304532   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2304533   +          +    -0.19871205065609 * Marital_StatusDivorced
2304534   +          +    -0.14730795681603 * Marital_StatusMarried
2304535   +          +     0.05055432510362 * Marital_StatusSingle
2304536   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2304537   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2304538   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2304539   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2304540   +          +    -0.35623807358995 * Marital_StatusDivorced
2304541   +          +     0.30324726283965 * Marital_StatusMarried
2304542   +          +    -0.18561093467927 * Marital_StatusSingle
2304543   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2304544   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2304545   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2304546   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2304547   +          +     0.11581014663368 * Marital_StatusDivorced
2304548   +          +    -0.31070638037659 * Marital_StatusMarried
2304549   +          +     0.17131747253949 * Marital_StatusSingle
2304550   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2304551   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2304552   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2304553   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2304554   +          +    -0.42450599871892 * Marital_StatusDivorced
2304555   +          +     0.48162905075885 * Marital_StatusMarried
2304556   +          +    -0.26618507749283 * Marital_StatusSingle
2304557   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2304558   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2304559   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2304560   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2304561   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2304562   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2304563   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2304564   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2304565   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2304566   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2304567   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2304568   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2304569   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2304570   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2304571   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2304572   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2304573   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2304574   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2304575   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2304576   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2304577   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2304578   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2304579   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2304580   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2304581   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2304582   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2304583   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2304584   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2304585   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2304586   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2304587   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2304588   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2304589   +END;
MPRINT(EM_DIAGRAM):   END;
2304590   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2304591   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2304592   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2304593   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2304594   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2304595   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2304596   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2304597   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2304598   +END;
MPRINT(EM_DIAGRAM):   END;
2304599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304600   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2304601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2304603   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2304604   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2304605   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2304606   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2304607   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2304608   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2304609   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2304610   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2304611   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2304612   +          +     1.96719021971894 * S_NumDealsPurchases
2304613   +          +    -0.44535354794671 * S_NumDistPurchases
2304614   +          +    -0.54827762736866 * S_NumStorePurchases
2304615   +          +     1.02703310241897 * S_NumWebPurchases
2304616   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2304617   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2304618   +        S_RMntFrq  +       0.651688575044 * S_Recency
2304619   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2304620   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2304621   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2304622   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2304623   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2304624   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2304625   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2304626   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2304627   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2304628   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2304629   +          +     1.34659447971131 * S_NumDealsPurchases
2304630   +          +    -0.51624251310423 * S_NumDistPurchases
2304631   +          +      -1.283121574848 * S_NumStorePurchases
2304632   +          +    -1.83517806228926 * S_NumWebPurchases
2304633   +          +     0.51321339475285 * S_NumWebVisitsMonth
2304634   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2304635   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2304636   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2304637   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2304638   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2304639   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2304640   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2304641   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2304642   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2304643   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2304644   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2304645   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2304646   +          +     0.67492297345004 * S_NumDealsPurchases
2304647   +          +    -0.40437875375926 * S_NumDistPurchases
2304648   +          +     0.36322603681545 * S_NumStorePurchases
2304649   +          +    -1.15315070635524 * S_NumWebPurchases
2304650   +          +     1.20707272201156 * S_NumWebVisitsMonth
2304651   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2304652   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2304653   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2304654   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2304655   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2304656   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2304657   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2304658   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2304659   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2304660   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2304661   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2304662   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2304663   +          +    -0.41427983342148 * S_NumDealsPurchases
2304664   +          +    -0.22714305629205 * S_NumDistPurchases
2304665   +          +    -0.78763182048862 * S_NumStorePurchases
2304666   +          +    -0.26669253451501 * S_NumWebPurchases
2304667   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2304668   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2304669   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2304670   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2304671   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2304672   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2304673   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2304674   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2304675   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2304676   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2304677   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2304678   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2304679   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2304680   +          +      0.7697882092212 * S_NumDealsPurchases
2304681   +          +     0.51864835453056 * S_NumDistPurchases
2304682   +          +    -1.18320366630444 * S_NumStorePurchases
2304683   +          +     -0.6608394639529 * S_NumWebPurchases
2304684   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2304685   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2304686   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2304687   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2304688   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2304689   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2304690   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2304691   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2304692   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2304693   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2304694   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2304695   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2304696   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2304697   +          +     1.45707983202269 * S_NumDealsPurchases
2304698   +          +     0.83341887728641 * S_NumDistPurchases
2304699   +          +    -0.36664450469423 * S_NumStorePurchases
2304700   +          +     0.63911579043339 * S_NumWebPurchases
2304701   +          +     0.67144790303554 * S_NumWebVisitsMonth
2304702   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2304703   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2304704   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2304705   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2304706   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2304707   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2304708   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2304709   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2304710   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2304711   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2304712   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2304713   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2304714   +          +     0.68491896063662 * S_NumDealsPurchases
2304715   +          +      0.5386312048592 * S_NumDistPurchases
2304716   +          +     1.28108942503912 * S_NumStorePurchases
2304717   +          +    -0.88282270505969 * S_NumWebPurchases
2304718   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2304719   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2304720   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2304721   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2304722   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2304723   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2304724   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2304725   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2304726   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2304727   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2304728   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2304729   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2304730   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2304731   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2304732   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2304733   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2304734   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2304735   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2304736   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2304737   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2304738   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2304739   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2304740   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2304741   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2304742   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2304743   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2304744   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2304745   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2304746   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2304747   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2304748   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2304749   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2304750   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2304751   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2304752   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2304753   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2304754   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2304755   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2304756   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2304757   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2304758   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2304759   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2304760   +          +    -3.97961426831865 * Marital_StatusDivorced
2304761   +          +     0.00932639813867 * Marital_StatusMarried
2304762   +          +     1.29310186574718 * Marital_StatusSingle
2304763   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2304764   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2304765   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2304766   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2304767   +          +    -0.30358516578188 * Marital_StatusDivorced
2304768   +          +    -0.96176709360703 * Marital_StatusMarried
2304769   +          +     1.26977690921649 * Marital_StatusSingle
2304770   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2304771   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2304772   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2304773   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2304774   +          +     0.55272671490757 * Marital_StatusDivorced
2304775   +          +      0.1499239288334 * Marital_StatusMarried
2304776   +          +    -0.46840941760604 * Marital_StatusSingle
2304777   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2304778   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2304779   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2304780   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2304781   +          +      -1.240735370138 * Marital_StatusDivorced
2304782   +          +    -1.20089294883599 * Marital_StatusMarried
2304783   +          +     0.57492674426149 * Marital_StatusSingle
2304784   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2304785   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2304786   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2304787   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2304788   +          +     1.05435442049802 * Marital_StatusDivorced
2304789   +          +      0.3571256349717 * Marital_StatusMarried
2304790   +          +    -0.44741267266578 * Marital_StatusSingle
2304791   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2304792   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2304793   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2304794   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2304795   +          +     2.06026721980778 * Marital_StatusDivorced
2304796   +          +    -0.49583258645166 * Marital_StatusMarried
2304797   +          +    -1.14824900824474 * Marital_StatusSingle
2304798   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2304799   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2304800   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2304801   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2304802   +          +     -1.1890908607447 * Marital_StatusDivorced
2304803   +          +    -0.46668809907123 * Marital_StatusMarried
2304804   +          +     1.20342564763422 * Marital_StatusSingle
2304805   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2304806   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2304807   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2304808   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2304809   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2304810   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2304811   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2304812   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2304813   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2304814   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2304815   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2304816   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2304817   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2304818   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2304819   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2304820   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2304821   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2304822   +END;
MPRINT(EM_DIAGRAM):   END;
2304823   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2304824   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2304825   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2304826   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2304827   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2304828   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2304829   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2304830   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2304831   +END;
MPRINT(EM_DIAGRAM):   END;
2304832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304833   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2304834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2304836   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2304837   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2304838   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2304839   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2304840   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2304841   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2304842   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2304843   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2304844   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2304845   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2304846   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2304847   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2304848   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2304849   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2304850   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2304851   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2304852   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2304853   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2304854   +END;
MPRINT(EM_DIAGRAM):   END;
2304855   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2304856   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2304857   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2304858   +END;
MPRINT(EM_DIAGRAM):   END;
2304859   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2304860   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2304861   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2304862   +END;
MPRINT(EM_DIAGRAM):   END;
2304863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304864   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2304865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2304866   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2304867   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2304868   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2304869   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2304870   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2304871   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2304872   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2304873   +END;
MPRINT(EM_DIAGRAM):   END;
2304874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2304875   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2304876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2304877   +drop
2304878   +H1x1_1
2304879   +H1x1_2
2304880   +H1x1_3
2304881   +H1x1_4
2304882   +H1x1_5
2304883   +H1x1_6
2304884   +H1x1_7
2304885   +H1x2_1
2304886   +H1x2_2
2304887   +H1x2_3
2304888   +H1x2_4
2304889   +H1x2_5
2304890   +H1x2_6
2304891   +H1x2_7
2304892   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2304893   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2304894    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2304895    quit;
2304896    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2304897    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2304898    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2304899    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2304900    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2304901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304902    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2304903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304905    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2304906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304907    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2304909    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2304910    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2304911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304912    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2304913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2304914    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2304915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304916    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2304918    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2304919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304920    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304921    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2304922    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2304922  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.
 
2304923    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304924    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2304925    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304926    filename _pref
2304926  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2304927    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2304928    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2304929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2304930   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2304931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2304932   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2304933   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2304934   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2304935    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2304936    quit;
2304937    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2304938    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2304939    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2304940    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2304941    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2304942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304943    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2304944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304946    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2304947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304949    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2304950    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2304951    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2304952    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304953    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2304954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2304955    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2304956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304958    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2304959    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2304960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304961    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304962    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2304963    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2304963  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2304964    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304965    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2304966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304967    filename _pref
2304967  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2304968    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2304969    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2304970   +
2304971   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2304972   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2304972  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2304973   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2304974   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2304975   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2304976   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2304977   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2304978    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2304979    quit;
2304980    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2304981    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2304982    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2304983    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2304984    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2304985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304986    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2304987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304989    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2304990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2304991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2304992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2304993    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2304994    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2304995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304996    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2304997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2304998    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2304999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2305002    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2305003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305004    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305005    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2305006    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2305006  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2305007    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305008    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2305009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305010    filename _pref
2305010  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2305011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2305012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2305013   +
2305014   +
2305015   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2305016   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2305017   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2305018   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2305019   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2305020   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305021   +
2305022   +
2305023   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2305024   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2305025   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2305026   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2305027   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2305028   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305029   +
2305030   +
2305031   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2305032   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2305033   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2305034   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2305035   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2305036   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305037   +
2305038   +
2305039   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2305040   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2305041   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2305042   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2305043   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2305044   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305045   +
2305046   +
2305047   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2305048   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2305049   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2305050   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2305051   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2305052   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305053   +
2305054   +
2305055   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2305056   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2305057   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2305058   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2305059   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2305060   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305061   +
2305062   +
2305063   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2305064   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2305065   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2305066   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2305067   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2305068   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305069   +
2305070   +
2305071   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2305072   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2305073   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2305074   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2305075   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2305076   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2305077   +if
2305078   +_FILTERNORM1 not in ( '.')
2305079   + and
2305080   +_FILTERNORM2 not in ( '.')
2305081   + and
2305082   +_FILTERNORM3 not in ( '.')
2305083   + and
2305084   +_FILTERNORM4 not in ( '.')
2305085   + and
2305086   +_FILTERNORM5 not in ( '.')
2305087   + and
2305088   +_FILTERNORM6 not in ( '.')
2305089   + and
2305090   +_FILTERNORM7 not in ( ' ')
2305091   + and
2305092   +_FILTERNORM8 not in ( ' ')
2305093   +and
2305094   +( Dt_Customer ne .)
2305095   +and ( Income ne . and (Income<=107000))
2305096   +and ( Kidhome ne .)
2305097   +and ( MntFishProducts ne .)
2305098   +and ( MntFruits ne .)
2305099   +and ( MntGoldProds ne .)
2305100   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2305101   +and ( MntSweetProducts ne .)
2305102   +and ( MntWines ne .)
2305103   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2305104   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2305105   +and ( NumStorePurchases ne .)
2305106   +and ( NumWebPurchases ne .)
2305107   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2305108   +and ( Recency ne .)
2305109   +and ( Teenhome ne .)
2305110   +and ( Year_Birth ne .)
2305111   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2305112   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2305113   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2305114   +end;
MPRINT(EM_DIAGRAM):   end;
2305115   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2305116   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2305117    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2305118    quit;
2305119    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2305120    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2305121    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2305122    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2305123    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2305124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305125    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2305126    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305128    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2305129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2305132    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2305133    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2305134    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305135    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2305136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2305137    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2305138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2305141    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2305142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305143    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305144    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2305145    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2305145  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2305146    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305147    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
2305148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305149    %macro varDept(fcmpdata=,id=);
2305150    %global nobs&id scoreFlag&id;
2305151    %let scoreFlag&id = 0;
2305152    %if &id=1 or ^&fcmpStart %then %do;
2305153    proc sort data=&fcmpdata out=_temp&id nodupkey;
2305154    by NAME;
2305155    where id=&id and LHS in( %let j=1;
2305156    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2305157    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2305158    "&var" %let j = %eval(&j+1);
2305159    %end;
2305160    );
2305161    run;
2305162    %let dsid = %sysfunc(open(_temp&id));
2305163    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2305164    %let dsid = %sysfunc(close(&dsid));
2305165    %if &&nobs&id %then %do;
2305166    %let scoreFlag&id = 1;
2305167    %let fcmpStart = 1;
2305168    %end;
2305169    %else %let fcmpStart = 0;
2305170    %end;
2305171    %else %do;
2305172    proc sort data=&fcmpdata out=_tempid;
2305173    where id=&id;
2305174    by LHS;
2305175    run;
2305176    %let dsid = %sysfunc(open(_tempid));
2305177    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2305178    %let dsid = %sysfunc(close(&dsid));
2305179    %if ^&&nobs&id %then %do;
2305180    proc datasets lib=work nolist;
2305181    delete _tempid;
2305182    run;
2305183    quit;
2305184    %end;
2305185    %else %do;
2305186    data _tempAll;
2305187    set %let j=%eval(&id-1);
2305188    %do x=1 %to &j;
2305189    %if &&nobs&x %then %do;
2305190    _temp&x %end;
2305191    %end;
2305192    ;
2305193    run;
2305194    proc sql;
2305195    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2305195  ! work._tempid p2 where p.name=p2.lhs;
2305196    quit;
2305197    data _temp&id;
2305198    set _temp&id;
2305199    where LHS ne '' and NAME ne '' and Node ne '';
2305200    run;
2305201    proc datasets lib=work nolist;
2305202    delete _tempAll;
2305203    run;
2305204    %let dsid = %sysfunc(open(_temp&id));
2305205    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2305206    %let dsid = %sysfunc(close(&dsid));
2305207    %if ^&&nobs&id %then %do;
2305208    proc datasets lib=work nolist;
2305209    delete _temp&id;
2305210    run;
2305211    quit;
2305212    %end;
2305213    %else %do;
2305214    %let scoreFlag&id = 1;
2305215    data _temp&id;
2305216    set _temp&id;
2305217    where LHS ne NAME and node ne '';
2305218    run;
2305219    %let dsid = %sysfunc(open(_temp&id));
2305220    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2305221    %let dsid = %sysfunc(close(&dsid));
2305222    %if ^&&nobs&id %then %do;
2305223    proc datasets lib=work nolist;
2305224    delete _temp&id;
2305225    run;
2305226    quit;
2305227    %end;
2305228    %else %do;
2305229    proc sort data=_temp&id nodupkey;
2305230    by LHS NAME;
2305231    run;
2305232    %end;
2305233    %end;
2305234    %end;
2305235    %end;
2305236    %mend varDept;
2305237    %macro optCode(outdata=fcmpdata);
2305238    %global fcmpStart;
2305239    %let fcmpStart = 0;
2305240    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2305241    %let NumNodes=9;
2305242    %do k=1 %to &NumNodes;
2305243    %vardept(fcmpdata=&outdata, id=&k);
2305244    %end;
2305245    %mend optCode;
2305246    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2305247    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2305248    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2305249    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2305250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305251    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2305252    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2305253    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2305254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305255    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2305256    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2305256  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2305257    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305258    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2305259    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2305260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305261    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2305262    * Ensmbl37: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing metadata for TRAIN data;
2305263    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl37_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl37_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl37_TRAIN out=WORK.M0BZWBOX noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BZWBOX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BZWBOX(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BZWBOX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BZWBOX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M16PAI02 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3E8IVHL(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   set WORK.M16PAI02;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl37";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl37";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2305583    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2305584    set EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO;
2305585    where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2305586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_EMINFO.
      WHERE (DATA='Ensmbl37') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305587    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMINFO;
2305588    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2305589    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2305590    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2305594    run;
2305595    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
2305596    set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
2305597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305598    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
2305599    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2305600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305601    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2305602    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2305603    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305604    proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2305605    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2305606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305607    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
2305608    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2305609    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2305610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305611    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2305612    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2305613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2305614    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GV5OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GV5OUT new;
MPRINT(EM_DIAGRAM):   run;
2305638    data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMOUTFIT;
2305639    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
2305640    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2305641    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2305641  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2305642    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2305643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305644    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
2305645    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2305646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305647    %let _EMwarndup = 0;
2305648    %let _EMtargetdup =;
2305649    %let _EMASEtargetdup =;
2305650    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2305651    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
2305652    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2305653    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2305654    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2305655    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2305656    end;
MPRINT(EM_DIAGRAM):   end;
2305657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305658    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
2305659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.AUTONEURAL6_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305661    proc sort data=EMWS8.Ensmbl37_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl37_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2305662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305664    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2305665    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2305666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2305667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2305668    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2305669    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
2305670    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2305670  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2305671    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2305672    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2305673    set EMWS8.Ensmbl37_TRAIN(keep=
2305674    F_DepVar
2305675    I_DepVar
2305676    P_DepVar0
2305677    P_DepVar1
2305678    R_DepVar0
2305679    R_DepVar1
2305680    U_DepVar
2305681    _WARN_
2305682    DepVar
2305683    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2305684    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.29 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL37_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_1I4JC07 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_1I4JC07;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1I4JC07(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1I4JC07;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1I4JC07;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000207846 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2309950    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2309951    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
2309952    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2309952  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2309953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2309954    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2309955    set EMWS8.Ensmbl37_VALIDATE(keep=
2309956    F_DepVar
2309957    I_DepVar
2309958    P_DepVar0
2309959    P_DepVar1
2309960    R_DepVar0
2309961    R_DepVar1
2309962    U_DepVar
2309963    _WARN_
2309964    DepVar
2309965    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2309966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL37_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_0HBNULS nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_0HBNULS;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_0HBNULS(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMCLASSIFICATION WORK.Ensmbl37_0HBNULS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_0HBNULS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000209436 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2314241    %let _cn = %sysfunc(getoption(CENTER));
2314242    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2314243    proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
2314244    var STAT LABEL TRAIN
2314245    VALIDATE
2314246    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2314247    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2314248    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2314249    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2314250    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2000.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2314251    title10;
MPRINT(EM_DIAGRAM):   title10;
2314252    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2314253    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
2314254    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2314255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL37_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2314256    %let _cn = %sysfunc(getoption(CENTER));
2314257    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2314258    proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
2314259    var from into pct_row pct_col count percent
2314260    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2314261    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2314262    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2314263    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2314264    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2314265    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2314266    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2314267    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2314268    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2314269    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2314270    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2314271    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2001.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2314272    title9;
MPRINT(EM_DIAGRAM):   title9;
2314273    title10;
MPRINT(EM_DIAGRAM):   title10;
2314274    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2314275    %let _cn = %sysfunc(getoption(CENTER));
2314276    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2314277    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMEVENTREPORT;
2314278    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2314278  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2314279    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2314279  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2314279  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2314279  ! FALSEEVENT
2314280    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2314280  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2314280  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2314281       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2314282    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2314283    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2314284    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2314285    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2314286    set EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT;
2314287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL37_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2314288    proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
2314289    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2314290    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2314291    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2314292    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 2002.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2314293    title10;
MPRINT(EM_DIAGRAM):   title10;
2314294    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2314295    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2314296    modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2314297    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2314298    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2314298  ! ;
MPRINT(EM_DIAGRAM):   run;
2314299    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMRANK.DATA.
2314300    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
2314301    %let _cn = %sysfunc(getoption(CENTER));
2314302    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2314303    proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
2314304    var
2314305    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2314306    by
2314307    notsorted DATAROLE
2314308    notsorted TARGET
2314309    notsorted TARGETLABEL
2314310    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2314311    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2314312    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2314313    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2003.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2314314    title10;
MPRINT(EM_DIAGRAM):   title10;
2314315    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2314316    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2314317    modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2314318    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2314318  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2314319    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2314319  ! ;
MPRINT(EM_DIAGRAM):   run;
2314320    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMSCOREDIST.DATA.
2314321    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
