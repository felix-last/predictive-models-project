*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                11.35 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                11.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E5R2SA
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E5R2SA new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[398539] MAX=1 EXCEEDMAXVALUE='' )[398543] )[398537]
VALIDCHOICES=(CHOICE1='Y' )[398541] )[398825] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[398547]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[398551] )[398549] )[398545] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[398555]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[398561] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[398559] )[398557] )[398553] )[398535]
4093066    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl37_VariableSet noprint;
4093067    table ROLE*LEVEL/out=WORK.Ensmbl37META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl37META;
4093068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.ENSMBL37META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4093069    proc print data=WORK.Ensmbl37META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37META label noobs;
4093070    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
4093071    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
4093071  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
4093071  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
4093072    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4093073    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
4093074    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL37META.
NOTE: The PROCEDURE PRINT printed page 3432.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4093075    title10;
MPRINT(EM_DIAGRAM):   title10;
4093076    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural6_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
4093105    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
4093106    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
4093107    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
4093107  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
4093107  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
4093108       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
4093108  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
4093108  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
4093109    set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
4093110    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
4093111    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
4093112    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
4093113    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
4093114    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
4093115    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
4093116    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
4093117    end;
MPRINT(EM_DIAGRAM):   end;
4093118    output;
MPRINT(EM_DIAGRAM):   output;
4093119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL37_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4093120    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4093121    proc print data=WORK.Ensmbl37_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37_EVENT noobs label;
4093122    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
4093123    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4093124    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
4093125    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL37_EVENT.
NOTE: The PROCEDURE PRINT printed page 3433.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093126    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
4093127    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
4093128    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
4093129    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
4093130    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
4093130  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
4093130  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
4093131    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4093132    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
4093133    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3434.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4093134    title10;
MPRINT(EM_DIAGRAM):   title10;
4093135    %let groupid =;
4093136    %let endGroupid =;
4093137    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093138    set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
4093139    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093139  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093140    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093141    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093143    %let groupid =;
4093144    %let endGroupid =;
4093145    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093146    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
4093147    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093147  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093148    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093149    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093151    %let groupid =;
4093152    %let endGroupid =;
4093153    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093154    set EMWS8.AutoNeural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural8_EMINFO;
4093155    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093155  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093156    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093157    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093159    %let groupid =;
4093160    %let endGroupid =;
4093161    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093162    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
4093163    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093163  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093164    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093165    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093167    %let groupid =;
4093168    %let endGroupid =;
4093169    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093170    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
4093171    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093171  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093172    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093173    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093175    %let groupid =;
4093176    %let endGroupid =;
4093177    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093178    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
4093179    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093179  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093180    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093181    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093183    %let groupid =;
4093184    %let endGroupid =;
4093185    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4093186    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
4093187    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4093187  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4093188    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4093189    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4093190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093191    data WORK.Ensmbl37;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37;
4093192    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
4093193    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
4093193  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
4093194    nodeid="AUTONEURAL6";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL6";
4093195    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093196    output;
MPRINT(EM_DIAGRAM):   output;
4093197    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
4093198    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093199    output;
MPRINT(EM_DIAGRAM):   output;
4093200    nodeid="AUTONEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL8";
4093201    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093202    output;
MPRINT(EM_DIAGRAM):   output;
4093203    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
4093204    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093205    output;
MPRINT(EM_DIAGRAM):   output;
4093206    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
4093207    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093208    output;
MPRINT(EM_DIAGRAM):   output;
4093209    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
4093210    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093211    output;
MPRINT(EM_DIAGRAM):   output;
4093212    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
4093213    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4093214    output;
MPRINT(EM_DIAGRAM):   output;
4093215    ;
MPRINT(EM_DIAGRAM):   ;
4093216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL37 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093217    title;
MPRINT(EM_DIAGRAM):   title;
4093218    proc print data=WORK.Ensmbl37 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl37 label noobs;
4093219    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
4093220    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
4093221    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL37.
NOTE: The PROCEDURE PRINT printed page 3435.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4093222    title9;
MPRINT(EM_DIAGRAM):   title9;
4093223    title10;
MPRINT(EM_DIAGRAM):   title10;
4093224    data WORK.M37SYT_U;
MPRINT(EM_DIAGRAM):    data WORK.M37SYT_U;
4093225    set WORK.M37SYT_U;
MPRINT(EM_DIAGRAM):   set WORK.M37SYT_U;
4093226    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
4093227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M37SYT_U.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M37SYT_U has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4093228    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
4093229    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
4093230    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4093231    %macro DMDBClass;
4093232        DepVar(DESC)
4093233    %mend DMDBClass;
4093234    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4093235    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
4093236    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4093237    %macro DMDBVar;
4093238
4093239    %mend DMDBVar;
4093240    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093241    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
4093242    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093243    proc dmdb batch data=EMWS8.AutoNeural6_TRAIN
4093244    dmdbcat=WORK.EM_DMDB
4093245    maxlevel = 513
4093246    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural6_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
4093247    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
4093248    target
4093249    DepVar
4093250    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
4093251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
4093252    quit;
4093253    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1KG7INQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1KG7INQ new;
MPRINT(EM_DIAGRAM):   run;
4093355    filename emflow
4093355  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093356    *------------------------------------------------------------*;
4093357    * Ensmbl37: Scoring AUTONEURAL6_TRAIN data;
4093358    *------------------------------------------------------------*;
4093359    data EMWS8.Ensmbl37_TRAIN
4093360    / view=EMWS8.Ensmbl37_TRAIN
4093361    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_TRAIN / view=EMWS8.Ensmbl37_TRAIN ;
4093362    set EMWS8.AutoNeural6_TRAIN
4093363    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
4093364    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
4093365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093366   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
4093367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093368   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
4093369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093371   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4093372   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4093373   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4093374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093376   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4093377   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4093378   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4093379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093381   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4093382   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4093383   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4093384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093386   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4093387   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4093388   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4093389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093390   +
4093391   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4093392   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4093392  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4093393   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4093394   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4093395   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4093396   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4093397   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4093398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093399   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4093400   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4093401   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4093402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093404   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4093405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093406   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4093407   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4093408   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4093409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093410   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4093411   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4093412   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4093413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093415   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4093416   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4093417   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4093418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093420   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4093421   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4093422   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4093423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4093424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4093425   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4093426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4093427   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4093428   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4093429   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4093430   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4093431   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4093432   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4093433   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4093434   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4093435   +LENGTH _WARN_ $4
4093436   +      F_DepVar  $ 12
4093437   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4093438   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4093439   +
4093440   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4093441   +
4093442   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4093443   +
4093444   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4093445   +
4093446   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4093447   +
4093448   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4093449   +
4093450   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4093451   +
4093452   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4093453   +
4093454   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4093455   +
4093456   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4093457   +
4093458   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4093459   +
4093460   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4093461   +
4093462   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4093463   +
4093464   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4093465   +
4093466   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4093467   +
4093468   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4093469   +
4093470   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4093471   +
4093472   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4093473   +
4093474   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4093475   +
4093476   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4093477   +
4093478   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4093479   +
4093480   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4093481   +
4093482   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4093483   +
4093484   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4093485   +
4093486   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4093487   +
4093488   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4093489   +
4093490   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4093491   +
4093492   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4093493   +
4093494   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4093495   +
4093496   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4093497   +
4093498   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4093499   +
4093500   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4093501   +
4093502   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4093503   +
4093504   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4093505   +
4093506   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4093507   +
4093508   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4093509   +
4093510   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4093511   +
4093512   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4093513   +
4093514   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4093515   +
4093516   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4093517   +
4093518   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4093519   +
4093520   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4093521   +
4093522   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4093523   +
4093524   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4093525   +
4093526   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4093527   +
4093528   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4093529   +
4093530   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4093531   +
4093532   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4093533   +
4093534   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4093535   +
4093536   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4093537   +
4093538   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4093539   +
4093540   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4093541   +
4093542   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4093543   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4093544   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4093545   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4093546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093548   +end;
MPRINT(EM_DIAGRAM):   end;
4093549   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093551   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4093552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093553   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093554   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4093555   +   end;
MPRINT(EM_DIAGRAM):   end;
4093556   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093557   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4093558   +   end;
MPRINT(EM_DIAGRAM):   end;
4093559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093560   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4093561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093563   +   end;
MPRINT(EM_DIAGRAM):   end;
4093564   +end;
MPRINT(EM_DIAGRAM):   end;
4093565   +
4093566   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4093567   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4093568   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4093569   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4093570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093572   +end;
MPRINT(EM_DIAGRAM):   end;
4093573   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093574   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093575   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4093576   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093577   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093578   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4093579   +   end;
MPRINT(EM_DIAGRAM):   end;
4093580   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093581   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4093582   +   end;
MPRINT(EM_DIAGRAM):   end;
4093583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093584   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4093585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093587   +   end;
MPRINT(EM_DIAGRAM):   end;
4093588   +end;
MPRINT(EM_DIAGRAM):   end;
4093589   +
4093590   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4093591   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4093592   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4093593   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4093594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093596   +end;
MPRINT(EM_DIAGRAM):   end;
4093597   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093599   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4093600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093601   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093602   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4093603   +   end;
MPRINT(EM_DIAGRAM):   end;
4093604   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093605   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4093606   +   end;
MPRINT(EM_DIAGRAM):   end;
4093607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093608   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4093609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093611   +   end;
MPRINT(EM_DIAGRAM):   end;
4093612   +end;
MPRINT(EM_DIAGRAM):   end;
4093613   +
4093614   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4093615   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4093616   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4093617   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4093618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093620   +end;
MPRINT(EM_DIAGRAM):   end;
4093621   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093622   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093623   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4093624   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093625   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093626   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4093627   +   end;
MPRINT(EM_DIAGRAM):   end;
4093628   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093629   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4093630   +   end;
MPRINT(EM_DIAGRAM):   end;
4093631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093632   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4093633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093635   +   end;
MPRINT(EM_DIAGRAM):   end;
4093636   +end;
MPRINT(EM_DIAGRAM):   end;
4093637   +
4093638   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4093639   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4093640   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4093641   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4093642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093644   +end;
MPRINT(EM_DIAGRAM):   end;
4093645   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093646   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093647   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4093648   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093649   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093650   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4093651   +   end;
MPRINT(EM_DIAGRAM):   end;
4093652   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093653   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4093654   +   end;
MPRINT(EM_DIAGRAM):   end;
4093655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093656   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4093657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093659   +   end;
MPRINT(EM_DIAGRAM):   end;
4093660   +end;
MPRINT(EM_DIAGRAM):   end;
4093661   +
4093662   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4093663   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4093664   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4093665   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4093666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093668   +end;
MPRINT(EM_DIAGRAM):   end;
4093669   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093670   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093671   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4093672   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093673   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4093674   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4093675   +   end;
MPRINT(EM_DIAGRAM):   end;
4093676   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4093677   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4093678   +   end;
MPRINT(EM_DIAGRAM):   end;
4093679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093680   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4093681   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093682   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093683   +   end;
MPRINT(EM_DIAGRAM):   end;
4093684   +end;
MPRINT(EM_DIAGRAM):   end;
4093685   +
4093686   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4093687   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4093688   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4093689   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4093690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093692   +end;
MPRINT(EM_DIAGRAM):   end;
4093693   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4093695   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4093696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093697   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4093698   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4093699   +   end;
MPRINT(EM_DIAGRAM):   end;
4093700   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4093701   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4093702   +   end;
MPRINT(EM_DIAGRAM):   end;
4093703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093704   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4093705   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093706   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093707   +   end;
MPRINT(EM_DIAGRAM):   end;
4093708   +end;
MPRINT(EM_DIAGRAM):   end;
4093709   +
4093710   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4093711   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4093712   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4093713   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4093714   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4093715   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4093716   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4093717   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4093718   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4093719   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4093720   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4093721   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4093722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093724   +end;
MPRINT(EM_DIAGRAM):   end;
4093725   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093726   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4093727   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4093728   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093729   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4093730   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4093731   +   end;
MPRINT(EM_DIAGRAM):   end;
4093732   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4093733   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4093734   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4093735   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4093736   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4093737   +   end;
MPRINT(EM_DIAGRAM):   end;
4093738   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4093739   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4093740   +   end;
MPRINT(EM_DIAGRAM):   end;
4093741   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4093742   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4093743   +   end;
MPRINT(EM_DIAGRAM):   end;
4093744   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4093745   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4093746   +   end;
MPRINT(EM_DIAGRAM):   end;
4093747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093748   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4093749   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4093750   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4093751   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4093752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093754   +   end;
MPRINT(EM_DIAGRAM):   end;
4093755   +end;
MPRINT(EM_DIAGRAM):   end;
4093756   +
4093757   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4093758   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4093759   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4093760   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4093761   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4093762   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4093763   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4093764   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4093765   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4093766   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4093767   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4093768   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4093769   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4093770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4093771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093772   +end;
MPRINT(EM_DIAGRAM):   end;
4093773   +else do;
MPRINT(EM_DIAGRAM):   else do;
4093774   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4093775   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4093776   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4093777   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4093778   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4093779   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4093780   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4093781   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4093782   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4093783   +         end;
MPRINT(EM_DIAGRAM):   end;
4093784   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4093785   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4093786   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4093787   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4093788   +            end;
MPRINT(EM_DIAGRAM):   end;
4093789   +         end;
MPRINT(EM_DIAGRAM):   end;
4093790   +      end;
MPRINT(EM_DIAGRAM):   end;
4093791   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4093792   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4093793   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4093794   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4093795   +         end;
MPRINT(EM_DIAGRAM):   end;
4093796   +      end;
MPRINT(EM_DIAGRAM):   end;
4093797   +   end;
MPRINT(EM_DIAGRAM):   end;
4093798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4093799   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4093800   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4093801   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4093802   +      end;
MPRINT(EM_DIAGRAM):   end;
4093803   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4093804   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4093805   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4093806   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4093807   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4093808   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4093809   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4093810   +         end;
MPRINT(EM_DIAGRAM):   end;
4093811   +      end;
MPRINT(EM_DIAGRAM):   end;
4093812   +   end;
MPRINT(EM_DIAGRAM):   end;
4093813   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4093814   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4093815   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4093816   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4093817   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4093818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4093819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093820   +   end;
MPRINT(EM_DIAGRAM):   end;
4093821   +end;
MPRINT(EM_DIAGRAM):   end;
4093822   +
4093823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093824   +*** Checking missing input Interval
4093825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4093826   +
4093827   +IF NMISS(
4093828   +   AcceptedCmpTotal ,
4093829   +   Age ,
4093830   +   Frq ,
4093831   +   Income ,
4093832   +   Kidhome ,
4093833   +   Mnt ,
4093834   +   MntFishProducts ,
4093835   +   MntFruits ,
4093836   +   MntGoldProds ,
4093837   +   MntMeatProducts ,
4093838   +   MntSweetProducts ,
4093839   +   MntWines ,
4093840   +   MonthsAsCustomer ,
4093841   +   NumCatalogPurchases ,
4093842   +   NumDealsPurchases ,
4093843   +   NumDistPurchases ,
4093844   +   NumStorePurchases ,
4093845   +   NumWebPurchases ,
4093846   +   NumWebVisitsMonth ,
4093847   +   RFMstat ,
4093848   +   RMntFrq ,
4093849   +   Recency ,
4093850   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4093851   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4093852   +
4093853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4093854   +END;
MPRINT(EM_DIAGRAM):   END;
4093855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093856   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4093857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093858   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4093859   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4093860   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4093861   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4093862   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4093863   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4093864   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4093865   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4093866   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4093867   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4093868   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4093869   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4093870   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4093871   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4093872   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4093873   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4093874   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4093875   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4093876   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4093877   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4093878   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4093879   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4093880   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4093881   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4093882   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4093883   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4093884   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4093885   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4093886   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4093887   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4093888   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4093889   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4093890   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4093891   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4093892   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4093893   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4093894   +END;
MPRINT(EM_DIAGRAM):   END;
4093895   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4093896   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4093897   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4093898   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4093899   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4093900   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4093901   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4093902   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4093903   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4093904   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4093905   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4093906   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4093907   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4093908   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4093909   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4093910   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4093911   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4093912   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4093913   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4093914   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4093915   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4093916   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4093917   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4093918   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4093919   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4093920   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4093921   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4093922   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4093923   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4093924   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4093925   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4093926   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4093927   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4093928   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4093929   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4093930   +   ELSE S_NumCatalogPurchases
4093931   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4093932   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4093933   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4093934   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4093935   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4093936   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4093937   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4093938   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4093939   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4093940   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4093941   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4093942   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4093943   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4093944   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4093945   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4093946   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4093947   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4093948   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4093949   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4093950   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4093951   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4093952   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4093953   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4093954   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4093955   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4093956   +END;
MPRINT(EM_DIAGRAM):   END;
4093957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093958   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4093959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093961   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4093962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093964   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4093965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4093966   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4093967   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4093968   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4093969   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4093970   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4093971   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4093972   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4093973   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4093974   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4093975   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4093976   +          +     -0.4295354470932 * S_NumDealsPurchases
4093977   +          +    -0.08226280459837 * S_NumDistPurchases
4093978   +          +      0.2932815275833 * S_NumStorePurchases
4093979   +          +     0.19049189042599 * S_NumWebPurchases
4093980   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4093981   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4093982   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4093983   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4093984   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4093985   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4093986   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4093987   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4093988   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4093989   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4093990   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4093991   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4093992   +          +    -0.78551174413278 * Marital_StatusDivorced
4093993   +          +     1.14162836709205 * Marital_StatusMarried
4093994   +          +    -0.85471695548675 * Marital_StatusSingle
4093995   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4093996   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4093997   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4093998   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4093999   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4094000   +END;
MPRINT(EM_DIAGRAM):   END;
4094001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094002   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4094003   +END;
MPRINT(EM_DIAGRAM):   END;
4094004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094005   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4094006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094008   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4094009   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4094010   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4094011   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4094012   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4094013   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4094014   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4094015   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4094016   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4094017   +          +      0.1710743409836 * S_NumDealsPurchases
4094018   +          +     1.10019178495427 * S_NumDistPurchases
4094019   +          +     0.06701301620472 * S_NumStorePurchases
4094020   +          +    -1.47240374003368 * S_NumWebPurchases
4094021   +          +     0.38443387640949 * S_NumWebVisitsMonth
4094022   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4094023   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4094024   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4094025   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4094026   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4094027   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4094028   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4094029   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4094030   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4094031   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4094032   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4094033   +          +    -0.36835980184757 * Marital_StatusDivorced
4094034   +          +     0.71718933679692 * Marital_StatusMarried
4094035   +          +    -0.35767236657055 * Marital_StatusSingle
4094036   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4094037   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4094038   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4094039   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4094040   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4094041   +END;
MPRINT(EM_DIAGRAM):   END;
4094042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094043   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4094044   +END;
MPRINT(EM_DIAGRAM):   END;
4094045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094046   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4094047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094048   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094049   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4094050   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4094051   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4094052   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4094053   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4094054   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4094055   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4094056   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4094057   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4094058   +          +    -1.99858075809796 * S_NumDealsPurchases
4094059   +          +    -0.37353682448701 * S_NumDistPurchases
4094060   +          +     1.16275863071649 * S_NumStorePurchases
4094061   +          +       -0.75936809253 * S_NumWebPurchases
4094062   +          +     2.17936226306026 * S_NumWebVisitsMonth
4094063   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4094064   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4094065   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4094066   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4094067   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4094068   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4094069   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4094070   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4094071   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4094072   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4094073   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4094074   +          +     0.60036315441483 * Marital_StatusDivorced
4094075   +          +    -0.94084946353672 * Marital_StatusMarried
4094076   +          +     0.34594388147374 * Marital_StatusSingle
4094077   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4094078   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4094079   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4094080   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4094081   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4094082   +END;
MPRINT(EM_DIAGRAM):   END;
4094083   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094084   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4094085   +END;
MPRINT(EM_DIAGRAM):   END;
4094086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094087   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4094088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094090   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4094091   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4094092   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4094093   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4094094   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4094095   +END;
MPRINT(EM_DIAGRAM):   END;
4094096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094097   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4094098   +END;
MPRINT(EM_DIAGRAM):   END;
4094099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094100   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4094101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094102   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094103   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4094104   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4094105   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4094106   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4094107   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4094108   +END;
MPRINT(EM_DIAGRAM):   END;
4094109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094110   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4094111   +END;
MPRINT(EM_DIAGRAM):   END;
4094112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094113   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4094114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094115   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094116   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4094117   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4094118   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4094119   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4094120   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4094121   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4094122   +END;
MPRINT(EM_DIAGRAM):   END;
4094123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094124   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4094125   +END;
MPRINT(EM_DIAGRAM):   END;
4094126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094127   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4094128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094129   +
4094130   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4094131   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4094132   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4094133   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4094134   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4094135   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094136   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4094137   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4094138   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4094139   +end;
MPRINT(EM_DIAGRAM):   end;
4094140   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094141   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4094142   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4094143   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4094144   +   end;
MPRINT(EM_DIAGRAM):   end;
4094145   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4094146   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4094147   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4094148   +   end;
MPRINT(EM_DIAGRAM):   end;
4094149   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094150   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4094151   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4094152   +   end;
MPRINT(EM_DIAGRAM):   end;
4094153   +end;
MPRINT(EM_DIAGRAM):   end;
4094154   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094155   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4094156   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4094157   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4094158   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4094159   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4094160   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4094161   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4094162   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4094163   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4094164   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4094165   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4094166   +END;
MPRINT(EM_DIAGRAM):   END;
4094167   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094168   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4094169   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4094170   +END;
MPRINT(EM_DIAGRAM):   END;
4094171   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4094172   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4094173   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4094174   +END;
MPRINT(EM_DIAGRAM):   END;
4094175   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4094176   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4094177   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4094178   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4094179   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4094180   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4094181   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4094182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094183   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4094184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094185   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4094186   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4094187   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4094188   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4094189   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4094190   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4094191   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4094192   +END;
MPRINT(EM_DIAGRAM):   END;
4094193   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4094194   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4094195   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4094196   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4094197   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4094198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094199   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4094200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094201   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4094202   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4094203   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4094204   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4094205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094206   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4094207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094208   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4094209   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4094210   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4094211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094212   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
4094213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094215   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4094216   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4094217   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4094218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094219   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4094220   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4094221   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4094222   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4094223   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4094224   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4094225   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4094226   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4094227   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4094228   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4094229   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4094230   +LENGTH _WARN_ $4
4094231   +      F_DepVar  $ 12
4094232   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4094233   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4094234   +
4094235   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4094236   +
4094237   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4094238   +
4094239   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4094240   +
4094241   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4094242   +
4094243   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4094244   +
4094245   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4094246   +
4094247   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4094248   +
4094249   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4094250   +
4094251   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4094252   +
4094253   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4094254   +
4094255   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4094256   +
4094257   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4094258   +
4094259   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4094260   +
4094261   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4094262   +
4094263   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4094264   +
4094265   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4094266   +
4094267   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4094268   +
4094269   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4094270   +
4094271   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4094272   +
4094273   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4094274   +
4094275   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4094276   +
4094277   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4094278   +
4094279   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4094280   +
4094281   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4094282   +
4094283   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4094284   +
4094285   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4094286   +
4094287   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4094288   +
4094289   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4094290   +
4094291   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4094292   +
4094293   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4094294   +
4094295   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4094296   +
4094297   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4094298   +
4094299   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4094300   +
4094301   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4094302   +
4094303   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4094304   +
4094305   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4094306   +
4094307   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4094308   +
4094309   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4094310   +
4094311   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4094312   +
4094313   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4094314   +
4094315   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4094316   +
4094317   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4094318   +
4094319   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4094320   +
4094321   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4094322   +
4094323   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4094324   +
4094325   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4094326   +
4094327   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4094328   +
4094329   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4094330   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4094331   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4094332   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4094333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094335   +end;
MPRINT(EM_DIAGRAM):   end;
4094336   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094338   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4094339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094341   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4094342   +   end;
MPRINT(EM_DIAGRAM):   end;
4094343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094344   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4094345   +   end;
MPRINT(EM_DIAGRAM):   end;
4094346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094347   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4094348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094350   +   end;
MPRINT(EM_DIAGRAM):   end;
4094351   +end;
MPRINT(EM_DIAGRAM):   end;
4094352   +
4094353   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4094354   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4094355   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4094356   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4094357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094359   +end;
MPRINT(EM_DIAGRAM):   end;
4094360   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094362   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4094363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094365   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4094366   +   end;
MPRINT(EM_DIAGRAM):   end;
4094367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094368   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4094369   +   end;
MPRINT(EM_DIAGRAM):   end;
4094370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094371   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4094372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094374   +   end;
MPRINT(EM_DIAGRAM):   end;
4094375   +end;
MPRINT(EM_DIAGRAM):   end;
4094376   +
4094377   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4094378   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4094379   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4094380   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4094381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094383   +end;
MPRINT(EM_DIAGRAM):   end;
4094384   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094386   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4094387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094389   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4094390   +   end;
MPRINT(EM_DIAGRAM):   end;
4094391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094392   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4094393   +   end;
MPRINT(EM_DIAGRAM):   end;
4094394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094395   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4094396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094398   +   end;
MPRINT(EM_DIAGRAM):   end;
4094399   +end;
MPRINT(EM_DIAGRAM):   end;
4094400   +
4094401   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4094402   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4094403   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4094404   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4094405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094407   +end;
MPRINT(EM_DIAGRAM):   end;
4094408   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094410   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4094411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094413   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4094414   +   end;
MPRINT(EM_DIAGRAM):   end;
4094415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094416   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4094417   +   end;
MPRINT(EM_DIAGRAM):   end;
4094418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094419   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4094420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094422   +   end;
MPRINT(EM_DIAGRAM):   end;
4094423   +end;
MPRINT(EM_DIAGRAM):   end;
4094424   +
4094425   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4094426   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4094427   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4094428   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4094429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094431   +end;
MPRINT(EM_DIAGRAM):   end;
4094432   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094434   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4094435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094437   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4094438   +   end;
MPRINT(EM_DIAGRAM):   end;
4094439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094440   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4094441   +   end;
MPRINT(EM_DIAGRAM):   end;
4094442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094443   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4094444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094446   +   end;
MPRINT(EM_DIAGRAM):   end;
4094447   +end;
MPRINT(EM_DIAGRAM):   end;
4094448   +
4094449   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4094450   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4094451   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4094452   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4094453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094455   +end;
MPRINT(EM_DIAGRAM):   end;
4094456   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094458   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4094459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4094461   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4094462   +   end;
MPRINT(EM_DIAGRAM):   end;
4094463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4094464   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4094465   +   end;
MPRINT(EM_DIAGRAM):   end;
4094466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094467   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4094468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094470   +   end;
MPRINT(EM_DIAGRAM):   end;
4094471   +end;
MPRINT(EM_DIAGRAM):   end;
4094472   +
4094473   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4094474   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4094475   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4094476   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4094477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094479   +end;
MPRINT(EM_DIAGRAM):   end;
4094480   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4094482   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4094483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094484   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4094485   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4094486   +   end;
MPRINT(EM_DIAGRAM):   end;
4094487   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4094488   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4094489   +   end;
MPRINT(EM_DIAGRAM):   end;
4094490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094491   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4094492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094494   +   end;
MPRINT(EM_DIAGRAM):   end;
4094495   +end;
MPRINT(EM_DIAGRAM):   end;
4094496   +
4094497   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4094498   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4094499   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4094500   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4094501   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4094502   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4094503   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4094504   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4094505   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4094506   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4094507   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4094508   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4094509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094511   +end;
MPRINT(EM_DIAGRAM):   end;
4094512   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094513   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4094514   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4094515   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094516   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4094517   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4094518   +   end;
MPRINT(EM_DIAGRAM):   end;
4094519   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4094520   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4094521   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4094522   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4094523   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4094524   +   end;
MPRINT(EM_DIAGRAM):   end;
4094525   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4094526   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4094527   +   end;
MPRINT(EM_DIAGRAM):   end;
4094528   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4094529   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4094530   +   end;
MPRINT(EM_DIAGRAM):   end;
4094531   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4094532   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4094533   +   end;
MPRINT(EM_DIAGRAM):   end;
4094534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094535   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4094536   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4094537   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4094538   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4094539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094541   +   end;
MPRINT(EM_DIAGRAM):   end;
4094542   +end;
MPRINT(EM_DIAGRAM):   end;
4094543   +
4094544   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4094545   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4094546   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4094547   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4094548   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4094549   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4094550   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4094551   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4094552   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4094553   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4094554   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4094555   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4094556   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4094557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4094558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094559   +end;
MPRINT(EM_DIAGRAM):   end;
4094560   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094561   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4094562   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4094563   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094564   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4094565   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4094566   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4094567   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4094568   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4094569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4094570   +         end;
MPRINT(EM_DIAGRAM):   end;
4094571   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4094572   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4094573   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4094574   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4094575   +            end;
MPRINT(EM_DIAGRAM):   end;
4094576   +         end;
MPRINT(EM_DIAGRAM):   end;
4094577   +      end;
MPRINT(EM_DIAGRAM):   end;
4094578   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4094579   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4094580   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4094581   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4094582   +         end;
MPRINT(EM_DIAGRAM):   end;
4094583   +      end;
MPRINT(EM_DIAGRAM):   end;
4094584   +   end;
MPRINT(EM_DIAGRAM):   end;
4094585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094586   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4094587   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4094588   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4094589   +      end;
MPRINT(EM_DIAGRAM):   end;
4094590   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4094591   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4094592   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4094593   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4094594   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4094595   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4094596   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4094597   +         end;
MPRINT(EM_DIAGRAM):   end;
4094598   +      end;
MPRINT(EM_DIAGRAM):   end;
4094599   +   end;
MPRINT(EM_DIAGRAM):   end;
4094600   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4094601   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4094602   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4094603   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4094604   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4094605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4094606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094607   +   end;
MPRINT(EM_DIAGRAM):   end;
4094608   +end;
MPRINT(EM_DIAGRAM):   end;
4094609   +
4094610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094611   +*** Checking missing input Interval
4094612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4094613   +
4094614   +IF NMISS(
4094615   +   AcceptedCmpTotal ,
4094616   +   Age ,
4094617   +   Frq ,
4094618   +   Income ,
4094619   +   Kidhome ,
4094620   +   Mnt ,
4094621   +   MntFishProducts ,
4094622   +   MntFruits ,
4094623   +   MntGoldProds ,
4094624   +   MntMeatProducts ,
4094625   +   MntSweetProducts ,
4094626   +   MntWines ,
4094627   +   MonthsAsCustomer ,
4094628   +   NumCatalogPurchases ,
4094629   +   NumDealsPurchases ,
4094630   +   NumDistPurchases ,
4094631   +   NumStorePurchases ,
4094632   +   NumWebPurchases ,
4094633   +   NumWebVisitsMonth ,
4094634   +   RFMstat ,
4094635   +   RMntFrq ,
4094636   +   Recency ,
4094637   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4094638   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4094639   +
4094640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4094641   +END;
MPRINT(EM_DIAGRAM):   END;
4094642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094643   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4094644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094646   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4094647   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4094648   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4094649   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4094650   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4094651   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4094652   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4094653   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4094654   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4094655   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4094656   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4094657   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4094658   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4094659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4094660   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4094661   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4094662   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4094663   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4094664   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4094665   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4094666   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4094667   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4094668   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4094669   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4094670   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4094671   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4094672   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4094673   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4094674   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4094675   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4094676   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4094677   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4094678   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4094679   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4094680   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4094681   +END;
MPRINT(EM_DIAGRAM):   END;
4094682   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094683   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4094684   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4094685   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4094686   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4094687   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4094688   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4094689   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4094690   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4094691   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4094692   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4094693   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4094694   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4094695   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4094696   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4094697   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4094698   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4094699   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4094700   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4094701   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4094702   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4094703   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4094704   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4094705   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4094706   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4094707   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4094708   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4094709   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4094710   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4094711   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4094712   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4094713   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4094714   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4094715   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4094716   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4094717   +   ELSE S_NumCatalogPurchases
4094718   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4094719   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4094720   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4094721   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4094722   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4094723   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4094724   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4094725   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4094726   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4094727   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4094728   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4094729   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4094730   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4094731   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4094732   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4094733   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4094734   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4094735   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4094736   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4094737   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4094738   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4094739   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4094740   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4094741   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4094742   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4094743   +END;
MPRINT(EM_DIAGRAM):   END;
4094744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094745   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4094746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094748   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4094749   +*** *************************;
The SAS System
 
MPRINT(EM_DIAGRAM):   *** *************************;
4094750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094751   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4094752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094753   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094754   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4094755   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4094756   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4094757   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4094758   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4094759   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4094760   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4094761   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4094762   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4094763   +          +     0.09708841024031 * S_NumDealsPurchases
4094764   +          +    -0.29075561032014 * S_NumDistPurchases
4094765   +          +    -0.14495394259873 * S_NumStorePurchases
4094766   +          +     0.11890705145732 * S_NumWebPurchases
4094767   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4094768   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4094769   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4094770   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4094771   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4094772   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4094773   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4094774   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4094775   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4094776   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4094777   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4094778   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4094779   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4094780   +          +     0.16274478997892 * S_NumDealsPurchases
4094781   +          +     0.03966958784582 * S_NumDistPurchases
4094782   +          +    -0.04714110726598 * S_NumStorePurchases
4094783   +          +    -0.02124229528082 * S_NumWebPurchases
4094784   +          +     0.29753299776832 * S_NumWebVisitsMonth
4094785   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4094786   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4094787   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4094788   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4094789   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4094790   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4094791   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4094792   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4094793   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4094794   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4094795   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4094796   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4094797   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4094798   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4094799   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4094800   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4094801   +          +    -0.05037639679806 * Marital_StatusDivorced
4094802   +          +     0.28781968727878 * Marital_StatusMarried
4094803   +          +    -0.20382417074384 * Marital_StatusSingle
4094804   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4094805   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4094806   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4094807   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4094808   +          +     0.06970969219123 * Marital_StatusDivorced
4094809   +          +    -0.15787475744986 * Marital_StatusMarried
4094810   +          +     0.14345344072192 * Marital_StatusSingle
4094811   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4094812   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4094813   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4094814   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4094815   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4094816   +END;
MPRINT(EM_DIAGRAM):   END;
4094817   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094818   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4094819   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4094820   +END;
MPRINT(EM_DIAGRAM):   END;
4094821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094822   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4094823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094824   +
4094825   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4094826   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4094827   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4094828   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4094829   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4094830   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4094831   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4094832   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4094833   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4094834   +end;
MPRINT(EM_DIAGRAM):   end;
4094835   +else do;
MPRINT(EM_DIAGRAM):   else do;
4094836   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4094837   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4094838   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4094839   +   end;
MPRINT(EM_DIAGRAM):   end;
4094840   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4094841   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4094842   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4094843   +   end;
MPRINT(EM_DIAGRAM):   end;
4094844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4094845   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4094846   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4094847   +   end;
MPRINT(EM_DIAGRAM):   end;
4094848   +end;
MPRINT(EM_DIAGRAM):   end;
4094849   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4094850   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4094851   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4094852   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4094853   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4094854   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4094855   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4094856   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4094857   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4094858   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4094859   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4094860   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4094861   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4094862   +END;
MPRINT(EM_DIAGRAM):   END;
4094863   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4094864   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4094865   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4094866   +END;
MPRINT(EM_DIAGRAM):   END;
4094867   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4094868   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4094869   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4094870   +END;
MPRINT(EM_DIAGRAM):   END;
4094871   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4094872   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4094873   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4094874   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4094875   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4094876   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4094877   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4094878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094879   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4094880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4094881   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4094882   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4094883   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4094884   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4094885   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4094886   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4094887   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4094888   +END;
MPRINT(EM_DIAGRAM):   END;
4094889   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4094890   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4094891   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4094892   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4094893   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4094894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094895   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4094896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094897   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4094898   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4094899   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4094900   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4094901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094902   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4094903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094904   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4094905   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4094906   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4094907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094908   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
4094909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094911   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4094912   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4094913   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4094914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4094915   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4094916   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4094917   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4094918   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4094919   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4094920   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4094921   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4094922   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4094923   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4094924   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4094925   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4094926   +LENGTH _WARN_ $4
4094927   +      F_DepVar  $ 12
4094928   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4094929   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4094930   +
4094931   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4094932   +
4094933   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4094934   +
4094935   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4094936   +
4094937   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4094938   +
4094939   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4094940   +
4094941   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4094942   +
4094943   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4094944   +
4094945   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4094946   +
4094947   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4094948   +
4094949   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4094950   +
4094951   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4094952   +
4094953   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4094954   +
4094955   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4094956   +
4094957   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4094958   +
4094959   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4094960   +
4094961   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4094962   +
4094963   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4094964   +
4094965   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4094966   +
4094967   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4094968   +
4094969   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4094970   +
4094971   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4094972   +
4094973   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4094974   +
4094975   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4094976   +
4094977   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4094978   +
4094979   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4094980   +
4094981   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4094982   +
4094983   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4094984   +
4094985   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4094986   +
4094987   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4094988   +
4094989   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4094990   +
4094991   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4094992   +
4094993   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4094994   +
4094995   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4094996   +
4094997   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4094998   +
4094999   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4095000   +
4095001   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4095002   +
4095003   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4095004   +
4095005   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4095006   +
4095007   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4095008   +
4095009   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4095010   +
4095011   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4095012   +
4095013   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4095014   +
4095015   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4095016   +
4095017   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4095018   +
4095019   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4095020   +
4095021   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4095022   +
4095023   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4095024   +
4095025   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4095026   +
4095027   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4095028   +
4095029   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4095030   +
4095031   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4095032   +
4095033   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4095034   +
4095035   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4095036   +
4095037   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4095038   +
4095039   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4095040   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4095041   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4095042   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4095043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095045   +end;
MPRINT(EM_DIAGRAM):   end;
4095046   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095048   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4095049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095051   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4095052   +   end;
MPRINT(EM_DIAGRAM):   end;
4095053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095054   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4095055   +   end;
MPRINT(EM_DIAGRAM):   end;
4095056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095057   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4095058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095060   +   end;
MPRINT(EM_DIAGRAM):   end;
4095061   +end;
MPRINT(EM_DIAGRAM):   end;
4095062   +
4095063   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4095064   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4095065   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4095066   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4095067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095069   +end;
MPRINT(EM_DIAGRAM):   end;
4095070   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095072   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4095073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095075   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4095076   +   end;
MPRINT(EM_DIAGRAM):   end;
4095077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095078   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4095079   +   end;
MPRINT(EM_DIAGRAM):   end;
4095080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095081   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4095082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095084   +   end;
MPRINT(EM_DIAGRAM):   end;
4095085   +end;
MPRINT(EM_DIAGRAM):   end;
4095086   +
4095087   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4095088   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4095089   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4095090   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4095091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095093   +end;
MPRINT(EM_DIAGRAM):   end;
4095094   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095096   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4095097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095099   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4095100   +   end;
MPRINT(EM_DIAGRAM):   end;
4095101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095102   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4095103   +   end;
MPRINT(EM_DIAGRAM):   end;
4095104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095105   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4095106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095108   +   end;
MPRINT(EM_DIAGRAM):   end;
4095109   +end;
MPRINT(EM_DIAGRAM):   end;
4095110   +
4095111   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4095112   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4095113   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4095114   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4095115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095117   +end;
MPRINT(EM_DIAGRAM):   end;
4095118   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095120   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4095121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095123   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4095124   +   end;
MPRINT(EM_DIAGRAM):   end;
4095125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095126   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4095127   +   end;
MPRINT(EM_DIAGRAM):   end;
4095128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095129   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4095130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095132   +   end;
MPRINT(EM_DIAGRAM):   end;
4095133   +end;
MPRINT(EM_DIAGRAM):   end;
4095134   +
4095135   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4095136   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4095137   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4095138   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4095139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095141   +end;
MPRINT(EM_DIAGRAM):   end;
4095142   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095144   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4095145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095147   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4095148   +   end;
MPRINT(EM_DIAGRAM):   end;
4095149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095150   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4095151   +   end;
MPRINT(EM_DIAGRAM):   end;
4095152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095153   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4095154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095156   +   end;
MPRINT(EM_DIAGRAM):   end;
4095157   +end;
MPRINT(EM_DIAGRAM):   end;
4095158   +
4095159   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4095160   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4095161   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4095162   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4095163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095165   +end;
MPRINT(EM_DIAGRAM):   end;
4095166   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095167   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095168   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4095169   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095170   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095171   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4095172   +   end;
MPRINT(EM_DIAGRAM):   end;
4095173   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095174   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4095175   +   end;
MPRINT(EM_DIAGRAM):   end;
4095176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095177   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4095178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095180   +   end;
MPRINT(EM_DIAGRAM):   end;
4095181   +end;
MPRINT(EM_DIAGRAM):   end;
4095182   +
4095183   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4095184   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4095185   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4095186   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4095187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095189   +end;
MPRINT(EM_DIAGRAM):   end;
4095190   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095191   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095192   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4095193   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095194   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4095195   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4095196   +   end;
MPRINT(EM_DIAGRAM):   end;
4095197   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4095198   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4095199   +   end;
MPRINT(EM_DIAGRAM):   end;
4095200   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095201   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4095202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095204   +   end;
MPRINT(EM_DIAGRAM):   end;
4095205   +end;
MPRINT(EM_DIAGRAM):   end;
4095206   +
4095207   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4095208   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4095209   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4095210   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4095211   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4095212   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4095213   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4095214   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4095215   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4095216   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4095217   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4095218   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4095219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095221   +end;
MPRINT(EM_DIAGRAM):   end;
4095222   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095223   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4095224   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4095225   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095226   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4095227   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4095228   +   end;
MPRINT(EM_DIAGRAM):   end;
4095229   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4095230   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4095231   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4095232   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4095233   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4095234   +   end;
MPRINT(EM_DIAGRAM):   end;
4095235   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4095236   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4095237   +   end;
MPRINT(EM_DIAGRAM):   end;
4095238   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4095239   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4095240   +   end;
MPRINT(EM_DIAGRAM):   end;
4095241   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4095242   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4095243   +   end;
MPRINT(EM_DIAGRAM):   end;
4095244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095245   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4095246   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4095247   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4095248   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4095249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095251   +   end;
MPRINT(EM_DIAGRAM):   end;
4095252   +end;
MPRINT(EM_DIAGRAM):   end;
4095253   +
4095254   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4095255   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4095256   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4095257   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4095258   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4095259   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4095260   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4095261   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4095262   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4095263   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4095264   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4095265   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4095266   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4095267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095269   +end;
MPRINT(EM_DIAGRAM):   end;
4095270   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095271   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4095272   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4095273   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095274   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4095275   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4095276   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4095277   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4095278   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4095279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4095280   +         end;
MPRINT(EM_DIAGRAM):   end;
4095281   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4095282   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4095283   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4095284   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4095285   +            end;
MPRINT(EM_DIAGRAM):   end;
4095286   +         end;
MPRINT(EM_DIAGRAM):   end;
4095287   +      end;
MPRINT(EM_DIAGRAM):   end;
4095288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4095289   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4095290   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4095291   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4095292   +         end;
MPRINT(EM_DIAGRAM):   end;
4095293   +      end;
MPRINT(EM_DIAGRAM):   end;
4095294   +   end;
MPRINT(EM_DIAGRAM):   end;
4095295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095296   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4095297   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4095298   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4095299   +      end;
MPRINT(EM_DIAGRAM):   end;
4095300   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4095301   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4095302   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4095303   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4095304   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4095305   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4095306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4095307   +         end;
MPRINT(EM_DIAGRAM):   end;
4095308   +      end;
MPRINT(EM_DIAGRAM):   end;
4095309   +   end;
MPRINT(EM_DIAGRAM):   end;
4095310   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4095311   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4095312   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4095313   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4095314   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4095315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095317   +   end;
MPRINT(EM_DIAGRAM):   end;
4095318   +end;
MPRINT(EM_DIAGRAM):   end;
4095319   +
4095320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095321   +*** Checking missing input Interval
4095322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4095323   +
4095324   +IF NMISS(
4095325   +   AcceptedCmpTotal ,
4095326   +   Age ,
4095327   +   Frq ,
4095328   +   Income ,
4095329   +   Kidhome ,
4095330   +   Mnt ,
4095331   +   MntFishProducts ,
4095332   +   MntFruits ,
4095333   +   MntGoldProds ,
4095334   +   MntMeatProducts ,
4095335   +   MntSweetProducts ,
4095336   +   MntWines ,
4095337   +   MonthsAsCustomer ,
4095338   +   NumCatalogPurchases ,
4095339   +   NumDealsPurchases ,
4095340   +   NumDistPurchases ,
4095341   +   NumStorePurchases ,
4095342   +   NumWebPurchases ,
4095343   +   NumWebVisitsMonth ,
4095344   +   RFMstat ,
4095345   +   RMntFrq ,
4095346   +   Recency ,
4095347   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4095348   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4095349   +
4095350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095351   +END;
MPRINT(EM_DIAGRAM):   END;
4095352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095353   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4095354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095355   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4095356   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4095357   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4095358   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4095359   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4095360   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4095361   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4095362   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4095363   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4095364   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4095365   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4095366   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4095367   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4095368   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4095369   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4095370   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4095371   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4095372   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4095373   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4095374   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4095375   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4095376   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4095377   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4095378   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4095379   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4095380   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4095381   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4095382   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4095383   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4095384   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4095385   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4095386   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4095387   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4095388   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4095389   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4095390   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4095391   +END;
MPRINT(EM_DIAGRAM):   END;
4095392   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4095393   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4095394   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4095395   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4095396   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4095397   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4095398   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4095399   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4095400   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4095401   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4095402   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4095403   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4095404   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4095405   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4095406   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4095407   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4095408   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4095409   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4095410   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4095411   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4095412   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4095413   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4095414   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4095415   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4095416   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4095417   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4095418   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4095419   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4095420   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4095421   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4095422   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4095423   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4095424   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4095425   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4095426   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4095427   +   ELSE S_NumCatalogPurchases
4095428   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4095429   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4095430   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4095431   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4095432   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4095433   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4095434   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4095435   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4095436   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4095437   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4095438   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4095439   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4095440   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4095441   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4095442   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4095443   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4095444   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4095445   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4095446   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4095447   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4095448   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4095449   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4095450   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4095451   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4095452   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4095453   +END;
MPRINT(EM_DIAGRAM):   END;
4095454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095455   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4095456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095458   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4095459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095461   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4095462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095463   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4095464   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4095465   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4095466   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4095467   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4095468   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4095469   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4095470   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4095471   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4095472   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4095473   +          +     0.76573417773216 * S_NumDealsPurchases
4095474   +          +     0.22648400529885 * S_NumDistPurchases
4095475   +          +     1.21720286527592 * S_NumStorePurchases
4095476   +          +     0.60948566229097 * S_NumWebPurchases
4095477   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4095478   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4095479   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4095480   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4095481   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4095482   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4095483   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4095484   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4095485   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4095486   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4095487   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4095488   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4095489   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4095490   +          +    -1.52828428070828 * S_NumDealsPurchases
4095491   +          +    -0.01775178145113 * S_NumDistPurchases
4095492   +          +     1.11531198663491 * S_NumStorePurchases
4095493   +          +     1.79501098452904 * S_NumWebPurchases
4095494   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4095495   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4095496   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4095497   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4095498   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4095499   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4095500   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4095501   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4095502   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4095503   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4095504   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4095505   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4095506   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4095507   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4095508   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4095509   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4095510   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4095511   +          +    -1.56926331102732 * Marital_StatusDivorced
4095512   +          +     2.38562782588323 * Marital_StatusMarried
4095513   +          +    -1.91012008029228 * Marital_StatusSingle
4095514   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4095515   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4095516   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4095517   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4095518   +          +     0.39329538853368 * Marital_StatusDivorced
4095519   +          +       0.055543492668 * Marital_StatusMarried
4095520   +          +    -0.36260663573441 * Marital_StatusSingle
4095521   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4095522   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4095523   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4095524   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4095525   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4095526   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4095527   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4095528   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4095529   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4095530   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4095531   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4095532   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4095533   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4095534   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4095535   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4095536   +END;
MPRINT(EM_DIAGRAM):   END;
4095537   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4095538   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4095539   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4095540   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4095541   +END;
MPRINT(EM_DIAGRAM):   END;
4095542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095543   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4095544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4095546   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4095547   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4095548   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4095549   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4095550   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4095551   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4095552   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4095553   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4095554   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4095555   +          +    -0.41717905931734 * S_NumDealsPurchases
4095556   +          +    -0.48750443671176 * S_NumDistPurchases
4095557   +          +      1.9775770151507 * S_NumStorePurchases
4095558   +          +    -0.43534422425416 * S_NumWebPurchases
4095559   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4095560   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4095561   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4095562   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4095563   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4095564   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4095565   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4095566   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4095567   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4095568   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4095569   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4095570   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4095571   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4095572   +          +     0.76267091632012 * S_NumDealsPurchases
4095573   +          +     1.55118513069849 * S_NumDistPurchases
4095574   +          +       1.649962776028 * S_NumStorePurchases
4095575   +          +    -0.27453335733875 * S_NumWebPurchases
4095576   +          +     0.26599210649756 * S_NumWebVisitsMonth
4095577   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4095578   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4095579   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4095580   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4095581   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4095582   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4095583   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4095584   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4095585   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4095586   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4095587   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4095588   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4095589   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4095590   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4095591   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4095592   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4095593   +          +    -1.84502099308633 * Marital_StatusDivorced
4095594   +          +     0.16524535969204 * Marital_StatusMarried
4095595   +          +     0.01375012857393 * Marital_StatusSingle
4095596   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4095597   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4095598   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4095599   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4095600   +          +     0.18210930140238 * Marital_StatusDivorced
4095601   +          +    -1.49615662968181 * Marital_StatusMarried
4095602   +          +     1.61043484549536 * Marital_StatusSingle
4095603   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4095604   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4095605   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4095606   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4095607   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4095608   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4095609   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4095610   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4095611   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4095612   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4095613   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4095614   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4095615   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4095616   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4095617   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4095618   +END;
MPRINT(EM_DIAGRAM):   END;
4095619   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4095620   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4095621   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4095622   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4095623   +END;
MPRINT(EM_DIAGRAM):   END;
4095624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095625   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4095626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095627   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4095628   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4095629   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4095630   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4095631   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4095632   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4095633   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4095634   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4095635   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4095636   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4095637   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4095638   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4095639   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
4095640   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4095641   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4095642   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4095643   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4095644   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4095645   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4095646   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4095647   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4095648   +END;
MPRINT(EM_DIAGRAM):   END;
4095649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4095650   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4095651   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4095652   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4095653   +END;
MPRINT(EM_DIAGRAM):   END;
4095654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095655   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4095656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095657   +
4095658   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4095659   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4095660   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4095661   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4095662   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4095663   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095664   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4095665   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4095666   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4095667   +end;
MPRINT(EM_DIAGRAM):   end;
4095668   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095669   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4095670   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4095671   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4095672   +   end;
MPRINT(EM_DIAGRAM):   end;
4095673   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4095674   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4095675   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4095676   +   end;
MPRINT(EM_DIAGRAM):   end;
4095677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095678   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4095679   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4095680   +   end;
MPRINT(EM_DIAGRAM):   end;
4095681   +end;
MPRINT(EM_DIAGRAM):   end;
4095682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4095683   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4095684   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4095685   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4095686   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4095687   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4095688   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4095689   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4095690   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4095691   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4095692   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4095693   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4095694   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4095695   +END;
MPRINT(EM_DIAGRAM):   END;
4095696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4095697   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4095698   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4095699   +END;
MPRINT(EM_DIAGRAM):   END;
4095700   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4095701   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4095702   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4095703   +END;
MPRINT(EM_DIAGRAM):   END;
4095704   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4095705   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4095706   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4095707   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4095708   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4095709   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4095710   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4095711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095712   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4095713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4095714   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4095715   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4095716   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4095717   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4095718   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4095719   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4095720   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4095721   +END;
MPRINT(EM_DIAGRAM):   END;
4095722   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4095723   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4095724   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4095725   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4095726   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4095727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095728   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4095729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095730   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4095731   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4095732   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4095733   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4095734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095735   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4095736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095737   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4095738   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4095739   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4095740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095741   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
4095742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095744   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4095745   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4095746   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4095747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4095748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4095749   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4095750   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4095751   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4095752   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4095753   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4095754   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4095755   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4095756   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4095757   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4095758   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4095759   +LENGTH _WARN_ $4
4095760   +      F_DepVar  $ 12
4095761   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4095762   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4095763   +
4095764   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4095765   +
4095766   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4095767   +
4095768   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4095769   +
4095770   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4095771   +
4095772   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4095773   +
4095774   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4095775   +
4095776   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4095777   +
4095778   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4095779   +
4095780   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4095781   +
4095782   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4095783   +
4095784   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4095785   +
4095786   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4095787   +
4095788   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4095789   +
4095790   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4095791   +
4095792   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4095793   +
4095794   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4095795   +
4095796   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4095797   +
4095798   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4095799   +
4095800   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4095801   +
4095802   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4095803   +
4095804   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4095805   +
4095806   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4095807   +
4095808   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4095809   +
4095810   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4095811   +
4095812   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4095813   +
4095814   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4095815   +
4095816   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4095817   +
4095818   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4095819   +
4095820   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4095821   +
4095822   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4095823   +
4095824   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4095825   +
4095826   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4095827   +
4095828   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4095829   +
4095830   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4095831   +
4095832   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4095833   +
4095834   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4095835   +
4095836   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4095837   +
4095838   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4095839   +
4095840   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4095841   +
4095842   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4095843   +
4095844   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4095845   +
4095846   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4095847   +
4095848   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4095849   +
4095850   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4095851   +
4095852   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4095853   +
4095854   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4095855   +
4095856   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4095857   +
4095858   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4095859   +
4095860   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4095861   +
4095862   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4095863   +
4095864   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4095865   +
4095866   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4095867   +
4095868   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4095869   +
4095870   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4095871   +
4095872   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4095873   +
4095874   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4095875   +
4095876   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4095877   +
4095878   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4095879   +
4095880   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4095881   +
4095882   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4095883   +
4095884   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4095885   +
4095886   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4095887   +
4095888   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4095889   +
4095890   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4095891   +
4095892   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4095893   +
4095894   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4095895   +
4095896   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4095897   +
4095898   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4095899   +
4095900   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4095901   +
4095902   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4095903   +
4095904   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4095905   +
4095906   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4095907   +
4095908   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4095909   +
4095910   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4095911   +
4095912   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4095913   +
4095914   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4095915   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4095916   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4095917   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4095918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095920   +end;
MPRINT(EM_DIAGRAM):   end;
4095921   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095923   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4095924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095925   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095926   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4095927   +   end;
MPRINT(EM_DIAGRAM):   end;
4095928   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095929   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4095930   +   end;
MPRINT(EM_DIAGRAM):   end;
4095931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095932   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4095933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095935   +   end;
MPRINT(EM_DIAGRAM):   end;
4095936   +end;
MPRINT(EM_DIAGRAM):   end;
4095937   +
4095938   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4095939   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4095940   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4095941   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4095942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095944   +end;
MPRINT(EM_DIAGRAM):   end;
4095945   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095947   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4095948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095949   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095950   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4095951   +   end;
MPRINT(EM_DIAGRAM):   end;
4095952   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095953   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4095954   +   end;
MPRINT(EM_DIAGRAM):   end;
4095955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095956   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4095957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095959   +   end;
MPRINT(EM_DIAGRAM):   end;
4095960   +end;
MPRINT(EM_DIAGRAM):   end;
4095961   +
4095962   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4095963   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4095964   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4095965   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4095966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095968   +end;
MPRINT(EM_DIAGRAM):   end;
4095969   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095971   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4095972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095974   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4095975   +   end;
MPRINT(EM_DIAGRAM):   end;
4095976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4095977   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4095978   +   end;
MPRINT(EM_DIAGRAM):   end;
4095979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4095980   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4095981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4095982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095983   +   end;
MPRINT(EM_DIAGRAM):   end;
4095984   +end;
MPRINT(EM_DIAGRAM):   end;
4095985   +
4095986   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4095987   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4095988   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4095989   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4095990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4095991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4095992   +end;
MPRINT(EM_DIAGRAM):   end;
4095993   +else do;
MPRINT(EM_DIAGRAM):   else do;
4095994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4095995   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4095996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4095997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4095998   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4095999   +   end;
MPRINT(EM_DIAGRAM):   end;
4096000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4096001   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4096002   +   end;
MPRINT(EM_DIAGRAM):   end;
4096003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096004   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4096005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096007   +   end;
MPRINT(EM_DIAGRAM):   end;
4096008   +end;
MPRINT(EM_DIAGRAM):   end;
4096009   +
4096010   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4096011   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4096012   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4096013   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4096014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4096015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096016   +end;
MPRINT(EM_DIAGRAM):   end;
4096017   +else do;
MPRINT(EM_DIAGRAM):   else do;
4096018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4096019   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4096020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4096021   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4096022   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4096023   +   end;
MPRINT(EM_DIAGRAM):   end;
4096024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4096025   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4096026   +   end;
MPRINT(EM_DIAGRAM):   end;
4096027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096028   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4096029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096031   +   end;
MPRINT(EM_DIAGRAM):   end;
4096032   +end;
MPRINT(EM_DIAGRAM):   end;
4096033   +
4096034   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4096035   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4096036   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4096037   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4096038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4096039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096040   +end;
MPRINT(EM_DIAGRAM):   end;
4096041   +else do;
MPRINT(EM_DIAGRAM):   else do;
4096042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4096043   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4096044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4096045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4096046   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4096047   +   end;
MPRINT(EM_DIAGRAM):   end;
4096048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4096049   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4096050   +   end;
MPRINT(EM_DIAGRAM):   end;
4096051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096052   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4096053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096055   +   end;
MPRINT(EM_DIAGRAM):   end;
4096056   +end;
MPRINT(EM_DIAGRAM):   end;
4096057   +
4096058   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4096059   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4096060   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4096061   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4096062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4096063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096064   +end;
MPRINT(EM_DIAGRAM):   end;
4096065   +else do;
MPRINT(EM_DIAGRAM):   else do;
4096066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4096067   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4096068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4096069   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4096070   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4096071   +   end;
MPRINT(EM_DIAGRAM):   end;
4096072   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4096073   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4096074   +   end;
MPRINT(EM_DIAGRAM):   end;
4096075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096076   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4096077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096079   +   end;
MPRINT(EM_DIAGRAM):   end;
4096080   +end;
MPRINT(EM_DIAGRAM):   end;
4096081   +
4096082   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4096083   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4096084   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4096085   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4096086   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4096087   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4096088   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4096089   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4096090   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4096091   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4096092   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4096093   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4096094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4096095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096096   +end;
MPRINT(EM_DIAGRAM):   end;
4096097   +else do;
MPRINT(EM_DIAGRAM):   else do;
4096098   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4096099   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4096100   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4096101   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4096102   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4096103   +   end;
MPRINT(EM_DIAGRAM):   end;
4096104   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4096105   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4096106   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4096107   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4096108   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4096109   +   end;
MPRINT(EM_DIAGRAM):   end;
4096110   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4096111   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4096112   +   end;
MPRINT(EM_DIAGRAM):   end;
4096113   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4096114   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4096115   +   end;
MPRINT(EM_DIAGRAM):   end;
4096116   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4096117   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4096118   +   end;
MPRINT(EM_DIAGRAM):   end;
4096119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096120   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4096121   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4096122   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4096123   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4096124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096126   +   end;
MPRINT(EM_DIAGRAM):   end;
4096127   +end;
MPRINT(EM_DIAGRAM):   end;
4096128   +
4096129   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4096130   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4096131   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4096132   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4096133   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4096134   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4096135   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4096136   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4096137   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4096138   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4096139   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4096140   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4096141   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4096142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4096143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096144   +end;
MPRINT(EM_DIAGRAM):   end;
4096145   +else do;
MPRINT(EM_DIAGRAM):   else do;
4096146   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4096147   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4096148   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4096149   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4096150   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4096151   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4096152   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4096153   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4096154   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4096155   +         end;
MPRINT(EM_DIAGRAM):   end;
4096156   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4096157   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4096158   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4096159   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4096160   +            end;
MPRINT(EM_DIAGRAM):   end;
4096161   +         end;
MPRINT(EM_DIAGRAM):   end;
4096162   +      end;
MPRINT(EM_DIAGRAM):   end;
4096163   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4096164   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4096165   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4096166   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4096167   +         end;
MPRINT(EM_DIAGRAM):   end;
4096168   +      end;
MPRINT(EM_DIAGRAM):   end;
4096169   +   end;
MPRINT(EM_DIAGRAM):   end;
4096170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4096171   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4096172   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4096173   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4096174   +      end;
MPRINT(EM_DIAGRAM):   end;
4096175   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4096176   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4096177   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4096178   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4096179   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4096180   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4096181   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4096182   +         end;
MPRINT(EM_DIAGRAM):   end;
4096183   +      end;
MPRINT(EM_DIAGRAM):   end;
4096184   +   end;
MPRINT(EM_DIAGRAM):   end;
4096185   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4096186   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4096187   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4096188   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4096189   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4096190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4096191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096192   +   end;
MPRINT(EM_DIAGRAM):   end;
4096193   +end;
MPRINT(EM_DIAGRAM):   end;
4096194   +
4096195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096196   +*** Checking missing input Interval
4096197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4096198   +
4096199   +IF NMISS(
4096200   +   AcceptedCmpTotal ,
4096201   +   Age ,
4096202   +   Frq ,
4096203   +   Income ,
4096204   +   Kidhome ,
4096205   +   Mnt ,
4096206   +   MntFishProducts ,
4096207   +   MntFruits ,
4096208   +   MntGoldProds ,
4096209   +   MntMeatProducts ,
4096210   +   MntSweetProducts ,
4096211   +   MntWines ,
4096212   +   MonthsAsCustomer ,
4096213   +   NumCatalogPurchases ,
4096214   +   NumDealsPurchases ,
4096215   +   NumDistPurchases ,
4096216   +   NumStorePurchases ,
4096217   +   NumWebPurchases ,
4096218   +   NumWebVisitsMonth ,
4096219   +   RFMstat ,
4096220   +   RMntFrq ,
4096221   +   Recency ,
4096222   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4096223   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4096224   +
4096225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4096226   +END;
MPRINT(EM_DIAGRAM):   END;
4096227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096228   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4096229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096230   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096231   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4096232   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4096233   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4096234   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4096235   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4096236   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4096237   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4096238   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4096239   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4096240   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4096241   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4096242   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4096243   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4096244   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4096245   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4096246   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4096247   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4096248   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4096249   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4096250   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4096251   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4096252   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4096253   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4096254   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4096255   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4096256   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4096257   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4096258   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4096259   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4096260   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4096261   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4096262   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4096263   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4096264   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4096265   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4096266   +END;
MPRINT(EM_DIAGRAM):   END;
4096267   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096268   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4096269   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4096270   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4096271   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4096272   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4096273   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4096274   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4096275   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4096276   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4096277   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4096278   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4096279   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4096280   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4096281   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4096282   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4096283   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4096284   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4096285   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4096286   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4096287   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4096288   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4096289   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4096290   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4096291   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4096292   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4096293   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4096294   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4096295   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4096296   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4096297   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4096298   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4096299   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4096300   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4096301   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4096302   +   ELSE S_NumCatalogPurchases
4096303   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4096304   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4096305   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4096306   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4096307   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4096308   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4096309   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4096310   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4096311   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4096312   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4096313   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4096314   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4096315   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4096316   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4096317   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4096318   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4096319   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4096320   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4096321   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4096322   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4096323   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4096324   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4096325   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4096326   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4096327   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4096328   +END;
MPRINT(EM_DIAGRAM):   END;
4096329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096330   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4096331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096333   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4096334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096336   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4096337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096338   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096339   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4096340   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4096341   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4096342   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4096343   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4096344   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4096345   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4096346   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4096347   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4096348   +          +     3.45371614080196 * S_NumDealsPurchases
4096349   +          +     0.19118374544537 * S_NumDistPurchases
4096350   +          +    -2.45138001446793 * S_NumStorePurchases
4096351   +          +    -0.11424280244155 * S_NumWebPurchases
4096352   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4096353   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4096354   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4096355   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4096356   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4096357   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4096358   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4096359   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4096360   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4096361   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4096362   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4096363   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4096364   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4096365   +          +    -1.28390925647659 * S_NumDealsPurchases
4096366   +          +     0.82669177239926 * S_NumDistPurchases
4096367   +          +     1.71678585204511 * S_NumStorePurchases
4096368   +          +     1.49226295608046 * S_NumWebPurchases
4096369   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4096370   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4096371   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4096372   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4096373   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4096374   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4096375   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4096376   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4096377   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4096378   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4096379   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4096380   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4096381   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4096382   +          +     0.22958626391725 * S_NumDealsPurchases
4096383   +          +    -0.02046515813996 * S_NumDistPurchases
4096384   +          +      0.8618502050837 * S_NumStorePurchases
4096385   +          +     1.45175370326009 * S_NumWebPurchases
4096386   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4096387   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4096388   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4096389   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4096390   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4096391   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4096392   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4096393   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4096394   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4096395   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4096396   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4096397   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4096398   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4096399   +          +     1.25310034610344 * S_NumDealsPurchases
4096400   +          +     0.92141098602176 * S_NumDistPurchases
4096401   +          +    -0.08806509391473 * S_NumStorePurchases
4096402   +          +     -1.0533787624668 * S_NumWebPurchases
4096403   +          +     3.07050739830585 * S_NumWebVisitsMonth
4096404   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4096405   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4096406   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4096407   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4096408   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4096409   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4096410   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4096411   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4096412   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4096413   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4096414   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4096415   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4096416   +          +    -1.68259553608287 * S_NumDealsPurchases
4096417   +          +    -0.53835572290445 * S_NumDistPurchases
4096418   +          +     1.25833922835446 * S_NumStorePurchases
4096419   +          +     0.48300830623998 * S_NumWebPurchases
4096420   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4096421   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4096422   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4096423   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4096424   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4096425   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4096426   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4096427   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4096428   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4096429   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4096430   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4096431   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4096432   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4096433   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4096434   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4096435   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4096436   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4096437   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4096438   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4096439   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4096440   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4096441   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4096442   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4096443   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4096444   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4096445   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4096446   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4096447   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4096448   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4096449   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4096450   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4096451   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4096452   +          +     0.26230568150721 * Marital_StatusDivorced
4096453   +          +     0.27563523967756 * Marital_StatusMarried
4096454   +          +     0.54464481618478 * Marital_StatusSingle
4096455   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4096456   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4096457   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4096458   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4096459   +          +    -0.06750661313108 * Marital_StatusDivorced
4096460   +          +     1.48628445854207 * Marital_StatusMarried
4096461   +          +    -0.52197797291165 * Marital_StatusSingle
4096462   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4096463   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4096464   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4096465   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4096466   +          +     0.03219453957597 * Marital_StatusDivorced
4096467   +          +    -0.73835008216677 * Marital_StatusMarried
4096468   +          +     0.11212575818086 * Marital_StatusSingle
4096469   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4096470   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4096471   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4096472   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4096473   +          +    -0.95055539413405 * Marital_StatusDivorced
4096474   +          +    -1.65922419336067 * Marital_StatusMarried
4096475   +          +     0.78727538125107 * Marital_StatusSingle
4096476   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4096477   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4096478   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4096479   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4096480   +          +     -4.1747415035634 * Marital_StatusDivorced
4096481   +          +     3.61194282451968 * Marital_StatusMarried
4096482   +          +     -3.2800495365546 * Marital_StatusSingle
4096483   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4096484   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4096485   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4096486   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4096487   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4096488   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4096489   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4096490   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4096491   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4096492   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4096493   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4096494   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4096495   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4096496   +END;
MPRINT(EM_DIAGRAM):   END;
4096497   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096498   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4096499   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4096500   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4096501   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4096502   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4096503   +END;
MPRINT(EM_DIAGRAM):   END;
4096504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096505   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4096506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096507   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096508   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4096509   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4096510   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4096511   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4096512   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4096513   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4096514   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4096515   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4096516   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4096517   +          +     1.29727972396867 * S_NumDealsPurchases
4096518   +          +     -0.4796144286007 * S_NumDistPurchases
4096519   +          +     0.88365985808591 * S_NumStorePurchases
4096520   +          +     0.68522096892804 * S_NumWebPurchases
4096521   +          +     0.54931043107798 * S_NumWebVisitsMonth
4096522   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4096523   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4096524   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4096525   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4096526   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4096527   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4096528   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4096529   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4096530   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4096531   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4096532   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4096533   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4096534   +          +     0.26997834581422 * S_NumDealsPurchases
4096535   +          +      1.4974894627406 * S_NumDistPurchases
4096536   +          +     0.20577850505638 * S_NumStorePurchases
4096537   +          +     0.67578530037026 * S_NumWebPurchases
4096538   +          +     1.48893165613941 * S_NumWebVisitsMonth
4096539   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4096540   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4096541   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4096542   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4096543   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4096544   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4096545   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4096546   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4096547   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4096548   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4096549   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4096550   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4096551   +          +    -0.75474919633886 * S_NumDealsPurchases
4096552   +          +     2.21872386475638 * S_NumDistPurchases
4096553   +          +    -0.36191460108989 * S_NumStorePurchases
4096554   +          +     0.03160010932412 * S_NumWebPurchases
4096555   +          +     0.00984650739909 * S_NumWebVisitsMonth
4096556   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4096557   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4096558   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4096559   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4096560   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4096561   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4096562   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4096563   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4096564   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4096565   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4096566   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4096567   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4096568   +          +    -1.12057357865269 * S_NumDealsPurchases
4096569   +          +    -0.70841760614521 * S_NumDistPurchases
4096570   +          +    -1.39174816270404 * S_NumStorePurchases
4096571   +          +    -1.62343249380806 * S_NumWebPurchases
4096572   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4096573   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4096574   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4096575   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4096576   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4096577   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4096578   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4096579   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4096580   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4096581   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4096582   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4096583   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4096584   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4096585   +          +     0.66880481485557 * S_NumDealsPurchases
4096586   +          +     0.69540174544859 * S_NumDistPurchases
4096587   +          +     1.68246546921736 * S_NumStorePurchases
4096588   +          +     1.85958176898295 * S_NumWebPurchases
4096589   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4096590   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4096591   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4096592   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4096593   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4096594   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4096595   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4096596   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4096597   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4096598   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4096599   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4096600   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4096601   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4096602   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4096603   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4096604   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4096605   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4096606   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4096607   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4096608   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4096609   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4096610   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4096611   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4096612   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4096613   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4096614   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4096615   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4096616   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4096617   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4096618   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4096619   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4096620   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4096621   +          +      0.2766977476799 * Marital_StatusDivorced
4096622   +          +     0.99585126449473 * Marital_StatusMarried
4096623   +          +    -0.71244490682808 * Marital_StatusSingle
4096624   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4096625   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4096626   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4096627   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4096628   +          +     0.04724779113048 * Marital_StatusDivorced
4096629   +          +    -0.80186231440666 * Marital_StatusMarried
4096630   +          +    -0.02226793584171 * Marital_StatusSingle
4096631   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4096632   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4096633   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4096634   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4096635   +          +     0.28206835683721 * Marital_StatusDivorced
4096636   +          +     0.46500886756532 * Marital_StatusMarried
4096637   +          +     0.35327545255503 * Marital_StatusSingle
4096638   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4096639   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4096640   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4096641   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4096642   +          +     1.22291788006392 * Marital_StatusDivorced
4096643   +          +    -2.27040720272432 * Marital_StatusMarried
4096644   +          +     1.13606780043773 * Marital_StatusSingle
4096645   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4096646   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4096647   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4096648   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4096649   +          +     -0.3999800759199 * Marital_StatusDivorced
4096650   +          +    -0.40978271635345 * Marital_StatusMarried
4096651   +          +    -0.55524279444227 * Marital_StatusSingle
4096652   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4096653   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4096654   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4096655   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4096656   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4096657   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4096658   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4096659   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4096660   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4096661   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4096662   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4096663   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4096664   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4096665   +END;
MPRINT(EM_DIAGRAM):   END;
4096666   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096667   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4096668   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4096669   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4096670   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4096671   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4096672   +END;
MPRINT(EM_DIAGRAM):   END;
4096673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096674   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4096675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096677   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4096678   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4096679   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4096680   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4096681   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4096682   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4096683   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4096684   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4096685   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4096686   +          +     0.15783958682465 * S_NumDealsPurchases
4096687   +          +     1.52124708558457 * S_NumDistPurchases
4096688   +          +     -1.3804418313581 * S_NumStorePurchases
4096689   +          +    -1.29570111649272 * S_NumWebPurchases
4096690   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4096691   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4096692   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4096693   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4096694   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4096695   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4096696   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4096697   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4096698   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4096699   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4096700   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4096701   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4096702   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4096703   +          +     0.12337111358286 * S_NumDealsPurchases
4096704   +          +     -2.3848926094027 * S_NumDistPurchases
4096705   +          +    -1.20666646996433 * S_NumStorePurchases
4096706   +          +     0.89549302881365 * S_NumWebPurchases
4096707   +          +     0.95359042569947 * S_NumWebVisitsMonth
4096708   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4096709   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4096710   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4096711   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4096712   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4096713   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4096714   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4096715   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4096716   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4096717   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4096718   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4096719   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4096720   +          +    -1.05383642674948 * S_NumDealsPurchases
4096721   +          +     1.71861984509369 * S_NumDistPurchases
4096722   +          +     1.47595181536047 * S_NumStorePurchases
4096723   +          +    -1.64165005491178 * S_NumWebPurchases
4096724   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4096725   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4096726   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4096727   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4096728   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4096729   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4096730   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4096731   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4096732   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4096733   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4096734   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4096735   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4096736   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4096737   +          +     0.13347794794222 * S_NumDealsPurchases
4096738   +          +     0.30533639886561 * S_NumDistPurchases
4096739   +          +     1.63892955540526 * S_NumStorePurchases
4096740   +          +     0.43734586516446 * S_NumWebPurchases
4096741   +          +     1.79260779802864 * S_NumWebVisitsMonth
4096742   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4096743   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4096744   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4096745   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4096746   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4096747   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4096748   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4096749   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4096750   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4096751   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4096752   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4096753   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4096754   +          +     1.64209094349557 * S_NumDealsPurchases
4096755   +          +    -0.38876870460627 * S_NumDistPurchases
4096756   +          +    -0.48559309584971 * S_NumStorePurchases
4096757   +          +     0.21254626353218 * S_NumWebPurchases
4096758   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4096759   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4096760   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4096761   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4096762   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4096763   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4096764   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4096765   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4096766   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4096767   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4096768   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4096769   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4096770   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4096771   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4096772   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4096773   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4096774   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4096775   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4096776   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4096777   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4096778   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4096779   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4096780   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4096781   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4096782   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4096783   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4096784   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4096785   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4096786   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4096787   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4096788   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4096789   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4096790   +          +     1.33953173091973 * Marital_StatusDivorced
4096791   +          +    -0.26253208073262 * Marital_StatusMarried
4096792   +          +    -0.00960552682431 * Marital_StatusSingle
4096793   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4096794   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4096795   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4096796   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4096797   +          +     1.43150850334311 * Marital_StatusDivorced
4096798   +          +    -0.69239127844934 * Marital_StatusMarried
4096799   +          +     2.08477562471559 * Marital_StatusSingle
4096800   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4096801   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4096802   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4096803   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4096804   +          +     1.08387556786168 * Marital_StatusDivorced
4096805   +          +      1.0283506000217 * Marital_StatusMarried
4096806   +          +    -0.87069431107983 * Marital_StatusSingle
4096807   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4096808   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4096809   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4096810   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4096811   +          +      -1.347780188307 * Marital_StatusDivorced
4096812   +          +    -0.53911983240372 * Marital_StatusMarried
4096813   +          +     0.22083074159185 * Marital_StatusSingle
4096814   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4096815   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4096816   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4096817   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4096818   +          +     1.46582538311384 * Marital_StatusDivorced
4096819   +          +     0.05256161016002 * Marital_StatusMarried
4096820   +          +    -1.21402967626877 * Marital_StatusSingle
4096821   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4096822   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4096823   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4096824   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4096825   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4096826   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4096827   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4096828   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4096829   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4096830   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4096831   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4096832   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4096833   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4096834   +END;
MPRINT(EM_DIAGRAM):   END;
4096835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096836   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4096837   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4096838   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4096839   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4096840   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4096841   +END;
MPRINT(EM_DIAGRAM):   END;
4096842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096843   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4096844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096846   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4096847   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4096848   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4096849   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4096850   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4096851   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4096852   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4096853   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4096854   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4096855   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4096856   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4096857   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4096858   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4096859   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4096860   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4096861   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4096862   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4096863   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4096864   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4096865   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4096866   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4096867   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4096868   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4096869   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4096870   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4096871   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4096872   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4096873   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4096874   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4096875   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4096876   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4096877   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4096878   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4096879   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4096880   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4096881   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4096882   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4096883   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4096884   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4096885   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4096886   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4096887   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4096888   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4096889   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4096890   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4096891   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4096892   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4096893   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4096894   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4096895   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4096896   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4096897   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4096898   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4096899   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4096900   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4096901   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4096902   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4096903   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4096904   +END;
MPRINT(EM_DIAGRAM):   END;
4096905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096906   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4096907   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4096908   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4096909   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4096910   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4096911   +END;
MPRINT(EM_DIAGRAM):   END;
4096912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096913   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4096914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096915   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096916   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4096917   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4096918   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4096919   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4096920   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4096921   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4096922   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4096923   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4096924   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4096925   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4096926   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4096927   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4096928   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4096929   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4096930   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4096931   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4096932   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4096933   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4096934   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4096935   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4096936   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4096937   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4096938   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4096939   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4096940   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4096941   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4096942   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4096943   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4096944   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4096945   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4096946   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4096947   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4096948   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4096949   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4096950   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4096951   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4096952   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4096953   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4096954   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4096955   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4096956   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4096957   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4096958   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4096959   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4096960   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4096961   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4096962   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4096963   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4096964   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4096965   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4096966   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4096967   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4096968   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4096969   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4096970   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4096971   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4096972   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4096973   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4096974   +END;
MPRINT(EM_DIAGRAM):   END;
4096975   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4096976   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4096977   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4096978   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4096979   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4096980   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4096981   +END;
MPRINT(EM_DIAGRAM):   END;
4096982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096983   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4096984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4096985   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4096986   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4096987   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4096988   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4096989   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4096990   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4096991   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4096992   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4096993   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4096994   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4096995   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4096996   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4096997   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4096998   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4096999   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4097000   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4097001   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4097002   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4097003   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4097004   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4097005   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4097006   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4097007   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4097008   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4097009   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4097010   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4097011   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4097012   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4097013   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4097014   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4097015   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4097016   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4097017   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4097018   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4097019   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4097020   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4097021   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4097022   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4097023   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4097024   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4097025   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4097026   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4097027   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4097028   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4097029   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4097030   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4097031   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4097032   +END;
MPRINT(EM_DIAGRAM):   END;
4097033   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4097034   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4097035   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4097036   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4097037   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4097038   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4097039   +END;
MPRINT(EM_DIAGRAM):   END;
4097040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097041   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4097042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097043   +
4097044   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4097045   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4097046   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4097047   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4097048   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4097049   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097050   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4097051   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4097052   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4097053   +end;
MPRINT(EM_DIAGRAM):   end;
4097054   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097055   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4097056   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4097057   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4097058   +   end;
MPRINT(EM_DIAGRAM):   end;
4097059   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4097060   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4097061   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4097062   +   end;
MPRINT(EM_DIAGRAM):   end;
4097063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097064   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4097065   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4097066   +   end;
MPRINT(EM_DIAGRAM):   end;
4097067   +end;
MPRINT(EM_DIAGRAM):   end;
4097068   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4097069   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4097070   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4097071   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4097072   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4097073   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4097074   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4097075   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4097076   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4097077   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4097078   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4097079   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4097080   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4097081   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4097082   +END;
MPRINT(EM_DIAGRAM):   END;
4097083   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4097084   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4097085   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4097086   +END;
MPRINT(EM_DIAGRAM):   END;
4097087   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4097088   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4097089   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4097090   +END;
MPRINT(EM_DIAGRAM):   END;
4097091   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4097092   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4097093   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4097094   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4097095   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4097096   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4097097   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4097098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097099   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4097100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097101   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4097102   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4097103   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4097104   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4097105   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4097106   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4097107   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4097108   +END;
MPRINT(EM_DIAGRAM):   END;
4097109   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4097110   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4097111   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4097112   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4097113   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4097114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097115   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4097116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097117   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4097118   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4097119   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4097120   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4097121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097122   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4097123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097124   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4097125   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4097126   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4097127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097128   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
4097129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097131   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4097132   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4097133   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4097134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097135   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4097136   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4097137   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4097138   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4097139   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4097140   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4097141   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4097142   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4097143   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4097144   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4097145   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4097146   +LENGTH _WARN_ $4
4097147   +      F_DepVar  $ 12
4097148   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4097149   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4097150   +
4097151   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4097152   +
4097153   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4097154   +
4097155   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4097156   +
4097157   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4097158   +
4097159   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4097160   +
4097161   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4097162   +
4097163   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4097164   +
4097165   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4097166   +
4097167   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4097168   +
4097169   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4097170   +
4097171   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4097172   +
4097173   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4097174   +
4097175   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4097176   +
4097177   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4097178   +
4097179   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4097180   +
4097181   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4097182   +
4097183   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4097184   +
4097185   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4097186   +
4097187   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4097188   +
4097189   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4097190   +
4097191   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4097192   +
4097193   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4097194   +
4097195   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4097196   +
4097197   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4097198   +
4097199   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4097200   +
4097201   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4097202   +
4097203   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4097204   +
4097205   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4097206   +
4097207   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4097208   +
4097209   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4097210   +
4097211   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4097212   +
4097213   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4097214   +
4097215   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4097216   +
4097217   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4097218   +
4097219   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4097220   +
4097221   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4097222   +
4097223   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4097224   +
4097225   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4097226   +
4097227   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4097228   +
4097229   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4097230   +
4097231   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4097232   +
4097233   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4097234   +
4097235   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4097236   +
4097237   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4097238   +
4097239   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4097240   +
4097241   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4097242   +
4097243   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4097244   +
4097245   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4097246   +
4097247   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4097248   +
4097249   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4097250   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4097251   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4097252   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4097253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097255   +end;
MPRINT(EM_DIAGRAM):   end;
4097256   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097257   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097258   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4097259   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097260   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097261   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4097262   +   end;
MPRINT(EM_DIAGRAM):   end;
4097263   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097264   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4097265   +   end;
MPRINT(EM_DIAGRAM):   end;
4097266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097267   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4097268   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097269   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097270   +   end;
MPRINT(EM_DIAGRAM):   end;
4097271   +end;
MPRINT(EM_DIAGRAM):   end;
4097272   +
4097273   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4097274   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4097275   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4097276   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4097277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097279   +end;
MPRINT(EM_DIAGRAM):   end;
4097280   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097282   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4097283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097284   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097285   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4097286   +   end;
MPRINT(EM_DIAGRAM):   end;
4097287   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097288   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4097289   +   end;
MPRINT(EM_DIAGRAM):   end;
4097290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097291   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4097292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097294   +   end;
MPRINT(EM_DIAGRAM):   end;
4097295   +end;
MPRINT(EM_DIAGRAM):   end;
4097296   +
4097297   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4097298   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4097299   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4097300   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4097301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097303   +end;
MPRINT(EM_DIAGRAM):   end;
4097304   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097306   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4097307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097308   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097309   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4097310   +   end;
MPRINT(EM_DIAGRAM):   end;
4097311   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097312   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4097313   +   end;
MPRINT(EM_DIAGRAM):   end;
4097314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097315   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4097316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097318   +   end;
MPRINT(EM_DIAGRAM):   end;
4097319   +end;
MPRINT(EM_DIAGRAM):   end;
4097320   +
4097321   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4097322   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4097323   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4097324   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4097325   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097327   +end;
MPRINT(EM_DIAGRAM):   end;
4097328   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097329   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097330   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4097331   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097332   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097333   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4097334   +   end;
MPRINT(EM_DIAGRAM):   end;
4097335   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097336   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4097337   +   end;
MPRINT(EM_DIAGRAM):   end;
4097338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097339   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4097340   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097341   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097342   +   end;
MPRINT(EM_DIAGRAM):   end;
4097343   +end;
MPRINT(EM_DIAGRAM):   end;
4097344   +
4097345   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4097346   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4097347   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4097348   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4097349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097351   +end;
MPRINT(EM_DIAGRAM):   end;
4097352   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097353   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097354   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4097355   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097356   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097357   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4097358   +   end;
MPRINT(EM_DIAGRAM):   end;
4097359   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097360   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4097361   +   end;
MPRINT(EM_DIAGRAM):   end;
4097362   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097363   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4097364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097366   +   end;
MPRINT(EM_DIAGRAM):   end;
4097367   +end;
MPRINT(EM_DIAGRAM):   end;
4097368   +
4097369   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4097370   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4097371   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4097372   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4097373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097375   +end;
MPRINT(EM_DIAGRAM):   end;
4097376   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097378   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4097379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097380   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4097381   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4097382   +   end;
MPRINT(EM_DIAGRAM):   end;
4097383   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4097384   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4097385   +   end;
MPRINT(EM_DIAGRAM):   end;
4097386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097387   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4097388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097390   +   end;
MPRINT(EM_DIAGRAM):   end;
4097391   +end;
MPRINT(EM_DIAGRAM):   end;
4097392   +
4097393   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4097394   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4097395   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4097396   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4097397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097399   +end;
MPRINT(EM_DIAGRAM):   end;
4097400   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4097402   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4097403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097404   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4097405   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4097406   +   end;
MPRINT(EM_DIAGRAM):   end;
4097407   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4097408   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4097409   +   end;
MPRINT(EM_DIAGRAM):   end;
4097410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097411   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4097412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097414   +   end;
MPRINT(EM_DIAGRAM):   end;
4097415   +end;
MPRINT(EM_DIAGRAM):   end;
4097416   +
4097417   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4097418   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4097419   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4097420   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4097421   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4097422   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4097423   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4097424   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4097425   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4097426   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4097427   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4097428   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4097429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097431   +end;
MPRINT(EM_DIAGRAM):   end;
4097432   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097433   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4097434   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4097435   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097436   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4097437   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4097438   +   end;
MPRINT(EM_DIAGRAM):   end;
4097439   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4097440   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4097441   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4097442   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4097443   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4097444   +   end;
MPRINT(EM_DIAGRAM):   end;
4097445   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4097446   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4097447   +   end;
MPRINT(EM_DIAGRAM):   end;
4097448   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4097449   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4097450   +   end;
MPRINT(EM_DIAGRAM):   end;
4097451   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4097452   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4097453   +   end;
MPRINT(EM_DIAGRAM):   end;
4097454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097455   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4097456   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4097457   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4097458   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4097459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097461   +   end;
MPRINT(EM_DIAGRAM):   end;
4097462   +end;
MPRINT(EM_DIAGRAM):   end;
4097463   +
4097464   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4097465   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4097466   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4097467   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4097468   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4097469   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4097470   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4097471   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4097472   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4097473   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4097474   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4097475   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4097476   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4097477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4097478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097479   +end;
MPRINT(EM_DIAGRAM):   end;
4097480   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097481   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4097482   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4097483   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097484   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4097485   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4097486   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4097487   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4097488   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4097489   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4097490   +         end;
MPRINT(EM_DIAGRAM):   end;
4097491   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4097492   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4097493   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4097494   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4097495   +            end;
MPRINT(EM_DIAGRAM):   end;
4097496   +         end;
MPRINT(EM_DIAGRAM):   end;
4097497   +      end;
MPRINT(EM_DIAGRAM):   end;
4097498   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4097499   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4097500   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4097501   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4097502   +         end;
MPRINT(EM_DIAGRAM):   end;
4097503   +      end;
MPRINT(EM_DIAGRAM):   end;
4097504   +   end;
MPRINT(EM_DIAGRAM):   end;
4097505   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097506   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4097507   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4097508   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4097509   +      end;
MPRINT(EM_DIAGRAM):   end;
4097510   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4097511   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4097512   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4097513   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4097514   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4097515   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4097516   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4097517   +         end;
MPRINT(EM_DIAGRAM):   end;
4097518   +      end;
MPRINT(EM_DIAGRAM):   end;
4097519   +   end;
MPRINT(EM_DIAGRAM):   end;
4097520   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4097521   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4097522   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4097523   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4097524   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4097525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4097526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097527   +   end;
MPRINT(EM_DIAGRAM):   end;
4097528   +end;
MPRINT(EM_DIAGRAM):   end;
4097529   +
4097530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097531   +*** Checking missing input Interval
4097532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4097533   +
4097534   +IF NMISS(
4097535   +   AcceptedCmpTotal ,
4097536   +   Age ,
4097537   +   Frq ,
4097538   +   Income ,
4097539   +   Kidhome ,
4097540   +   Mnt ,
4097541   +   MntFishProducts ,
4097542   +   MntFruits ,
4097543   +   MntGoldProds ,
4097544   +   MntMeatProducts ,
4097545   +   MntSweetProducts ,
4097546   +   MntWines ,
4097547   +   MonthsAsCustomer ,
4097548   +   NumCatalogPurchases ,
4097549   +   NumDealsPurchases ,
4097550   +   NumDistPurchases ,
4097551   +   NumStorePurchases ,
4097552   +   NumWebPurchases ,
4097553   +   NumWebVisitsMonth ,
4097554   +   RFMstat ,
4097555   +   RMntFrq ,
4097556   +   Recency ,
4097557   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4097558   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4097559   +
4097560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4097561   +END;
MPRINT(EM_DIAGRAM):   END;
4097562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097563   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4097564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4097566   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4097567   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4097568   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4097569   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4097570   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4097571   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4097572   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4097573   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4097574   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4097575   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4097576   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4097577   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4097578   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4097579   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4097580   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4097581   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4097582   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4097583   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4097584   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4097585   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4097586   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4097587   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4097588   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4097589   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4097590   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4097591   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4097592   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4097593   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4097594   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4097595   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4097596   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4097597   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4097598   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4097599   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4097600   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4097601   +END;
MPRINT(EM_DIAGRAM):   END;
4097602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4097603   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4097604   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4097605   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4097606   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4097607   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4097608   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4097609   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4097610   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4097611   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4097612   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4097613   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4097614   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4097615   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4097616   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4097617   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4097618   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4097619   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4097620   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4097621   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4097622   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4097623   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4097624   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4097625   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4097626   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4097627   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4097628   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4097629   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4097630   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4097631   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4097632   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4097633   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4097634   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4097635   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4097636   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4097637   +   ELSE S_NumCatalogPurchases
4097638   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4097639   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4097640   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4097641   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4097642   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4097643   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4097644   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4097645   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4097646   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4097647   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4097648   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4097649   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4097650   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4097651   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4097652   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4097653   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4097654   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4097655   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4097656   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4097657   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4097658   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4097659   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4097660   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4097661   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4097662   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4097663   +END;
MPRINT(EM_DIAGRAM):   END;
4097664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097665   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4097666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097668   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4097669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097671   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4097672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4097674   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4097675   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4097676   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4097677   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4097678   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4097679   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4097680   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4097681   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4097682   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4097683   +          +    -1.14704878034134 * S_NumDealsPurchases
4097684   +          +    -0.17763404274659 * S_NumDistPurchases
4097685   +          +     0.08894400267969 * S_NumStorePurchases
4097686   +          +     0.59283747891957 * S_NumWebPurchases
4097687   +          +     0.85268274682505 * S_NumWebVisitsMonth
4097688   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4097689   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4097690   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4097691   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4097692   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4097693   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4097694   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4097695   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4097696   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4097697   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4097698   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4097699   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4097700   +          +    -0.80841566068716 * S_NumDealsPurchases
4097701   +          +    -0.17995640033768 * S_NumDistPurchases
4097702   +          +     0.00713417460936 * S_NumStorePurchases
4097703   +          +     0.57881024323076 * S_NumWebPurchases
4097704   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4097705   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4097706   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4097707   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4097708   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4097709   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4097710   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4097711   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4097712   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4097713   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4097714   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4097715   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4097716   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4097717   +          +     0.57891364118717 * S_NumDealsPurchases
4097718   +          +    -0.31024556838688 * S_NumDistPurchases
4097719   +          +    -1.48708542986704 * S_NumStorePurchases
4097720   +          +    -0.93009875249206 * S_NumWebPurchases
4097721   +          +     2.01900039122935 * S_NumWebVisitsMonth
4097722   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4097723   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4097724   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4097725   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4097726   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4097727   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4097728   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4097729   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4097730   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4097731   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4097732   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4097733   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4097734   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4097735   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4097736   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4097737   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4097738   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4097739   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4097740   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4097741   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4097742   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4097743   +          +     0.55883606830033 * Marital_StatusDivorced
4097744   +          +    -0.54530037567066 * Marital_StatusMarried
4097745   +          +    -0.52994736075753 * Marital_StatusSingle
4097746   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4097747   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4097748   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4097749   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4097750   +          +    -1.07368484057033 * Marital_StatusDivorced
4097751   +          +     2.73313504711262 * Marital_StatusMarried
4097752   +          +    -2.18530462876058 * Marital_StatusSingle
4097753   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4097754   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4097755   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4097756   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4097757   +          +     0.49993144243043 * Marital_StatusDivorced
4097758   +          +    -0.38953339116829 * Marital_StatusMarried
4097759   +          +    -0.10836287319942 * Marital_StatusSingle
4097760   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4097761   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4097762   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4097763   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4097764   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4097765   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4097766   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4097767   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4097768   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4097769   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4097770   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4097771   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4097772   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4097773   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4097774   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4097775   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4097776   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4097777   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4097778   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4097779   +END;
MPRINT(EM_DIAGRAM):   END;
4097780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4097781   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4097782   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4097783   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4097784   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4097785   +END;
MPRINT(EM_DIAGRAM):   END;
4097786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097787   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4097788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097789   +
4097790   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4097791   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4097792   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4097793   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4097794   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4097795   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4097796   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4097797   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4097798   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4097799   +end;
MPRINT(EM_DIAGRAM):   end;
4097800   +else do;
MPRINT(EM_DIAGRAM):   else do;
4097801   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4097802   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4097803   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4097804   +   end;
MPRINT(EM_DIAGRAM):   end;
4097805   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4097806   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4097807   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4097808   +   end;
MPRINT(EM_DIAGRAM):   end;
4097809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4097810   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4097811   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4097812   +   end;
MPRINT(EM_DIAGRAM):   end;
4097813   +end;
MPRINT(EM_DIAGRAM):   end;
4097814   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4097815   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4097816   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4097817   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4097818   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4097819   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4097820   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4097821   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4097822   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4097823   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4097824   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4097825   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4097826   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4097827   +END;
MPRINT(EM_DIAGRAM):   END;
4097828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4097829   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4097830   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4097831   +END;
MPRINT(EM_DIAGRAM):   END;
4097832   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4097833   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4097834   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4097835   +END;
MPRINT(EM_DIAGRAM):   END;
4097836   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4097837   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4097838   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4097839   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4097840   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4097841   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4097842   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4097843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097844   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4097845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4097846   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4097847   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4097848   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4097849   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4097850   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4097851   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4097852   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4097853   +END;
MPRINT(EM_DIAGRAM):   END;
4097854   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4097855   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4097856   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4097857   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4097858   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4097859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097860   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4097861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097862   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4097863   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4097864   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4097865   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4097866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097867   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4097868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097869   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4097870   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4097871   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4097872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097873   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
4097874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097876   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4097877   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4097878   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4097879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4097880   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4097881   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4097882   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4097883   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4097884   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4097885   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4097886   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4097887   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4097888   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4097889   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4097890   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4097891   +LENGTH _WARN_ $4
4097892   +      F_DepVar  $ 12
4097893   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4097894   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4097895   +
4097896   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4097897   +
4097898   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4097899   +
4097900   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4097901   +
4097902   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4097903   +
4097904   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4097905   +
4097906   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4097907   +
4097908   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4097909   +
4097910   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4097911   +
4097912   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4097913   +
4097914   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4097915   +
4097916   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4097917   +
4097918   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4097919   +
4097920   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4097921   +
4097922   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4097923   +
4097924   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4097925   +
4097926   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4097927   +
4097928   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4097929   +
4097930   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4097931   +
4097932   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4097933   +
4097934   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4097935   +
4097936   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4097937   +
4097938   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4097939   +
4097940   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4097941   +
4097942   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4097943   +
4097944   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4097945   +
4097946   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4097947   +
4097948   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4097949   +
4097950   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4097951   +
4097952   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4097953   +
4097954   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4097955   +
4097956   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4097957   +
4097958   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4097959   +
4097960   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4097961   +
4097962   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4097963   +
4097964   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4097965   +
4097966   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4097967   +
4097968   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4097969   +
4097970   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4097971   +
4097972   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4097973   +
4097974   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4097975   +
4097976   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4097977   +
4097978   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4097979   +
4097980   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4097981   +
4097982   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4097983   +
4097984   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4097985   +
4097986   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4097987   +
4097988   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4097989   +
4097990   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4097991   +
4097992   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4097993   +
4097994   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4097995   +
4097996   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4097997   +
4097998   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4097999   +
4098000   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4098001   +
4098002   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4098003   +
4098004   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4098005   +
4098006   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4098007   +
4098008   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4098009   +
4098010   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4098011   +
4098012   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4098013   +
4098014   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4098015   +
4098016   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4098017   +
4098018   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4098019   +
4098020   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4098021   +
4098022   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4098023   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4098024   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4098025   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4098026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098028   +end;
MPRINT(EM_DIAGRAM):   end;
4098029   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098031   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4098032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098034   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4098035   +   end;
MPRINT(EM_DIAGRAM):   end;
4098036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098037   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4098038   +   end;
MPRINT(EM_DIAGRAM):   end;
4098039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098040   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4098041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098043   +   end;
MPRINT(EM_DIAGRAM):   end;
4098044   +end;
MPRINT(EM_DIAGRAM):   end;
4098045   +
4098046   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4098047   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4098048   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4098049   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4098050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098052   +end;
MPRINT(EM_DIAGRAM):   end;
4098053   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098055   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4098056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098058   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4098059   +   end;
MPRINT(EM_DIAGRAM):   end;
4098060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098061   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4098062   +   end;
MPRINT(EM_DIAGRAM):   end;
4098063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098064   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4098065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098067   +   end;
MPRINT(EM_DIAGRAM):   end;
4098068   +end;
MPRINT(EM_DIAGRAM):   end;
4098069   +
4098070   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4098071   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4098072   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4098073   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4098074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098076   +end;
MPRINT(EM_DIAGRAM):   end;
4098077   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098079   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4098080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098081   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098082   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4098083   +   end;
MPRINT(EM_DIAGRAM):   end;
4098084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098085   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4098086   +   end;
MPRINT(EM_DIAGRAM):   end;
4098087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098088   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4098089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098091   +   end;
MPRINT(EM_DIAGRAM):   end;
4098092   +end;
MPRINT(EM_DIAGRAM):   end;
4098093   +
4098094   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4098095   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4098096   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4098097   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4098098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098100   +end;
MPRINT(EM_DIAGRAM):   end;
4098101   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098103   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4098104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098106   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4098107   +   end;
MPRINT(EM_DIAGRAM):   end;
4098108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098109   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4098110   +   end;
MPRINT(EM_DIAGRAM):   end;
4098111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098112   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4098113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098115   +   end;
MPRINT(EM_DIAGRAM):   end;
4098116   +end;
MPRINT(EM_DIAGRAM):   end;
4098117   +
4098118   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4098119   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4098120   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4098121   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4098122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098124   +end;
MPRINT(EM_DIAGRAM):   end;
4098125   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098127   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4098128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098130   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4098131   +   end;
MPRINT(EM_DIAGRAM):   end;
4098132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098133   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4098134   +   end;
MPRINT(EM_DIAGRAM):   end;
4098135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098136   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4098137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098139   +   end;
MPRINT(EM_DIAGRAM):   end;
4098140   +end;
MPRINT(EM_DIAGRAM):   end;
4098141   +
4098142   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4098143   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4098144   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4098145   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4098146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098148   +end;
MPRINT(EM_DIAGRAM):   end;
4098149   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098151   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4098152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4098154   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4098155   +   end;
MPRINT(EM_DIAGRAM):   end;
4098156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4098157   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4098158   +   end;
MPRINT(EM_DIAGRAM):   end;
4098159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098160   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4098161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098163   +   end;
MPRINT(EM_DIAGRAM):   end;
4098164   +end;
MPRINT(EM_DIAGRAM):   end;
4098165   +
4098166   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4098167   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4098168   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4098169   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4098170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098172   +end;
MPRINT(EM_DIAGRAM):   end;
4098173   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4098175   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4098176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098177   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4098178   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4098179   +   end;
MPRINT(EM_DIAGRAM):   end;
4098180   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4098181   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4098182   +   end;
MPRINT(EM_DIAGRAM):   end;
4098183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098184   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4098185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098187   +   end;
MPRINT(EM_DIAGRAM):   end;
4098188   +end;
MPRINT(EM_DIAGRAM):   end;
4098189   +
4098190   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4098191   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4098192   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4098193   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4098194   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4098195   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4098196   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4098197   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4098198   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4098199   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4098200   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4098201   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4098202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098204   +end;
MPRINT(EM_DIAGRAM):   end;
4098205   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098206   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4098207   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4098208   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098209   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4098210   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4098211   +   end;
MPRINT(EM_DIAGRAM):   end;
4098212   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4098213   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4098214   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4098215   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4098216   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4098217   +   end;
MPRINT(EM_DIAGRAM):   end;
4098218   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4098219   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4098220   +   end;
MPRINT(EM_DIAGRAM):   end;
4098221   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4098222   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4098223   +   end;
MPRINT(EM_DIAGRAM):   end;
4098224   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4098225   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4098226   +   end;
MPRINT(EM_DIAGRAM):   end;
4098227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098228   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4098229   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4098230   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4098231   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4098232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098234   +   end;
MPRINT(EM_DIAGRAM):   end;
4098235   +end;
MPRINT(EM_DIAGRAM):   end;
4098236   +
4098237   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4098238   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4098239   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4098240   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4098241   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4098242   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4098243   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4098244   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4098245   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4098246   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4098247   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4098248   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4098249   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4098250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4098251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098252   +end;
MPRINT(EM_DIAGRAM):   end;
4098253   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098254   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4098255   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4098256   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098257   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4098258   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4098259   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4098260   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4098261   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4098262   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4098263   +         end;
MPRINT(EM_DIAGRAM):   end;
4098264   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4098265   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4098266   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4098267   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4098268   +            end;
MPRINT(EM_DIAGRAM):   end;
4098269   +         end;
MPRINT(EM_DIAGRAM):   end;
4098270   +      end;
MPRINT(EM_DIAGRAM):   end;
4098271   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4098272   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4098273   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4098274   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4098275   +         end;
MPRINT(EM_DIAGRAM):   end;
4098276   +      end;
MPRINT(EM_DIAGRAM):   end;
4098277   +   end;
MPRINT(EM_DIAGRAM):   end;
4098278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098279   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4098280   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4098281   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4098282   +      end;
MPRINT(EM_DIAGRAM):   end;
4098283   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4098284   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4098285   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4098286   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4098287   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4098288   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4098289   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4098290   +         end;
MPRINT(EM_DIAGRAM):   end;
4098291   +      end;
MPRINT(EM_DIAGRAM):   end;
4098292   +   end;
MPRINT(EM_DIAGRAM):   end;
4098293   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4098294   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4098295   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4098296   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4098297   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4098298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4098299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098300   +   end;
MPRINT(EM_DIAGRAM):   end;
4098301   +end;
MPRINT(EM_DIAGRAM):   end;
4098302   +
4098303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098304   +*** Checking missing input Interval
4098305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4098306   +
4098307   +IF NMISS(
4098308   +   AcceptedCmpTotal ,
4098309   +   Age ,
4098310   +   Frq ,
4098311   +   Income ,
4098312   +   Kidhome ,
4098313   +   Mnt ,
4098314   +   MntFishProducts ,
4098315   +   MntFruits ,
4098316   +   MntGoldProds ,
4098317   +   MntMeatProducts ,
4098318   +   MntSweetProducts ,
4098319   +   MntWines ,
4098320   +   MonthsAsCustomer ,
4098321   +   NumCatalogPurchases ,
4098322   +   NumDealsPurchases ,
4098323   +   NumDistPurchases ,
4098324   +   NumStorePurchases ,
4098325   +   NumWebPurchases ,
4098326   +   NumWebVisitsMonth ,
4098327   +   RFMstat ,
4098328   +   RMntFrq ,
4098329   +   Recency ,
4098330   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4098331   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4098332   +
4098333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4098334   +END;
MPRINT(EM_DIAGRAM):   END;
4098335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098336   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4098337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098338   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4098339   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4098340   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4098341   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4098342   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4098343   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4098344   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4098345   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4098346   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4098347   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4098348   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4098349   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4098350   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4098351   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4098352   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4098353   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4098354   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4098355   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4098356   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4098357   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4098358   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4098359   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4098360   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4098361   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4098362   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4098363   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4098364   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4098365   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4098366   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4098367   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4098368   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4098369   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4098370   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4098371   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4098372   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4098373   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4098374   +END;
MPRINT(EM_DIAGRAM):   END;
4098375   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4098376   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4098377   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4098378   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4098379   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4098380   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4098381   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4098382   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4098383   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4098384   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4098385   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4098386   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4098387   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4098388   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4098389   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4098390   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4098391   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4098392   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4098393   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4098394   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4098395   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4098396   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4098397   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4098398   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4098399   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4098400   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4098401   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4098402   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4098403   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4098404   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4098405   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4098406   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4098407   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4098408   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4098409   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4098410   +   ELSE S_NumCatalogPurchases
4098411   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4098412   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4098413   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4098414   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4098415   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4098416   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4098417   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4098418   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4098419   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4098420   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4098421   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4098422   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4098423   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4098424   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4098425   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4098426   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4098427   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4098428   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4098429   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4098430   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4098431   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4098432   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4098433   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4098434   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4098435   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4098436   +END;
MPRINT(EM_DIAGRAM):   END;
4098437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098438   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4098439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098441   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4098442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098444   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4098445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098446   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4098447   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4098448   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4098449   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4098450   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4098451   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4098452   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4098453   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4098454   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4098455   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4098456   +          +     0.89422627895323 * S_NumDealsPurchases
4098457   +          +    -0.13304125929765 * S_NumDistPurchases
4098458   +          +    -1.04568442570811 * S_NumStorePurchases
4098459   +          +    -0.28677765126751 * S_NumWebPurchases
4098460   +          +      1.2327638737509 * S_NumWebVisitsMonth
4098461   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4098462   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4098463   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4098464   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4098465   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4098466   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4098467   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4098468   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4098469   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4098470   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4098471   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4098472   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4098473   +          +     0.04224590196535 * S_NumDealsPurchases
4098474   +          +     0.76554742700113 * S_NumDistPurchases
4098475   +          +    -0.49155496870812 * S_NumStorePurchases
4098476   +          +     0.59606812744403 * S_NumWebPurchases
4098477   +          +     1.86809286276405 * S_NumWebVisitsMonth
4098478   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4098479   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4098480   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4098481   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4098482   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4098483   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4098484   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4098485   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4098486   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4098487   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4098488   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4098489   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4098490   +          +    -0.04866536993486 * S_NumDealsPurchases
4098491   +          +    -0.53535979020214 * S_NumDistPurchases
4098492   +          +     2.20634071253676 * S_NumStorePurchases
4098493   +          +      0.6164564989007 * S_NumWebPurchases
4098494   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4098495   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4098496   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4098497   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4098498   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4098499   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4098500   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4098501   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4098502   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4098503   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4098504   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4098505   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4098506   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4098507   +          +     1.37461255707863 * S_NumDealsPurchases
4098508   +          +    -0.17684775000818 * S_NumDistPurchases
4098509   +          +    -0.62755623855535 * S_NumStorePurchases
4098510   +          +    -1.46551649022657 * S_NumWebPurchases
4098511   +          +     3.35784247878638 * S_NumWebVisitsMonth
4098512   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4098513   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4098514   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4098515   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4098516   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4098517   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4098518   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4098519   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4098520   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4098521   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4098522   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4098523   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4098524   +          +    -0.76256677907121 * S_NumDealsPurchases
4098525   +          +    -0.31591571751692 * S_NumDistPurchases
4098526   +          +      0.0506832614089 * S_NumStorePurchases
4098527   +          +      1.4636796923764 * S_NumWebPurchases
4098528   +          +     0.37743519705036 * S_NumWebVisitsMonth
4098529   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4098530   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4098531   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4098532   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4098533   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4098534   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4098535   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4098536   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4098537   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4098538   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4098539   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4098540   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4098541   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4098542   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4098543   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4098544   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4098545   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4098546   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4098547   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4098548   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4098549   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4098550   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4098551   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4098552   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4098553   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4098554   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4098555   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4098556   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4098557   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4098558   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4098559   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4098560   +          +     0.68641668264565 * Marital_StatusDivorced
4098561   +          +    -0.81586871439732 * Marital_StatusMarried
4098562   +          +     0.63758920518451 * Marital_StatusSingle
4098563   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4098564   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4098565   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4098566   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4098567   +          +     0.05137560133238 * Marital_StatusDivorced
4098568   +          +    -2.24401993266209 * Marital_StatusMarried
4098569   +          +     1.57359386216115 * Marital_StatusSingle
4098570   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4098571   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4098572   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4098573   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4098574   +          +     -1.0649987815942 * Marital_StatusDivorced
4098575   +          +     0.76065111692388 * Marital_StatusMarried
4098576   +          +    -0.21694149754801 * Marital_StatusSingle
4098577   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4098578   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4098579   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4098580   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4098581   +          +     2.02155453548328 * Marital_StatusDivorced
4098582   +          +    -2.60190649735306 * Marital_StatusMarried
4098583   +          +     1.09149388354927 * Marital_StatusSingle
4098584   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4098585   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4098586   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4098587   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4098588   +          +     0.66315970650309 * Marital_StatusDivorced
4098589   +          +    -1.20476729758152 * Marital_StatusMarried
4098590   +          +     0.56175027826397 * Marital_StatusSingle
4098591   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4098592   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4098593   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4098594   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4098595   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4098596   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4098597   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4098598   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4098599   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4098600   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4098601   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4098602   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4098603   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4098604   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4098605   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4098606   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4098607   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4098608   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4098609   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4098610   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4098611   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4098612   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4098613   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4098614   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4098615   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4098616   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4098617   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4098618   +END;
MPRINT(EM_DIAGRAM):   END;
4098619   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4098620   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4098621   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4098622   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4098623   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4098624   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4098625   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4098626   +END;
MPRINT(EM_DIAGRAM):   END;
4098627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098628   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4098629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098630   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4098631   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4098632   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4098633   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4098634   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4098635   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4098636   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4098637   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4098638   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4098639   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4098640   +          +     1.50005927423985 * S_NumDealsPurchases
4098641   +          +      0.5590536933569 * S_NumDistPurchases
4098642   +          +    -0.61757824339318 * S_NumStorePurchases
4098643   +          +     0.37259686538158 * S_NumWebPurchases
4098644   +          +     2.59725437895564 * S_NumWebVisitsMonth
4098645   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4098646   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4098647   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4098648   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4098649   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4098650   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4098651   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4098652   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4098653   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4098654   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4098655   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4098656   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4098657   +          +    -0.09282222088797 * S_NumDealsPurchases
4098658   +          +     0.10726247938321 * S_NumDistPurchases
4098659   +          +     -1.1235971458527 * S_NumStorePurchases
4098660   +          +    -0.78304387839877 * S_NumWebPurchases
4098661   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4098662   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4098663   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4098664   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4098665   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4098666   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4098667   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4098668   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4098669   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4098670   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4098671   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4098672   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4098673   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4098674   +          +     0.35349185459988 * S_NumDealsPurchases
4098675   +          +     0.06853677714859 * S_NumDistPurchases
4098676   +          +    -1.47546012999338 * S_NumStorePurchases
4098677   +          +     0.20926435398916 * S_NumWebPurchases
4098678   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4098679   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4098680   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4098681   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4098682   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4098683   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4098684   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4098685   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4098686   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4098687   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4098688   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4098689   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4098690   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4098691   +          +      0.3873586120272 * S_NumDealsPurchases
4098692   +          +     0.25911651157596 * S_NumDistPurchases
4098693   +          +     1.58922489084287 * S_NumStorePurchases
4098694   +          +     0.49041797743368 * S_NumWebPurchases
4098695   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4098696   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4098697   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4098698   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4098699   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4098700   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4098701   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4098702   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4098703   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4098704   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4098705   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4098706   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4098707   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4098708   +          +    -0.60830880287865 * S_NumDealsPurchases
4098709   +          +      0.0745331267194 * S_NumDistPurchases
4098710   +          +    -1.39472448256952 * S_NumStorePurchases
4098711   +          +     1.95372179969087 * S_NumWebPurchases
4098712   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4098713   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4098714   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4098715   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4098716   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4098717   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4098718   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4098719   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4098720   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4098721   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4098722   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4098723   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4098724   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4098725   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4098726   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4098727   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4098728   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4098729   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4098730   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4098731   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4098732   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4098733   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4098734   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4098735   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4098736   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4098737   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4098738   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4098739   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4098740   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4098741   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4098742   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4098743   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4098744   +          +    -1.33377871643323 * Marital_StatusDivorced
4098745   +          +    -0.87184228840898 * Marital_StatusMarried
4098746   +          +     1.41223186340257 * Marital_StatusSingle
4098747   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4098748   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4098749   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4098750   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4098751   +          +    -0.21479890935233 * Marital_StatusDivorced
4098752   +          +     -0.0025459519579 * Marital_StatusMarried
4098753   +          +     1.33900491702264 * Marital_StatusSingle
4098754   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4098755   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4098756   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4098757   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4098758   +          +    -0.38307267471999 * Marital_StatusDivorced
4098759   +          +     0.97088969451415 * Marital_StatusMarried
4098760   +          +    -0.28578224473381 * Marital_StatusSingle
4098761   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4098762   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4098763   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4098764   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4098765   +          +    -1.42229401093569 * Marital_StatusDivorced
4098766   +          +      0.7234508382397 * Marital_StatusMarried
4098767   +          +    -0.29062202974628 * Marital_StatusSingle
4098768   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4098769   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4098770   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4098771   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4098772   +          +    -0.99067637207205 * Marital_StatusDivorced
4098773   +          +    -0.50245902142079 * Marital_StatusMarried
4098774   +          +     0.54214494533793 * Marital_StatusSingle
4098775   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4098776   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4098777   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4098778   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4098779   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4098780   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4098781   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4098782   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4098783   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4098784   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4098785   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4098786   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4098787   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4098788   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4098789   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4098790   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4098791   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4098792   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4098793   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4098794   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4098795   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4098796   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4098797   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4098798   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4098799   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4098800   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4098801   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4098802   +END;
MPRINT(EM_DIAGRAM):   END;
4098803   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4098804   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4098805   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4098806   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4098807   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4098808   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4098809   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4098810   +END;
MPRINT(EM_DIAGRAM):   END;
4098811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098812   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4098813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098814   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4098815   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4098816   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4098817   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4098818   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4098819   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4098820   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4098821   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4098822   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4098823   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4098824   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4098825   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4098826   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4098827   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4098828   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4098829   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4098830   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4098831   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4098832   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4098833   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4098834   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4098835   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4098836   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4098837   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4098838   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4098839   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4098840   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4098841   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4098842   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4098843   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4098844   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4098845   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4098846   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4098847   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4098848   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4098849   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4098850   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4098851   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4098852   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4098853   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4098854   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4098855   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4098856   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4098857   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4098858   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4098859   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4098860   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4098861   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4098862   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4098863   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4098864   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4098865   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4098866   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4098867   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4098868   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4098869   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4098870   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4098871   +END;
MPRINT(EM_DIAGRAM):   END;
4098872   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4098873   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4098874   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4098875   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4098876   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4098877   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4098878   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4098879   +END;
MPRINT(EM_DIAGRAM):   END;
4098880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098881   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4098882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098883   +
4098884   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4098885   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4098886   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4098887   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4098888   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4098889   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4098890   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4098891   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4098892   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4098893   +end;
MPRINT(EM_DIAGRAM):   end;
4098894   +else do;
MPRINT(EM_DIAGRAM):   else do;
4098895   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4098896   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4098897   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4098898   +   end;
MPRINT(EM_DIAGRAM):   end;
4098899   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4098900   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4098901   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4098902   +   end;
MPRINT(EM_DIAGRAM):   end;
4098903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4098904   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4098905   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4098906   +   end;
MPRINT(EM_DIAGRAM):   end;
4098907   +end;
MPRINT(EM_DIAGRAM):   end;
4098908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4098909   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4098910   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4098911   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4098912   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4098913   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4098914   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4098915   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4098916   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4098917   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4098918   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4098919   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4098920   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4098921   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4098922   +END;
MPRINT(EM_DIAGRAM):   END;
4098923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4098924   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4098925   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4098926   +END;
MPRINT(EM_DIAGRAM):   END;
4098927   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4098928   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4098929   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4098930   +END;
MPRINT(EM_DIAGRAM):   END;
4098931   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4098932   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4098933   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4098934   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4098935   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4098936   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4098937   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4098938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098939   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4098940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4098941   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4098942   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4098943   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4098944   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4098945   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4098946   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4098947   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4098948   +END;
MPRINT(EM_DIAGRAM):   END;
4098949   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4098950   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4098951   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4098952   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4098953   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4098954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098955   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4098956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098957   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4098958   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4098959   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4098960   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4098961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098962   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4098963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098964   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4098965   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4098966   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4098967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098968   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
4098969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098971   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4098972   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4098973   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4098974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4098975   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4098976   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4098977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4098978   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4098979   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4098980   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4098981   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4098982   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4098983   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4098984   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4098985   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4098986   +LENGTH _WARN_ $4
4098987   +      F_DepVar  $ 12
4098988   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4098989   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4098990   +
4098991   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4098992   +
4098993   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4098994   +
4098995   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4098996   +
4098997   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4098998   +
4098999   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4099000   +
4099001   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4099002   +
4099003   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4099004   +
4099005   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4099006   +
4099007   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4099008   +
4099009   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4099010   +
4099011   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4099012   +
4099013   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4099014   +
4099015   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4099016   +
4099017   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4099018   +
4099019   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4099020   +
4099021   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4099022   +
4099023   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4099024   +
4099025   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4099026   +
4099027   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4099028   +
4099029   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4099030   +
4099031   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4099032   +
4099033   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4099034   +
4099035   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4099036   +
4099037   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4099038   +
4099039   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4099040   +
4099041   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4099042   +
4099043   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4099044   +
4099045   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4099046   +
4099047   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4099048   +
4099049   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4099050   +
4099051   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4099052   +
4099053   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4099054   +
4099055   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4099056   +
4099057   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4099058   +
4099059   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4099060   +
4099061   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4099062   +
4099063   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4099064   +
4099065   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4099066   +
4099067   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4099068   +
4099069   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4099070   +
4099071   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4099072   +
4099073   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4099074   +
4099075   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4099076   +
4099077   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4099078   +
4099079   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4099080   +
4099081   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4099082   +
4099083   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4099084   +
4099085   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4099086   +
4099087   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4099088   +
4099089   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4099090   +
4099091   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4099092   +
4099093   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4099094   +
4099095   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4099096   +
4099097   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4099098   +
4099099   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4099100   +
4099101   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4099102   +
4099103   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4099104   +
4099105   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4099106   +
4099107   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4099108   +
4099109   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4099110   +
4099111   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4099112   +
4099113   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4099114   +
4099115   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4099116   +
4099117   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4099118   +
4099119   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4099120   +
4099121   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4099122   +
4099123   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4099124   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4099125   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4099126   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4099127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099129   +end;
MPRINT(EM_DIAGRAM):   end;
4099130   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099132   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4099133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099135   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4099136   +   end;
MPRINT(EM_DIAGRAM):   end;
4099137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099138   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4099139   +   end;
MPRINT(EM_DIAGRAM):   end;
4099140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099141   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4099142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099144   +   end;
MPRINT(EM_DIAGRAM):   end;
4099145   +end;
MPRINT(EM_DIAGRAM):   end;
4099146   +
4099147   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4099148   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4099149   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4099150   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4099151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099153   +end;
MPRINT(EM_DIAGRAM):   end;
4099154   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099156   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4099157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099159   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4099160   +   end;
MPRINT(EM_DIAGRAM):   end;
4099161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099162   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4099163   +   end;
MPRINT(EM_DIAGRAM):   end;
4099164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099165   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4099166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099168   +   end;
MPRINT(EM_DIAGRAM):   end;
4099169   +end;
MPRINT(EM_DIAGRAM):   end;
4099170   +
4099171   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4099172   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4099173   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4099174   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4099175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099177   +end;
MPRINT(EM_DIAGRAM):   end;
4099178   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099180   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4099181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099183   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4099184   +   end;
MPRINT(EM_DIAGRAM):   end;
4099185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099186   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4099187   +   end;
MPRINT(EM_DIAGRAM):   end;
4099188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099189   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4099190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099192   +   end;
MPRINT(EM_DIAGRAM):   end;
4099193   +end;
MPRINT(EM_DIAGRAM):   end;
4099194   +
4099195   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4099196   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4099197   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4099198   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4099199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099201   +end;
MPRINT(EM_DIAGRAM):   end;
4099202   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099204   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4099205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099207   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4099208   +   end;
MPRINT(EM_DIAGRAM):   end;
4099209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099210   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4099211   +   end;
MPRINT(EM_DIAGRAM):   end;
4099212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099213   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4099214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099216   +   end;
MPRINT(EM_DIAGRAM):   end;
4099217   +end;
MPRINT(EM_DIAGRAM):   end;
4099218   +
4099219   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4099220   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4099221   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4099222   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4099223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099225   +end;
MPRINT(EM_DIAGRAM):   end;
4099226   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099228   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4099229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099231   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4099232   +   end;
MPRINT(EM_DIAGRAM):   end;
4099233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099234   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4099235   +   end;
MPRINT(EM_DIAGRAM):   end;
4099236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099237   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4099238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099240   +   end;
MPRINT(EM_DIAGRAM):   end;
4099241   +end;
MPRINT(EM_DIAGRAM):   end;
4099242   +
4099243   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4099244   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4099245   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4099246   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4099247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099249   +end;
MPRINT(EM_DIAGRAM):   end;
4099250   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099252   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4099253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4099255   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4099256   +   end;
MPRINT(EM_DIAGRAM):   end;
4099257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4099258   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4099259   +   end;
MPRINT(EM_DIAGRAM):   end;
4099260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099261   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4099262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099264   +   end;
MPRINT(EM_DIAGRAM):   end;
4099265   +end;
MPRINT(EM_DIAGRAM):   end;
4099266   +
4099267   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4099268   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4099269   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4099270   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4099271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099273   +end;
MPRINT(EM_DIAGRAM):   end;
4099274   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4099276   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4099277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099278   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4099279   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4099280   +   end;
MPRINT(EM_DIAGRAM):   end;
4099281   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4099282   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4099283   +   end;
MPRINT(EM_DIAGRAM):   end;
4099284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099285   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4099286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099288   +   end;
MPRINT(EM_DIAGRAM):   end;
4099289   +end;
MPRINT(EM_DIAGRAM):   end;
4099290   +
4099291   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4099292   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4099293   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4099294   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4099295   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4099296   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4099297   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4099298   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4099299   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4099300   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4099301   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4099302   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4099303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099305   +end;
MPRINT(EM_DIAGRAM):   end;
4099306   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099307   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4099308   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4099309   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099310   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4099311   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4099312   +   end;
MPRINT(EM_DIAGRAM):   end;
4099313   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4099314   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4099315   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4099316   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4099317   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4099318   +   end;
MPRINT(EM_DIAGRAM):   end;
4099319   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4099320   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4099321   +   end;
MPRINT(EM_DIAGRAM):   end;
4099322   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4099323   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4099324   +   end;
MPRINT(EM_DIAGRAM):   end;
4099325   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4099326   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4099327   +   end;
MPRINT(EM_DIAGRAM):   end;
4099328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099329   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4099330   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4099331   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4099332   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4099333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099335   +   end;
MPRINT(EM_DIAGRAM):   end;
4099336   +end;
MPRINT(EM_DIAGRAM):   end;
4099337   +
4099338   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4099339   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4099340   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4099341   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4099342   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4099343   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4099344   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4099345   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4099346   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4099347   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4099348   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4099349   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4099350   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4099351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4099352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099353   +end;
MPRINT(EM_DIAGRAM):   end;
4099354   +else do;
MPRINT(EM_DIAGRAM):   else do;
4099355   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4099356   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4099357   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4099358   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4099359   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4099360   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4099361   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4099362   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4099363   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4099364   +         end;
MPRINT(EM_DIAGRAM):   end;
4099365   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4099366   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4099367   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4099368   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4099369   +            end;
MPRINT(EM_DIAGRAM):   end;
4099370   +         end;
MPRINT(EM_DIAGRAM):   end;
4099371   +      end;
MPRINT(EM_DIAGRAM):   end;
4099372   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4099373   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4099374   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4099375   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4099376   +         end;
MPRINT(EM_DIAGRAM):   end;
4099377   +      end;
MPRINT(EM_DIAGRAM):   end;
4099378   +   end;
MPRINT(EM_DIAGRAM):   end;
4099379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4099380   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4099381   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4099382   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4099383   +      end;
MPRINT(EM_DIAGRAM):   end;
4099384   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4099385   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4099386   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4099387   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4099388   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4099389   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4099390   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4099391   +         end;
MPRINT(EM_DIAGRAM):   end;
4099392   +      end;
MPRINT(EM_DIAGRAM):   end;
4099393   +   end;
MPRINT(EM_DIAGRAM):   end;
4099394   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4099395   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4099396   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4099397   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4099398   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4099399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4099400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099401   +   end;
MPRINT(EM_DIAGRAM):   end;
4099402   +end;
MPRINT(EM_DIAGRAM):   end;
4099403   +
4099404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099405   +*** Checking missing input Interval
4099406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4099407   +
4099408   +IF NMISS(
4099409   +   AcceptedCmpTotal ,
4099410   +   Age ,
4099411   +   Frq ,
4099412   +   Income ,
4099413   +   Kidhome ,
4099414   +   Mnt ,
4099415   +   MntFishProducts ,
4099416   +   MntFruits ,
4099417   +   MntGoldProds ,
4099418   +   MntMeatProducts ,
4099419   +   MntSweetProducts ,
4099420   +   MntWines ,
4099421   +   MonthsAsCustomer ,
4099422   +   NumCatalogPurchases ,
4099423   +   NumDealsPurchases ,
4099424   +   NumDistPurchases ,
4099425   +   NumStorePurchases ,
4099426   +   NumWebPurchases ,
4099427   +   NumWebVisitsMonth ,
4099428   +   RFMstat ,
4099429   +   RMntFrq ,
4099430   +   Recency ,
4099431   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4099432   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4099433   +
4099434   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4099435   +END;
MPRINT(EM_DIAGRAM):   END;
4099436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099437   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4099438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4099440   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4099441   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4099442   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4099443   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4099444   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4099445   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4099446   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4099447   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4099448   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4099449   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4099450   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4099451   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4099452   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4099453   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4099454   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4099455   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4099456   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4099457   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4099458   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4099459   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4099460   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4099461   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4099462   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4099463   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4099464   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4099465   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4099466   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4099467   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4099468   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4099469   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4099470   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4099471   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4099472   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4099473   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4099474   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4099475   +END;
MPRINT(EM_DIAGRAM):   END;
4099476   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4099477   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4099478   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4099479   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4099480   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4099481   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4099482   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4099483   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4099484   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4099485   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4099486   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4099487   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4099488   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4099489   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4099490   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4099491   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4099492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4099493   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4099494   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4099495   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4099496   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4099497   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4099498   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4099499   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4099500   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4099501   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4099502   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4099503   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4099504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4099505   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4099506   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4099507   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4099508   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4099509   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4099510   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4099511   +   ELSE S_NumCatalogPurchases
4099512   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4099513   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4099514   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4099515   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4099516   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4099517   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4099518   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4099519   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4099520   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4099521   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4099522   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4099523   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4099524   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4099525   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4099526   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4099527   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4099528   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4099529   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4099530   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4099531   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4099532   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4099533   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4099534   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4099535   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4099536   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4099537   +END;
MPRINT(EM_DIAGRAM):   END;
4099538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099539   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4099540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099542   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4099543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099545   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4099546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099547   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4099548   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4099549   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4099550   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4099551   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4099552   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4099553   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4099554   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4099555   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4099556   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4099557   +          +     1.17276395296242 * S_NumDealsPurchases
4099558   +          +     0.26632768295477 * S_NumDistPurchases
4099559   +          +    -1.26575615903579 * S_NumStorePurchases
4099560   +          +    -0.95316107557927 * S_NumWebPurchases
4099561   +          +     1.01828574356487 * S_NumWebVisitsMonth
4099562   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4099563   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4099564   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4099565   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4099566   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4099567   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4099568   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4099569   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4099570   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4099571   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4099572   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4099573   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4099574   +          +     1.14485571201233 * S_NumDealsPurchases
4099575   +          +     0.21414266588987 * S_NumDistPurchases
4099576   +          +    -0.10530090074297 * S_NumStorePurchases
4099577   +          +    -0.41712321238458 * S_NumWebPurchases
4099578   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4099579   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4099580   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4099581   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4099582   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4099583   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4099584   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4099585   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4099586   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4099587   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4099588   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4099589   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4099590   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4099591   +          +      0.7196418967437 * S_NumDealsPurchases
4099592   +          +     0.69035286374177 * S_NumDistPurchases
4099593   +          +     0.38027656631135 * S_NumStorePurchases
4099594   +          +    -0.18878358997924 * S_NumWebPurchases
4099595   +          +     1.61962062004798 * S_NumWebVisitsMonth
4099596   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4099597   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4099598   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4099599   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4099600   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4099601   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4099602   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4099603   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4099604   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4099605   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4099606   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4099607   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4099608   +          +    -0.00642902007204 * S_NumDealsPurchases
4099609   +          +     0.29785069480367 * S_NumDistPurchases
4099610   +          +    -0.42243322063147 * S_NumStorePurchases
4099611   +          +     0.54880896338383 * S_NumWebPurchases
4099612   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4099613   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4099614   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4099615   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4099616   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4099617   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4099618   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4099619   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4099620   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4099621   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4099622   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4099623   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4099624   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4099625   +          +    -0.48404738328225 * S_NumDealsPurchases
4099626   +          +    -0.02464180457879 * S_NumDistPurchases
4099627   +          +     1.17201831082067 * S_NumStorePurchases
4099628   +          +     0.57453655167516 * S_NumWebPurchases
4099629   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4099630   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4099631   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4099632   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4099633   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4099634   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4099635   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4099636   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4099637   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4099638   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4099639   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4099640   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4099641   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4099642   +          +    -1.49850531967483 * S_NumDealsPurchases
4099643   +          +    -0.82105466264223 * S_NumDistPurchases
4099644   +          +     0.29984603642824 * S_NumStorePurchases
4099645   +          +     0.06557123721611 * S_NumWebPurchases
4099646   +          +     1.04754749365002 * S_NumWebVisitsMonth
4099647   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4099648   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4099649   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4099650   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4099651   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4099652   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4099653   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4099654   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4099655   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4099656   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4099657   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4099658   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4099659   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4099660   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4099661   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4099662   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4099663   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4099664   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4099665   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4099666   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4099667   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4099668   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4099669   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4099670   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4099671   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4099672   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4099673   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4099674   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4099675   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4099676   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4099677   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4099678   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4099679   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4099680   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4099681   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4099682   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4099683   +          +     0.24583509957712 * Marital_StatusDivorced
4099684   +          +    -0.22681931588361 * Marital_StatusMarried
4099685   +          +    -0.12924106229536 * Marital_StatusSingle
4099686   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4099687   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4099688   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4099689   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4099690   +          +    -0.12585334311068 * Marital_StatusDivorced
4099691   +          +    -0.20835502467207 * Marital_StatusMarried
4099692   +          +    -0.13839534449368 * Marital_StatusSingle
4099693   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4099694   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4099695   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4099696   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4099697   +          +     0.35106363238113 * Marital_StatusDivorced
4099698   +          +     -1.3414808583918 * Marital_StatusMarried
4099699   +          +     1.40835320798486 * Marital_StatusSingle
4099700   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4099701   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4099702   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4099703   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4099704   +          +     0.48174546958393 * Marital_StatusDivorced
4099705   +          +    -0.41416978858191 * Marital_StatusMarried
4099706   +          +    -0.23376801546265 * Marital_StatusSingle
4099707   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4099708   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4099709   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4099710   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4099711   +          +    -0.67557643774246 * Marital_StatusDivorced
4099712   +          +     1.63844045917367 * Marital_StatusMarried
4099713   +          +    -0.70320960247699 * Marital_StatusSingle
4099714   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4099715   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4099716   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4099717   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4099718   +          +    -0.11371453086883 * Marital_StatusDivorced
4099719   +          +    -0.34226997176291 * Marital_StatusMarried
4099720   +          +    -1.01568676685754 * Marital_StatusSingle
4099721   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4099722   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4099723   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4099724   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4099725   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4099726   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4099727   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4099728   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4099729   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4099730   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4099731   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4099732   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4099733   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4099734   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4099735   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4099736   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4099737   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4099738   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4099739   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4099740   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4099741   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4099742   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4099743   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4099744   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4099745   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4099746   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4099747   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4099748   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4099749   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4099750   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4099751   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4099752   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4099753   +END;
MPRINT(EM_DIAGRAM):   END;
4099754   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4099755   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4099756   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4099757   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4099758   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4099759   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4099760   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4099761   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4099762   +END;
MPRINT(EM_DIAGRAM):   END;
4099763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099764   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4099765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4099767   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4099768   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4099769   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4099770   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4099771   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4099772   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4099773   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4099774   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4099775   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4099776   +          +    -0.87259051567474 * S_NumDealsPurchases
4099777   +          +    -0.36454149529139 * S_NumDistPurchases
4099778   +          +     0.12447759925061 * S_NumStorePurchases
4099779   +          +    -1.08133487947367 * S_NumWebPurchases
4099780   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4099781   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4099782   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4099783   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4099784   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4099785   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4099786   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4099787   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4099788   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4099789   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4099790   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4099791   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4099792   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4099793   +          +     2.23121497416403 * S_NumDealsPurchases
4099794   +          +    -0.48674842191071 * S_NumDistPurchases
4099795   +          +     1.77510728607544 * S_NumStorePurchases
4099796   +          +     0.14647433155436 * S_NumWebPurchases
4099797   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4099798   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4099799   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4099800   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4099801   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4099802   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4099803   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4099804   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4099805   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4099806   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4099807   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4099808   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4099809   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4099810   +          +     0.14338855349611 * S_NumDealsPurchases
4099811   +          +    -2.21071010829235 * S_NumDistPurchases
4099812   +          +    -0.21795889348002 * S_NumStorePurchases
4099813   +          +     1.98825087883535 * S_NumWebPurchases
4099814   +          +     1.02482442531149 * S_NumWebVisitsMonth
4099815   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4099816   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4099817   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4099818   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4099819   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4099820   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4099821   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4099822   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4099823   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4099824   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4099825   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4099826   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4099827   +          +     0.30041205661012 * S_NumDealsPurchases
4099828   +          +    -0.63499849986918 * S_NumDistPurchases
4099829   +          +    -0.34155713433714 * S_NumStorePurchases
4099830   +          +    -1.14183354933936 * S_NumWebPurchases
4099831   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4099832   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4099833   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4099834   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4099835   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4099836   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4099837   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4099838   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4099839   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4099840   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4099841   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4099842   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4099843   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4099844   +          +    -0.21237915559831 * S_NumDealsPurchases
4099845   +          +     0.48256923764182 * S_NumDistPurchases
4099846   +          +    -0.45553093140641 * S_NumStorePurchases
4099847   +          +      0.5593655963659 * S_NumWebPurchases
4099848   +          +     0.27943768691188 * S_NumWebVisitsMonth
4099849   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4099850   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4099851   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4099852   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4099853   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4099854   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4099855   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4099856   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4099857   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4099858   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4099859   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4099860   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4099861   +          +     2.38967021388062 * S_NumDealsPurchases
4099862   +          +    -0.97722398866481 * S_NumDistPurchases
4099863   +          +     1.57612333191312 * S_NumStorePurchases
4099864   +          +    -0.75968679115983 * S_NumWebPurchases
4099865   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4099866   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4099867   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4099868   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4099869   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4099870   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4099871   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4099872   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4099873   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4099874   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4099875   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4099876   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4099877   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4099878   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4099879   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4099880   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4099881   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4099882   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4099883   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4099884   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4099885   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4099886   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4099887   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4099888   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4099889   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4099890   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4099891   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4099892   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4099893   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4099894   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4099895   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4099896   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4099897   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4099898   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4099899   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4099900   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4099901   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4099902   +          +     0.96470902298142 * Marital_StatusDivorced
4099903   +          +     0.94805959268314 * Marital_StatusMarried
4099904   +          +     -0.6523948769616 * Marital_StatusSingle
4099905   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4099906   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4099907   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4099908   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4099909   +          +      0.3918249505531 * Marital_StatusDivorced
4099910   +          +    -0.00968091979586 * Marital_StatusMarried
4099911   +          +     0.84615379885071 * Marital_StatusSingle
4099912   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4099913   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4099914   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4099915   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4099916   +          +     1.14335160313191 * Marital_StatusDivorced
4099917   +          +     0.50580517192175 * Marital_StatusMarried
4099918   +          +     0.17264295020921 * Marital_StatusSingle
4099919   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4099920   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4099921   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4099922   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4099923   +          +    -0.11238504444225 * Marital_StatusDivorced
4099924   +          +    -0.81348274043749 * Marital_StatusMarried
4099925   +          +     0.46075415610001 * Marital_StatusSingle
4099926   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4099927   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4099928   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4099929   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4099930   +          +    -0.46342068701431 * Marital_StatusDivorced
4099931   +          +    -0.41667845270204 * Marital_StatusMarried
4099932   +          +    -0.47166707496281 * Marital_StatusSingle
4099933   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4099934   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4099935   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4099936   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4099937   +          +    -0.45376613787812 * Marital_StatusDivorced
4099938   +          +     0.01337046049801 * Marital_StatusMarried
4099939   +          +    -0.92811489484121 * Marital_StatusSingle
4099940   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4099941   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4099942   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4099943   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4099944   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4099945   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4099946   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4099947   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4099948   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4099949   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4099950   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4099951   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4099952   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4099953   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4099954   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4099955   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4099956   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4099957   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4099958   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4099959   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4099960   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4099961   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4099962   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4099963   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4099964   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4099965   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4099966   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4099967   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4099968   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4099969   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4099970   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4099971   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4099972   +END;
MPRINT(EM_DIAGRAM):   END;
4099973   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4099974   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4099975   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4099976   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4099977   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4099978   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4099979   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4099980   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4099981   +END;
MPRINT(EM_DIAGRAM):   END;
4099982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099983   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4099984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4099985   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4099986   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4099987   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4099988   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4099989   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4099990   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4099991   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4099992   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4099993   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4099994   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4099995   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4099996   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4099997   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4099998   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4099999   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4100000   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4100001   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4100002   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4100003   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4100004   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4100005   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4100006   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4100007   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4100008   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4100009   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4100010   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4100011   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4100012   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4100013   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4100014   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4100015   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4100016   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4100017   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4100018   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4100019   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4100020   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4100021   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4100022   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4100023   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4100024   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4100025   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4100026   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4100027   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4100028   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4100029   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4100030   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4100031   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4100032   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4100033   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4100034   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4100035   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4100036   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4100037   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4100038   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4100039   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4100040   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4100041   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4100042   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4100043   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4100044   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4100045   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4100046   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4100047   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4100048   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4100049   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4100050   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4100051   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4100052   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4100053   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4100054   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4100055   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4100056   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4100057   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4100058   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4100059   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4100060   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4100061   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4100062   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4100063   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4100064   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4100065   +END;
MPRINT(EM_DIAGRAM):   END;
4100066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4100067   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4100068   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4100069   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4100070   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4100071   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4100072   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4100073   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4100074   +END;
MPRINT(EM_DIAGRAM):   END;
4100075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100076   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4100077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100078   +
4100079   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4100080   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4100081   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4100082   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4100083   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4100084   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100085   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4100086   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4100087   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4100088   +end;
MPRINT(EM_DIAGRAM):   end;
4100089   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100090   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4100091   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4100092   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4100093   +   end;
MPRINT(EM_DIAGRAM):   end;
4100094   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4100095   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4100096   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4100097   +   end;
MPRINT(EM_DIAGRAM):   end;
4100098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100099   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4100100   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4100101   +   end;
MPRINT(EM_DIAGRAM):   end;
4100102   +end;
MPRINT(EM_DIAGRAM):   end;
4100103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4100104   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4100105   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4100106   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4100107   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4100108   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4100109   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4100110   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4100111   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4100112   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4100113   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4100114   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4100115   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4100116   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4100117   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4100118   +END;
MPRINT(EM_DIAGRAM):   END;
4100119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4100120   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4100121   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4100122   +END;
MPRINT(EM_DIAGRAM):   END;
4100123   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4100124   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4100125   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4100126   +END;
MPRINT(EM_DIAGRAM):   END;
4100127   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4100128   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4100129   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4100130   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4100131   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4100132   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4100133   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4100134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100135   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4100136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100137   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4100138   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4100139   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4100140   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4100141   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4100142   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4100143   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4100144   +END;
MPRINT(EM_DIAGRAM):   END;
4100145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4100146   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4100147   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4100148   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4100149   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4100150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100151   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4100152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100153   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4100154   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4100155   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4100156   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4100157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100158   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4100159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100160   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4100161   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4100162   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4100163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100164   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
4100165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100166   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
4100167   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
4100168   +P_DepVar1 = max(
4100169   +AutoNeural6_P_DepVar1 ,
4100170   +AutoNeural7_P_DepVar1 ,
4100171   +AutoNeural8_P_DepVar1 ,
4100172   +AutoNeural10_P_DepVar1 ,
4100173   +AutoNeural9_P_DepVar1 ,
4100174   +AutoNeural11_P_DepVar1 ,
4100175   +AutoNeural12_P_DepVar1
4100176   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
4100177   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
4100178   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
4100179   +P_DepVar1 = _premainder;
The SAS System
 
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
4100180   +end;
MPRINT(EM_DIAGRAM):   end;
4100181   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
4100182   +P_DepVar0 = max(
4100183   +AutoNeural6_P_DepVar0 ,
4100184   +AutoNeural7_P_DepVar0 ,
4100185   +AutoNeural8_P_DepVar0 ,
4100186   +AutoNeural10_P_DepVar0 ,
4100187   +AutoNeural9_P_DepVar0 ,
4100188   +AutoNeural11_P_DepVar0 ,
4100189   +AutoNeural12_P_DepVar0
4100190   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
4100191   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
4100192   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
4100193   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
4100194   +end;
MPRINT(EM_DIAGRAM):   end;
4100195   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
4100196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100197   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
4100198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100199   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
4100200   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
4100201   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
4100202   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
4100203   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
4100204   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
4100205   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
4100206   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
4100207   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
4100208   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
4100209   +end;
MPRINT(EM_DIAGRAM):   end;
4100210   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
4100211   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
4100212   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
4100213   +end;
MPRINT(EM_DIAGRAM):   end;
4100214   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4100215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100216   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
4100217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100218   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4100219   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4100220   +else
4100221   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4100222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100223   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
4100224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100225   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4100226   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4100227   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4100228   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100228  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100229   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100229  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100230   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100230  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100231   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100231  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100232   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100232  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100233   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100233  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100234   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100234  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100235   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100235  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100236   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100236  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100237   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100237  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100238   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100238  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100239   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100239  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100240   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100240  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100241   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100241  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100242   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100242  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100243   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100243  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100244   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100244  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100245   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100245  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100246   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100246  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100247   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100247  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100248   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100248  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100249   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100249  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100250   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100250  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100251   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100251  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100252   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4100252  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4100253   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4100253  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4100254   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4100254  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4100255   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4100255  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4100256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100257   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
4100258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100259   +if
4100260   +F_DepVar NE '1'
4100261   +AND F_DepVar NE '0'
4100262   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4100263   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4100264   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4100265   +end;
MPRINT(EM_DIAGRAM):   end;
4100266   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100267   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4100268   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4100269   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4100270   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4100271   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4100272   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4100273   +END;
MPRINT(EM_DIAGRAM):   END;
4100274   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4100275    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4100276    quit;
4100277    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
4100278    filename emflow
4100278  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100279    *------------------------------------------------------------*;
4100280    * Ensmbl37: Scoring AUTONEURAL6_VALIDATE data;
4100281    *------------------------------------------------------------*;
4100282    data EMWS8.Ensmbl37_VALIDATE
4100283    / view=EMWS8.Ensmbl37_VALIDATE
4100284    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_VALIDATE / view=EMWS8.Ensmbl37_VALIDATE ;
4100285    set EMWS8.AutoNeural6_VALIDATE
4100286    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
4100287    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMFLOWSCORE.sas.
4100288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100289   +* Ensmbl37: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Combine model for DepVar;
4100290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100291   +* Ensmbl37: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 1 of 7;
4100292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100294   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4100295   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4100296   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4100297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100299   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4100300   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4100301   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4100302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100304   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4100305   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4100306   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4100307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100309   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4100310   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4100311   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4100312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100313   +
4100314   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4100315   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4100315  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4100316   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4100317   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4100318   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4100319   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4100320   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4100321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100322   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4100323   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4100324   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4100325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100327   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4100328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100329   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4100330   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4100331   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4100332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100333   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4100334   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4100335   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4100336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100338   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4100339   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4100340   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4100341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100343   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4100344   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4100345   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4100346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4100347   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4100348   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4100349   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4100350   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4100351   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4100352   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4100353   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4100354   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4100355   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4100356   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4100357   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4100358   +LENGTH _WARN_ $4
4100359   +      F_DepVar  $ 12
4100360   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4100361   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4100362   +
4100363   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4100364   +
4100365   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4100366   +
4100367   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4100368   +
4100369   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4100370   +
4100371   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4100372   +
4100373   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4100374   +
4100375   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4100376   +
4100377   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4100378   +
4100379   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4100380   +
4100381   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4100382   +
4100383   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4100384   +
4100385   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4100386   +
4100387   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4100388   +
4100389   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4100390   +
4100391   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4100392   +
4100393   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4100394   +
4100395   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4100396   +
4100397   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4100398   +
4100399   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4100400   +
4100401   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4100402   +
4100403   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4100404   +
4100405   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4100406   +
4100407   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4100408   +
4100409   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4100410   +
4100411   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4100412   +
4100413   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4100414   +
4100415   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4100416   +
4100417   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4100418   +
4100419   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4100420   +
4100421   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4100422   +
4100423   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4100424   +
4100425   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4100426   +
4100427   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4100428   +
4100429   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4100430   +
4100431   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4100432   +
4100433   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4100434   +
4100435   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4100436   +
4100437   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4100438   +
4100439   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4100440   +
4100441   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4100442   +
4100443   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4100444   +
4100445   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4100446   +
4100447   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4100448   +
4100449   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4100450   +
4100451   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4100452   +
4100453   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4100454   +
4100455   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4100456   +
4100457   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4100458   +
4100459   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4100460   +
4100461   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4100462   +
4100463   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4100464   +
4100465   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4100466   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4100467   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4100468   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4100469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100471   +end;
MPRINT(EM_DIAGRAM):   end;
4100472   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100474   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4100475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100477   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4100478   +   end;
MPRINT(EM_DIAGRAM):   end;
4100479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100480   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4100481   +   end;
MPRINT(EM_DIAGRAM):   end;
4100482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100483   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4100484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100486   +   end;
MPRINT(EM_DIAGRAM):   end;
4100487   +end;
MPRINT(EM_DIAGRAM):   end;
4100488   +
4100489   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4100490   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4100491   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4100492   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4100493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100495   +end;
MPRINT(EM_DIAGRAM):   end;
4100496   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100498   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4100499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100501   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4100502   +   end;
MPRINT(EM_DIAGRAM):   end;
4100503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100504   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4100505   +   end;
MPRINT(EM_DIAGRAM):   end;
4100506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100507   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4100508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100510   +   end;
MPRINT(EM_DIAGRAM):   end;
4100511   +end;
MPRINT(EM_DIAGRAM):   end;
4100512   +
4100513   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4100514   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4100515   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4100516   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4100517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100519   +end;
MPRINT(EM_DIAGRAM):   end;
4100520   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100522   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4100523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100525   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4100526   +   end;
MPRINT(EM_DIAGRAM):   end;
4100527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100528   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4100529   +   end;
MPRINT(EM_DIAGRAM):   end;
4100530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100531   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4100532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100534   +   end;
MPRINT(EM_DIAGRAM):   end;
4100535   +end;
MPRINT(EM_DIAGRAM):   end;
4100536   +
4100537   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4100538   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4100539   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4100540   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4100541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100543   +end;
MPRINT(EM_DIAGRAM):   end;
4100544   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100546   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4100547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100549   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4100550   +   end;
MPRINT(EM_DIAGRAM):   end;
4100551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100552   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4100553   +   end;
MPRINT(EM_DIAGRAM):   end;
4100554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100555   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4100556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100558   +   end;
MPRINT(EM_DIAGRAM):   end;
4100559   +end;
MPRINT(EM_DIAGRAM):   end;
4100560   +
4100561   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4100562   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4100563   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4100564   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4100565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100567   +end;
MPRINT(EM_DIAGRAM):   end;
4100568   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100570   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4100571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100573   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4100574   +   end;
MPRINT(EM_DIAGRAM):   end;
4100575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100576   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4100577   +   end;
MPRINT(EM_DIAGRAM):   end;
4100578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100579   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4100580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100582   +   end;
MPRINT(EM_DIAGRAM):   end;
4100583   +end;
MPRINT(EM_DIAGRAM):   end;
4100584   +
4100585   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4100586   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4100587   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4100588   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4100589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100591   +end;
MPRINT(EM_DIAGRAM):   end;
4100592   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100594   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4100595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4100597   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4100598   +   end;
MPRINT(EM_DIAGRAM):   end;
4100599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4100600   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4100601   +   end;
MPRINT(EM_DIAGRAM):   end;
4100602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100603   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4100604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100606   +   end;
MPRINT(EM_DIAGRAM):   end;
4100607   +end;
MPRINT(EM_DIAGRAM):   end;
4100608   +
4100609   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4100610   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4100611   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4100612   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4100613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100615   +end;
MPRINT(EM_DIAGRAM):   end;
4100616   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4100618   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4100619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100620   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4100621   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4100622   +   end;
MPRINT(EM_DIAGRAM):   end;
4100623   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4100624   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4100625   +   end;
MPRINT(EM_DIAGRAM):   end;
4100626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100627   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4100628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100630   +   end;
MPRINT(EM_DIAGRAM):   end;
4100631   +end;
MPRINT(EM_DIAGRAM):   end;
4100632   +
4100633   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4100634   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4100635   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4100636   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4100637   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4100638   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4100639   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4100640   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4100641   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4100642   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4100643   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4100644   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4100645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100647   +end;
MPRINT(EM_DIAGRAM):   end;
4100648   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100649   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4100650   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4100651   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100652   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4100653   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4100654   +   end;
MPRINT(EM_DIAGRAM):   end;
4100655   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4100656   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4100657   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4100658   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4100659   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4100660   +   end;
MPRINT(EM_DIAGRAM):   end;
4100661   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4100662   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4100663   +   end;
MPRINT(EM_DIAGRAM):   end;
4100664   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4100665   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4100666   +   end;
MPRINT(EM_DIAGRAM):   end;
4100667   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4100668   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4100669   +   end;
MPRINT(EM_DIAGRAM):   end;
4100670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100671   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4100672   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4100673   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4100674   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4100675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100677   +   end;
MPRINT(EM_DIAGRAM):   end;
4100678   +end;
MPRINT(EM_DIAGRAM):   end;
4100679   +
4100680   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4100681   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4100682   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4100683   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4100684   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4100685   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4100686   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4100687   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4100688   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4100689   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4100690   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4100691   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4100692   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4100693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4100694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100695   +end;
MPRINT(EM_DIAGRAM):   end;
4100696   +else do;
MPRINT(EM_DIAGRAM):   else do;
4100697   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4100698   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4100699   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4100700   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4100701   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4100702   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4100703   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4100704   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4100705   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4100706   +         end;
MPRINT(EM_DIAGRAM):   end;
4100707   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4100708   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4100709   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4100710   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4100711   +            end;
MPRINT(EM_DIAGRAM):   end;
4100712   +         end;
MPRINT(EM_DIAGRAM):   end;
4100713   +      end;
MPRINT(EM_DIAGRAM):   end;
4100714   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4100715   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4100716   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4100717   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4100718   +         end;
MPRINT(EM_DIAGRAM):   end;
4100719   +      end;
MPRINT(EM_DIAGRAM):   end;
4100720   +   end;
MPRINT(EM_DIAGRAM):   end;
4100721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4100722   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4100723   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4100724   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4100725   +      end;
MPRINT(EM_DIAGRAM):   end;
4100726   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4100727   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4100728   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4100729   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4100730   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4100731   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4100732   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4100733   +         end;
MPRINT(EM_DIAGRAM):   end;
4100734   +      end;
MPRINT(EM_DIAGRAM):   end;
4100735   +   end;
MPRINT(EM_DIAGRAM):   end;
4100736   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4100737   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4100738   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4100739   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4100740   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4100741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4100742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100743   +   end;
MPRINT(EM_DIAGRAM):   end;
4100744   +end;
MPRINT(EM_DIAGRAM):   end;
4100745   +
4100746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100747   +*** Checking missing input Interval
4100748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4100749   +
4100750   +IF NMISS(
4100751   +   AcceptedCmpTotal ,
4100752   +   Age ,
4100753   +   Frq ,
4100754   +   Income ,
4100755   +   Kidhome ,
4100756   +   Mnt ,
4100757   +   MntFishProducts ,
4100758   +   MntFruits ,
4100759   +   MntGoldProds ,
4100760   +   MntMeatProducts ,
4100761   +   MntSweetProducts ,
4100762   +   MntWines ,
4100763   +   MonthsAsCustomer ,
4100764   +   NumCatalogPurchases ,
4100765   +   NumDealsPurchases ,
4100766   +   NumDistPurchases ,
4100767   +   NumStorePurchases ,
4100768   +   NumWebPurchases ,
4100769   +   NumWebVisitsMonth ,
4100770   +   RFMstat ,
4100771   +   RMntFrq ,
4100772   +   Recency ,
4100773   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4100774   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4100775   +
4100776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4100777   +END;
MPRINT(EM_DIAGRAM):   END;
4100778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100779   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4100780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100781   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4100782   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4100783   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4100784   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4100785   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4100786   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4100787   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4100788   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4100789   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4100790   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4100791   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4100792   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4100793   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4100794   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4100795   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4100796   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4100797   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4100798   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4100799   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4100800   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4100801   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4100802   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4100803   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4100804   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4100805   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4100806   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4100807   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4100808   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4100809   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4100810   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4100811   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4100812   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4100813   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4100814   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4100815   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4100816   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4100817   +END;
MPRINT(EM_DIAGRAM):   END;
4100818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4100819   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4100820   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4100821   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4100822   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4100823   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4100824   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4100825   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4100826   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4100827   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4100828   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4100829   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4100830   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4100831   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4100832   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4100833   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4100834   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4100835   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4100836   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4100837   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4100838   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4100839   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4100840   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4100841   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4100842   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4100843   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4100844   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4100845   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4100846   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4100847   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4100848   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4100849   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4100850   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4100851   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4100852   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4100853   +   ELSE S_NumCatalogPurchases
4100854   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4100855   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4100856   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4100857   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4100858   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4100859   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4100860   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4100861   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4100862   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4100863   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4100864   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4100865   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4100866   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4100867   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4100868   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4100869   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4100870   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4100871   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4100872   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4100873   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4100874   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4100875   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4100876   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4100877   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4100878   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4100879   +END;
MPRINT(EM_DIAGRAM):   END;
4100880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100881   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4100882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100884   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4100885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100887   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4100888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4100890   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4100891   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4100892   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4100893   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4100894   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4100895   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4100896   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4100897   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4100898   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4100899   +          +     -0.4295354470932 * S_NumDealsPurchases
4100900   +          +    -0.08226280459837 * S_NumDistPurchases
4100901   +          +      0.2932815275833 * S_NumStorePurchases
4100902   +          +     0.19049189042599 * S_NumWebPurchases
4100903   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4100904   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4100905   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4100906   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4100907   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4100908   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4100909   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4100910   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4100911   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4100912   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4100913   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4100914   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4100915   +          +    -0.78551174413278 * Marital_StatusDivorced
4100916   +          +     1.14162836709205 * Marital_StatusMarried
4100917   +          +    -0.85471695548675 * Marital_StatusSingle
4100918   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4100919   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4100920   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4100921   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4100922   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4100923   +END;
MPRINT(EM_DIAGRAM):   END;
4100924   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4100925   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4100926   +END;
MPRINT(EM_DIAGRAM):   END;
4100927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100928   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4100929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100930   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4100931   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4100932   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4100933   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4100934   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4100935   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4100936   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4100937   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4100938   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4100939   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4100940   +          +      0.1710743409836 * S_NumDealsPurchases
4100941   +          +     1.10019178495427 * S_NumDistPurchases
4100942   +          +     0.06701301620472 * S_NumStorePurchases
4100943   +          +    -1.47240374003368 * S_NumWebPurchases
4100944   +          +     0.38443387640949 * S_NumWebVisitsMonth
4100945   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4100946   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4100947   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4100948   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4100949   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4100950   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4100951   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4100952   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4100953   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4100954   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4100955   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4100956   +          +    -0.36835980184757 * Marital_StatusDivorced
4100957   +          +     0.71718933679692 * Marital_StatusMarried
4100958   +          +    -0.35767236657055 * Marital_StatusSingle
4100959   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4100960   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4100961   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4100962   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4100963   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4100964   +END;
MPRINT(EM_DIAGRAM):   END;
4100965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4100966   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4100967   +END;
MPRINT(EM_DIAGRAM):   END;
4100968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100969   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4100970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4100971   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4100972   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4100973   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4100974   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4100975   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4100976   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4100977   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4100978   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4100979   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4100980   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4100981   +          +    -1.99858075809796 * S_NumDealsPurchases
4100982   +          +    -0.37353682448701 * S_NumDistPurchases
4100983   +          +     1.16275863071649 * S_NumStorePurchases
4100984   +          +       -0.75936809253 * S_NumWebPurchases
4100985   +          +     2.17936226306026 * S_NumWebVisitsMonth
4100986   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4100987   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4100988   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4100989   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4100990   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4100991   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4100992   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4100993   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4100994   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4100995   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4100996   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4100997   +          +     0.60036315441483 * Marital_StatusDivorced
4100998   +          +    -0.94084946353672 * Marital_StatusMarried
4100999   +          +     0.34594388147374 * Marital_StatusSingle
4101000   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4101001   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4101002   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4101003   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4101004   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4101005   +END;
MPRINT(EM_DIAGRAM):   END;
4101006   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101007   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4101008   +END;
MPRINT(EM_DIAGRAM):   END;
4101009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101010   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4101011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101012   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101013   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4101014   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4101015   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4101016   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4101017   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4101018   +END;
MPRINT(EM_DIAGRAM):   END;
4101019   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101020   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4101021   +END;
MPRINT(EM_DIAGRAM):   END;
4101022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101023   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4101024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101026   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4101027   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4101028   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4101029   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4101030   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4101031   +END;
MPRINT(EM_DIAGRAM):   END;
4101032   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101033   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4101034   +END;
MPRINT(EM_DIAGRAM):   END;
4101035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101036   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4101037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101038   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101039   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4101040   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4101041   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4101042   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4101043   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4101044   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4101045   +END;
MPRINT(EM_DIAGRAM):   END;
4101046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101047   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4101048   +END;
MPRINT(EM_DIAGRAM):   END;
4101049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101050   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4101051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101052   +
4101053   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4101054   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4101055   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4101056   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4101057   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4101058   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101059   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4101060   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4101061   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4101062   +end;
MPRINT(EM_DIAGRAM):   end;
4101063   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101064   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4101065   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4101066   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4101067   +   end;
MPRINT(EM_DIAGRAM):   end;
4101068   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4101069   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4101070   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4101071   +   end;
MPRINT(EM_DIAGRAM):   end;
4101072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101073   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4101074   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4101075   +   end;
MPRINT(EM_DIAGRAM):   end;
4101076   +end;
MPRINT(EM_DIAGRAM):   end;
4101077   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101078   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4101079   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4101080   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4101081   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4101082   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4101083   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4101084   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4101085   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4101086   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4101087   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4101088   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4101089   +END;
MPRINT(EM_DIAGRAM):   END;
4101090   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101091   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4101092   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4101093   +END;
MPRINT(EM_DIAGRAM):   END;
4101094   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4101095   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4101096   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4101097   +END;
MPRINT(EM_DIAGRAM):   END;
4101098   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4101099   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4101100   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4101101   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4101102   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4101103   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4101104   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4101105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101106   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4101107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101108   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4101109   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4101110   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4101111   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4101112   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4101113   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4101114   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4101115   +END;
MPRINT(EM_DIAGRAM):   END;
4101116   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4101117   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4101118   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4101119   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4101120   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4101121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101122   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4101123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101124   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4101125   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4101126   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4101127   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4101128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101129   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4101130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101131   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4101132   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4101133   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4101134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101135   +* Ensmbl37: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 2 of 7;
4101136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101138   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4101139   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4101140   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4101141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101142   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4101143   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4101144   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4101145   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4101146   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4101147   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4101148   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4101149   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4101150   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4101151   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4101152   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4101153   +LENGTH _WARN_ $4
4101154   +      F_DepVar  $ 12
4101155   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4101156   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4101157   +
4101158   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4101159   +
4101160   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4101161   +
4101162   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4101163   +
4101164   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4101165   +
4101166   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4101167   +
4101168   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4101169   +
4101170   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4101171   +
4101172   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4101173   +
4101174   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4101175   +
4101176   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4101177   +
4101178   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4101179   +
4101180   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4101181   +
4101182   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4101183   +
4101184   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4101185   +
4101186   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4101187   +
4101188   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4101189   +
4101190   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4101191   +
4101192   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4101193   +
4101194   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4101195   +
4101196   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4101197   +
4101198   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4101199   +
4101200   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4101201   +
4101202   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4101203   +
4101204   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4101205   +
4101206   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4101207   +
4101208   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4101209   +
4101210   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4101211   +
4101212   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4101213   +
4101214   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4101215   +
4101216   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4101217   +
4101218   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4101219   +
4101220   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4101221   +
4101222   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4101223   +
4101224   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4101225   +
4101226   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4101227   +
4101228   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4101229   +
4101230   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4101231   +
4101232   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4101233   +
4101234   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4101235   +
4101236   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4101237   +
4101238   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4101239   +
4101240   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4101241   +
4101242   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4101243   +
4101244   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4101245   +
4101246   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4101247   +
4101248   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4101249   +
4101250   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4101251   +
4101252   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4101253   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4101254   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4101255   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4101256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101258   +end;
MPRINT(EM_DIAGRAM):   end;
4101259   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101261   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4101262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101263   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101264   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4101265   +   end;
MPRINT(EM_DIAGRAM):   end;
4101266   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101267   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4101268   +   end;
MPRINT(EM_DIAGRAM):   end;
4101269   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101270   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4101271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101273   +   end;
MPRINT(EM_DIAGRAM):   end;
4101274   +end;
MPRINT(EM_DIAGRAM):   end;
4101275   +
4101276   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4101277   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4101278   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4101279   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4101280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101282   +end;
MPRINT(EM_DIAGRAM):   end;
4101283   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101284   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101285   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4101286   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101287   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101288   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4101289   +   end;
MPRINT(EM_DIAGRAM):   end;
4101290   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101291   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4101292   +   end;
MPRINT(EM_DIAGRAM):   end;
4101293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101294   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4101295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101297   +   end;
MPRINT(EM_DIAGRAM):   end;
4101298   +end;
MPRINT(EM_DIAGRAM):   end;
4101299   +
4101300   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4101301   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4101302   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4101303   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4101304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101306   +end;
MPRINT(EM_DIAGRAM):   end;
4101307   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101308   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101309   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4101310   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101311   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101312   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4101313   +   end;
MPRINT(EM_DIAGRAM):   end;
4101314   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101315   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4101316   +   end;
MPRINT(EM_DIAGRAM):   end;
4101317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101318   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4101319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101321   +   end;
MPRINT(EM_DIAGRAM):   end;
4101322   +end;
MPRINT(EM_DIAGRAM):   end;
4101323   +
4101324   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4101325   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4101326   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4101327   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4101328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101330   +end;
MPRINT(EM_DIAGRAM):   end;
4101331   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101332   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101333   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4101334   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101335   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101336   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4101337   +   end;
MPRINT(EM_DIAGRAM):   end;
4101338   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101339   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4101340   +   end;
MPRINT(EM_DIAGRAM):   end;
4101341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101342   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4101343   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101344   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101345   +   end;
MPRINT(EM_DIAGRAM):   end;
4101346   +end;
MPRINT(EM_DIAGRAM):   end;
4101347   +
4101348   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4101349   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4101350   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4101351   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4101352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101354   +end;
MPRINT(EM_DIAGRAM):   end;
4101355   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101356   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101357   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4101358   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101359   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101360   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4101361   +   end;
MPRINT(EM_DIAGRAM):   end;
4101362   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101363   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4101364   +   end;
MPRINT(EM_DIAGRAM):   end;
4101365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101366   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4101367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101369   +   end;
MPRINT(EM_DIAGRAM):   end;
4101370   +end;
MPRINT(EM_DIAGRAM):   end;
4101371   +
4101372   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4101373   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4101374   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4101375   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4101376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101378   +end;
MPRINT(EM_DIAGRAM):   end;
4101379   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101380   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101381   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4101382   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101383   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101384   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4101385   +   end;
MPRINT(EM_DIAGRAM):   end;
4101386   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101387   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4101388   +   end;
MPRINT(EM_DIAGRAM):   end;
4101389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101390   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4101391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101393   +   end;
MPRINT(EM_DIAGRAM):   end;
4101394   +end;
MPRINT(EM_DIAGRAM):   end;
4101395   +
4101396   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4101397   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4101398   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4101399   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4101400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101402   +end;
MPRINT(EM_DIAGRAM):   end;
4101403   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101404   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101405   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4101406   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101407   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4101408   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4101409   +   end;
MPRINT(EM_DIAGRAM):   end;
4101410   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4101411   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4101412   +   end;
MPRINT(EM_DIAGRAM):   end;
4101413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101414   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4101415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101417   +   end;
MPRINT(EM_DIAGRAM):   end;
4101418   +end;
MPRINT(EM_DIAGRAM):   end;
4101419   +
4101420   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4101421   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4101422   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4101423   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4101424   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4101425   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4101426   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4101427   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4101428   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4101429   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4101430   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4101431   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4101432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101434   +end;
MPRINT(EM_DIAGRAM):   end;
4101435   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101436   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4101437   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4101438   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101439   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4101440   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4101441   +   end;
MPRINT(EM_DIAGRAM):   end;
4101442   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4101443   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4101444   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4101445   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4101446   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4101447   +   end;
MPRINT(EM_DIAGRAM):   end;
4101448   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4101449   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4101450   +   end;
MPRINT(EM_DIAGRAM):   end;
4101451   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4101452   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4101453   +   end;
MPRINT(EM_DIAGRAM):   end;
4101454   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4101455   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4101456   +   end;
MPRINT(EM_DIAGRAM):   end;
4101457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101458   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4101459   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4101460   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4101461   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4101462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101464   +   end;
MPRINT(EM_DIAGRAM):   end;
4101465   +end;
MPRINT(EM_DIAGRAM):   end;
4101466   +
4101467   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4101468   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4101469   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4101470   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4101471   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4101472   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4101473   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4101474   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4101475   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4101476   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4101477   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4101478   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4101479   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4101480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101482   +end;
MPRINT(EM_DIAGRAM):   end;
4101483   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101484   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4101485   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4101486   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101487   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4101488   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4101489   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4101490   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4101491   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4101492   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4101493   +         end;
MPRINT(EM_DIAGRAM):   end;
4101494   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4101495   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4101496   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4101497   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4101498   +            end;
MPRINT(EM_DIAGRAM):   end;
4101499   +         end;
MPRINT(EM_DIAGRAM):   end;
4101500   +      end;
MPRINT(EM_DIAGRAM):   end;
4101501   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4101502   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4101503   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4101504   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4101505   +         end;
MPRINT(EM_DIAGRAM):   end;
4101506   +      end;
MPRINT(EM_DIAGRAM):   end;
4101507   +   end;
MPRINT(EM_DIAGRAM):   end;
4101508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101509   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4101510   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4101511   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4101512   +      end;
MPRINT(EM_DIAGRAM):   end;
4101513   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4101514   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4101515   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4101516   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4101517   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4101518   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4101519   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4101520   +         end;
MPRINT(EM_DIAGRAM):   end;
4101521   +      end;
MPRINT(EM_DIAGRAM):   end;
4101522   +   end;
MPRINT(EM_DIAGRAM):   end;
4101523   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4101524   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4101525   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4101526   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4101527   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4101528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101530   +   end;
MPRINT(EM_DIAGRAM):   end;
4101531   +end;
MPRINT(EM_DIAGRAM):   end;
4101532   +
4101533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101534   +*** Checking missing input Interval
4101535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4101536   +
4101537   +IF NMISS(
4101538   +   AcceptedCmpTotal ,
4101539   +   Age ,
4101540   +   Frq ,
4101541   +   Income ,
4101542   +   Kidhome ,
4101543   +   Mnt ,
4101544   +   MntFishProducts ,
4101545   +   MntFruits ,
4101546   +   MntGoldProds ,
4101547   +   MntMeatProducts ,
4101548   +   MntSweetProducts ,
4101549   +   MntWines ,
4101550   +   MonthsAsCustomer ,
4101551   +   NumCatalogPurchases ,
4101552   +   NumDealsPurchases ,
4101553   +   NumDistPurchases ,
4101554   +   NumStorePurchases ,
4101555   +   NumWebPurchases ,
4101556   +   NumWebVisitsMonth ,
4101557   +   RFMstat ,
4101558   +   RMntFrq ,
4101559   +   Recency ,
4101560   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4101561   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4101562   +
4101563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101564   +END;
MPRINT(EM_DIAGRAM):   END;
4101565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101566   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4101567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101568   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101569   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4101570   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4101571   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4101572   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4101573   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4101574   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4101575   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4101576   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4101577   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4101578   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4101579   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4101580   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4101581   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4101582   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4101583   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4101584   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4101585   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4101586   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4101587   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4101588   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4101589   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4101590   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4101591   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4101592   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4101593   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4101594   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4101595   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4101596   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4101597   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4101598   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4101599   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4101600   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4101601   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4101602   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4101603   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4101604   +END;
MPRINT(EM_DIAGRAM):   END;
4101605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101606   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4101607   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4101608   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4101609   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4101610   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4101611   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4101612   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4101613   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4101614   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4101615   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4101616   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4101617   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4101618   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4101619   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4101620   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4101621   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4101622   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4101623   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4101624   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4101625   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4101626   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4101627   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4101628   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4101629   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4101630   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4101631   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4101632   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4101633   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4101634   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4101635   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4101636   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4101637   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4101638   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4101639   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4101640   +   ELSE S_NumCatalogPurchases
4101641   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4101642   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4101643   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4101644   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4101645   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4101646   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4101647   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4101648   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4101649   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4101650   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4101651   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4101652   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4101653   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4101654   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4101655   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4101656   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4101657   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4101658   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4101659   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4101660   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4101661   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4101662   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4101663   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4101664   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4101665   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4101666   +END;
MPRINT(EM_DIAGRAM):   END;
4101667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101668   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4101669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101671   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4101672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101674   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4101675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101677   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4101678   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4101679   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4101680   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4101681   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4101682   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4101683   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4101684   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4101685   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4101686   +          +     0.09708841024031 * S_NumDealsPurchases
4101687   +          +    -0.29075561032014 * S_NumDistPurchases
4101688   +          +    -0.14495394259873 * S_NumStorePurchases
4101689   +          +     0.11890705145732 * S_NumWebPurchases
4101690   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4101691   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4101692   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4101693   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4101694   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4101695   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4101696   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4101697   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4101698   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4101699   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4101700   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4101701   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4101702   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4101703   +          +     0.16274478997892 * S_NumDealsPurchases
4101704   +          +     0.03966958784582 * S_NumDistPurchases
4101705   +          +    -0.04714110726598 * S_NumStorePurchases
4101706   +          +    -0.02124229528082 * S_NumWebPurchases
4101707   +          +     0.29753299776832 * S_NumWebVisitsMonth
4101708   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4101709   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4101710   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4101711   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4101712   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4101713   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4101714   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4101715   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4101716   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4101717   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4101718   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4101719   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4101720   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4101721   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4101722   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4101723   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4101724   +          +    -0.05037639679806 * Marital_StatusDivorced
4101725   +          +     0.28781968727878 * Marital_StatusMarried
4101726   +          +    -0.20382417074384 * Marital_StatusSingle
4101727   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4101728   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4101729   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4101730   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4101731   +          +     0.06970969219123 * Marital_StatusDivorced
4101732   +          +    -0.15787475744986 * Marital_StatusMarried
4101733   +          +     0.14345344072192 * Marital_StatusSingle
4101734   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4101735   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4101736   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4101737   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4101738   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4101739   +END;
MPRINT(EM_DIAGRAM):   END;
4101740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101741   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4101742   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4101743   +END;
MPRINT(EM_DIAGRAM):   END;
4101744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101745   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4101746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101747   +
4101748   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4101749   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4101750   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4101751   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4101752   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4101753   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101754   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4101755   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4101756   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4101757   +end;
MPRINT(EM_DIAGRAM):   end;
4101758   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101759   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4101760   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4101761   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4101762   +   end;
MPRINT(EM_DIAGRAM):   end;
4101763   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4101764   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4101765   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4101766   +   end;
MPRINT(EM_DIAGRAM):   end;
4101767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101768   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4101769   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4101770   +   end;
MPRINT(EM_DIAGRAM):   end;
4101771   +end;
MPRINT(EM_DIAGRAM):   end;
4101772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4101773   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4101774   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4101775   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4101776   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4101777   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4101778   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4101779   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4101780   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4101781   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4101782   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4101783   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4101784   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4101785   +END;
MPRINT(EM_DIAGRAM):   END;
4101786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4101787   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4101788   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4101789   +END;
MPRINT(EM_DIAGRAM):   END;
4101790   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4101791   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4101792   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4101793   +END;
MPRINT(EM_DIAGRAM):   END;
4101794   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4101795   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4101796   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4101797   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4101798   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4101799   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4101800   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4101801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101802   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4101803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4101804   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4101805   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4101806   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4101807   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4101808   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4101809   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4101810   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4101811   +END;
MPRINT(EM_DIAGRAM):   END;
4101812   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4101813   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4101814   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4101815   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4101816   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4101817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101818   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4101819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101820   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4101821   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4101822   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4101823   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4101824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101825   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4101826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101827   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4101828   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4101829   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4101830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101831   +* Ensmbl37: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 3 of 7;
4101832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101834   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4101835   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4101836   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4101837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4101838   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4101839   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4101840   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4101841   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4101842   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4101843   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4101844   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4101845   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4101846   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4101847   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4101848   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4101849   +LENGTH _WARN_ $4
4101850   +      F_DepVar  $ 12
4101851   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4101852   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4101853   +
4101854   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4101855   +
4101856   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4101857   +
4101858   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4101859   +
4101860   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4101861   +
4101862   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4101863   +
4101864   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4101865   +
4101866   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4101867   +
4101868   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4101869   +
4101870   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4101871   +
4101872   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4101873   +
4101874   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4101875   +
4101876   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4101877   +
4101878   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4101879   +
4101880   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4101881   +
4101882   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4101883   +
4101884   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4101885   +
4101886   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4101887   +
4101888   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4101889   +
4101890   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4101891   +
4101892   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4101893   +
4101894   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4101895   +
4101896   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4101897   +
4101898   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4101899   +
4101900   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4101901   +
4101902   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4101903   +
4101904   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4101905   +
4101906   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4101907   +
4101908   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4101909   +
4101910   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4101911   +
4101912   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4101913   +
4101914   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4101915   +
4101916   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4101917   +
4101918   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4101919   +
4101920   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4101921   +
4101922   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4101923   +
4101924   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4101925   +
4101926   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4101927   +
4101928   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4101929   +
4101930   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4101931   +
4101932   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4101933   +
4101934   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4101935   +
4101936   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4101937   +
4101938   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4101939   +
4101940   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4101941   +
4101942   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4101943   +
4101944   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4101945   +
4101946   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4101947   +
4101948   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4101949   +
4101950   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4101951   +
4101952   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4101953   +
4101954   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4101955   +
4101956   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4101957   +
4101958   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4101959   +
4101960   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4101961   +
4101962   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4101963   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4101964   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4101965   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4101966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101968   +end;
MPRINT(EM_DIAGRAM):   end;
4101969   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101971   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4101972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101974   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4101975   +   end;
MPRINT(EM_DIAGRAM):   end;
4101976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4101977   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4101978   +   end;
MPRINT(EM_DIAGRAM):   end;
4101979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4101980   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4101981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4101982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101983   +   end;
MPRINT(EM_DIAGRAM):   end;
4101984   +end;
MPRINT(EM_DIAGRAM):   end;
4101985   +
4101986   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4101987   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4101988   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4101989   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4101990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4101991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4101992   +end;
MPRINT(EM_DIAGRAM):   end;
4101993   +else do;
MPRINT(EM_DIAGRAM):   else do;
4101994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4101995   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4101996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4101997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4101998   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4101999   +   end;
MPRINT(EM_DIAGRAM):   end;
4102000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102001   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4102002   +   end;
MPRINT(EM_DIAGRAM):   end;
4102003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102004   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4102005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102007   +   end;
MPRINT(EM_DIAGRAM):   end;
4102008   +end;
MPRINT(EM_DIAGRAM):   end;
4102009   +
4102010   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4102011   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4102012   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4102013   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4102014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102016   +end;
MPRINT(EM_DIAGRAM):   end;
4102017   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102019   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4102020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102021   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102022   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4102023   +   end;
MPRINT(EM_DIAGRAM):   end;
4102024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102025   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4102026   +   end;
MPRINT(EM_DIAGRAM):   end;
4102027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102028   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4102029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102031   +   end;
MPRINT(EM_DIAGRAM):   end;
4102032   +end;
MPRINT(EM_DIAGRAM):   end;
4102033   +
4102034   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4102035   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4102036   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4102037   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4102038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102040   +end;
MPRINT(EM_DIAGRAM):   end;
4102041   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102043   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4102044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102046   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4102047   +   end;
MPRINT(EM_DIAGRAM):   end;
4102048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102049   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4102050   +   end;
MPRINT(EM_DIAGRAM):   end;
4102051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102052   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4102053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102055   +   end;
MPRINT(EM_DIAGRAM):   end;
4102056   +end;
MPRINT(EM_DIAGRAM):   end;
4102057   +
4102058   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4102059   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4102060   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4102061   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4102062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102064   +end;
MPRINT(EM_DIAGRAM):   end;
4102065   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102067   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4102068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102069   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102070   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4102071   +   end;
MPRINT(EM_DIAGRAM):   end;
4102072   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102073   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4102074   +   end;
MPRINT(EM_DIAGRAM):   end;
4102075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102076   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4102077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102079   +   end;
MPRINT(EM_DIAGRAM):   end;
4102080   +end;
MPRINT(EM_DIAGRAM):   end;
4102081   +
4102082   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4102083   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4102084   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4102085   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4102086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102088   +end;
MPRINT(EM_DIAGRAM):   end;
4102089   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102091   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4102092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102093   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102094   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4102095   +   end;
MPRINT(EM_DIAGRAM):   end;
4102096   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102097   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4102098   +   end;
MPRINT(EM_DIAGRAM):   end;
4102099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102100   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4102101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102103   +   end;
MPRINT(EM_DIAGRAM):   end;
4102104   +end;
MPRINT(EM_DIAGRAM):   end;
4102105   +
4102106   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4102107   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4102108   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4102109   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4102110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102112   +end;
MPRINT(EM_DIAGRAM):   end;
4102113   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102115   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4102116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102117   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4102118   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4102119   +   end;
MPRINT(EM_DIAGRAM):   end;
4102120   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4102121   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4102122   +   end;
MPRINT(EM_DIAGRAM):   end;
4102123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102124   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4102125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102127   +   end;
MPRINT(EM_DIAGRAM):   end;
4102128   +end;
MPRINT(EM_DIAGRAM):   end;
4102129   +
4102130   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4102131   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4102132   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4102133   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4102134   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4102135   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4102136   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4102137   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4102138   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4102139   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4102140   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4102141   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4102142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102144   +end;
MPRINT(EM_DIAGRAM):   end;
4102145   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102146   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4102147   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4102148   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102149   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4102150   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4102151   +   end;
MPRINT(EM_DIAGRAM):   end;
4102152   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4102153   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4102154   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4102155   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4102156   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4102157   +   end;
MPRINT(EM_DIAGRAM):   end;
4102158   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4102159   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4102160   +   end;
MPRINT(EM_DIAGRAM):   end;
4102161   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4102162   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4102163   +   end;
MPRINT(EM_DIAGRAM):   end;
4102164   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4102165   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4102166   +   end;
MPRINT(EM_DIAGRAM):   end;
4102167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102168   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4102169   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4102170   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4102171   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4102172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102174   +   end;
MPRINT(EM_DIAGRAM):   end;
4102175   +end;
MPRINT(EM_DIAGRAM):   end;
4102176   +
4102177   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4102178   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4102179   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4102180   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4102181   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4102182   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4102183   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4102184   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4102185   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4102186   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4102187   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4102188   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4102189   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4102190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102192   +end;
MPRINT(EM_DIAGRAM):   end;
4102193   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102194   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4102195   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4102196   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102197   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4102198   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4102199   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4102200   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4102201   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4102202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4102203   +         end;
MPRINT(EM_DIAGRAM):   end;
4102204   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4102205   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4102206   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4102207   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4102208   +            end;
MPRINT(EM_DIAGRAM):   end;
4102209   +         end;
MPRINT(EM_DIAGRAM):   end;
4102210   +      end;
MPRINT(EM_DIAGRAM):   end;
4102211   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4102212   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4102213   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4102214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4102215   +         end;
MPRINT(EM_DIAGRAM):   end;
4102216   +      end;
MPRINT(EM_DIAGRAM):   end;
4102217   +   end;
MPRINT(EM_DIAGRAM):   end;
4102218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102219   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4102220   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4102221   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4102222   +      end;
MPRINT(EM_DIAGRAM):   end;
4102223   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4102224   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4102225   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4102226   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4102227   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4102228   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4102229   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4102230   +         end;
MPRINT(EM_DIAGRAM):   end;
4102231   +      end;
MPRINT(EM_DIAGRAM):   end;
4102232   +   end;
MPRINT(EM_DIAGRAM):   end;
4102233   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4102234   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4102235   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4102236   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4102237   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4102238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102240   +   end;
MPRINT(EM_DIAGRAM):   end;
4102241   +end;
MPRINT(EM_DIAGRAM):   end;
4102242   +
4102243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102244   +*** Checking missing input Interval
4102245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4102246   +
4102247   +IF NMISS(
4102248   +   AcceptedCmpTotal ,
4102249   +   Age ,
4102250   +   Frq ,
4102251   +   Income ,
4102252   +   Kidhome ,
4102253   +   Mnt ,
4102254   +   MntFishProducts ,
4102255   +   MntFruits ,
4102256   +   MntGoldProds ,
4102257   +   MntMeatProducts ,
4102258   +   MntSweetProducts ,
4102259   +   MntWines ,
4102260   +   MonthsAsCustomer ,
4102261   +   NumCatalogPurchases ,
4102262   +   NumDealsPurchases ,
4102263   +   NumDistPurchases ,
4102264   +   NumStorePurchases ,
4102265   +   NumWebPurchases ,
4102266   +   NumWebVisitsMonth ,
4102267   +   RFMstat ,
4102268   +   RMntFrq ,
4102269   +   Recency ,
4102270   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4102271   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4102272   +
4102273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102274   +END;
MPRINT(EM_DIAGRAM):   END;
4102275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102276   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4102277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4102279   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4102280   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4102281   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4102282   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4102283   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4102284   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4102285   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4102286   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4102287   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4102288   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4102289   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4102290   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4102291   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4102292   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4102293   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4102294   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4102295   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4102296   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4102297   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4102298   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4102299   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4102300   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4102301   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4102302   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4102303   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4102304   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4102305   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4102306   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4102307   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4102308   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4102309   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4102310   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4102311   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4102312   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4102313   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4102314   +END;
MPRINT(EM_DIAGRAM):   END;
4102315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4102316   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4102317   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4102318   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4102319   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4102320   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4102321   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4102322   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4102323   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4102324   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4102325   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4102326   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4102327   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4102328   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4102329   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4102330   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4102331   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4102332   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4102333   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4102334   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4102335   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4102336   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4102337   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4102338   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4102339   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4102340   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4102341   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4102342   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4102343   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4102344   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4102345   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4102346   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4102347   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4102348   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4102349   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4102350   +   ELSE S_NumCatalogPurchases
4102351   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4102352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4102353   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4102354   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4102355   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4102356   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4102357   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4102358   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4102359   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4102360   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4102361   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4102362   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4102363   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4102364   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4102365   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4102366   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4102367   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4102368   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4102369   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4102370   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4102371   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4102372   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4102373   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4102374   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4102375   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4102376   +END;
MPRINT(EM_DIAGRAM):   END;
4102377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102378   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4102379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102381   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4102382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102384   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4102385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4102387   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4102388   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4102389   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4102390   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4102391   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4102392   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4102393   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4102394   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4102395   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4102396   +          +     0.76573417773216 * S_NumDealsPurchases
4102397   +          +     0.22648400529885 * S_NumDistPurchases
4102398   +          +     1.21720286527592 * S_NumStorePurchases
4102399   +          +     0.60948566229097 * S_NumWebPurchases
4102400   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4102401   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4102402   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4102403   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4102404   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4102405   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4102406   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4102407   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4102408   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4102409   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4102410   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4102411   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4102412   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4102413   +          +    -1.52828428070828 * S_NumDealsPurchases
4102414   +          +    -0.01775178145113 * S_NumDistPurchases
4102415   +          +     1.11531198663491 * S_NumStorePurchases
4102416   +          +     1.79501098452904 * S_NumWebPurchases
4102417   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4102418   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4102419   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4102420   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4102421   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4102422   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4102423   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4102424   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4102425   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4102426   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4102427   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4102428   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4102429   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4102430   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4102431   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4102432   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4102433   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4102434   +          +    -1.56926331102732 * Marital_StatusDivorced
4102435   +          +     2.38562782588323 * Marital_StatusMarried
4102436   +          +    -1.91012008029228 * Marital_StatusSingle
4102437   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4102438   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4102439   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4102440   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4102441   +          +     0.39329538853368 * Marital_StatusDivorced
4102442   +          +       0.055543492668 * Marital_StatusMarried
4102443   +          +    -0.36260663573441 * Marital_StatusSingle
4102444   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4102445   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4102446   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4102447   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4102448   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4102449   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4102450   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4102451   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4102452   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4102453   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4102454   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4102455   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4102456   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4102457   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4102458   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4102459   +END;
MPRINT(EM_DIAGRAM):   END;
4102460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4102461   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4102462   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4102463   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4102464   +END;
MPRINT(EM_DIAGRAM):   END;
4102465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102466   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4102467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102468   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4102469   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4102470   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4102471   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4102472   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4102473   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4102474   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4102475   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4102476   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4102477   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4102478   +          +    -0.41717905931734 * S_NumDealsPurchases
4102479   +          +    -0.48750443671176 * S_NumDistPurchases
4102480   +          +      1.9775770151507 * S_NumStorePurchases
4102481   +          +    -0.43534422425416 * S_NumWebPurchases
4102482   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4102483   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4102484   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4102485   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4102486   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4102487   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4102488   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4102489   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4102490   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4102491   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4102492   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4102493   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4102494   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4102495   +          +     0.76267091632012 * S_NumDealsPurchases
4102496   +          +     1.55118513069849 * S_NumDistPurchases
4102497   +          +       1.649962776028 * S_NumStorePurchases
4102498   +          +    -0.27453335733875 * S_NumWebPurchases
4102499   +          +     0.26599210649756 * S_NumWebVisitsMonth
4102500   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4102501   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4102502   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4102503   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4102504   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4102505   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4102506   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4102507   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4102508   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4102509   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4102510   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4102511   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4102512   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4102513   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4102514   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4102515   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4102516   +          +    -1.84502099308633 * Marital_StatusDivorced
4102517   +          +     0.16524535969204 * Marital_StatusMarried
4102518   +          +     0.01375012857393 * Marital_StatusSingle
4102519   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4102520   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4102521   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4102522   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4102523   +          +     0.18210930140238 * Marital_StatusDivorced
4102524   +          +    -1.49615662968181 * Marital_StatusMarried
4102525   +          +     1.61043484549536 * Marital_StatusSingle
4102526   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4102527   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4102528   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4102529   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4102530   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4102531   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4102532   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4102533   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4102534   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4102535   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4102536   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4102537   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4102538   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4102539   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4102540   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4102541   +END;
MPRINT(EM_DIAGRAM):   END;
4102542   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4102543   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4102544   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4102545   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4102546   +END;
MPRINT(EM_DIAGRAM):   END;
4102547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102548   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4102549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102550   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4102551   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4102552   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4102553   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4102554   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4102555   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4102556   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4102557   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4102558   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4102559   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4102560   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4102561   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4102562   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
4102563   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4102564   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4102565   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4102566   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4102567   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4102568   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4102569   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4102570   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4102571   +END;
MPRINT(EM_DIAGRAM):   END;
4102572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4102573   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4102574   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4102575   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4102576   +END;
MPRINT(EM_DIAGRAM):   END;
4102577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102578   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4102579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102580   +
4102581   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4102582   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4102583   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4102584   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4102585   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4102586   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102587   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4102588   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4102589   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4102590   +end;
MPRINT(EM_DIAGRAM):   end;
4102591   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102592   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4102593   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4102594   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4102595   +   end;
MPRINT(EM_DIAGRAM):   end;
4102596   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4102597   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4102598   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4102599   +   end;
MPRINT(EM_DIAGRAM):   end;
4102600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102601   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4102602   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4102603   +   end;
MPRINT(EM_DIAGRAM):   end;
4102604   +end;
MPRINT(EM_DIAGRAM):   end;
4102605   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4102606   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4102607   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4102608   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4102609   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4102610   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4102611   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4102612   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4102613   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4102614   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4102615   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4102616   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4102617   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4102618   +END;
MPRINT(EM_DIAGRAM):   END;
4102619   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4102620   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4102621   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4102622   +END;
MPRINT(EM_DIAGRAM):   END;
4102623   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4102624   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4102625   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4102626   +END;
MPRINT(EM_DIAGRAM):   END;
4102627   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4102628   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4102629   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4102630   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4102631   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4102632   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4102633   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4102634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102635   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4102636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4102637   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4102638   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4102639   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4102640   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4102641   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4102642   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4102643   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4102644   +END;
MPRINT(EM_DIAGRAM):   END;
4102645   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4102646   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4102647   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4102648   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4102649   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4102650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102651   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4102652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102653   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4102654   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4102655   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4102656   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4102657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102658   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4102659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102660   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4102661   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4102662   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4102663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102664   +* Ensmbl37: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 4 of 7;
4102665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102667   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4102668   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4102669   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4102670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4102671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4102672   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4102673   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4102674   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4102675   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4102676   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4102677   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4102678   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4102679   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4102680   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4102681   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4102682   +LENGTH _WARN_ $4
4102683   +      F_DepVar  $ 12
4102684   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4102685   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4102686   +
4102687   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4102688   +
4102689   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4102690   +
4102691   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4102692   +
4102693   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4102694   +
4102695   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4102696   +
4102697   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4102698   +
4102699   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4102700   +
4102701   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4102702   +
4102703   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4102704   +
4102705   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4102706   +
4102707   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4102708   +
4102709   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4102710   +
4102711   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4102712   +
4102713   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4102714   +
4102715   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4102716   +
4102717   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4102718   +
4102719   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4102720   +
4102721   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4102722   +
4102723   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4102724   +
4102725   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4102726   +
4102727   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4102728   +
4102729   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4102730   +
4102731   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4102732   +
4102733   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4102734   +
4102735   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4102736   +
4102737   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4102738   +
4102739   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4102740   +
4102741   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4102742   +
4102743   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4102744   +
4102745   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4102746   +
4102747   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4102748   +
4102749   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4102750   +
4102751   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4102752   +
4102753   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4102754   +
4102755   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4102756   +
4102757   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4102758   +
4102759   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4102760   +
4102761   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4102762   +
4102763   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4102764   +
4102765   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4102766   +
4102767   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4102768   +
4102769   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4102770   +
4102771   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4102772   +
4102773   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4102774   +
4102775   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4102776   +
4102777   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4102778   +
4102779   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4102780   +
4102781   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4102782   +
4102783   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4102784   +
4102785   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4102786   +
4102787   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4102788   +
4102789   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4102790   +
4102791   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4102792   +
4102793   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4102794   +
4102795   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4102796   +
4102797   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4102798   +
4102799   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4102800   +
4102801   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4102802   +
4102803   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4102804   +
4102805   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4102806   +
4102807   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4102808   +
4102809   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4102810   +
4102811   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4102812   +
4102813   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4102814   +
4102815   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4102816   +
4102817   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4102818   +
4102819   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4102820   +
4102821   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4102822   +
4102823   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4102824   +
4102825   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4102826   +
4102827   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4102828   +
4102829   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4102830   +
4102831   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4102832   +
4102833   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4102834   +
4102835   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4102836   +
4102837   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4102838   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4102839   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4102840   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4102841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102843   +end;
MPRINT(EM_DIAGRAM):   end;
4102844   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102846   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4102847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102848   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102849   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4102850   +   end;
MPRINT(EM_DIAGRAM):   end;
4102851   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102852   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4102853   +   end;
MPRINT(EM_DIAGRAM):   end;
4102854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102855   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4102856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102858   +   end;
MPRINT(EM_DIAGRAM):   end;
4102859   +end;
MPRINT(EM_DIAGRAM):   end;
4102860   +
4102861   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4102862   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4102863   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4102864   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4102865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102867   +end;
MPRINT(EM_DIAGRAM):   end;
4102868   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102870   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4102871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102873   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4102874   +   end;
MPRINT(EM_DIAGRAM):   end;
4102875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102876   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4102877   +   end;
MPRINT(EM_DIAGRAM):   end;
4102878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102879   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4102880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102882   +   end;
MPRINT(EM_DIAGRAM):   end;
4102883   +end;
MPRINT(EM_DIAGRAM):   end;
4102884   +
4102885   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4102886   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4102887   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4102888   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4102889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102891   +end;
MPRINT(EM_DIAGRAM):   end;
4102892   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102894   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4102895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102897   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4102898   +   end;
MPRINT(EM_DIAGRAM):   end;
4102899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102900   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4102901   +   end;
MPRINT(EM_DIAGRAM):   end;
4102902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102903   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4102904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102906   +   end;
MPRINT(EM_DIAGRAM):   end;
4102907   +end;
MPRINT(EM_DIAGRAM):   end;
4102908   +
4102909   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4102910   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4102911   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4102912   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4102913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102915   +end;
MPRINT(EM_DIAGRAM):   end;
4102916   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102918   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4102919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102921   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4102922   +   end;
MPRINT(EM_DIAGRAM):   end;
4102923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102924   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4102925   +   end;
MPRINT(EM_DIAGRAM):   end;
4102926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102927   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4102928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102930   +   end;
MPRINT(EM_DIAGRAM):   end;
4102931   +end;
MPRINT(EM_DIAGRAM):   end;
4102932   +
4102933   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4102934   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4102935   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4102936   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4102937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102939   +end;
MPRINT(EM_DIAGRAM):   end;
4102940   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102942   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4102943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102945   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4102946   +   end;
MPRINT(EM_DIAGRAM):   end;
4102947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102948   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4102949   +   end;
MPRINT(EM_DIAGRAM):   end;
4102950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102951   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4102952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102954   +   end;
MPRINT(EM_DIAGRAM):   end;
4102955   +end;
MPRINT(EM_DIAGRAM):   end;
4102956   +
4102957   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4102958   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4102959   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4102960   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4102961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102963   +end;
MPRINT(EM_DIAGRAM):   end;
4102964   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102966   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4102967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4102969   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4102970   +   end;
MPRINT(EM_DIAGRAM):   end;
4102971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4102972   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4102973   +   end;
MPRINT(EM_DIAGRAM):   end;
4102974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102975   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4102976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4102977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102978   +   end;
MPRINT(EM_DIAGRAM):   end;
4102979   +end;
MPRINT(EM_DIAGRAM):   end;
4102980   +
4102981   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4102982   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4102983   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4102984   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4102985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4102986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4102987   +end;
MPRINT(EM_DIAGRAM):   end;
4102988   +else do;
MPRINT(EM_DIAGRAM):   else do;
4102989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4102990   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4102991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4102992   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4102993   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4102994   +   end;
MPRINT(EM_DIAGRAM):   end;
4102995   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4102996   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4102997   +   end;
MPRINT(EM_DIAGRAM):   end;
4102998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4102999   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4103000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4103001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103002   +   end;
MPRINT(EM_DIAGRAM):   end;
4103003   +end;
MPRINT(EM_DIAGRAM):   end;
4103004   +
4103005   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4103006   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4103007   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4103008   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4103009   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4103010   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4103011   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4103012   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4103013   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4103014   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4103015   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4103016   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4103017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4103018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103019   +end;
MPRINT(EM_DIAGRAM):   end;
4103020   +else do;
MPRINT(EM_DIAGRAM):   else do;
4103021   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4103022   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4103023   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4103024   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4103025   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4103026   +   end;
MPRINT(EM_DIAGRAM):   end;
4103027   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4103028   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4103029   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4103030   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4103031   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4103032   +   end;
MPRINT(EM_DIAGRAM):   end;
4103033   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4103034   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4103035   +   end;
MPRINT(EM_DIAGRAM):   end;
4103036   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4103037   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4103038   +   end;
MPRINT(EM_DIAGRAM):   end;
4103039   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4103040   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4103041   +   end;
MPRINT(EM_DIAGRAM):   end;
4103042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4103043   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4103044   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4103045   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4103046   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4103047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4103048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103049   +   end;
MPRINT(EM_DIAGRAM):   end;
4103050   +end;
MPRINT(EM_DIAGRAM):   end;
4103051   +
4103052   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4103053   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4103054   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4103055   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4103056   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4103057   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4103058   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4103059   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4103060   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4103061   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4103062   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4103063   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4103064   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4103065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4103066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103067   +end;
MPRINT(EM_DIAGRAM):   end;
4103068   +else do;
MPRINT(EM_DIAGRAM):   else do;
4103069   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4103070   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4103071   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4103072   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4103073   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4103074   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4103075   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4103076   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4103077   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4103078   +         end;
MPRINT(EM_DIAGRAM):   end;
4103079   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4103080   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4103081   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4103082   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4103083   +            end;
MPRINT(EM_DIAGRAM):   end;
4103084   +         end;
MPRINT(EM_DIAGRAM):   end;
4103085   +      end;
MPRINT(EM_DIAGRAM):   end;
4103086   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4103087   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4103088   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4103089   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4103090   +         end;
MPRINT(EM_DIAGRAM):   end;
4103091   +      end;
MPRINT(EM_DIAGRAM):   end;
4103092   +   end;
MPRINT(EM_DIAGRAM):   end;
4103093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4103094   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4103095   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4103096   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4103097   +      end;
MPRINT(EM_DIAGRAM):   end;
4103098   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4103099   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4103100   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4103101   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4103102   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4103103   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4103104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4103105   +         end;
MPRINT(EM_DIAGRAM):   end;
4103106   +      end;
MPRINT(EM_DIAGRAM):   end;
4103107   +   end;
MPRINT(EM_DIAGRAM):   end;
4103108   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4103109   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4103110   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4103111   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4103112   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4103113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4103114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103115   +   end;
MPRINT(EM_DIAGRAM):   end;
4103116   +end;
MPRINT(EM_DIAGRAM):   end;
4103117   +
4103118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103119   +*** Checking missing input Interval
4103120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4103121   +
4103122   +IF NMISS(
4103123   +   AcceptedCmpTotal ,
4103124   +   Age ,
4103125   +   Frq ,
4103126   +   Income ,
4103127   +   Kidhome ,
4103128   +   Mnt ,
4103129   +   MntFishProducts ,
4103130   +   MntFruits ,
4103131   +   MntGoldProds ,
4103132   +   MntMeatProducts ,
4103133   +   MntSweetProducts ,
4103134   +   MntWines ,
4103135   +   MonthsAsCustomer ,
4103136   +   NumCatalogPurchases ,
4103137   +   NumDealsPurchases ,
4103138   +   NumDistPurchases ,
4103139   +   NumStorePurchases ,
4103140   +   NumWebPurchases ,
4103141   +   NumWebVisitsMonth ,
4103142   +   RFMstat ,
4103143   +   RMntFrq ,
4103144   +   Recency ,
4103145   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4103146   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4103147   +
4103148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4103149   +END;
MPRINT(EM_DIAGRAM):   END;
4103150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103151   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4103152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103153   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103154   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4103155   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4103156   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4103157   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4103158   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4103159   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4103160   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4103161   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4103162   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4103163   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4103164   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4103165   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4103166   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4103167   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4103168   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4103169   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4103170   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4103171   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4103172   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4103173   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4103174   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4103175   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4103176   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4103177   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4103178   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4103179   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4103180   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4103181   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4103182   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4103183   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4103184   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4103185   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4103186   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4103187   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4103188   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4103189   +END;
MPRINT(EM_DIAGRAM):   END;
4103190   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103191   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4103192   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4103193   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4103194   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4103195   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4103196   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4103197   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4103198   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4103199   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4103200   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4103201   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4103202   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4103203   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4103204   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4103205   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4103206   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4103207   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4103208   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4103209   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4103210   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4103211   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4103212   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4103213   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4103214   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4103215   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4103216   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4103217   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4103218   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4103219   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4103220   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4103221   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4103222   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4103223   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4103224   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4103225   +   ELSE S_NumCatalogPurchases
4103226   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4103227   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4103228   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4103229   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4103230   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4103231   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4103232   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4103233   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4103234   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4103235   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4103236   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4103237   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4103238   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4103239   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4103240   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4103241   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4103242   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4103243   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4103244   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4103245   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4103246   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4103247   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4103248   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4103249   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4103250   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4103251   +END;
MPRINT(EM_DIAGRAM):   END;
4103252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103253   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4103254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103256   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4103257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103259   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4103260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103262   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4103263   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4103264   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4103265   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4103266   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4103267   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4103268   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4103269   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4103270   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4103271   +          +     3.45371614080196 * S_NumDealsPurchases
4103272   +          +     0.19118374544537 * S_NumDistPurchases
4103273   +          +    -2.45138001446793 * S_NumStorePurchases
4103274   +          +    -0.11424280244155 * S_NumWebPurchases
4103275   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4103276   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4103277   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4103278   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4103279   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4103280   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4103281   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4103282   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4103283   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4103284   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4103285   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4103286   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4103287   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4103288   +          +    -1.28390925647659 * S_NumDealsPurchases
4103289   +          +     0.82669177239926 * S_NumDistPurchases
4103290   +          +     1.71678585204511 * S_NumStorePurchases
4103291   +          +     1.49226295608046 * S_NumWebPurchases
4103292   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4103293   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4103294   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4103295   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4103296   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4103297   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4103298   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4103299   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4103300   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4103301   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4103302   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4103303   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4103304   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4103305   +          +     0.22958626391725 * S_NumDealsPurchases
4103306   +          +    -0.02046515813996 * S_NumDistPurchases
4103307   +          +      0.8618502050837 * S_NumStorePurchases
4103308   +          +     1.45175370326009 * S_NumWebPurchases
4103309   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4103310   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4103311   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4103312   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4103313   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4103314   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4103315   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4103316   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4103317   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4103318   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4103319   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4103320   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4103321   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4103322   +          +     1.25310034610344 * S_NumDealsPurchases
4103323   +          +     0.92141098602176 * S_NumDistPurchases
4103324   +          +    -0.08806509391473 * S_NumStorePurchases
4103325   +          +     -1.0533787624668 * S_NumWebPurchases
4103326   +          +     3.07050739830585 * S_NumWebVisitsMonth
4103327   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4103328   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4103329   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4103330   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4103331   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4103332   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4103333   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4103334   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4103335   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4103336   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4103337   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4103338   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4103339   +          +    -1.68259553608287 * S_NumDealsPurchases
4103340   +          +    -0.53835572290445 * S_NumDistPurchases
4103341   +          +     1.25833922835446 * S_NumStorePurchases
4103342   +          +     0.48300830623998 * S_NumWebPurchases
4103343   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4103344   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4103345   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4103346   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4103347   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4103348   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4103349   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4103350   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4103351   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4103352   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4103353   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4103354   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4103355   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4103356   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4103357   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4103358   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4103359   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4103360   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4103361   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4103362   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4103363   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4103364   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4103365   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4103366   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4103367   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4103368   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4103369   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4103370   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4103371   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4103372   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4103373   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4103374   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4103375   +          +     0.26230568150721 * Marital_StatusDivorced
4103376   +          +     0.27563523967756 * Marital_StatusMarried
4103377   +          +     0.54464481618478 * Marital_StatusSingle
4103378   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4103379   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4103380   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4103381   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4103382   +          +    -0.06750661313108 * Marital_StatusDivorced
4103383   +          +     1.48628445854207 * Marital_StatusMarried
4103384   +          +    -0.52197797291165 * Marital_StatusSingle
4103385   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4103386   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4103387   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4103388   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4103389   +          +     0.03219453957597 * Marital_StatusDivorced
4103390   +          +    -0.73835008216677 * Marital_StatusMarried
4103391   +          +     0.11212575818086 * Marital_StatusSingle
4103392   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4103393   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4103394   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4103395   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4103396   +          +    -0.95055539413405 * Marital_StatusDivorced
4103397   +          +    -1.65922419336067 * Marital_StatusMarried
4103398   +          +     0.78727538125107 * Marital_StatusSingle
4103399   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4103400   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4103401   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4103402   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4103403   +          +     -4.1747415035634 * Marital_StatusDivorced
4103404   +          +     3.61194282451968 * Marital_StatusMarried
4103405   +          +     -3.2800495365546 * Marital_StatusSingle
4103406   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4103407   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4103408   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4103409   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4103410   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4103411   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4103412   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4103413   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4103414   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4103415   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4103416   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4103417   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4103418   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4103419   +END;
MPRINT(EM_DIAGRAM):   END;
4103420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103421   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4103422   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4103423   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4103424   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4103425   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4103426   +END;
MPRINT(EM_DIAGRAM):   END;
4103427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103428   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4103429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103430   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103431   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4103432   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4103433   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4103434   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4103435   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4103436   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4103437   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4103438   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4103439   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4103440   +          +     1.29727972396867 * S_NumDealsPurchases
4103441   +          +     -0.4796144286007 * S_NumDistPurchases
4103442   +          +     0.88365985808591 * S_NumStorePurchases
4103443   +          +     0.68522096892804 * S_NumWebPurchases
4103444   +          +     0.54931043107798 * S_NumWebVisitsMonth
4103445   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4103446   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4103447   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4103448   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4103449   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4103450   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4103451   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4103452   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4103453   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4103454   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4103455   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4103456   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4103457   +          +     0.26997834581422 * S_NumDealsPurchases
4103458   +          +      1.4974894627406 * S_NumDistPurchases
4103459   +          +     0.20577850505638 * S_NumStorePurchases
4103460   +          +     0.67578530037026 * S_NumWebPurchases
4103461   +          +     1.48893165613941 * S_NumWebVisitsMonth
4103462   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4103463   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4103464   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4103465   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4103466   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4103467   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4103468   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4103469   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4103470   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4103471   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4103472   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4103473   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4103474   +          +    -0.75474919633886 * S_NumDealsPurchases
4103475   +          +     2.21872386475638 * S_NumDistPurchases
4103476   +          +    -0.36191460108989 * S_NumStorePurchases
4103477   +          +     0.03160010932412 * S_NumWebPurchases
4103478   +          +     0.00984650739909 * S_NumWebVisitsMonth
4103479   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4103480   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4103481   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4103482   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4103483   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4103484   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4103485   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4103486   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4103487   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4103488   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4103489   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4103490   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4103491   +          +    -1.12057357865269 * S_NumDealsPurchases
4103492   +          +    -0.70841760614521 * S_NumDistPurchases
4103493   +          +    -1.39174816270404 * S_NumStorePurchases
4103494   +          +    -1.62343249380806 * S_NumWebPurchases
4103495   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4103496   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4103497   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4103498   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4103499   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4103500   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4103501   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4103502   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4103503   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4103504   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4103505   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4103506   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4103507   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4103508   +          +     0.66880481485557 * S_NumDealsPurchases
4103509   +          +     0.69540174544859 * S_NumDistPurchases
4103510   +          +     1.68246546921736 * S_NumStorePurchases
4103511   +          +     1.85958176898295 * S_NumWebPurchases
4103512   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4103513   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4103514   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4103515   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4103516   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4103517   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4103518   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4103519   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4103520   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4103521   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4103522   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4103523   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4103524   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4103525   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4103526   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4103527   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4103528   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4103529   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4103530   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4103531   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4103532   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4103533   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4103534   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4103535   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4103536   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4103537   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4103538   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4103539   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4103540   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4103541   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4103542   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4103543   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4103544   +          +      0.2766977476799 * Marital_StatusDivorced
4103545   +          +     0.99585126449473 * Marital_StatusMarried
4103546   +          +    -0.71244490682808 * Marital_StatusSingle
4103547   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4103548   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4103549   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4103550   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4103551   +          +     0.04724779113048 * Marital_StatusDivorced
4103552   +          +    -0.80186231440666 * Marital_StatusMarried
4103553   +          +    -0.02226793584171 * Marital_StatusSingle
4103554   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4103555   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4103556   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4103557   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4103558   +          +     0.28206835683721 * Marital_StatusDivorced
4103559   +          +     0.46500886756532 * Marital_StatusMarried
4103560   +          +     0.35327545255503 * Marital_StatusSingle
4103561   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4103562   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4103563   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4103564   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4103565   +          +     1.22291788006392 * Marital_StatusDivorced
4103566   +          +    -2.27040720272432 * Marital_StatusMarried
4103567   +          +     1.13606780043773 * Marital_StatusSingle
4103568   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4103569   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4103570   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4103571   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4103572   +          +     -0.3999800759199 * Marital_StatusDivorced
4103573   +          +    -0.40978271635345 * Marital_StatusMarried
4103574   +          +    -0.55524279444227 * Marital_StatusSingle
4103575   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4103576   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4103577   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4103578   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4103579   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4103580   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4103581   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4103582   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4103583   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4103584   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4103585   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4103586   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4103587   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4103588   +END;
MPRINT(EM_DIAGRAM):   END;
4103589   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103590   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4103591   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4103592   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4103593   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4103594   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4103595   +END;
MPRINT(EM_DIAGRAM):   END;
4103596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103597   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4103598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103599   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103600   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4103601   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4103602   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4103603   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4103604   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4103605   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4103606   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4103607   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4103608   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4103609   +          +     0.15783958682465 * S_NumDealsPurchases
4103610   +          +     1.52124708558457 * S_NumDistPurchases
4103611   +          +     -1.3804418313581 * S_NumStorePurchases
4103612   +          +    -1.29570111649272 * S_NumWebPurchases
4103613   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4103614   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4103615   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4103616   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4103617   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4103618   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4103619   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4103620   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4103621   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4103622   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4103623   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4103624   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4103625   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4103626   +          +     0.12337111358286 * S_NumDealsPurchases
4103627   +          +     -2.3848926094027 * S_NumDistPurchases
4103628   +          +    -1.20666646996433 * S_NumStorePurchases
4103629   +          +     0.89549302881365 * S_NumWebPurchases
4103630   +          +     0.95359042569947 * S_NumWebVisitsMonth
4103631   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4103632   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4103633   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4103634   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4103635   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4103636   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4103637   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4103638   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4103639   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4103640   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4103641   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4103642   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4103643   +          +    -1.05383642674948 * S_NumDealsPurchases
4103644   +          +     1.71861984509369 * S_NumDistPurchases
4103645   +          +     1.47595181536047 * S_NumStorePurchases
4103646   +          +    -1.64165005491178 * S_NumWebPurchases
4103647   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4103648   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4103649   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4103650   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4103651   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4103652   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4103653   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4103654   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4103655   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4103656   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4103657   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4103658   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4103659   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4103660   +          +     0.13347794794222 * S_NumDealsPurchases
4103661   +          +     0.30533639886561 * S_NumDistPurchases
4103662   +          +     1.63892955540526 * S_NumStorePurchases
4103663   +          +     0.43734586516446 * S_NumWebPurchases
4103664   +          +     1.79260779802864 * S_NumWebVisitsMonth
4103665   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4103666   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4103667   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4103668   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4103669   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4103670   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4103671   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4103672   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4103673   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4103674   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4103675   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4103676   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4103677   +          +     1.64209094349557 * S_NumDealsPurchases
4103678   +          +    -0.38876870460627 * S_NumDistPurchases
4103679   +          +    -0.48559309584971 * S_NumStorePurchases
4103680   +          +     0.21254626353218 * S_NumWebPurchases
4103681   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4103682   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4103683   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4103684   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4103685   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4103686   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4103687   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4103688   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4103689   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4103690   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4103691   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4103692   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4103693   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4103694   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4103695   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4103696   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4103697   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4103698   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4103699   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4103700   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4103701   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4103702   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4103703   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4103704   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4103705   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4103706   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4103707   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4103708   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4103709   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4103710   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4103711   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4103712   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4103713   +          +     1.33953173091973 * Marital_StatusDivorced
4103714   +          +    -0.26253208073262 * Marital_StatusMarried
4103715   +          +    -0.00960552682431 * Marital_StatusSingle
4103716   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4103717   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4103718   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4103719   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4103720   +          +     1.43150850334311 * Marital_StatusDivorced
4103721   +          +    -0.69239127844934 * Marital_StatusMarried
4103722   +          +     2.08477562471559 * Marital_StatusSingle
4103723   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4103724   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4103725   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4103726   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4103727   +          +     1.08387556786168 * Marital_StatusDivorced
4103728   +          +      1.0283506000217 * Marital_StatusMarried
4103729   +          +    -0.87069431107983 * Marital_StatusSingle
4103730   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4103731   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4103732   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4103733   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4103734   +          +      -1.347780188307 * Marital_StatusDivorced
4103735   +          +    -0.53911983240372 * Marital_StatusMarried
4103736   +          +     0.22083074159185 * Marital_StatusSingle
4103737   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4103738   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4103739   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4103740   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4103741   +          +     1.46582538311384 * Marital_StatusDivorced
4103742   +          +     0.05256161016002 * Marital_StatusMarried
4103743   +          +    -1.21402967626877 * Marital_StatusSingle
4103744   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4103745   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4103746   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4103747   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4103748   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4103749   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4103750   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4103751   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4103752   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4103753   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4103754   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4103755   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4103756   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4103757   +END;
MPRINT(EM_DIAGRAM):   END;
4103758   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103759   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4103760   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4103761   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4103762   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4103763   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4103764   +END;
MPRINT(EM_DIAGRAM):   END;
4103765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103766   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4103767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103768   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103769   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4103770   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4103771   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4103772   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4103773   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4103774   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4103775   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4103776   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4103777   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4103778   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4103779   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4103780   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4103781   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4103782   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4103783   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4103784   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4103785   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4103786   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4103787   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4103788   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4103789   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4103790   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4103791   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4103792   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4103793   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4103794   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4103795   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4103796   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4103797   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4103798   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4103799   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4103800   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4103801   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4103802   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4103803   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4103804   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4103805   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4103806   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4103807   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4103808   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4103809   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4103810   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4103811   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4103812   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4103813   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4103814   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4103815   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4103816   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4103817   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4103818   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4103819   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4103820   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4103821   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4103822   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4103823   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4103824   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4103825   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4103826   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4103827   +END;
MPRINT(EM_DIAGRAM):   END;
4103828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103829   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4103830   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4103831   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4103832   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4103833   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4103834   +END;
MPRINT(EM_DIAGRAM):   END;
4103835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103836   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4103837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103838   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103839   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4103840   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4103841   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4103842   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4103843   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4103844   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4103845   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4103846   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4103847   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4103848   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4103849   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4103850   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4103851   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4103852   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4103853   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4103854   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4103855   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4103856   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4103857   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4103858   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4103859   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4103860   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4103861   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4103862   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4103863   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4103864   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4103865   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4103866   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4103867   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4103868   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4103869   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4103870   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4103871   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4103872   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4103873   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4103874   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4103875   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4103876   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4103877   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4103878   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4103879   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4103880   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4103881   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4103882   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4103883   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4103884   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4103885   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4103886   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4103887   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4103888   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4103889   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4103890   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4103891   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4103892   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4103893   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4103894   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4103895   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4103896   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4103897   +END;
MPRINT(EM_DIAGRAM):   END;
4103898   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103899   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4103900   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4103901   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4103902   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4103903   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4103904   +END;
MPRINT(EM_DIAGRAM):   END;
4103905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103906   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4103907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103909   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4103910   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4103911   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4103912   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4103913   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4103914   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4103915   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4103916   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4103917   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4103918   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4103919   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4103920   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4103921   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4103922   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4103923   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4103924   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4103925   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4103926   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4103927   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4103928   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4103929   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4103930   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4103931   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4103932   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4103933   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4103934   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4103935   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4103936   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4103937   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4103938   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4103939   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4103940   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4103941   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4103942   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4103943   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4103944   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4103945   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4103946   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4103947   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4103948   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4103949   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4103950   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4103951   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4103952   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4103953   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4103954   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4103955   +END;
MPRINT(EM_DIAGRAM):   END;
4103956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4103957   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4103958   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4103959   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4103960   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4103961   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4103962   +END;
MPRINT(EM_DIAGRAM):   END;
4103963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103964   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4103965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4103966   +
4103967   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4103968   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4103969   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4103970   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4103971   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4103972   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4103973   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4103974   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4103975   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4103976   +end;
MPRINT(EM_DIAGRAM):   end;
4103977   +else do;
MPRINT(EM_DIAGRAM):   else do;
4103978   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4103979   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4103980   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4103981   +   end;
MPRINT(EM_DIAGRAM):   end;
4103982   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4103983   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4103984   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4103985   +   end;
MPRINT(EM_DIAGRAM):   end;
4103986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4103987   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4103988   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4103989   +   end;
MPRINT(EM_DIAGRAM):   end;
4103990   +end;
MPRINT(EM_DIAGRAM):   end;
4103991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4103992   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4103993   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4103994   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4103995   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4103996   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4103997   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4103998   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4103999   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4104000   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4104001   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4104002   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4104003   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4104004   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4104005   +END;
MPRINT(EM_DIAGRAM):   END;
4104006   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4104007   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4104008   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4104009   +END;
MPRINT(EM_DIAGRAM):   END;
4104010   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4104011   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4104012   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4104013   +END;
MPRINT(EM_DIAGRAM):   END;
4104014   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4104015   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4104016   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4104017   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4104018   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4104019   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4104020   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4104021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104022   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4104023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104024   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4104025   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4104026   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4104027   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4104028   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4104029   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4104030   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4104031   +END;
MPRINT(EM_DIAGRAM):   END;
4104032   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4104033   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4104034   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4104035   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4104036   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4104037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104038   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4104039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104040   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4104041   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4104042   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4104043   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4104044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104045   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4104046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104047   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4104048   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4104049   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4104050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104051   +* Ensmbl37: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 5 of 7;
4104052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104054   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4104055   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4104056   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4104057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104058   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4104059   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4104060   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4104061   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4104062   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4104063   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4104064   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4104065   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4104066   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4104067   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4104068   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4104069   +LENGTH _WARN_ $4
4104070   +      F_DepVar  $ 12
4104071   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4104072   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4104073   +
4104074   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4104075   +
4104076   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4104077   +
4104078   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4104079   +
4104080   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4104081   +
4104082   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4104083   +
4104084   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4104085   +
4104086   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4104087   +
4104088   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4104089   +
4104090   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4104091   +
4104092   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4104093   +
4104094   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4104095   +
4104096   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4104097   +
4104098   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4104099   +
4104100   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4104101   +
4104102   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4104103   +
4104104   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4104105   +
4104106   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4104107   +
4104108   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4104109   +
4104110   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4104111   +
4104112   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4104113   +
4104114   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4104115   +
4104116   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4104117   +
4104118   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4104119   +
4104120   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4104121   +
4104122   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4104123   +
4104124   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4104125   +
4104126   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4104127   +
4104128   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4104129   +
4104130   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4104131   +
4104132   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4104133   +
4104134   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4104135   +
4104136   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4104137   +
4104138   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4104139   +
4104140   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4104141   +
4104142   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4104143   +
4104144   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4104145   +
4104146   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4104147   +
4104148   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4104149   +
4104150   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4104151   +
4104152   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4104153   +
4104154   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4104155   +
4104156   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4104157   +
4104158   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4104159   +
4104160   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4104161   +
4104162   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4104163   +
4104164   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4104165   +
4104166   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4104167   +
4104168   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4104169   +
4104170   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4104171   +
4104172   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4104173   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4104174   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4104175   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4104176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104178   +end;
MPRINT(EM_DIAGRAM):   end;
4104179   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104181   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4104182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104184   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4104185   +   end;
MPRINT(EM_DIAGRAM):   end;
4104186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104187   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4104188   +   end;
MPRINT(EM_DIAGRAM):   end;
4104189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104190   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4104191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104193   +   end;
MPRINT(EM_DIAGRAM):   end;
4104194   +end;
MPRINT(EM_DIAGRAM):   end;
4104195   +
4104196   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4104197   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4104198   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4104199   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4104200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104202   +end;
MPRINT(EM_DIAGRAM):   end;
4104203   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104205   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4104206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104208   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4104209   +   end;
MPRINT(EM_DIAGRAM):   end;
4104210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104211   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4104212   +   end;
MPRINT(EM_DIAGRAM):   end;
4104213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104214   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4104215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104217   +   end;
MPRINT(EM_DIAGRAM):   end;
4104218   +end;
MPRINT(EM_DIAGRAM):   end;
4104219   +
4104220   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4104221   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4104222   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4104223   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4104224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104226   +end;
MPRINT(EM_DIAGRAM):   end;
4104227   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104229   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4104230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104232   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4104233   +   end;
MPRINT(EM_DIAGRAM):   end;
4104234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104235   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4104236   +   end;
MPRINT(EM_DIAGRAM):   end;
4104237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104238   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4104239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104241   +   end;
MPRINT(EM_DIAGRAM):   end;
4104242   +end;
MPRINT(EM_DIAGRAM):   end;
4104243   +
4104244   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4104245   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4104246   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4104247   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4104248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104250   +end;
MPRINT(EM_DIAGRAM):   end;
4104251   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104253   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4104254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104256   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4104257   +   end;
MPRINT(EM_DIAGRAM):   end;
4104258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104259   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4104260   +   end;
MPRINT(EM_DIAGRAM):   end;
4104261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104262   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4104263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104265   +   end;
MPRINT(EM_DIAGRAM):   end;
4104266   +end;
MPRINT(EM_DIAGRAM):   end;
4104267   +
4104268   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4104269   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4104270   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4104271   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4104272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104274   +end;
MPRINT(EM_DIAGRAM):   end;
4104275   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104277   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4104278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104280   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4104281   +   end;
MPRINT(EM_DIAGRAM):   end;
4104282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104283   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4104284   +   end;
MPRINT(EM_DIAGRAM):   end;
4104285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104286   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4104287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104289   +   end;
MPRINT(EM_DIAGRAM):   end;
4104290   +end;
MPRINT(EM_DIAGRAM):   end;
4104291   +
4104292   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4104293   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4104294   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4104295   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4104296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104298   +end;
MPRINT(EM_DIAGRAM):   end;
4104299   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104301   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4104302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104304   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4104305   +   end;
MPRINT(EM_DIAGRAM):   end;
4104306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104307   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4104308   +   end;
MPRINT(EM_DIAGRAM):   end;
4104309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104310   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4104311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104313   +   end;
MPRINT(EM_DIAGRAM):   end;
4104314   +end;
MPRINT(EM_DIAGRAM):   end;
4104315   +
4104316   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4104317   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4104318   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4104319   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4104320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104322   +end;
MPRINT(EM_DIAGRAM):   end;
4104323   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104325   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4104326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104327   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4104328   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4104329   +   end;
MPRINT(EM_DIAGRAM):   end;
4104330   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4104331   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4104332   +   end;
MPRINT(EM_DIAGRAM):   end;
4104333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104334   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4104335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104337   +   end;
MPRINT(EM_DIAGRAM):   end;
4104338   +end;
MPRINT(EM_DIAGRAM):   end;
4104339   +
4104340   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4104341   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4104342   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4104343   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4104344   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4104345   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4104346   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4104347   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4104348   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4104349   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4104350   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4104351   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4104352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104354   +end;
MPRINT(EM_DIAGRAM):   end;
4104355   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104356   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4104357   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4104358   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104359   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4104360   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4104361   +   end;
MPRINT(EM_DIAGRAM):   end;
4104362   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4104363   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4104364   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4104365   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4104366   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4104367   +   end;
MPRINT(EM_DIAGRAM):   end;
4104368   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4104369   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4104370   +   end;
MPRINT(EM_DIAGRAM):   end;
4104371   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4104372   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4104373   +   end;
MPRINT(EM_DIAGRAM):   end;
4104374   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4104375   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4104376   +   end;
MPRINT(EM_DIAGRAM):   end;
4104377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104378   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4104379   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4104380   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4104381   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4104382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104384   +   end;
MPRINT(EM_DIAGRAM):   end;
4104385   +end;
MPRINT(EM_DIAGRAM):   end;
4104386   +
4104387   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4104388   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4104389   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4104390   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4104391   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4104392   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4104393   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4104394   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4104395   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4104396   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4104397   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4104398   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4104399   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4104400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104402   +end;
MPRINT(EM_DIAGRAM):   end;
4104403   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104404   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4104405   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4104406   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104407   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4104408   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4104409   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4104410   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4104411   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4104412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4104413   +         end;
MPRINT(EM_DIAGRAM):   end;
4104414   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4104415   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4104416   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4104417   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4104418   +            end;
MPRINT(EM_DIAGRAM):   end;
4104419   +         end;
MPRINT(EM_DIAGRAM):   end;
4104420   +      end;
MPRINT(EM_DIAGRAM):   end;
4104421   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4104422   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4104423   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4104424   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4104425   +         end;
MPRINT(EM_DIAGRAM):   end;
4104426   +      end;
MPRINT(EM_DIAGRAM):   end;
4104427   +   end;
MPRINT(EM_DIAGRAM):   end;
4104428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104429   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4104430   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4104431   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4104432   +      end;
MPRINT(EM_DIAGRAM):   end;
4104433   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4104434   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4104435   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4104436   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4104437   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4104438   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4104439   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4104440   +         end;
MPRINT(EM_DIAGRAM):   end;
4104441   +      end;
MPRINT(EM_DIAGRAM):   end;
4104442   +   end;
MPRINT(EM_DIAGRAM):   end;
4104443   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4104444   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4104445   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4104446   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4104447   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4104448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104450   +   end;
MPRINT(EM_DIAGRAM):   end;
4104451   +end;
MPRINT(EM_DIAGRAM):   end;
4104452   +
4104453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104454   +*** Checking missing input Interval
4104455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4104456   +
4104457   +IF NMISS(
4104458   +   AcceptedCmpTotal ,
4104459   +   Age ,
4104460   +   Frq ,
4104461   +   Income ,
4104462   +   Kidhome ,
4104463   +   Mnt ,
4104464   +   MntFishProducts ,
4104465   +   MntFruits ,
4104466   +   MntGoldProds ,
4104467   +   MntMeatProducts ,
4104468   +   MntSweetProducts ,
4104469   +   MntWines ,
4104470   +   MonthsAsCustomer ,
4104471   +   NumCatalogPurchases ,
4104472   +   NumDealsPurchases ,
4104473   +   NumDistPurchases ,
4104474   +   NumStorePurchases ,
4104475   +   NumWebPurchases ,
4104476   +   NumWebVisitsMonth ,
4104477   +   RFMstat ,
4104478   +   RMntFrq ,
4104479   +   Recency ,
4104480   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4104481   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4104482   +
4104483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104484   +END;
MPRINT(EM_DIAGRAM):   END;
4104485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104486   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4104487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104488   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4104489   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4104490   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4104491   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4104492   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4104493   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4104494   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4104495   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4104496   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4104497   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4104498   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4104499   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4104500   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4104501   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4104502   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4104503   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4104504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4104505   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4104506   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4104507   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4104508   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4104509   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4104510   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4104511   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4104512   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4104513   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4104514   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4104515   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4104516   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4104517   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4104518   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4104519   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4104520   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4104521   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4104522   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4104523   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4104524   +END;
MPRINT(EM_DIAGRAM):   END;
4104525   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4104526   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4104527   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4104528   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4104529   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4104530   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4104531   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4104532   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4104533   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4104534   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4104535   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4104536   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4104537   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4104538   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4104539   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4104540   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4104541   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4104542   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4104543   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4104544   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4104545   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4104546   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4104547   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4104548   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4104549   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4104550   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4104551   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4104552   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4104553   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4104554   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4104555   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4104556   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4104557   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4104558   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4104559   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4104560   +   ELSE S_NumCatalogPurchases
4104561   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4104562   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4104563   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4104564   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4104565   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4104566   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4104567   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4104568   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4104569   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4104570   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4104571   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4104572   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4104573   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4104574   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4104575   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4104576   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4104577   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4104578   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4104579   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4104580   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4104581   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4104582   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4104583   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4104584   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4104585   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4104586   +END;
MPRINT(EM_DIAGRAM):   END;
4104587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104588   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4104589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104591   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4104592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104594   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4104595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4104597   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4104598   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4104599   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4104600   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4104601   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4104602   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4104603   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4104604   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4104605   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4104606   +          +    -1.14704878034134 * S_NumDealsPurchases
4104607   +          +    -0.17763404274659 * S_NumDistPurchases
4104608   +          +     0.08894400267969 * S_NumStorePurchases
4104609   +          +     0.59283747891957 * S_NumWebPurchases
4104610   +          +     0.85268274682505 * S_NumWebVisitsMonth
4104611   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4104612   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4104613   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4104614   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4104615   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4104616   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4104617   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4104618   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4104619   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4104620   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4104621   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4104622   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4104623   +          +    -0.80841566068716 * S_NumDealsPurchases
4104624   +          +    -0.17995640033768 * S_NumDistPurchases
4104625   +          +     0.00713417460936 * S_NumStorePurchases
4104626   +          +     0.57881024323076 * S_NumWebPurchases
4104627   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4104628   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4104629   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4104630   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4104631   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4104632   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4104633   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4104634   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4104635   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4104636   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4104637   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4104638   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4104639   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4104640   +          +     0.57891364118717 * S_NumDealsPurchases
4104641   +          +    -0.31024556838688 * S_NumDistPurchases
4104642   +          +    -1.48708542986704 * S_NumStorePurchases
4104643   +          +    -0.93009875249206 * S_NumWebPurchases
4104644   +          +     2.01900039122935 * S_NumWebVisitsMonth
4104645   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4104646   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4104647   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4104648   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4104649   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4104650   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4104651   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4104652   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4104653   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4104654   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4104655   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4104656   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4104657   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4104658   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4104659   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4104660   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4104661   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4104662   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4104663   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4104664   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4104665   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4104666   +          +     0.55883606830033 * Marital_StatusDivorced
4104667   +          +    -0.54530037567066 * Marital_StatusMarried
4104668   +          +    -0.52994736075753 * Marital_StatusSingle
4104669   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4104670   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4104671   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4104672   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4104673   +          +    -1.07368484057033 * Marital_StatusDivorced
4104674   +          +     2.73313504711262 * Marital_StatusMarried
4104675   +          +    -2.18530462876058 * Marital_StatusSingle
4104676   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4104677   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4104678   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4104679   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4104680   +          +     0.49993144243043 * Marital_StatusDivorced
4104681   +          +    -0.38953339116829 * Marital_StatusMarried
4104682   +          +    -0.10836287319942 * Marital_StatusSingle
4104683   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4104684   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4104685   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4104686   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4104687   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4104688   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4104689   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4104690   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4104691   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4104692   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4104693   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4104694   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4104695   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4104696   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4104697   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4104698   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4104699   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4104700   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4104701   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4104702   +END;
MPRINT(EM_DIAGRAM):   END;
4104703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4104704   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4104705   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4104706   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4104707   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4104708   +END;
MPRINT(EM_DIAGRAM):   END;
4104709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104710   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4104711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104712   +
4104713   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4104714   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4104715   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4104716   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4104717   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4104718   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104719   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4104720   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4104721   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4104722   +end;
MPRINT(EM_DIAGRAM):   end;
4104723   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104724   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4104725   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4104726   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4104727   +   end;
MPRINT(EM_DIAGRAM):   end;
4104728   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4104729   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4104730   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4104731   +   end;
MPRINT(EM_DIAGRAM):   end;
4104732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104733   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4104734   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4104735   +   end;
MPRINT(EM_DIAGRAM):   end;
4104736   +end;
MPRINT(EM_DIAGRAM):   end;
4104737   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4104738   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4104739   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4104740   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4104741   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4104742   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4104743   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4104744   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4104745   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4104746   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4104747   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4104748   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4104749   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4104750   +END;
MPRINT(EM_DIAGRAM):   END;
4104751   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4104752   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4104753   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4104754   +END;
MPRINT(EM_DIAGRAM):   END;
4104755   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4104756   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4104757   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4104758   +END;
MPRINT(EM_DIAGRAM):   END;
4104759   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4104760   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4104761   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4104762   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4104763   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4104764   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4104765   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4104766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104767   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4104768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4104769   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4104770   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4104771   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4104772   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4104773   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4104774   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4104775   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4104776   +END;
MPRINT(EM_DIAGRAM):   END;
4104777   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4104778   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4104779   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4104780   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4104781   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4104782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104783   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4104784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104785   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4104786   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4104787   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4104788   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4104789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104790   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4104791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104792   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4104793   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4104794   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4104795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104796   +* Ensmbl37: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 6 of 7;
4104797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104799   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4104800   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4104801   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4104802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4104803   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4104804   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4104805   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4104806   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4104807   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4104808   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4104809   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4104810   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4104811   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4104812   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4104813   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4104814   +LENGTH _WARN_ $4
4104815   +      F_DepVar  $ 12
4104816   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4104817   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4104818   +
4104819   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4104820   +
4104821   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4104822   +
4104823   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4104824   +
4104825   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4104826   +
4104827   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4104828   +
4104829   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4104830   +
4104831   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4104832   +
4104833   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4104834   +
4104835   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4104836   +
4104837   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4104838   +
4104839   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4104840   +
4104841   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4104842   +
4104843   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4104844   +
4104845   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4104846   +
4104847   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4104848   +
4104849   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4104850   +
4104851   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4104852   +
4104853   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4104854   +
4104855   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4104856   +
4104857   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4104858   +
4104859   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4104860   +
4104861   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4104862   +
4104863   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4104864   +
4104865   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4104866   +
4104867   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4104868   +
4104869   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4104870   +
4104871   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4104872   +
4104873   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4104874   +
4104875   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4104876   +
4104877   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4104878   +
4104879   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4104880   +
4104881   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4104882   +
4104883   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4104884   +
4104885   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4104886   +
4104887   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4104888   +
4104889   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4104890   +
4104891   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4104892   +
4104893   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4104894   +
4104895   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4104896   +
4104897   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4104898   +
4104899   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4104900   +
4104901   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4104902   +
4104903   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4104904   +
4104905   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4104906   +
4104907   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4104908   +
4104909   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4104910   +
4104911   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4104912   +
4104913   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4104914   +
4104915   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4104916   +
4104917   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4104918   +
4104919   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4104920   +
4104921   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4104922   +
4104923   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4104924   +
4104925   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4104926   +
4104927   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4104928   +
4104929   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4104930   +
4104931   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4104932   +
4104933   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4104934   +
4104935   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4104936   +
4104937   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4104938   +
4104939   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4104940   +
4104941   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4104942   +
4104943   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4104944   +
4104945   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4104946   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4104947   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4104948   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4104949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104951   +end;
MPRINT(EM_DIAGRAM):   end;
4104952   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104954   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4104955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104957   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4104958   +   end;
MPRINT(EM_DIAGRAM):   end;
4104959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104960   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4104961   +   end;
MPRINT(EM_DIAGRAM):   end;
4104962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104963   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4104964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104966   +   end;
MPRINT(EM_DIAGRAM):   end;
4104967   +end;
MPRINT(EM_DIAGRAM):   end;
4104968   +
4104969   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4104970   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4104971   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4104972   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4104973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104975   +end;
MPRINT(EM_DIAGRAM):   end;
4104976   +else do;
MPRINT(EM_DIAGRAM):   else do;
4104977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4104978   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4104979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4104980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4104981   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4104982   +   end;
MPRINT(EM_DIAGRAM):   end;
4104983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4104984   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4104985   +   end;
MPRINT(EM_DIAGRAM):   end;
4104986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4104987   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4104988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4104989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104990   +   end;
MPRINT(EM_DIAGRAM):   end;
4104991   +end;
MPRINT(EM_DIAGRAM):   end;
4104992   +
4104993   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4104994   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4104995   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4104996   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4104997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4104998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4104999   +end;
MPRINT(EM_DIAGRAM):   end;
4105000   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4105002   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4105003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4105005   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4105006   +   end;
MPRINT(EM_DIAGRAM):   end;
4105007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4105008   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4105009   +   end;
MPRINT(EM_DIAGRAM):   end;
4105010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105011   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4105012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105014   +   end;
MPRINT(EM_DIAGRAM):   end;
4105015   +end;
MPRINT(EM_DIAGRAM):   end;
4105016   +
4105017   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4105018   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4105019   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4105020   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4105021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105023   +end;
MPRINT(EM_DIAGRAM):   end;
4105024   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4105026   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4105027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4105029   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4105030   +   end;
MPRINT(EM_DIAGRAM):   end;
4105031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4105032   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4105033   +   end;
MPRINT(EM_DIAGRAM):   end;
4105034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105035   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4105036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105038   +   end;
MPRINT(EM_DIAGRAM):   end;
4105039   +end;
MPRINT(EM_DIAGRAM):   end;
4105040   +
4105041   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4105042   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4105043   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4105044   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4105045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105047   +end;
MPRINT(EM_DIAGRAM):   end;
4105048   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4105050   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4105051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4105053   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4105054   +   end;
MPRINT(EM_DIAGRAM):   end;
4105055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4105056   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4105057   +   end;
MPRINT(EM_DIAGRAM):   end;
4105058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105059   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4105060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105062   +   end;
MPRINT(EM_DIAGRAM):   end;
4105063   +end;
MPRINT(EM_DIAGRAM):   end;
4105064   +
4105065   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4105066   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4105067   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4105068   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4105069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105071   +end;
MPRINT(EM_DIAGRAM):   end;
4105072   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4105074   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4105075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4105077   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4105078   +   end;
MPRINT(EM_DIAGRAM):   end;
4105079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4105080   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4105081   +   end;
MPRINT(EM_DIAGRAM):   end;
4105082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105083   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4105084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105086   +   end;
MPRINT(EM_DIAGRAM):   end;
4105087   +end;
MPRINT(EM_DIAGRAM):   end;
4105088   +
4105089   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4105090   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4105091   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4105092   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4105093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105095   +end;
MPRINT(EM_DIAGRAM):   end;
4105096   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4105098   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4105099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105100   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4105101   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4105102   +   end;
MPRINT(EM_DIAGRAM):   end;
4105103   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4105104   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4105105   +   end;
MPRINT(EM_DIAGRAM):   end;
4105106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105107   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4105108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105110   +   end;
MPRINT(EM_DIAGRAM):   end;
4105111   +end;
MPRINT(EM_DIAGRAM):   end;
4105112   +
4105113   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4105114   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4105115   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4105116   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4105117   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4105118   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4105119   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4105120   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4105121   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4105122   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4105123   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4105124   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4105125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105127   +end;
MPRINT(EM_DIAGRAM):   end;
4105128   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105129   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4105130   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4105131   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105132   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4105133   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4105134   +   end;
MPRINT(EM_DIAGRAM):   end;
4105135   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4105136   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4105137   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4105138   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4105139   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4105140   +   end;
MPRINT(EM_DIAGRAM):   end;
4105141   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4105142   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4105143   +   end;
MPRINT(EM_DIAGRAM):   end;
4105144   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4105145   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4105146   +   end;
MPRINT(EM_DIAGRAM):   end;
4105147   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4105148   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4105149   +   end;
MPRINT(EM_DIAGRAM):   end;
4105150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105151   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4105152   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4105153   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4105154   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4105155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105157   +   end;
MPRINT(EM_DIAGRAM):   end;
4105158   +end;
MPRINT(EM_DIAGRAM):   end;
4105159   +
4105160   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4105161   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4105162   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4105163   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4105164   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4105165   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4105166   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4105167   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4105168   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4105169   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4105170   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4105171   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4105172   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4105173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4105174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105175   +end;
MPRINT(EM_DIAGRAM):   end;
4105176   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105177   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4105178   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4105179   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105180   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4105181   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4105182   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4105183   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4105184   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4105185   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4105186   +         end;
MPRINT(EM_DIAGRAM):   end;
4105187   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4105188   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4105189   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4105190   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4105191   +            end;
MPRINT(EM_DIAGRAM):   end;
4105192   +         end;
MPRINT(EM_DIAGRAM):   end;
4105193   +      end;
MPRINT(EM_DIAGRAM):   end;
4105194   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4105195   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4105196   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4105197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4105198   +         end;
MPRINT(EM_DIAGRAM):   end;
4105199   +      end;
MPRINT(EM_DIAGRAM):   end;
4105200   +   end;
MPRINT(EM_DIAGRAM):   end;
4105201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105202   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4105203   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4105204   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4105205   +      end;
MPRINT(EM_DIAGRAM):   end;
4105206   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4105207   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4105208   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4105209   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4105210   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4105211   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4105212   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4105213   +         end;
MPRINT(EM_DIAGRAM):   end;
4105214   +      end;
MPRINT(EM_DIAGRAM):   end;
4105215   +   end;
MPRINT(EM_DIAGRAM):   end;
4105216   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4105217   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4105218   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4105219   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4105220   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4105221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4105222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105223   +   end;
MPRINT(EM_DIAGRAM):   end;
4105224   +end;
MPRINT(EM_DIAGRAM):   end;
4105225   +
4105226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105227   +*** Checking missing input Interval
4105228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4105229   +
4105230   +IF NMISS(
4105231   +   AcceptedCmpTotal ,
4105232   +   Age ,
4105233   +   Frq ,
4105234   +   Income ,
4105235   +   Kidhome ,
4105236   +   Mnt ,
4105237   +   MntFishProducts ,
4105238   +   MntFruits ,
4105239   +   MntGoldProds ,
4105240   +   MntMeatProducts ,
4105241   +   MntSweetProducts ,
4105242   +   MntWines ,
4105243   +   MonthsAsCustomer ,
4105244   +   NumCatalogPurchases ,
4105245   +   NumDealsPurchases ,
4105246   +   NumDistPurchases ,
4105247   +   NumStorePurchases ,
4105248   +   NumWebPurchases ,
4105249   +   NumWebVisitsMonth ,
4105250   +   RFMstat ,
4105251   +   RMntFrq ,
4105252   +   Recency ,
4105253   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4105254   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4105255   +
4105256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4105257   +END;
MPRINT(EM_DIAGRAM):   END;
4105258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105259   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4105260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4105262   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4105263   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4105264   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4105265   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4105266   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4105267   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4105268   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4105269   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4105270   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4105271   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4105272   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4105273   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4105274   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4105275   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4105276   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4105277   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4105278   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4105279   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4105280   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4105281   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4105282   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4105283   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4105284   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4105285   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4105286   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4105287   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4105288   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4105289   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4105290   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4105291   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4105292   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4105293   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4105294   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4105295   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4105296   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4105297   +END;
MPRINT(EM_DIAGRAM):   END;
4105298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4105299   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4105300   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4105301   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4105302   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4105303   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4105304   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4105305   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4105306   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4105307   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4105308   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4105309   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4105310   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4105311   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4105312   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4105313   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4105314   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4105315   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4105316   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4105317   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4105318   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4105319   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4105320   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4105321   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4105322   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4105323   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4105324   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4105325   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4105326   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4105327   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4105328   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4105329   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4105330   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4105331   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4105332   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4105333   +   ELSE S_NumCatalogPurchases
4105334   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4105335   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4105336   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4105337   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4105338   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4105339   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4105340   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4105341   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4105342   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4105343   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4105344   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4105345   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4105346   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4105347   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4105348   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4105349   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4105350   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4105351   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4105352   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4105353   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4105354   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4105355   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4105356   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4105357   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4105358   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4105359   +END;
MPRINT(EM_DIAGRAM):   END;
4105360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105361   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4105362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105364   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4105365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105367   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4105368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4105370   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4105371   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4105372   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4105373   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4105374   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4105375   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4105376   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4105377   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4105378   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4105379   +          +     0.89422627895323 * S_NumDealsPurchases
4105380   +          +    -0.13304125929765 * S_NumDistPurchases
4105381   +          +    -1.04568442570811 * S_NumStorePurchases
4105382   +          +    -0.28677765126751 * S_NumWebPurchases
4105383   +          +      1.2327638737509 * S_NumWebVisitsMonth
4105384   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4105385   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4105386   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4105387   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4105388   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4105389   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4105390   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4105391   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4105392   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4105393   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4105394   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4105395   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4105396   +          +     0.04224590196535 * S_NumDealsPurchases
4105397   +          +     0.76554742700113 * S_NumDistPurchases
4105398   +          +    -0.49155496870812 * S_NumStorePurchases
4105399   +          +     0.59606812744403 * S_NumWebPurchases
4105400   +          +     1.86809286276405 * S_NumWebVisitsMonth
4105401   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4105402   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4105403   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4105404   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4105405   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4105406   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4105407   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4105408   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4105409   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4105410   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4105411   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4105412   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4105413   +          +    -0.04866536993486 * S_NumDealsPurchases
4105414   +          +    -0.53535979020214 * S_NumDistPurchases
4105415   +          +     2.20634071253676 * S_NumStorePurchases
4105416   +          +      0.6164564989007 * S_NumWebPurchases
4105417   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4105418   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4105419   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4105420   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4105421   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4105422   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4105423   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4105424   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4105425   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4105426   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4105427   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4105428   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4105429   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4105430   +          +     1.37461255707863 * S_NumDealsPurchases
4105431   +          +    -0.17684775000818 * S_NumDistPurchases
4105432   +          +    -0.62755623855535 * S_NumStorePurchases
4105433   +          +    -1.46551649022657 * S_NumWebPurchases
4105434   +          +     3.35784247878638 * S_NumWebVisitsMonth
4105435   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4105436   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4105437   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4105438   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4105439   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4105440   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4105441   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4105442   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4105443   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4105444   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4105445   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4105446   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4105447   +          +    -0.76256677907121 * S_NumDealsPurchases
4105448   +          +    -0.31591571751692 * S_NumDistPurchases
4105449   +          +      0.0506832614089 * S_NumStorePurchases
4105450   +          +      1.4636796923764 * S_NumWebPurchases
4105451   +          +     0.37743519705036 * S_NumWebVisitsMonth
4105452   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4105453   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4105454   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4105455   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4105456   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4105457   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4105458   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4105459   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4105460   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4105461   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4105462   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4105463   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4105464   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4105465   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4105466   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4105467   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4105468   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4105469   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4105470   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4105471   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4105472   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4105473   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4105474   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4105475   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4105476   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4105477   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4105478   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4105479   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4105480   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4105481   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4105482   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4105483   +          +     0.68641668264565 * Marital_StatusDivorced
4105484   +          +    -0.81586871439732 * Marital_StatusMarried
4105485   +          +     0.63758920518451 * Marital_StatusSingle
4105486   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4105487   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4105488   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4105489   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4105490   +          +     0.05137560133238 * Marital_StatusDivorced
4105491   +          +    -2.24401993266209 * Marital_StatusMarried
4105492   +          +     1.57359386216115 * Marital_StatusSingle
4105493   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4105494   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4105495   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4105496   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4105497   +          +     -1.0649987815942 * Marital_StatusDivorced
4105498   +          +     0.76065111692388 * Marital_StatusMarried
4105499   +          +    -0.21694149754801 * Marital_StatusSingle
4105500   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4105501   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4105502   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4105503   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4105504   +          +     2.02155453548328 * Marital_StatusDivorced
4105505   +          +    -2.60190649735306 * Marital_StatusMarried
4105506   +          +     1.09149388354927 * Marital_StatusSingle
4105507   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4105508   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4105509   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4105510   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4105511   +          +     0.66315970650309 * Marital_StatusDivorced
4105512   +          +    -1.20476729758152 * Marital_StatusMarried
4105513   +          +     0.56175027826397 * Marital_StatusSingle
4105514   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
The SAS System
 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4105515   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4105516   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4105517   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4105518   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4105519   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4105520   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4105521   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4105522   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4105523   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4105524   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4105525   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4105526   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4105527   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4105528   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4105529   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4105530   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4105531   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4105532   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4105533   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4105534   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4105535   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4105536   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4105537   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4105538   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4105539   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4105540   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4105541   +END;
MPRINT(EM_DIAGRAM):   END;
4105542   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4105543   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4105544   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4105545   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4105546   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4105547   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4105548   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4105549   +END;
MPRINT(EM_DIAGRAM):   END;
4105550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105551   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4105552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105553   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4105554   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4105555   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4105556   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4105557   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4105558   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4105559   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4105560   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4105561   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4105562   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4105563   +          +     1.50005927423985 * S_NumDealsPurchases
4105564   +          +      0.5590536933569 * S_NumDistPurchases
4105565   +          +    -0.61757824339318 * S_NumStorePurchases
4105566   +          +     0.37259686538158 * S_NumWebPurchases
4105567   +          +     2.59725437895564 * S_NumWebVisitsMonth
4105568   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4105569   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4105570   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4105571   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4105572   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4105573   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4105574   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4105575   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4105576   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4105577   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4105578   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4105579   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4105580   +          +    -0.09282222088797 * S_NumDealsPurchases
4105581   +          +     0.10726247938321 * S_NumDistPurchases
4105582   +          +     -1.1235971458527 * S_NumStorePurchases
4105583   +          +    -0.78304387839877 * S_NumWebPurchases
4105584   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4105585   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4105586   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4105587   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4105588   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4105589   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4105590   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4105591   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4105592   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4105593   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4105594   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4105595   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4105596   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4105597   +          +     0.35349185459988 * S_NumDealsPurchases
4105598   +          +     0.06853677714859 * S_NumDistPurchases
4105599   +          +    -1.47546012999338 * S_NumStorePurchases
4105600   +          +     0.20926435398916 * S_NumWebPurchases
4105601   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4105602   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4105603   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4105604   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4105605   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4105606   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4105607   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4105608   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4105609   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4105610   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4105611   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4105612   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4105613   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4105614   +          +      0.3873586120272 * S_NumDealsPurchases
4105615   +          +     0.25911651157596 * S_NumDistPurchases
4105616   +          +     1.58922489084287 * S_NumStorePurchases
4105617   +          +     0.49041797743368 * S_NumWebPurchases
4105618   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4105619   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4105620   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4105621   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4105622   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4105623   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4105624   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4105625   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4105626   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4105627   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4105628   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4105629   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4105630   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4105631   +          +    -0.60830880287865 * S_NumDealsPurchases
4105632   +          +      0.0745331267194 * S_NumDistPurchases
4105633   +          +    -1.39472448256952 * S_NumStorePurchases
4105634   +          +     1.95372179969087 * S_NumWebPurchases
4105635   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4105636   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4105637   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4105638   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4105639   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4105640   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4105641   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4105642   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4105643   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4105644   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4105645   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4105646   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4105647   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4105648   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4105649   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4105650   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4105651   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4105652   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4105653   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4105654   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4105655   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4105656   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4105657   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4105658   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4105659   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4105660   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4105661   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4105662   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4105663   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4105664   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4105665   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4105666   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4105667   +          +    -1.33377871643323 * Marital_StatusDivorced
4105668   +          +    -0.87184228840898 * Marital_StatusMarried
4105669   +          +     1.41223186340257 * Marital_StatusSingle
4105670   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4105671   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4105672   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4105673   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4105674   +          +    -0.21479890935233 * Marital_StatusDivorced
4105675   +          +     -0.0025459519579 * Marital_StatusMarried
4105676   +          +     1.33900491702264 * Marital_StatusSingle
4105677   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4105678   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4105679   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4105680   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4105681   +          +    -0.38307267471999 * Marital_StatusDivorced
4105682   +          +     0.97088969451415 * Marital_StatusMarried
4105683   +          +    -0.28578224473381 * Marital_StatusSingle
4105684   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4105685   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4105686   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4105687   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4105688   +          +    -1.42229401093569 * Marital_StatusDivorced
4105689   +          +      0.7234508382397 * Marital_StatusMarried
4105690   +          +    -0.29062202974628 * Marital_StatusSingle
4105691   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4105692   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4105693   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4105694   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4105695   +          +    -0.99067637207205 * Marital_StatusDivorced
4105696   +          +    -0.50245902142079 * Marital_StatusMarried
4105697   +          +     0.54214494533793 * Marital_StatusSingle
4105698   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4105699   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4105700   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4105701   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4105702   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4105703   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4105704   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4105705   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4105706   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4105707   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4105708   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4105709   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4105710   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4105711   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4105712   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4105713   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4105714   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4105715   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4105716   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4105717   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4105718   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4105719   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4105720   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4105721   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4105722   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4105723   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4105724   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4105725   +END;
MPRINT(EM_DIAGRAM):   END;
4105726   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4105727   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4105728   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4105729   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4105730   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4105731   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4105732   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4105733   +END;
MPRINT(EM_DIAGRAM):   END;
4105734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105735   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4105736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105737   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4105738   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4105739   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4105740   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4105741   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4105742   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4105743   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4105744   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4105745   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4105746   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4105747   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4105748   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4105749   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4105750   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4105751   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4105752   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4105753   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4105754   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4105755   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4105756   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4105757   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4105758   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4105759   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4105760   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4105761   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4105762   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4105763   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4105764   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4105765   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4105766   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4105767   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4105768   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4105769   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4105770   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4105771   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4105772   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4105773   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4105774   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4105775   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4105776   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4105777   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4105778   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4105779   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4105780   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4105781   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4105782   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4105783   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4105784   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4105785   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4105786   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4105787   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4105788   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4105789   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4105790   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4105791   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4105792   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4105793   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4105794   +END;
MPRINT(EM_DIAGRAM):   END;
4105795   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4105796   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4105797   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4105798   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4105799   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4105800   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4105801   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4105802   +END;
MPRINT(EM_DIAGRAM):   END;
4105803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105804   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4105805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105806   +
4105807   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4105808   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4105809   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4105810   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4105811   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4105812   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4105813   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4105814   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4105815   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4105816   +end;
MPRINT(EM_DIAGRAM):   end;
4105817   +else do;
MPRINT(EM_DIAGRAM):   else do;
4105818   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4105819   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4105820   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4105821   +   end;
MPRINT(EM_DIAGRAM):   end;
4105822   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4105823   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4105824   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4105825   +   end;
MPRINT(EM_DIAGRAM):   end;
4105826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4105827   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4105828   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4105829   +   end;
MPRINT(EM_DIAGRAM):   end;
4105830   +end;
MPRINT(EM_DIAGRAM):   end;
4105831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4105832   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4105833   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4105834   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4105835   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4105836   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4105837   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4105838   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4105839   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4105840   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4105841   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4105842   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4105843   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4105844   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4105845   +END;
MPRINT(EM_DIAGRAM):   END;
4105846   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4105847   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4105848   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4105849   +END;
MPRINT(EM_DIAGRAM):   END;
4105850   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4105851   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4105852   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4105853   +END;
MPRINT(EM_DIAGRAM):   END;
4105854   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4105855   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4105856   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4105857   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4105858   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4105859   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4105860   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4105861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105862   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4105863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4105864   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4105865   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4105866   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4105867   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4105868   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4105869   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4105870   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4105871   +END;
MPRINT(EM_DIAGRAM):   END;
4105872   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4105873   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4105874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4105875   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4105876   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4105877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105878   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4105879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105880   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4105881   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4105882   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4105883   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4105884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105885   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4105886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105887   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4105888   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4105889   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4105890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105891   +* Ensmbl37: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Scoring Code of model 7 of 7;
4105892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105894   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4105895   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4105896   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4105897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4105898   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4105899   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4105900   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4105901   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4105902   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4105903   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4105904   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4105905   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4105906   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4105907   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4105908   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4105909   +LENGTH _WARN_ $4
4105910   +      F_DepVar  $ 12
4105911   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4105912   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4105913   +
4105914   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4105915   +
4105916   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4105917   +
4105918   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4105919   +
4105920   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4105921   +
4105922   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4105923   +
4105924   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4105925   +
4105926   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4105927   +
4105928   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4105929   +
4105930   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4105931   +
4105932   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4105933   +
4105934   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4105935   +
4105936   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4105937   +
4105938   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4105939   +
4105940   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4105941   +
4105942   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4105943   +
4105944   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4105945   +
4105946   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4105947   +
4105948   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4105949   +
4105950   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4105951   +
4105952   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4105953   +
4105954   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4105955   +
4105956   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4105957   +
4105958   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4105959   +
4105960   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4105961   +
4105962   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4105963   +
4105964   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4105965   +
4105966   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4105967   +
4105968   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4105969   +
4105970   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4105971   +
4105972   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4105973   +
4105974   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4105975   +
4105976   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4105977   +
4105978   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4105979   +
4105980   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4105981   +
4105982   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4105983   +
4105984   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4105985   +
4105986   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4105987   +
4105988   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4105989   +
4105990   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4105991   +
4105992   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4105993   +
4105994   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4105995   +
4105996   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4105997   +
4105998   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4105999   +
4106000   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4106001   +
4106002   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4106003   +
4106004   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4106005   +
4106006   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4106007   +
4106008   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4106009   +
4106010   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4106011   +
4106012   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4106013   +
4106014   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4106015   +
4106016   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4106017   +
4106018   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4106019   +
4106020   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4106021   +
4106022   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4106023   +
4106024   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4106025   +
4106026   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4106027   +
4106028   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4106029   +
4106030   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4106031   +
4106032   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4106033   +
4106034   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4106035   +
4106036   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4106037   +
4106038   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4106039   +
4106040   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4106041   +
4106042   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4106043   +
4106044   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4106045   +
4106046   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4106047   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4106048   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4106049   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4106050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106052   +end;
MPRINT(EM_DIAGRAM):   end;
4106053   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106055   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4106056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106058   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4106059   +   end;
MPRINT(EM_DIAGRAM):   end;
4106060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106061   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4106062   +   end;
MPRINT(EM_DIAGRAM):   end;
4106063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106064   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4106065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106067   +   end;
MPRINT(EM_DIAGRAM):   end;
4106068   +end;
MPRINT(EM_DIAGRAM):   end;
4106069   +
4106070   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4106071   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4106072   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4106073   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4106074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106076   +end;
MPRINT(EM_DIAGRAM):   end;
4106077   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106079   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4106080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106081   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106082   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4106083   +   end;
MPRINT(EM_DIAGRAM):   end;
4106084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106085   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4106086   +   end;
MPRINT(EM_DIAGRAM):   end;
4106087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106088   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4106089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106091   +   end;
MPRINT(EM_DIAGRAM):   end;
4106092   +end;
MPRINT(EM_DIAGRAM):   end;
4106093   +
4106094   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4106095   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4106096   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4106097   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4106098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106100   +end;
MPRINT(EM_DIAGRAM):   end;
4106101   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106103   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4106104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106106   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4106107   +   end;
MPRINT(EM_DIAGRAM):   end;
4106108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106109   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4106110   +   end;
MPRINT(EM_DIAGRAM):   end;
4106111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106112   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4106113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106115   +   end;
MPRINT(EM_DIAGRAM):   end;
4106116   +end;
MPRINT(EM_DIAGRAM):   end;
4106117   +
4106118   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4106119   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4106120   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4106121   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4106122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106124   +end;
MPRINT(EM_DIAGRAM):   end;
4106125   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106127   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4106128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106130   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4106131   +   end;
MPRINT(EM_DIAGRAM):   end;
4106132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106133   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4106134   +   end;
MPRINT(EM_DIAGRAM):   end;
4106135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106136   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4106137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106139   +   end;
MPRINT(EM_DIAGRAM):   end;
4106140   +end;
MPRINT(EM_DIAGRAM):   end;
4106141   +
4106142   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4106143   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4106144   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4106145   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4106146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106148   +end;
MPRINT(EM_DIAGRAM):   end;
4106149   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106151   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4106152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106154   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4106155   +   end;
MPRINT(EM_DIAGRAM):   end;
4106156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106157   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4106158   +   end;
MPRINT(EM_DIAGRAM):   end;
4106159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106160   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4106161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106163   +   end;
MPRINT(EM_DIAGRAM):   end;
4106164   +end;
MPRINT(EM_DIAGRAM):   end;
4106165   +
4106166   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4106167   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4106168   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4106169   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4106170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106172   +end;
MPRINT(EM_DIAGRAM):   end;
4106173   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106175   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4106176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4106178   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4106179   +   end;
MPRINT(EM_DIAGRAM):   end;
4106180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4106181   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4106182   +   end;
MPRINT(EM_DIAGRAM):   end;
4106183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106184   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4106185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106187   +   end;
MPRINT(EM_DIAGRAM):   end;
4106188   +end;
MPRINT(EM_DIAGRAM):   end;
4106189   +
4106190   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4106191   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4106192   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4106193   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4106194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106196   +end;
MPRINT(EM_DIAGRAM):   end;
4106197   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4106199   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4106200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106201   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4106202   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4106203   +   end;
MPRINT(EM_DIAGRAM):   end;
4106204   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4106205   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4106206   +   end;
MPRINT(EM_DIAGRAM):   end;
4106207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106208   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4106209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106211   +   end;
MPRINT(EM_DIAGRAM):   end;
4106212   +end;
MPRINT(EM_DIAGRAM):   end;
4106213   +
4106214   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4106215   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4106216   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4106217   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4106218   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4106219   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4106220   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4106221   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4106222   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4106223   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4106224   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4106225   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4106226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106228   +end;
MPRINT(EM_DIAGRAM):   end;
4106229   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106230   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4106231   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4106232   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106233   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4106234   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4106235   +   end;
MPRINT(EM_DIAGRAM):   end;
4106236   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4106237   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4106238   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4106239   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4106240   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4106241   +   end;
MPRINT(EM_DIAGRAM):   end;
4106242   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4106243   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4106244   +   end;
MPRINT(EM_DIAGRAM):   end;
4106245   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4106246   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4106247   +   end;
MPRINT(EM_DIAGRAM):   end;
4106248   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4106249   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4106250   +   end;
MPRINT(EM_DIAGRAM):   end;
4106251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106252   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4106253   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4106254   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4106255   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4106256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106258   +   end;
MPRINT(EM_DIAGRAM):   end;
4106259   +end;
MPRINT(EM_DIAGRAM):   end;
4106260   +
4106261   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4106262   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4106263   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4106264   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4106265   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4106266   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4106267   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4106268   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4106269   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4106270   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4106271   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4106272   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4106273   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4106274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4106275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106276   +end;
MPRINT(EM_DIAGRAM):   end;
4106277   +else do;
MPRINT(EM_DIAGRAM):   else do;
4106278   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4106279   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4106280   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4106281   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4106282   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4106283   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4106284   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4106285   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4106286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4106287   +         end;
MPRINT(EM_DIAGRAM):   end;
4106288   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4106289   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4106290   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4106291   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4106292   +            end;
MPRINT(EM_DIAGRAM):   end;
4106293   +         end;
MPRINT(EM_DIAGRAM):   end;
4106294   +      end;
MPRINT(EM_DIAGRAM):   end;
4106295   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4106296   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4106297   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4106298   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4106299   +         end;
MPRINT(EM_DIAGRAM):   end;
4106300   +      end;
MPRINT(EM_DIAGRAM):   end;
4106301   +   end;
MPRINT(EM_DIAGRAM):   end;
4106302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4106303   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4106304   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4106305   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4106306   +      end;
MPRINT(EM_DIAGRAM):   end;
4106307   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4106308   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4106309   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4106310   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4106311   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4106312   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4106313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4106314   +         end;
MPRINT(EM_DIAGRAM):   end;
4106315   +      end;
MPRINT(EM_DIAGRAM):   end;
4106316   +   end;
MPRINT(EM_DIAGRAM):   end;
4106317   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4106318   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4106319   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4106320   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4106321   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4106322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4106323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106324   +   end;
MPRINT(EM_DIAGRAM):   end;
4106325   +end;
MPRINT(EM_DIAGRAM):   end;
4106326   +
4106327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106328   +*** Checking missing input Interval
4106329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4106330   +
4106331   +IF NMISS(
4106332   +   AcceptedCmpTotal ,
4106333   +   Age ,
4106334   +   Frq ,
4106335   +   Income ,
4106336   +   Kidhome ,
4106337   +   Mnt ,
4106338   +   MntFishProducts ,
4106339   +   MntFruits ,
4106340   +   MntGoldProds ,
4106341   +   MntMeatProducts ,
4106342   +   MntSweetProducts ,
4106343   +   MntWines ,
4106344   +   MonthsAsCustomer ,
4106345   +   NumCatalogPurchases ,
4106346   +   NumDealsPurchases ,
4106347   +   NumDistPurchases ,
4106348   +   NumStorePurchases ,
4106349   +   NumWebPurchases ,
4106350   +   NumWebVisitsMonth ,
4106351   +   RFMstat ,
4106352   +   RMntFrq ,
4106353   +   Recency ,
4106354   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4106355   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4106356   +
4106357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4106358   +END;
MPRINT(EM_DIAGRAM):   END;
4106359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106360   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4106361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106362   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4106363   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4106364   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4106365   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4106366   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4106367   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4106368   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4106369   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4106370   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4106371   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4106372   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4106373   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4106374   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4106375   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4106376   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4106377   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4106378   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4106379   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4106380   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4106381   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4106382   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4106383   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4106384   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4106385   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4106386   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4106387   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4106388   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4106389   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4106390   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4106391   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4106392   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4106393   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4106394   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4106395   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4106396   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4106397   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4106398   +END;
MPRINT(EM_DIAGRAM):   END;
4106399   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4106400   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4106401   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4106402   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4106403   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4106404   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4106405   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4106406   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4106407   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4106408   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4106409   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4106410   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4106411   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4106412   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4106413   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4106414   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4106415   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4106416   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4106417   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4106418   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4106419   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4106420   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4106421   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4106422   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4106423   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4106424   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4106425   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4106426   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4106427   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4106428   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4106429   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4106430   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4106431   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4106432   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4106433   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4106434   +   ELSE S_NumCatalogPurchases
4106435   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4106436   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4106437   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4106438   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4106439   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4106440   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4106441   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4106442   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4106443   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4106444   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4106445   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4106446   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4106447   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4106448   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4106449   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4106450   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4106451   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4106452   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4106453   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4106454   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4106455   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4106456   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4106457   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4106458   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4106459   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4106460   +END;
MPRINT(EM_DIAGRAM):   END;
4106461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106462   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4106463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106465   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4106466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106468   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4106469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106470   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4106471   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4106472   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4106473   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4106474   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4106475   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4106476   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4106477   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4106478   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4106479   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4106480   +          +     1.17276395296242 * S_NumDealsPurchases
4106481   +          +     0.26632768295477 * S_NumDistPurchases
4106482   +          +    -1.26575615903579 * S_NumStorePurchases
4106483   +          +    -0.95316107557927 * S_NumWebPurchases
4106484   +          +     1.01828574356487 * S_NumWebVisitsMonth
4106485   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4106486   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4106487   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4106488   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4106489   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4106490   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4106491   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4106492   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4106493   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4106494   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4106495   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4106496   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4106497   +          +     1.14485571201233 * S_NumDealsPurchases
4106498   +          +     0.21414266588987 * S_NumDistPurchases
4106499   +          +    -0.10530090074297 * S_NumStorePurchases
4106500   +          +    -0.41712321238458 * S_NumWebPurchases
4106501   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4106502   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4106503   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4106504   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4106505   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4106506   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4106507   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4106508   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4106509   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4106510   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4106511   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4106512   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4106513   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4106514   +          +      0.7196418967437 * S_NumDealsPurchases
4106515   +          +     0.69035286374177 * S_NumDistPurchases
4106516   +          +     0.38027656631135 * S_NumStorePurchases
4106517   +          +    -0.18878358997924 * S_NumWebPurchases
4106518   +          +     1.61962062004798 * S_NumWebVisitsMonth
4106519   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4106520   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4106521   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4106522   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4106523   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4106524   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4106525   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4106526   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4106527   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4106528   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4106529   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4106530   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4106531   +          +    -0.00642902007204 * S_NumDealsPurchases
4106532   +          +     0.29785069480367 * S_NumDistPurchases
4106533   +          +    -0.42243322063147 * S_NumStorePurchases
4106534   +          +     0.54880896338383 * S_NumWebPurchases
4106535   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4106536   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4106537   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4106538   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4106539   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4106540   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4106541   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4106542   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4106543   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4106544   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4106545   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4106546   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4106547   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4106548   +          +    -0.48404738328225 * S_NumDealsPurchases
4106549   +          +    -0.02464180457879 * S_NumDistPurchases
4106550   +          +     1.17201831082067 * S_NumStorePurchases
4106551   +          +     0.57453655167516 * S_NumWebPurchases
4106552   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4106553   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4106554   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4106555   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4106556   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4106557   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4106558   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4106559   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4106560   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4106561   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4106562   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4106563   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4106564   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4106565   +          +    -1.49850531967483 * S_NumDealsPurchases
4106566   +          +    -0.82105466264223 * S_NumDistPurchases
4106567   +          +     0.29984603642824 * S_NumStorePurchases
4106568   +          +     0.06557123721611 * S_NumWebPurchases
4106569   +          +     1.04754749365002 * S_NumWebVisitsMonth
4106570   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4106571   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4106572   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4106573   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4106574   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4106575   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4106576   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4106577   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4106578   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4106579   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4106580   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4106581   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4106582   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4106583   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4106584   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4106585   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4106586   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4106587   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4106588   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4106589   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4106590   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4106591   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4106592   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4106593   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4106594   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4106595   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4106596   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4106597   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4106598   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4106599   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4106600   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4106601   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4106602   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4106603   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4106604   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4106605   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4106606   +          +     0.24583509957712 * Marital_StatusDivorced
4106607   +          +    -0.22681931588361 * Marital_StatusMarried
4106608   +          +    -0.12924106229536 * Marital_StatusSingle
4106609   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4106610   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4106611   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4106612   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4106613   +          +    -0.12585334311068 * Marital_StatusDivorced
4106614   +          +    -0.20835502467207 * Marital_StatusMarried
4106615   +          +    -0.13839534449368 * Marital_StatusSingle
4106616   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4106617   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4106618   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4106619   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4106620   +          +     0.35106363238113 * Marital_StatusDivorced
4106621   +          +     -1.3414808583918 * Marital_StatusMarried
4106622   +          +     1.40835320798486 * Marital_StatusSingle
4106623   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4106624   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4106625   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4106626   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4106627   +          +     0.48174546958393 * Marital_StatusDivorced
4106628   +          +    -0.41416978858191 * Marital_StatusMarried
4106629   +          +    -0.23376801546265 * Marital_StatusSingle
4106630   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4106631   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4106632   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4106633   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4106634   +          +    -0.67557643774246 * Marital_StatusDivorced
4106635   +          +     1.63844045917367 * Marital_StatusMarried
4106636   +          +    -0.70320960247699 * Marital_StatusSingle
4106637   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4106638   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4106639   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4106640   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4106641   +          +    -0.11371453086883 * Marital_StatusDivorced
4106642   +          +    -0.34226997176291 * Marital_StatusMarried
4106643   +          +    -1.01568676685754 * Marital_StatusSingle
4106644   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4106645   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4106646   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4106647   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4106648   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4106649   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4106650   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4106651   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4106652   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4106653   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4106654   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4106655   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4106656   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4106657   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4106658   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4106659   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4106660   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4106661   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4106662   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4106663   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4106664   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4106665   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4106666   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4106667   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4106668   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4106669   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4106670   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4106671   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4106672   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4106673   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4106674   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4106675   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4106676   +END;
MPRINT(EM_DIAGRAM):   END;
4106677   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4106678   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4106679   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4106680   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4106681   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4106682   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4106683   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4106684   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4106685   +END;
MPRINT(EM_DIAGRAM):   END;
4106686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106687   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4106688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106689   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4106690   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4106691   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4106692   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4106693   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4106694   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4106695   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4106696   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4106697   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4106698   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4106699   +          +    -0.87259051567474 * S_NumDealsPurchases
4106700   +          +    -0.36454149529139 * S_NumDistPurchases
4106701   +          +     0.12447759925061 * S_NumStorePurchases
4106702   +          +    -1.08133487947367 * S_NumWebPurchases
4106703   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4106704   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4106705   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4106706   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4106707   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4106708   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4106709   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4106710   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4106711   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4106712   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4106713   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4106714   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4106715   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4106716   +          +     2.23121497416403 * S_NumDealsPurchases
4106717   +          +    -0.48674842191071 * S_NumDistPurchases
4106718   +          +     1.77510728607544 * S_NumStorePurchases
4106719   +          +     0.14647433155436 * S_NumWebPurchases
4106720   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4106721   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4106722   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4106723   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4106724   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4106725   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4106726   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4106727   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4106728   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4106729   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4106730   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4106731   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4106732   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4106733   +          +     0.14338855349611 * S_NumDealsPurchases
4106734   +          +    -2.21071010829235 * S_NumDistPurchases
4106735   +          +    -0.21795889348002 * S_NumStorePurchases
4106736   +          +     1.98825087883535 * S_NumWebPurchases
4106737   +          +     1.02482442531149 * S_NumWebVisitsMonth
4106738   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4106739   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4106740   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4106741   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4106742   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4106743   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4106744   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4106745   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4106746   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4106747   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4106748   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4106749   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4106750   +          +     0.30041205661012 * S_NumDealsPurchases
4106751   +          +    -0.63499849986918 * S_NumDistPurchases
4106752   +          +    -0.34155713433714 * S_NumStorePurchases
4106753   +          +    -1.14183354933936 * S_NumWebPurchases
4106754   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4106755   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4106756   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4106757   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4106758   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4106759   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4106760   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4106761   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4106762   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4106763   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4106764   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4106765   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4106766   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4106767   +          +    -0.21237915559831 * S_NumDealsPurchases
4106768   +          +     0.48256923764182 * S_NumDistPurchases
4106769   +          +    -0.45553093140641 * S_NumStorePurchases
4106770   +          +      0.5593655963659 * S_NumWebPurchases
4106771   +          +     0.27943768691188 * S_NumWebVisitsMonth
4106772   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4106773   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4106774   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4106775   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4106776   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4106777   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4106778   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4106779   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4106780   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4106781   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4106782   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4106783   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4106784   +          +     2.38967021388062 * S_NumDealsPurchases
4106785   +          +    -0.97722398866481 * S_NumDistPurchases
4106786   +          +     1.57612333191312 * S_NumStorePurchases
4106787   +          +    -0.75968679115983 * S_NumWebPurchases
4106788   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4106789   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4106790   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4106791   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4106792   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4106793   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4106794   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4106795   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4106796   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4106797   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4106798   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4106799   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4106800   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4106801   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4106802   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4106803   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4106804   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4106805   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4106806   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4106807   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4106808   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4106809   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4106810   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4106811   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4106812   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4106813   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4106814   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4106815   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4106816   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4106817   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4106818   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4106819   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4106820   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4106821   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4106822   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4106823   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4106824   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4106825   +          +     0.96470902298142 * Marital_StatusDivorced
4106826   +          +     0.94805959268314 * Marital_StatusMarried
4106827   +          +     -0.6523948769616 * Marital_StatusSingle
4106828   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4106829   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4106830   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4106831   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4106832   +          +      0.3918249505531 * Marital_StatusDivorced
4106833   +          +    -0.00968091979586 * Marital_StatusMarried
4106834   +          +     0.84615379885071 * Marital_StatusSingle
4106835   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4106836   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4106837   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4106838   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4106839   +          +     1.14335160313191 * Marital_StatusDivorced
4106840   +          +     0.50580517192175 * Marital_StatusMarried
4106841   +          +     0.17264295020921 * Marital_StatusSingle
4106842   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4106843   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4106844   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4106845   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4106846   +          +    -0.11238504444225 * Marital_StatusDivorced
4106847   +          +    -0.81348274043749 * Marital_StatusMarried
4106848   +          +     0.46075415610001 * Marital_StatusSingle
4106849   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4106850   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4106851   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4106852   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4106853   +          +    -0.46342068701431 * Marital_StatusDivorced
4106854   +          +    -0.41667845270204 * Marital_StatusMarried
4106855   +          +    -0.47166707496281 * Marital_StatusSingle
4106856   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4106857   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4106858   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4106859   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4106860   +          +    -0.45376613787812 * Marital_StatusDivorced
4106861   +          +     0.01337046049801 * Marital_StatusMarried
4106862   +          +    -0.92811489484121 * Marital_StatusSingle
4106863   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4106864   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4106865   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4106866   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4106867   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4106868   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4106869   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4106870   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4106871   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4106872   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4106873   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4106874   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4106875   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4106876   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4106877   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4106878   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4106879   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4106880   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4106881   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4106882   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4106883   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4106884   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4106885   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4106886   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4106887   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4106888   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4106889   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4106890   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4106891   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4106892   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4106893   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4106894   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4106895   +END;
MPRINT(EM_DIAGRAM):   END;
4106896   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4106897   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4106898   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4106899   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4106900   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4106901   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4106902   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4106903   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4106904   +END;
MPRINT(EM_DIAGRAM):   END;
4106905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106906   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4106907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4106909   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4106910   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4106911   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4106912   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4106913   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4106914   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4106915   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4106916   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4106917   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4106918   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4106919   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4106920   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4106921   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4106922   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4106923   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4106924   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4106925   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4106926   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4106927   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4106928   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4106929   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4106930   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4106931   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4106932   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4106933   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4106934   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4106935   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4106936   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4106937   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4106938   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4106939   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4106940   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4106941   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4106942   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4106943   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4106944   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4106945   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4106946   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4106947   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4106948   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4106949   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4106950   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4106951   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4106952   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4106953   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4106954   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4106955   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4106956   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4106957   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4106958   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4106959   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4106960   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4106961   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4106962   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4106963   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4106964   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4106965   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4106966   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4106967   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4106968   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4106969   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4106970   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4106971   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4106972   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4106973   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4106974   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4106975   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4106976   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4106977   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4106978   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4106979   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4106980   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4106981   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4106982   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4106983   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4106984   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4106985   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4106986   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4106987   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4106988   +END;
MPRINT(EM_DIAGRAM):   END;
4106989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4106990   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4106991   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4106992   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4106993   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4106994   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4106995   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4106996   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4106997   +END;
MPRINT(EM_DIAGRAM):   END;
4106998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4106999   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4107000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107001   +
4107002   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4107003   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4107004   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4107005   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4107006   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4107007   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107008   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4107009   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4107010   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4107011   +end;
MPRINT(EM_DIAGRAM):   end;
4107012   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107013   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4107014   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4107015   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4107016   +   end;
MPRINT(EM_DIAGRAM):   end;
4107017   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4107018   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4107019   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4107020   +   end;
MPRINT(EM_DIAGRAM):   end;
4107021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107022   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4107023   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4107024   +   end;
MPRINT(EM_DIAGRAM):   end;
4107025   +end;
MPRINT(EM_DIAGRAM):   end;
4107026   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107027   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4107028   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4107029   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4107030   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4107031   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4107032   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4107033   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4107034   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4107035   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4107036   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4107037   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4107038   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4107039   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4107040   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4107041   +END;
MPRINT(EM_DIAGRAM):   END;
4107042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107043   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4107044   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4107045   +END;
MPRINT(EM_DIAGRAM):   END;
4107046   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4107047   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4107048   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4107049   +END;
MPRINT(EM_DIAGRAM):   END;
4107050   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4107051   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4107052   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4107053   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4107054   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4107055   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4107056   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4107057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107058   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4107059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107060   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4107061   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4107062   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4107063   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4107064   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4107065   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4107066   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4107067   +END;
MPRINT(EM_DIAGRAM):   END;
4107068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4107069   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4107070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4107071   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4107072   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4107073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107074   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4107075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107076   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4107077   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4107078   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4107079   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4107080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107081   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4107082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107083   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4107084   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4107085   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4107086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107087   +* Ensmbl37: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Maximum Posteriors of 7 models;
4107088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107089   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
4107090   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
4107091   +P_DepVar1 = max(
4107092   +AutoNeural6_P_DepVar1 ,
4107093   +AutoNeural7_P_DepVar1 ,
4107094   +AutoNeural8_P_DepVar1 ,
4107095   +AutoNeural10_P_DepVar1 ,
4107096   +AutoNeural9_P_DepVar1 ,
4107097   +AutoNeural11_P_DepVar1 ,
4107098   +AutoNeural12_P_DepVar1
4107099   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural6_P_DepVar1 , AutoNeural7_P_DepVar1 ,
AutoNeural8_P_DepVar1 , AutoNeural10_P_DepVar1 , AutoNeural9_P_DepVar1 ,
AutoNeural11_P_DepVar1 , AutoNeural12_P_DepVar1 );
4107100   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
4107101   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
4107102   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
4107103   +end;
MPRINT(EM_DIAGRAM):   end;
4107104   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
4107105   +P_DepVar0 = max(
4107106   +AutoNeural6_P_DepVar0 ,
4107107   +AutoNeural7_P_DepVar0 ,
4107108   +AutoNeural8_P_DepVar0 ,
4107109   +AutoNeural10_P_DepVar0 ,
4107110   +AutoNeural9_P_DepVar0 ,
4107111   +AutoNeural11_P_DepVar0 ,
4107112   +AutoNeural12_P_DepVar0
4107113   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural6_P_DepVar0 , AutoNeural7_P_DepVar0 ,
AutoNeural8_P_DepVar0 , AutoNeural10_P_DepVar0 , AutoNeural9_P_DepVar0 ,
AutoNeural11_P_DepVar0 , AutoNeural12_P_DepVar0 );
4107114   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
4107115   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
4107116   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
4107117   +end;
MPRINT(EM_DIAGRAM):   end;
4107118   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
4107119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107120   +* Ensmbl37: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Classification Vars;
4107121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107122   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
4107123   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
4107124   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
4107125   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
4107126   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
4107127   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
4107128   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
4107129   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
4107130   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
4107131   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
4107132   +end;
MPRINT(EM_DIAGRAM):   end;
4107133   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
4107134   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
4107135   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
4107136   +end;
MPRINT(EM_DIAGRAM):   end;
4107137   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4107138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107139   +* Ensmbl37: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Producing Unformatted variable;
4107140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107141   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4107142   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4107143   +else
4107144   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4107145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107146   +* Ensmbl37: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing _WARN_ Variable;
4107147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107148   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4107149   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4107150   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4107151   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107151  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107152   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107152  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107153   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107153  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107154   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107154  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107155   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107155  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107156   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107156  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107157   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107157  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107158   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107158  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107159   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107159  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107160   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107160  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107161   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107161  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107162   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107162  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107163   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107163  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107164   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107164  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107165   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107165  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107166   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107166  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107167   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107167  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107168   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107168  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107169   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107169  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107170   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107170  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107171   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107171  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107172   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107172  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107173   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107173  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107174   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107174  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107175   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4107175  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4107176   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4107176  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4107177   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4107177  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4107178   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4107178  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4107179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107180   +* Ensmbl37: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing Residual Vars;
4107181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4107182   +if
4107183   +F_DepVar NE '1'
4107184   +AND F_DepVar NE '0'
4107185   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4107186   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4107187   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4107188   +end;
MPRINT(EM_DIAGRAM):   end;
4107189   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107190   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4107191   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4107192   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4107193   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4107194   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4107195   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4107196   +END;
MPRINT(EM_DIAGRAM):   END;
4107197   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4107198    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL37_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4107199    quit;
4107200    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl37_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl37_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
4107260    filename _pref
4107260  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
4107261    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4107262    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
4107263   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4107264   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4107265   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4107266   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4107267   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4107268   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4107269   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4107270   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4107271   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4107272   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4107273   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4107274   +LENGTH _WARN_ $4
4107275   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4107276   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4107277   +
4107278   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4107279   +
4107280   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4107281   +
4107282   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4107283   +
4107284   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4107285   +
4107286   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4107287   +
4107288   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4107289   +
4107290   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4107291   +
4107292   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4107293   +
4107294   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4107295   +
4107296   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4107297   +
4107298   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4107299   +
4107300   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4107301   +
4107302   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4107303   +
4107304   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4107305   +
4107306   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4107307   +
4107308   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4107309   +
4107310   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4107311   +
4107312   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4107313   +
4107314   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4107315   +
4107316   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4107317   +
4107318   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4107319   +
4107320   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4107321   +
4107322   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4107323   +
4107324   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4107325   +
4107326   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4107327   +
4107328   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4107329   +
4107330   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4107331   +
4107332   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4107333   +
4107334   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4107335   +
4107336   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4107337   +
4107338   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4107339   +
4107340   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4107341   +
4107342   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4107343   +
4107344   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4107345   +
4107346   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4107347   +
4107348   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4107349   +
4107350   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4107351   +
4107352   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4107353   +
4107354   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4107355   +
4107356   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4107357   +
4107358   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4107359   +
4107360   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4107361   +
4107362   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4107363   +
4107364   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4107365   +
4107366   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4107367   +
4107368   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4107369   +
4107370   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4107371   +
4107372   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4107373   +
4107374   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4107375   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4107376   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4107377   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4107378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107380   +end;
MPRINT(EM_DIAGRAM):   end;
4107381   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107383   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4107384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107386   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4107387   +   end;
MPRINT(EM_DIAGRAM):   end;
4107388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107389   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4107390   +   end;
MPRINT(EM_DIAGRAM):   end;
4107391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107392   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4107393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107395   +   end;
MPRINT(EM_DIAGRAM):   end;
4107396   +end;
MPRINT(EM_DIAGRAM):   end;
4107397   +
4107398   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4107399   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4107400   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4107401   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4107402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107404   +end;
MPRINT(EM_DIAGRAM):   end;
4107405   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107407   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4107408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107410   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4107411   +   end;
MPRINT(EM_DIAGRAM):   end;
4107412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107413   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4107414   +   end;
MPRINT(EM_DIAGRAM):   end;
4107415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107416   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4107417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107419   +   end;
MPRINT(EM_DIAGRAM):   end;
4107420   +end;
MPRINT(EM_DIAGRAM):   end;
4107421   +
4107422   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4107423   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4107424   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4107425   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4107426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107428   +end;
MPRINT(EM_DIAGRAM):   end;
4107429   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107431   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4107432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107434   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4107435   +   end;
MPRINT(EM_DIAGRAM):   end;
4107436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107437   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4107438   +   end;
MPRINT(EM_DIAGRAM):   end;
4107439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107440   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4107441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107443   +   end;
MPRINT(EM_DIAGRAM):   end;
4107444   +end;
MPRINT(EM_DIAGRAM):   end;
4107445   +
4107446   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4107447   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4107448   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4107449   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4107450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107452   +end;
MPRINT(EM_DIAGRAM):   end;
4107453   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107455   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4107456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107458   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4107459   +   end;
MPRINT(EM_DIAGRAM):   end;
4107460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107461   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4107462   +   end;
MPRINT(EM_DIAGRAM):   end;
4107463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107464   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4107465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107467   +   end;
MPRINT(EM_DIAGRAM):   end;
4107468   +end;
MPRINT(EM_DIAGRAM):   end;
4107469   +
4107470   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4107471   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4107472   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4107473   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4107474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107476   +end;
MPRINT(EM_DIAGRAM):   end;
4107477   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107479   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4107480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107482   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4107483   +   end;
MPRINT(EM_DIAGRAM):   end;
4107484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107485   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4107486   +   end;
MPRINT(EM_DIAGRAM):   end;
4107487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107488   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4107489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107491   +   end;
MPRINT(EM_DIAGRAM):   end;
4107492   +end;
MPRINT(EM_DIAGRAM):   end;
4107493   +
4107494   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4107495   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4107496   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4107497   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4107498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107500   +end;
MPRINT(EM_DIAGRAM):   end;
4107501   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107503   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4107504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4107506   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4107507   +   end;
MPRINT(EM_DIAGRAM):   end;
4107508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4107509   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4107510   +   end;
MPRINT(EM_DIAGRAM):   end;
4107511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107512   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4107513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107515   +   end;
MPRINT(EM_DIAGRAM):   end;
4107516   +end;
MPRINT(EM_DIAGRAM):   end;
4107517   +
4107518   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4107519   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4107520   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4107521   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4107522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107524   +end;
MPRINT(EM_DIAGRAM):   end;
4107525   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4107527   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4107528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107529   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4107530   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4107531   +   end;
MPRINT(EM_DIAGRAM):   end;
4107532   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4107533   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4107534   +   end;
MPRINT(EM_DIAGRAM):   end;
4107535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107536   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4107537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107539   +   end;
MPRINT(EM_DIAGRAM):   end;
4107540   +end;
MPRINT(EM_DIAGRAM):   end;
4107541   +
4107542   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4107543   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4107544   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4107545   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4107546   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4107547   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4107548   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4107549   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4107550   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4107551   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4107552   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4107553   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4107554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107556   +end;
MPRINT(EM_DIAGRAM):   end;
4107557   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107558   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4107559   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4107560   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107561   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4107562   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4107563   +   end;
MPRINT(EM_DIAGRAM):   end;
4107564   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4107565   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4107566   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4107567   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4107568   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4107569   +   end;
MPRINT(EM_DIAGRAM):   end;
4107570   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4107571   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4107572   +   end;
MPRINT(EM_DIAGRAM):   end;
4107573   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4107574   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4107575   +   end;
MPRINT(EM_DIAGRAM):   end;
4107576   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4107577   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4107578   +   end;
MPRINT(EM_DIAGRAM):   end;
4107579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107580   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4107581   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4107582   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4107583   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4107584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107586   +   end;
MPRINT(EM_DIAGRAM):   end;
4107587   +end;
MPRINT(EM_DIAGRAM):   end;
4107588   +
4107589   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4107590   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4107591   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4107592   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4107593   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4107594   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4107595   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4107596   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4107597   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4107598   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4107599   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4107600   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4107601   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4107602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4107603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107604   +end;
MPRINT(EM_DIAGRAM):   end;
4107605   +else do;
MPRINT(EM_DIAGRAM):   else do;
4107606   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4107607   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4107608   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4107609   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4107610   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4107611   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4107612   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4107613   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4107614   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4107615   +         end;
MPRINT(EM_DIAGRAM):   end;
4107616   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4107617   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4107618   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4107619   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4107620   +            end;
MPRINT(EM_DIAGRAM):   end;
4107621   +         end;
MPRINT(EM_DIAGRAM):   end;
4107622   +      end;
MPRINT(EM_DIAGRAM):   end;
4107623   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4107624   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4107625   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4107626   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4107627   +         end;
MPRINT(EM_DIAGRAM):   end;
4107628   +      end;
MPRINT(EM_DIAGRAM):   end;
4107629   +   end;
MPRINT(EM_DIAGRAM):   end;
4107630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4107631   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4107632   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4107633   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4107634   +      end;
MPRINT(EM_DIAGRAM):   end;
4107635   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4107636   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4107637   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4107638   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4107639   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4107640   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4107641   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4107642   +         end;
MPRINT(EM_DIAGRAM):   end;
4107643   +      end;
MPRINT(EM_DIAGRAM):   end;
4107644   +   end;
MPRINT(EM_DIAGRAM):   end;
4107645   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4107646   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4107647   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4107648   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4107649   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4107650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4107651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107652   +   end;
MPRINT(EM_DIAGRAM):   end;
4107653   +end;
MPRINT(EM_DIAGRAM):   end;
4107654   +
4107655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107656   +*** Checking missing input Interval
4107657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4107658   +
4107659   +IF NMISS(
4107660   +   AcceptedCmpTotal ,
4107661   +   Age ,
4107662   +   Frq ,
4107663   +   Income ,
4107664   +   Kidhome ,
4107665   +   Mnt ,
4107666   +   MntFishProducts ,
4107667   +   MntFruits ,
4107668   +   MntGoldProds ,
4107669   +   MntMeatProducts ,
4107670   +   MntSweetProducts ,
4107671   +   MntWines ,
4107672   +   MonthsAsCustomer ,
4107673   +   NumCatalogPurchases ,
4107674   +   NumDealsPurchases ,
4107675   +   NumDistPurchases ,
4107676   +   NumStorePurchases ,
4107677   +   NumWebPurchases ,
4107678   +   NumWebVisitsMonth ,
4107679   +   RFMstat ,
4107680   +   RMntFrq ,
4107681   +   Recency ,
4107682   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4107683   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4107684   +
4107685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4107686   +END;
MPRINT(EM_DIAGRAM):   END;
4107687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107688   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4107689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107690   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107691   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4107692   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4107693   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4107694   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4107695   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4107696   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4107697   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4107698   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4107699   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4107700   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4107701   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4107702   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4107703   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4107704   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4107705   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4107706   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4107707   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4107708   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4107709   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4107710   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4107711   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4107712   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4107713   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4107714   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4107715   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4107716   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4107717   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4107718   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4107719   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4107720   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4107721   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4107722   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4107723   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4107724   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4107725   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4107726   +END;
MPRINT(EM_DIAGRAM):   END;
4107727   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107728   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4107729   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4107730   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4107731   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4107732   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4107733   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4107734   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4107735   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4107736   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4107737   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4107738   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4107739   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4107740   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4107741   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4107742   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4107743   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4107744   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4107745   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4107746   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4107747   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4107748   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4107749   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4107750   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4107751   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4107752   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4107753   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4107754   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4107755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4107756   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4107757   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4107758   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4107759   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4107760   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4107761   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4107762   +   ELSE S_NumCatalogPurchases
4107763   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4107764   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4107765   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4107766   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4107767   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4107768   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4107769   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4107770   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4107771   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4107772   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4107773   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4107774   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4107775   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4107776   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4107777   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4107778   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4107779   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4107780   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4107781   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4107782   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4107783   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4107784   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4107785   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4107786   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4107787   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4107788   +END;
MPRINT(EM_DIAGRAM):   END;
4107789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107790   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4107791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107793   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4107794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107796   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4107797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107798   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107799   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4107800   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4107801   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4107802   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4107803   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4107804   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4107805   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4107806   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4107807   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4107808   +          +     -0.4295354470932 * S_NumDealsPurchases
4107809   +          +    -0.08226280459837 * S_NumDistPurchases
4107810   +          +      0.2932815275833 * S_NumStorePurchases
4107811   +          +     0.19049189042599 * S_NumWebPurchases
4107812   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4107813   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4107814   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4107815   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4107816   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4107817   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4107818   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4107819   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4107820   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4107821   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4107822   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4107823   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4107824   +          +    -0.78551174413278 * Marital_StatusDivorced
4107825   +          +     1.14162836709205 * Marital_StatusMarried
4107826   +          +    -0.85471695548675 * Marital_StatusSingle
4107827   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4107828   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4107829   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4107830   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4107831   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4107832   +END;
MPRINT(EM_DIAGRAM):   END;
4107833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107834   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4107835   +END;
MPRINT(EM_DIAGRAM):   END;
4107836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107837   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4107838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107840   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4107841   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4107842   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4107843   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4107844   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4107845   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4107846   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4107847   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4107848   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4107849   +          +      0.1710743409836 * S_NumDealsPurchases
4107850   +          +     1.10019178495427 * S_NumDistPurchases
4107851   +          +     0.06701301620472 * S_NumStorePurchases
4107852   +          +    -1.47240374003368 * S_NumWebPurchases
4107853   +          +     0.38443387640949 * S_NumWebVisitsMonth
4107854   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4107855   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4107856   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4107857   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4107858   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4107859   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4107860   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4107861   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4107862   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4107863   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4107864   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4107865   +          +    -0.36835980184757 * Marital_StatusDivorced
4107866   +          +     0.71718933679692 * Marital_StatusMarried
4107867   +          +    -0.35767236657055 * Marital_StatusSingle
4107868   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4107869   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4107870   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4107871   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4107872   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4107873   +END;
MPRINT(EM_DIAGRAM):   END;
4107874   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107875   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4107876   +END;
MPRINT(EM_DIAGRAM):   END;
4107877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107878   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4107879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107881   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4107882   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4107883   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4107884   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4107885   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4107886   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4107887   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4107888   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4107889   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4107890   +          +    -1.99858075809796 * S_NumDealsPurchases
4107891   +          +    -0.37353682448701 * S_NumDistPurchases
4107892   +          +     1.16275863071649 * S_NumStorePurchases
4107893   +          +       -0.75936809253 * S_NumWebPurchases
4107894   +          +     2.17936226306026 * S_NumWebVisitsMonth
4107895   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4107896   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4107897   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4107898   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4107899   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4107900   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4107901   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4107902   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4107903   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4107904   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4107905   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4107906   +          +     0.60036315441483 * Marital_StatusDivorced
4107907   +          +    -0.94084946353672 * Marital_StatusMarried
4107908   +          +     0.34594388147374 * Marital_StatusSingle
4107909   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4107910   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4107911   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4107912   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4107913   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4107914   +END;
MPRINT(EM_DIAGRAM):   END;
4107915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107916   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4107917   +END;
MPRINT(EM_DIAGRAM):   END;
4107918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107919   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4107920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107921   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107922   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4107923   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4107924   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4107925   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4107926   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4107927   +END;
MPRINT(EM_DIAGRAM):   END;
4107928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107929   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4107930   +END;
MPRINT(EM_DIAGRAM):   END;
4107931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107932   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4107933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107934   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107935   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4107936   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4107937   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4107938   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4107939   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4107940   +END;
MPRINT(EM_DIAGRAM):   END;
4107941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107942   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4107943   +END;
MPRINT(EM_DIAGRAM):   END;
4107944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107945   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4107946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107947   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107948   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4107949   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4107950   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4107951   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4107952   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4107953   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4107954   +END;
MPRINT(EM_DIAGRAM):   END;
4107955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107956   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4107957   +END;
MPRINT(EM_DIAGRAM):   END;
4107958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107959   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4107960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107961   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4107962   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4107963   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4107964   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4107965   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4107966   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4107967   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4107968   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4107969   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4107970   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4107971   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4107972   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4107973   +END;
MPRINT(EM_DIAGRAM):   END;
4107974   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4107975   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4107976   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4107977   +END;
MPRINT(EM_DIAGRAM):   END;
4107978   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4107979   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4107980   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4107981   +END;
MPRINT(EM_DIAGRAM):   END;
4107982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107983   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4107984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4107985   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4107986   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4107987   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4107988   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4107989   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4107990   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4107991   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4107992   +END;
MPRINT(EM_DIAGRAM):   END;
4107993   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4107994   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4107995   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4107996   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4107997    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4107998    quit;
4107999    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4108000    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4108001    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4108002    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
4108003    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4108004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108005    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4108006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108008    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME
CREATOR);
4108009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108012    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4108013    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4108014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108015    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
4108016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4108017    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4108018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108020    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108021    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4108022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108023    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4108024    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4108025    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4108025  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.
 
4108026    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108027    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4108028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1717 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108029    filename _pref
4108029  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4108030    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4108031    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4108032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4108033   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4108034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4108035   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4108036   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4108037   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4108038    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4108039    quit;
4108040    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4108041    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4108042    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4108043    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4108044    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4108045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108046    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4108047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108049    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4108050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108052    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108053    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4108054    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4108055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108056    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4108057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
4108058    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4108059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108061    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108062    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4108063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108064    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108065    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4108066    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4108066  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4108067    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108068    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4108069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1721 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108070    filename _pref
4108070  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4108071    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4108072    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4108073   +
4108074   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4108075   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4108075  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4108076   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4108077   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4108078   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4108079   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4108080   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4108081    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4108082    quit;
4108083    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4108084    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4108085    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4108086    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4108087    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4108088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108089    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4108090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108092    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4108093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108095    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108096    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4108097    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4108098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108099    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4108100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108101    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4108102    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108104    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108105    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4108106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108107    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108108    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4108109    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4108109  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4108110    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108111    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4108112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108113    filename _pref
4108113  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4108114    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4108115    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4108116   +
4108117   +
4108118   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4108119   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4108120   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4108121   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4108122   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4108123   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108124   +
4108125   +
4108126   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4108127   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4108128   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4108129   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4108130   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4108131   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108132   +
4108133   +
4108134   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4108135   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4108136   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4108137   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4108138   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4108139   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108140   +
4108141   +
4108142   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4108143   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4108144   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4108145   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4108146   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4108147   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108148   +
4108149   +
4108150   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4108151   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4108152   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4108153   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4108154   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4108155   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108156   +
4108157   +
4108158   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4108159   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4108160   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4108161   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4108162   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4108163   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108164   +
4108165   +
4108166   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4108167   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4108168   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4108169   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4108170   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4108171   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108172   +
4108173   +
4108174   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4108175   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4108176   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4108177   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4108178   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4108179   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4108180   +if
4108181   +_FILTERNORM1 not in ( '.')
4108182   + and
4108183   +_FILTERNORM2 not in ( '.')
4108184   + and
4108185   +_FILTERNORM3 not in ( '.')
4108186   + and
4108187   +_FILTERNORM4 not in ( '.')
4108188   + and
4108189   +_FILTERNORM5 not in ( '.')
4108190   + and
4108191   +_FILTERNORM6 not in ( '.')
4108192   + and
4108193   +_FILTERNORM7 not in ( ' ')
4108194   + and
4108195   +_FILTERNORM8 not in ( ' ')
4108196   +and
4108197   +( Dt_Customer ne .)
4108198   +and ( Income ne . and (Income<=107000))
4108199   +and ( Kidhome ne .)
4108200   +and ( MntFishProducts ne .)
4108201   +and ( MntFruits ne .)
4108202   +and ( MntGoldProds ne .)
4108203   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4108204   +and ( MntSweetProducts ne .)
4108205   +and ( MntWines ne .)
4108206   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4108207   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4108208   +and ( NumStorePurchases ne .)
4108209   +and ( NumWebPurchases ne .)
4108210   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4108211   +and ( Recency ne .)
4108212   +and ( Teenhome ne .)
4108213   +and ( Year_Birth ne .)
4108214   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4108215   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4108216   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4108217   +end;
MPRINT(EM_DIAGRAM):   end;
4108218   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4108219   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4108220    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4108221    quit;
4108222    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4108223    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4108224    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4108225    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4108226    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4108227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108228    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4108229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108231    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4108232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108234    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108235    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4108236    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4108237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108238    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4108239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4108240    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4108241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4108244    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4108245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4108246    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108247    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4108248    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4108248  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4108249    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108250    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4108251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1826 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4108252    %macro varDept(fcmpdata=,id=);
4108253    %global nobs&id scoreFlag&id;
4108254    %let scoreFlag&id = 0;
4108255    %if &id=1 or ^&fcmpStart %then %do;
4108256    proc sort data=&fcmpdata out=_temp&id nodupkey;
4108257    by NAME;
4108258    where id=&id and LHS in( %let j=1;
4108259    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4108260    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4108261    "&var" %let j = %eval(&j+1);
4108262    %end;
4108263    );
4108264    run;
4108265    %let dsid = %sysfunc(open(_temp&id));
4108266    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4108267    %let dsid = %sysfunc(close(&dsid));
4108268    %if &&nobs&id %then %do;
4108269    %let scoreFlag&id = 1;
4108270    %let fcmpStart = 1;
4108271    %end;
4108272    %else %let fcmpStart = 0;
4108273    %end;
4108274    %else %do;
4108275    proc sort data=&fcmpdata out=_tempid;
4108276    where id=&id;
4108277    by LHS;
4108278    run;
4108279    %let dsid = %sysfunc(open(_tempid));
4108280    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4108281    %let dsid = %sysfunc(close(&dsid));
4108282    %if ^&&nobs&id %then %do;
4108283    proc datasets lib=work nolist;
4108284    delete _tempid;
4108285    run;
4108286    quit;
4108287    %end;
4108288    %else %do;
4108289    data _tempAll;
4108290    set %let j=%eval(&id-1);
4108291    %do x=1 %to &j;
4108292    %if &&nobs&x %then %do;
4108293    _temp&x %end;
4108294    %end;
4108295    ;
4108296    run;
4108297    proc sql;
4108298    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4108298  ! work._tempid p2 where p.name=p2.lhs;
4108299    quit;
4108300    data _temp&id;
4108301    set _temp&id;
4108302    where LHS ne '' and NAME ne '' and Node ne '';
4108303    run;
4108304    proc datasets lib=work nolist;
4108305    delete _tempAll;
4108306    run;
4108307    %let dsid = %sysfunc(open(_temp&id));
4108308    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4108309    %let dsid = %sysfunc(close(&dsid));
4108310    %if ^&&nobs&id %then %do;
4108311    proc datasets lib=work nolist;
4108312    delete _temp&id;
4108313    run;
4108314    quit;
4108315    %end;
4108316    %else %do;
4108317    %let scoreFlag&id = 1;
4108318    data _temp&id;
4108319    set _temp&id;
4108320    where LHS ne NAME and node ne '';
4108321    run;
4108322    %let dsid = %sysfunc(open(_temp&id));
4108323    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4108324    %let dsid = %sysfunc(close(&dsid));
4108325    %if ^&&nobs&id %then %do;
4108326    proc datasets lib=work nolist;
4108327    delete _temp&id;
4108328    run;
4108329    quit;
4108330    %end;
4108331    %else %do;
4108332    proc sort data=_temp&id nodupkey;
4108333    by LHS NAME;
4108334    run;
4108335    %end;
4108336    %end;
4108337    %end;
4108338    %end;
4108339    %mend varDept;
4108340    %macro optCode(outdata=fcmpdata);
4108341    %global fcmpStart;
4108342    %let fcmpStart = 0;
4108343    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4108344    %let NumNodes=9;
4108345    %do k=1 %to &NumNodes;
4108346    %vardept(fcmpdata=&outdata, id=&k);
4108347    %end;
4108348    %mend optCode;
4108349    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 152 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 112 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 83 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4108350    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4108351    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4108352    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4108353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108354    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4108355    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4108356    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4108357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108358    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4108359    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4108359  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4108360    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108361    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4108362    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4108363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4108364    filename _pref
4108364  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
4108365    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4108366    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
4108367   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4108368   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4108369   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4108370   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4108371   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4108372   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4108373   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4108374   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4108375   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4108376   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4108377   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4108378   +LENGTH _WARN_ $4
4108379   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4108380   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4108381   +
4108382   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4108383   +
4108384   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4108385   +
4108386   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4108387   +
4108388   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4108389   +
4108390   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4108391   +
4108392   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4108393   +
4108394   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4108395   +
4108396   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4108397   +
4108398   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4108399   +
4108400   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4108401   +
4108402   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4108403   +
4108404   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4108405   +
4108406   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4108407   +
4108408   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4108409   +
4108410   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4108411   +
4108412   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4108413   +
4108414   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4108415   +
4108416   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4108417   +
4108418   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4108419   +
4108420   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4108421   +
4108422   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4108423   +
4108424   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4108425   +
4108426   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4108427   +
4108428   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4108429   +
4108430   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4108431   +
4108432   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4108433   +
4108434   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4108435   +
4108436   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4108437   +
4108438   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4108439   +
4108440   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4108441   +
4108442   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4108443   +
4108444   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4108445   +
4108446   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4108447   +
4108448   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4108449   +
4108450   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4108451   +
4108452   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4108453   +
4108454   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4108455   +
4108456   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4108457   +
4108458   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4108459   +
4108460   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4108461   +
4108462   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4108463   +
4108464   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4108465   +
4108466   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4108467   +
4108468   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4108469   +
4108470   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4108471   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4108472   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4108473   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4108474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108476   +end;
MPRINT(EM_DIAGRAM):   end;
4108477   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108479   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4108480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108482   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4108483   +   end;
MPRINT(EM_DIAGRAM):   end;
4108484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108485   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4108486   +   end;
MPRINT(EM_DIAGRAM):   end;
4108487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108488   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4108489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108491   +   end;
MPRINT(EM_DIAGRAM):   end;
4108492   +end;
MPRINT(EM_DIAGRAM):   end;
4108493   +
4108494   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4108495   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4108496   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4108497   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4108498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108500   +end;
MPRINT(EM_DIAGRAM):   end;
4108501   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108503   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4108504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108506   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4108507   +   end;
MPRINT(EM_DIAGRAM):   end;
4108508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108509   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4108510   +   end;
MPRINT(EM_DIAGRAM):   end;
4108511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108512   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4108513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108515   +   end;
MPRINT(EM_DIAGRAM):   end;
4108516   +end;
MPRINT(EM_DIAGRAM):   end;
4108517   +
4108518   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4108519   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4108520   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4108521   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4108522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108524   +end;
MPRINT(EM_DIAGRAM):   end;
4108525   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108527   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4108528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108529   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108530   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4108531   +   end;
MPRINT(EM_DIAGRAM):   end;
4108532   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108533   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4108534   +   end;
MPRINT(EM_DIAGRAM):   end;
4108535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108536   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4108537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108539   +   end;
MPRINT(EM_DIAGRAM):   end;
4108540   +end;
MPRINT(EM_DIAGRAM):   end;
4108541   +
4108542   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4108543   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4108544   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4108545   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4108546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108548   +end;
MPRINT(EM_DIAGRAM):   end;
4108549   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108551   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4108552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108553   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108554   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4108555   +   end;
MPRINT(EM_DIAGRAM):   end;
4108556   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108557   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4108558   +   end;
MPRINT(EM_DIAGRAM):   end;
4108559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108560   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4108561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108563   +   end;
MPRINT(EM_DIAGRAM):   end;
4108564   +end;
MPRINT(EM_DIAGRAM):   end;
4108565   +
4108566   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4108567   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4108568   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4108569   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4108570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108572   +end;
MPRINT(EM_DIAGRAM):   end;
4108573   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108574   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108575   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4108576   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108577   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108578   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4108579   +   end;
MPRINT(EM_DIAGRAM):   end;
4108580   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108581   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4108582   +   end;
MPRINT(EM_DIAGRAM):   end;
4108583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108584   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4108585   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108586   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108587   +   end;
MPRINT(EM_DIAGRAM):   end;
4108588   +end;
MPRINT(EM_DIAGRAM):   end;
4108589   +
4108590   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4108591   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4108592   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4108593   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4108594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108596   +end;
MPRINT(EM_DIAGRAM):   end;
4108597   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108599   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4108600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108601   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4108602   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4108603   +   end;
MPRINT(EM_DIAGRAM):   end;
4108604   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4108605   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4108606   +   end;
MPRINT(EM_DIAGRAM):   end;
4108607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108608   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4108609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108611   +   end;
MPRINT(EM_DIAGRAM):   end;
4108612   +end;
MPRINT(EM_DIAGRAM):   end;
4108613   +
4108614   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4108615   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4108616   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4108617   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4108618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108620   +end;
MPRINT(EM_DIAGRAM):   end;
4108621   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108622   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4108623   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4108624   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108625   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4108626   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4108627   +   end;
MPRINT(EM_DIAGRAM):   end;
4108628   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4108629   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4108630   +   end;
MPRINT(EM_DIAGRAM):   end;
4108631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108632   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4108633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108635   +   end;
MPRINT(EM_DIAGRAM):   end;
4108636   +end;
MPRINT(EM_DIAGRAM):   end;
4108637   +
4108638   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4108639   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4108640   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4108641   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4108642   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4108643   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4108644   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4108645   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4108646   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4108647   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4108648   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4108649   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4108650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108652   +end;
MPRINT(EM_DIAGRAM):   end;
4108653   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108654   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4108655   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4108656   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108657   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4108658   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4108659   +   end;
MPRINT(EM_DIAGRAM):   end;
4108660   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4108661   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4108662   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4108663   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4108664   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4108665   +   end;
MPRINT(EM_DIAGRAM):   end;
4108666   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4108667   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4108668   +   end;
MPRINT(EM_DIAGRAM):   end;
4108669   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4108670   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4108671   +   end;
MPRINT(EM_DIAGRAM):   end;
4108672   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4108673   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4108674   +   end;
MPRINT(EM_DIAGRAM):   end;
4108675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108676   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4108677   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4108678   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4108679   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4108680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108682   +   end;
MPRINT(EM_DIAGRAM):   end;
4108683   +end;
MPRINT(EM_DIAGRAM):   end;
4108684   +
4108685   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4108686   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4108687   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4108688   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4108689   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4108690   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4108691   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4108692   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4108693   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4108694   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4108695   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4108696   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4108697   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4108698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4108699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108700   +end;
MPRINT(EM_DIAGRAM):   end;
4108701   +else do;
MPRINT(EM_DIAGRAM):   else do;
4108702   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4108703   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4108704   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4108705   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4108706   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4108707   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4108708   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4108709   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4108710   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4108711   +         end;
MPRINT(EM_DIAGRAM):   end;
4108712   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4108713   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4108714   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4108715   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4108716   +            end;
MPRINT(EM_DIAGRAM):   end;
4108717   +         end;
MPRINT(EM_DIAGRAM):   end;
4108718   +      end;
MPRINT(EM_DIAGRAM):   end;
4108719   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4108720   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4108721   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4108722   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4108723   +         end;
MPRINT(EM_DIAGRAM):   end;
4108724   +      end;
MPRINT(EM_DIAGRAM):   end;
4108725   +   end;
MPRINT(EM_DIAGRAM):   end;
4108726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4108727   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4108728   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4108729   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4108730   +      end;
MPRINT(EM_DIAGRAM):   end;
4108731   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4108732   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4108733   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4108734   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4108735   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4108736   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4108737   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4108738   +         end;
MPRINT(EM_DIAGRAM):   end;
4108739   +      end;
MPRINT(EM_DIAGRAM):   end;
4108740   +   end;
MPRINT(EM_DIAGRAM):   end;
4108741   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4108742   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4108743   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4108744   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4108745   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4108746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4108747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108748   +   end;
MPRINT(EM_DIAGRAM):   end;
4108749   +end;
MPRINT(EM_DIAGRAM):   end;
4108750   +
4108751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108752   +*** Checking missing input Interval
4108753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4108754   +
4108755   +IF NMISS(
4108756   +   AcceptedCmpTotal ,
4108757   +   Age ,
4108758   +   Frq ,
4108759   +   Income ,
4108760   +   Kidhome ,
4108761   +   Mnt ,
4108762   +   MntFishProducts ,
4108763   +   MntFruits ,
4108764   +   MntGoldProds ,
4108765   +   MntMeatProducts ,
4108766   +   MntSweetProducts ,
4108767   +   MntWines ,
4108768   +   MonthsAsCustomer ,
4108769   +   NumCatalogPurchases ,
4108770   +   NumDealsPurchases ,
4108771   +   NumDistPurchases ,
4108772   +   NumStorePurchases ,
4108773   +   NumWebPurchases ,
4108774   +   NumWebVisitsMonth ,
4108775   +   RFMstat ,
4108776   +   RMntFrq ,
4108777   +   Recency ,
4108778   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4108779   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4108780   +
4108781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4108782   +END;
MPRINT(EM_DIAGRAM):   END;
4108783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108784   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4108785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108786   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4108787   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4108788   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4108789   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4108790   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4108791   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4108792   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4108793   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4108794   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4108795   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4108796   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4108797   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4108798   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4108799   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4108800   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4108801   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4108802   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4108803   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4108804   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4108805   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4108806   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4108807   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4108808   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4108809   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4108810   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4108811   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4108812   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4108813   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4108814   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4108815   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4108816   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4108817   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4108818   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4108819   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4108820   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4108821   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4108822   +END;
MPRINT(EM_DIAGRAM):   END;
4108823   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4108824   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4108825   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4108826   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4108827   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4108828   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4108829   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4108830   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4108831   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4108832   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4108833   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4108834   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4108835   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4108836   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4108837   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4108838   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4108839   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4108840   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4108841   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4108842   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4108843   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4108844   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4108845   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4108846   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4108847   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4108848   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4108849   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4108850   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4108851   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4108852   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4108853   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4108854   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4108855   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4108856   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4108857   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4108858   +   ELSE S_NumCatalogPurchases
4108859   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4108860   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4108861   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4108862   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4108863   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4108864   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4108865   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4108866   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4108867   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4108868   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4108869   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4108870   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4108871   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4108872   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4108873   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4108874   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4108875   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4108876   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4108877   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4108878   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4108879   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4108880   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4108881   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4108882   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4108883   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4108884   +END;
MPRINT(EM_DIAGRAM):   END;
4108885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108886   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4108887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108889   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4108890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108892   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4108893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108894   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4108895   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4108896   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4108897   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4108898   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4108899   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4108900   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4108901   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4108902   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4108903   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4108904   +          +     0.09708841024031 * S_NumDealsPurchases
4108905   +          +    -0.29075561032014 * S_NumDistPurchases
4108906   +          +    -0.14495394259873 * S_NumStorePurchases
4108907   +          +     0.11890705145732 * S_NumWebPurchases
4108908   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4108909   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4108910   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4108911   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4108912   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4108913   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4108914   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4108915   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4108916   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4108917   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4108918   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4108919   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4108920   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4108921   +          +     0.16274478997892 * S_NumDealsPurchases
4108922   +          +     0.03966958784582 * S_NumDistPurchases
4108923   +          +    -0.04714110726598 * S_NumStorePurchases
4108924   +          +    -0.02124229528082 * S_NumWebPurchases
4108925   +          +     0.29753299776832 * S_NumWebVisitsMonth
4108926   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4108927   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4108928   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4108929   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4108930   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4108931   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4108932   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4108933   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4108934   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4108935   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4108936   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4108937   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4108938   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4108939   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4108940   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4108941   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4108942   +          +    -0.05037639679806 * Marital_StatusDivorced
4108943   +          +     0.28781968727878 * Marital_StatusMarried
4108944   +          +    -0.20382417074384 * Marital_StatusSingle
4108945   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4108946   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4108947   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4108948   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4108949   +          +     0.06970969219123 * Marital_StatusDivorced
4108950   +          +    -0.15787475744986 * Marital_StatusMarried
4108951   +          +     0.14345344072192 * Marital_StatusSingle
4108952   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4108953   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4108954   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4108955   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4108956   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4108957   +END;
MPRINT(EM_DIAGRAM):   END;
4108958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4108959   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4108960   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4108961   +END;
MPRINT(EM_DIAGRAM):   END;
4108962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108963   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4108964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4108966   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4108967   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4108968   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4108969   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4108970   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4108971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4108972   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4108973   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4108974   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4108975   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4108976   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4108977   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4108978   +END;
MPRINT(EM_DIAGRAM):   END;
4108979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4108980   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4108981   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4108982   +END;
MPRINT(EM_DIAGRAM):   END;
4108983   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4108984   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4108985   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4108986   +END;
MPRINT(EM_DIAGRAM):   END;
4108987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108988   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4108989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4108990   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4108991   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4108992   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4108993   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4108994   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4108995   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4108996   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4108997   +END;
MPRINT(EM_DIAGRAM):   END;
4108998   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4108999   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4109000   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4109001   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4109002    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4109003    quit;
4109004    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4109005    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4109006    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4109007    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
4109008    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4109009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109010    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4109011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109013    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
4109014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109016    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109017    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4109018    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4109019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109020    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
4109021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4109022    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4109023    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109025    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109026    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4109027    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109028    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109029    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4109030    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4109030  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
4109031    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109032    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4109033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109034    filename _pref
4109034  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4109035    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4109036    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4109037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4109038   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4109039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4109040   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4109041   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4109042   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4109043    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4109044    quit;
4109045    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4109046    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4109047    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4109048    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4109049    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4109050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109051    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4109052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109054    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4109055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109058    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4109059    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4109060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109061    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4109062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4109063    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4109064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109066    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109067    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4109068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109069    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109070    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4109071    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4109071  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4109072    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109073    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4109074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109075    filename _pref
4109075  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4109076    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4109077    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4109078   +
4109079   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4109080   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4109080  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4109081   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4109082   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4109083   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4109084   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4109085   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4109086    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4109087    quit;
4109088    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4109089    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4109090    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4109091    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4109092    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4109093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109094    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4109095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109097    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4109098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109100    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109101    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4109102    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4109103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109104    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4109105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109106    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4109107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109109    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109110    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4109111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109112    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109113    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4109114    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4109114  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4109115    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109116    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4109117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109118    filename _pref
4109118  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4109119    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4109120    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4109121   +
4109122   +
4109123   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4109124   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4109125   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4109126   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4109127   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4109128   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109129   +
4109130   +
4109131   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4109132   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4109133   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4109134   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4109135   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4109136   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109137   +
4109138   +
4109139   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4109140   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4109141   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4109142   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4109143   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4109144   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109145   +
4109146   +
4109147   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4109148   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4109149   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4109150   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4109151   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4109152   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109153   +
4109154   +
4109155   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4109156   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4109157   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4109158   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4109159   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4109160   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109161   +
4109162   +
4109163   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4109164   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4109165   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4109166   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4109167   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4109168   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109169   +
4109170   +
4109171   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4109172   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4109173   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4109174   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4109175   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4109176   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109177   +
4109178   +
4109179   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4109180   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4109181   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4109182   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4109183   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4109184   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4109185   +if
4109186   +_FILTERNORM1 not in ( '.')
4109187   + and
4109188   +_FILTERNORM2 not in ( '.')
4109189   + and
4109190   +_FILTERNORM3 not in ( '.')
4109191   + and
4109192   +_FILTERNORM4 not in ( '.')
4109193   + and
4109194   +_FILTERNORM5 not in ( '.')
4109195   + and
4109196   +_FILTERNORM6 not in ( '.')
4109197   + and
4109198   +_FILTERNORM7 not in ( ' ')
4109199   + and
4109200   +_FILTERNORM8 not in ( ' ')
4109201   +and
4109202   +( Dt_Customer ne .)
4109203   +and ( Income ne . and (Income<=107000))
4109204   +and ( Kidhome ne .)
4109205   +and ( MntFishProducts ne .)
4109206   +and ( MntFruits ne .)
4109207   +and ( MntGoldProds ne .)
4109208   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4109209   +and ( MntSweetProducts ne .)
4109210   +and ( MntWines ne .)
4109211   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4109212   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4109213   +and ( NumStorePurchases ne .)
4109214   +and ( NumWebPurchases ne .)
4109215   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4109216   +and ( Recency ne .)
4109217   +and ( Teenhome ne .)
4109218   +and ( Year_Birth ne .)
4109219   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4109220   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4109221   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4109222   +end;
MPRINT(EM_DIAGRAM):   end;
4109223   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4109224   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4109225    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4109226    quit;
4109227    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4109228    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4109229    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4109230    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4109231    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4109232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109233    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4109234    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4109236    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4109237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109239    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109240    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4109241    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4109242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109243    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4109244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4109245    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4109246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109248    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4109249    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4109250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4109251    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109252    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4109253    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4109253  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4109254    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109255    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4109256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109257    %macro varDept(fcmpdata=,id=);
4109258    %global nobs&id scoreFlag&id;
4109259    %let scoreFlag&id = 0;
4109260    %if &id=1 or ^&fcmpStart %then %do;
4109261    proc sort data=&fcmpdata out=_temp&id nodupkey;
4109262    by NAME;
4109263    where id=&id and LHS in( %let j=1;
4109264    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4109265    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4109266    "&var" %let j = %eval(&j+1);
4109267    %end;
4109268    );
4109269    run;
4109270    %let dsid = %sysfunc(open(_temp&id));
4109271    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4109272    %let dsid = %sysfunc(close(&dsid));
4109273    %if &&nobs&id %then %do;
4109274    %let scoreFlag&id = 1;
4109275    %let fcmpStart = 1;
4109276    %end;
4109277    %else %let fcmpStart = 0;
4109278    %end;
4109279    %else %do;
4109280    proc sort data=&fcmpdata out=_tempid;
4109281    where id=&id;
4109282    by LHS;
4109283    run;
4109284    %let dsid = %sysfunc(open(_tempid));
4109285    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4109286    %let dsid = %sysfunc(close(&dsid));
4109287    %if ^&&nobs&id %then %do;
4109288    proc datasets lib=work nolist;
4109289    delete _tempid;
4109290    run;
4109291    quit;
4109292    %end;
4109293    %else %do;
4109294    data _tempAll;
4109295    set %let j=%eval(&id-1);
4109296    %do x=1 %to &j;
4109297    %if &&nobs&x %then %do;
4109298    _temp&x %end;
4109299    %end;
4109300    ;
4109301    run;
4109302    proc sql;
4109303    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4109303  ! work._tempid p2 where p.name=p2.lhs;
4109304    quit;
4109305    data _temp&id;
4109306    set _temp&id;
4109307    where LHS ne '' and NAME ne '' and Node ne '';
4109308    run;
4109309    proc datasets lib=work nolist;
4109310    delete _tempAll;
4109311    run;
4109312    %let dsid = %sysfunc(open(_temp&id));
4109313    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4109314    %let dsid = %sysfunc(close(&dsid));
4109315    %if ^&&nobs&id %then %do;
4109316    proc datasets lib=work nolist;
4109317    delete _temp&id;
4109318    run;
4109319    quit;
4109320    %end;
4109321    %else %do;
4109322    %let scoreFlag&id = 1;
4109323    data _temp&id;
4109324    set _temp&id;
4109325    where LHS ne NAME and node ne '';
4109326    run;
4109327    %let dsid = %sysfunc(open(_temp&id));
4109328    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4109329    %let dsid = %sysfunc(close(&dsid));
4109330    %if ^&&nobs&id %then %do;
4109331    proc datasets lib=work nolist;
4109332    delete _temp&id;
4109333    run;
4109334    quit;
4109335    %end;
4109336    %else %do;
4109337    proc sort data=_temp&id nodupkey;
4109338    by LHS NAME;
4109339    run;
4109340    %end;
4109341    %end;
4109342    %end;
4109343    %end;
4109344    %mend varDept;
4109345    %macro optCode(outdata=fcmpdata);
4109346    %global fcmpStart;
4109347    %let fcmpStart = 0;
4109348    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4109349    %let NumNodes=9;
4109350    %do k=1 %to &NumNodes;
4109351    %vardept(fcmpdata=&outdata, id=&k);
4109352    %end;
4109353    %mend optCode;
4109354    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4109355    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4109356    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4109357    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4109358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109359    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4109360    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4109361    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4109362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109363    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4109364    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4109364  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4109365    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4109366    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4109367    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4109368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4109369    filename _pref
4109369  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
4109370    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4109371    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
4109372   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4109373   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4109374   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4109375   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4109376   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4109377   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4109378   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4109379   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4109380   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4109381   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4109382   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4109383   +LENGTH _WARN_ $4
4109384   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4109385   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4109386   +
4109387   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4109388   +
4109389   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4109390   +
4109391   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4109392   +
4109393   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4109394   +
4109395   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4109396   +
4109397   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4109398   +
4109399   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4109400   +
4109401   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4109402   +
4109403   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4109404   +
4109405   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4109406   +
4109407   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4109408   +
4109409   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4109410   +
4109411   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4109412   +
4109413   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4109414   +
4109415   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4109416   +
4109417   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4109418   +
4109419   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4109420   +
4109421   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4109422   +
4109423   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4109424   +
4109425   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4109426   +
4109427   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4109428   +
4109429   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4109430   +
4109431   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4109432   +
4109433   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4109434   +
4109435   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4109436   +
4109437   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4109438   +
4109439   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4109440   +
4109441   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4109442   +
4109443   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4109444   +
4109445   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4109446   +
4109447   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4109448   +
4109449   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4109450   +
4109451   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4109452   +
4109453   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4109454   +
4109455   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4109456   +
4109457   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4109458   +
4109459   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4109460   +
4109461   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4109462   +
4109463   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4109464   +
4109465   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4109466   +
4109467   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4109468   +
4109469   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4109470   +
4109471   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4109472   +
4109473   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4109474   +
4109475   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4109476   +
4109477   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4109478   +
4109479   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4109480   +
4109481   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4109482   +
4109483   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4109484   +
4109485   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4109486   +
4109487   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4109488   +
4109489   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4109490   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4109491   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4109492   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4109493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109495   +end;
MPRINT(EM_DIAGRAM):   end;
4109496   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109498   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4109499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109501   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4109502   +   end;
MPRINT(EM_DIAGRAM):   end;
4109503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109504   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4109505   +   end;
MPRINT(EM_DIAGRAM):   end;
4109506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109507   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4109508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109510   +   end;
MPRINT(EM_DIAGRAM):   end;
4109511   +end;
MPRINT(EM_DIAGRAM):   end;
4109512   +
4109513   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4109514   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4109515   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4109516   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4109517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109519   +end;
MPRINT(EM_DIAGRAM):   end;
4109520   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109522   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4109523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109525   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4109526   +   end;
MPRINT(EM_DIAGRAM):   end;
4109527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109528   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4109529   +   end;
MPRINT(EM_DIAGRAM):   end;
4109530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109531   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4109532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109534   +   end;
MPRINT(EM_DIAGRAM):   end;
4109535   +end;
MPRINT(EM_DIAGRAM):   end;
4109536   +
4109537   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4109538   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4109539   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4109540   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4109541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109543   +end;
MPRINT(EM_DIAGRAM):   end;
4109544   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109546   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4109547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109549   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4109550   +   end;
MPRINT(EM_DIAGRAM):   end;
4109551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109552   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4109553   +   end;
MPRINT(EM_DIAGRAM):   end;
4109554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109555   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4109556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109558   +   end;
MPRINT(EM_DIAGRAM):   end;
4109559   +end;
MPRINT(EM_DIAGRAM):   end;
4109560   +
4109561   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4109562   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4109563   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4109564   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4109565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109567   +end;
MPRINT(EM_DIAGRAM):   end;
4109568   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109570   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4109571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109573   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4109574   +   end;
MPRINT(EM_DIAGRAM):   end;
4109575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109576   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4109577   +   end;
MPRINT(EM_DIAGRAM):   end;
4109578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109579   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4109580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109582   +   end;
MPRINT(EM_DIAGRAM):   end;
4109583   +end;
MPRINT(EM_DIAGRAM):   end;
4109584   +
4109585   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4109586   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4109587   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4109588   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4109589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109591   +end;
MPRINT(EM_DIAGRAM):   end;
4109592   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109594   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4109595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109597   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4109598   +   end;
MPRINT(EM_DIAGRAM):   end;
4109599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109600   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4109601   +   end;
MPRINT(EM_DIAGRAM):   end;
4109602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109603   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4109604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109606   +   end;
MPRINT(EM_DIAGRAM):   end;
4109607   +end;
MPRINT(EM_DIAGRAM):   end;
4109608   +
4109609   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4109610   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4109611   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4109612   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4109613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109615   +end;
MPRINT(EM_DIAGRAM):   end;
4109616   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109618   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4109619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109620   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4109621   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4109622   +   end;
MPRINT(EM_DIAGRAM):   end;
4109623   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4109624   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4109625   +   end;
MPRINT(EM_DIAGRAM):   end;
4109626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109627   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4109628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109630   +   end;
MPRINT(EM_DIAGRAM):   end;
4109631   +end;
MPRINT(EM_DIAGRAM):   end;
4109632   +
4109633   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4109634   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4109635   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4109636   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4109637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109639   +end;
MPRINT(EM_DIAGRAM):   end;
4109640   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109641   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4109642   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4109643   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109644   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4109645   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4109646   +   end;
MPRINT(EM_DIAGRAM):   end;
4109647   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4109648   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4109649   +   end;
MPRINT(EM_DIAGRAM):   end;
4109650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109651   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4109652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109654   +   end;
MPRINT(EM_DIAGRAM):   end;
4109655   +end;
MPRINT(EM_DIAGRAM):   end;
4109656   +
4109657   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4109658   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4109659   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4109660   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4109661   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4109662   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4109663   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4109664   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4109665   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4109666   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4109667   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4109668   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4109669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109671   +end;
MPRINT(EM_DIAGRAM):   end;
4109672   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109673   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4109674   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4109675   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109676   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4109677   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4109678   +   end;
MPRINT(EM_DIAGRAM):   end;
4109679   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4109680   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4109681   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4109682   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4109683   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4109684   +   end;
MPRINT(EM_DIAGRAM):   end;
4109685   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4109686   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4109687   +   end;
MPRINT(EM_DIAGRAM):   end;
4109688   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4109689   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4109690   +   end;
MPRINT(EM_DIAGRAM):   end;
4109691   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4109692   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4109693   +   end;
MPRINT(EM_DIAGRAM):   end;
4109694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109695   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4109696   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4109697   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4109698   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4109699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109701   +   end;
MPRINT(EM_DIAGRAM):   end;
4109702   +end;
MPRINT(EM_DIAGRAM):   end;
4109703   +
4109704   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4109705   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4109706   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4109707   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4109708   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4109709   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4109710   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4109711   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4109712   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4109713   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4109714   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4109715   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4109716   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4109717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4109718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109719   +end;
MPRINT(EM_DIAGRAM):   end;
4109720   +else do;
MPRINT(EM_DIAGRAM):   else do;
4109721   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4109722   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4109723   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4109724   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4109725   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4109726   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4109727   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4109728   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4109729   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4109730   +         end;
MPRINT(EM_DIAGRAM):   end;
4109731   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4109732   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4109733   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4109734   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4109735   +            end;
MPRINT(EM_DIAGRAM):   end;
4109736   +         end;
MPRINT(EM_DIAGRAM):   end;
4109737   +      end;
MPRINT(EM_DIAGRAM):   end;
4109738   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4109739   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4109740   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4109741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4109742   +         end;
MPRINT(EM_DIAGRAM):   end;
4109743   +      end;
MPRINT(EM_DIAGRAM):   end;
4109744   +   end;
MPRINT(EM_DIAGRAM):   end;
4109745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4109746   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4109747   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4109748   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4109749   +      end;
MPRINT(EM_DIAGRAM):   end;
4109750   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4109751   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4109752   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4109753   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4109754   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4109755   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4109756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4109757   +         end;
MPRINT(EM_DIAGRAM):   end;
4109758   +      end;
MPRINT(EM_DIAGRAM):   end;
4109759   +   end;
MPRINT(EM_DIAGRAM):   end;
4109760   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4109761   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4109762   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4109763   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4109764   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4109765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4109766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109767   +   end;
MPRINT(EM_DIAGRAM):   end;
4109768   +end;
MPRINT(EM_DIAGRAM):   end;
4109769   +
4109770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109771   +*** Checking missing input Interval
4109772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4109773   +
4109774   +IF NMISS(
4109775   +   AcceptedCmpTotal ,
4109776   +   Age ,
4109777   +   Frq ,
4109778   +   Income ,
4109779   +   Kidhome ,
4109780   +   Mnt ,
4109781   +   MntFishProducts ,
4109782   +   MntFruits ,
4109783   +   MntGoldProds ,
4109784   +   MntMeatProducts ,
4109785   +   MntSweetProducts ,
4109786   +   MntWines ,
4109787   +   MonthsAsCustomer ,
4109788   +   NumCatalogPurchases ,
4109789   +   NumDealsPurchases ,
4109790   +   NumDistPurchases ,
4109791   +   NumStorePurchases ,
4109792   +   NumWebPurchases ,
4109793   +   NumWebVisitsMonth ,
4109794   +   RFMstat ,
4109795   +   RMntFrq ,
4109796   +   Recency ,
4109797   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4109798   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4109799   +
4109800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4109801   +END;
MPRINT(EM_DIAGRAM):   END;
4109802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109803   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4109804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4109806   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4109807   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4109808   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4109809   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4109810   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4109811   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4109812   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4109813   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4109814   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4109815   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4109816   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4109817   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4109818   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4109819   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4109820   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4109821   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4109822   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4109823   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4109824   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4109825   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4109826   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4109827   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4109828   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4109829   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4109830   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4109831   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4109832   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4109833   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4109834   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4109835   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4109836   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4109837   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4109838   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4109839   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4109840   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4109841   +END;
MPRINT(EM_DIAGRAM):   END;
4109842   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4109843   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4109844   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4109845   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4109846   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4109847   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4109848   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4109849   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4109850   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4109851   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4109852   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4109853   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4109854   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4109855   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4109856   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4109857   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4109858   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4109859   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4109860   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4109861   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4109862   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4109863   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4109864   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4109865   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4109866   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4109867   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4109868   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4109869   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4109870   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4109871   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4109872   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4109873   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4109874   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4109875   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4109876   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4109877   +   ELSE S_NumCatalogPurchases
4109878   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4109879   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4109880   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4109881   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4109882   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4109883   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4109884   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4109885   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4109886   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4109887   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4109888   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4109889   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4109890   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4109891   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4109892   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4109893   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4109894   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4109895   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4109896   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4109897   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4109898   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4109899   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4109900   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4109901   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4109902   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4109903   +END;
MPRINT(EM_DIAGRAM):   END;
4109904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109905   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4109906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109908   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4109909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109911   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4109912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4109914   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4109915   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4109916   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4109917   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4109918   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4109919   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4109920   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4109921   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4109922   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4109923   +          +     0.76573417773216 * S_NumDealsPurchases
4109924   +          +     0.22648400529885 * S_NumDistPurchases
4109925   +          +     1.21720286527592 * S_NumStorePurchases
4109926   +          +     0.60948566229097 * S_NumWebPurchases
4109927   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4109928   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4109929   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4109930   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4109931   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4109932   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4109933   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4109934   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4109935   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4109936   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4109937   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4109938   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4109939   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4109940   +          +    -1.52828428070828 * S_NumDealsPurchases
4109941   +          +    -0.01775178145113 * S_NumDistPurchases
4109942   +          +     1.11531198663491 * S_NumStorePurchases
4109943   +          +     1.79501098452904 * S_NumWebPurchases
4109944   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4109945   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4109946   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4109947   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4109948   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4109949   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4109950   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4109951   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4109952   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4109953   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4109954   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4109955   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4109956   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4109957   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4109958   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4109959   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4109960   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4109961   +          +    -1.56926331102732 * Marital_StatusDivorced
4109962   +          +     2.38562782588323 * Marital_StatusMarried
4109963   +          +    -1.91012008029228 * Marital_StatusSingle
4109964   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4109965   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4109966   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4109967   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4109968   +          +     0.39329538853368 * Marital_StatusDivorced
4109969   +          +       0.055543492668 * Marital_StatusMarried
4109970   +          +    -0.36260663573441 * Marital_StatusSingle
4109971   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4109972   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4109973   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4109974   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4109975   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4109976   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4109977   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4109978   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4109979   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4109980   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4109981   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4109982   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4109983   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4109984   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4109985   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4109986   +END;
MPRINT(EM_DIAGRAM):   END;
4109987   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4109988   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4109989   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4109990   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4109991   +END;
MPRINT(EM_DIAGRAM):   END;
4109992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109993   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4109994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4109995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4109996   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4109997   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4109998   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4109999   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4110000   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4110001   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4110002   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4110003   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4110004   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4110005   +          +    -0.41717905931734 * S_NumDealsPurchases
4110006   +          +    -0.48750443671176 * S_NumDistPurchases
4110007   +          +      1.9775770151507 * S_NumStorePurchases
4110008   +          +    -0.43534422425416 * S_NumWebPurchases
4110009   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4110010   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4110011   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4110012   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4110013   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4110014   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4110015   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4110016   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4110017   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4110018   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4110019   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4110020   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4110021   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4110022   +          +     0.76267091632012 * S_NumDealsPurchases
4110023   +          +     1.55118513069849 * S_NumDistPurchases
4110024   +          +       1.649962776028 * S_NumStorePurchases
4110025   +          +    -0.27453335733875 * S_NumWebPurchases
4110026   +          +     0.26599210649756 * S_NumWebVisitsMonth
4110027   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4110028   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4110029   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4110030   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4110031   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4110032   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4110033   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4110034   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4110035   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4110036   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4110037   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4110038   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4110039   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4110040   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4110041   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4110042   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4110043   +          +    -1.84502099308633 * Marital_StatusDivorced
4110044   +          +     0.16524535969204 * Marital_StatusMarried
4110045   +          +     0.01375012857393 * Marital_StatusSingle
4110046   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4110047   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4110048   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4110049   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4110050   +          +     0.18210930140238 * Marital_StatusDivorced
4110051   +          +    -1.49615662968181 * Marital_StatusMarried
4110052   +          +     1.61043484549536 * Marital_StatusSingle
4110053   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4110054   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4110055   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4110056   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4110057   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4110058   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4110059   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4110060   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4110061   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4110062   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4110063   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4110064   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4110065   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4110066   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4110067   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4110068   +END;
MPRINT(EM_DIAGRAM):   END;
4110069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4110070   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4110071   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4110072   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4110073   +END;
MPRINT(EM_DIAGRAM):   END;
4110074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110075   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4110076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110077   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4110078   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4110079   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4110080   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4110081   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4110082   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4110083   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4110084   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4110085   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4110086   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4110087   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4110088   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4110089   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
The SAS System
 
4110090   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4110091   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4110092   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4110093   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4110094   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4110095   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4110096   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4110097   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4110098   +END;
MPRINT(EM_DIAGRAM):   END;
4110099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4110100   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4110101   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4110102   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4110103   +END;
MPRINT(EM_DIAGRAM):   END;
4110104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110105   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4110106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110107   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4110108   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4110109   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4110110   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4110111   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4110112   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4110113   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4110114   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4110115   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4110116   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4110117   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4110118   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4110119   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4110120   +END;
MPRINT(EM_DIAGRAM):   END;
4110121   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4110122   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4110123   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4110124   +END;
MPRINT(EM_DIAGRAM):   END;
4110125   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4110126   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4110127   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4110128   +END;
MPRINT(EM_DIAGRAM):   END;
4110129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110130   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4110131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110132   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4110133   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4110134   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4110135   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4110136   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4110137   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4110138   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4110139   +END;
MPRINT(EM_DIAGRAM):   END;
4110140   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4110141   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4110142   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4110143   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4110144    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4110145    quit;
4110146    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4110147    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4110148    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4110149    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
4110150    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4110151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110152    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4110153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110155    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME
CREATOR);
4110156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110158    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110159    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4110160    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4110161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110162    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
4110163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4110164    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4110165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110167    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110168    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4110169    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110170    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 62 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110171    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4110172    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4110172  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2103 rows and 5 columns.
 
4110173    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110174    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4110175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2103 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110176    filename _pref
4110176  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4110177    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4110178    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4110179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4110180   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4110181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4110182   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4110183   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4110184   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4110185    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4110186    quit;
4110187    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4110188    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4110189    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4110190    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4110191    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4110192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110193    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4110194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110196    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4110197    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110199    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110200    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4110201    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4110202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110203    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4110204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4110205    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4110206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110208    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110209    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4110210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110211    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110212    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4110213    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4110213  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4110214    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110215    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4110216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2107 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110217    filename _pref
4110217  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4110218    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4110219    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4110220   +
4110221   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4110222   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4110222  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4110223   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4110224   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4110225   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4110226   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4110227   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4110228    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4110229    quit;
4110230    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4110231    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4110232    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4110233    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4110234    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4110235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110236    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4110237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110239    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4110240    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110242    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110243    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4110244    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4110245    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4110246    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4110247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110248    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4110249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110251    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110252    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4110253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110254    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110255    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4110256    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4110256  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4110257    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110258    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4110259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110260    filename _pref
4110260  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4110261    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4110262    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4110263   +
4110264   +
4110265   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4110266   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4110267   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4110268   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4110269   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4110270   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110271   +
4110272   +
4110273   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4110274   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4110275   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4110276   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4110277   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4110278   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110279   +
4110280   +
4110281   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4110282   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4110283   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4110284   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4110285   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4110286   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110287   +
4110288   +
4110289   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4110290   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4110291   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4110292   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4110293   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4110294   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110295   +
4110296   +
4110297   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4110298   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4110299   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4110300   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4110301   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4110302   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110303   +
4110304   +
4110305   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4110306   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4110307   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4110308   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4110309   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4110310   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110311   +
4110312   +
4110313   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4110314   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4110315   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4110316   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4110317   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4110318   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110319   +
4110320   +
4110321   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4110322   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4110323   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4110324   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4110325   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4110326   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4110327   +if
4110328   +_FILTERNORM1 not in ( '.')
4110329   + and
4110330   +_FILTERNORM2 not in ( '.')
4110331   + and
4110332   +_FILTERNORM3 not in ( '.')
4110333   + and
4110334   +_FILTERNORM4 not in ( '.')
4110335   + and
4110336   +_FILTERNORM5 not in ( '.')
4110337   + and
4110338   +_FILTERNORM6 not in ( '.')
4110339   + and
4110340   +_FILTERNORM7 not in ( ' ')
4110341   + and
4110342   +_FILTERNORM8 not in ( ' ')
4110343   +and
4110344   +( Dt_Customer ne .)
4110345   +and ( Income ne . and (Income<=107000))
4110346   +and ( Kidhome ne .)
4110347   +and ( MntFishProducts ne .)
4110348   +and ( MntFruits ne .)
4110349   +and ( MntGoldProds ne .)
4110350   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4110351   +and ( MntSweetProducts ne .)
4110352   +and ( MntWines ne .)
4110353   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4110354   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4110355   +and ( NumStorePurchases ne .)
4110356   +and ( NumWebPurchases ne .)
4110357   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4110358   +and ( Recency ne .)
4110359   +and ( Teenhome ne .)
4110360   +and ( Year_Birth ne .)
4110361   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4110362   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4110363   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4110364   +end;
MPRINT(EM_DIAGRAM):   end;
4110365   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4110366   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4110367    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4110368    quit;
4110369    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4110370    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4110371    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4110372    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4110373    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4110374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110375    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4110376    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110378    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4110379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110381    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110382    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4110383    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4110384    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4110385    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4110386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4110387    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4110388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110390    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4110391    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4110392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4110393    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110394    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4110395    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4110395  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4110396    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110397    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4110398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 2212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110399    %macro varDept(fcmpdata=,id=);
4110400    %global nobs&id scoreFlag&id;
4110401    %let scoreFlag&id = 0;
4110402    %if &id=1 or ^&fcmpStart %then %do;
4110403    proc sort data=&fcmpdata out=_temp&id nodupkey;
4110404    by NAME;
4110405    where id=&id and LHS in( %let j=1;
4110406    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4110407    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4110408    "&var" %let j = %eval(&j+1);
4110409    %end;
4110410    );
4110411    run;
4110412    %let dsid = %sysfunc(open(_temp&id));
4110413    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4110414    %let dsid = %sysfunc(close(&dsid));
4110415    %if &&nobs&id %then %do;
4110416    %let scoreFlag&id = 1;
4110417    %let fcmpStart = 1;
4110418    %end;
4110419    %else %let fcmpStart = 0;
4110420    %end;
4110421    %else %do;
4110422    proc sort data=&fcmpdata out=_tempid;
4110423    where id=&id;
4110424    by LHS;
4110425    run;
4110426    %let dsid = %sysfunc(open(_tempid));
4110427    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4110428    %let dsid = %sysfunc(close(&dsid));
4110429    %if ^&&nobs&id %then %do;
4110430    proc datasets lib=work nolist;
4110431    delete _tempid;
4110432    run;
4110433    quit;
4110434    %end;
4110435    %else %do;
4110436    data _tempAll;
4110437    set %let j=%eval(&id-1);
4110438    %do x=1 %to &j;
4110439    %if &&nobs&x %then %do;
4110440    _temp&x %end;
4110441    %end;
4110442    ;
4110443    run;
4110444    proc sql;
4110445    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4110445  ! work._tempid p2 where p.name=p2.lhs;
4110446    quit;
4110447    data _temp&id;
4110448    set _temp&id;
4110449    where LHS ne '' and NAME ne '' and Node ne '';
4110450    run;
4110451    proc datasets lib=work nolist;
4110452    delete _tempAll;
4110453    run;
4110454    %let dsid = %sysfunc(open(_temp&id));
4110455    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4110456    %let dsid = %sysfunc(close(&dsid));
4110457    %if ^&&nobs&id %then %do;
4110458    proc datasets lib=work nolist;
4110459    delete _temp&id;
4110460    run;
4110461    quit;
4110462    %end;
4110463    %else %do;
4110464    %let scoreFlag&id = 1;
4110465    data _temp&id;
4110466    set _temp&id;
4110467    where LHS ne NAME and node ne '';
4110468    run;
4110469    %let dsid = %sysfunc(open(_temp&id));
4110470    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4110471    %let dsid = %sysfunc(close(&dsid));
4110472    %if ^&&nobs&id %then %do;
4110473    proc datasets lib=work nolist;
4110474    delete _temp&id;
4110475    run;
4110476    quit;
4110477    %end;
4110478    %else %do;
4110479    proc sort data=_temp&id nodupkey;
4110480    by LHS NAME;
4110481    run;
4110482    %end;
4110483    %end;
4110484    %end;
4110485    %end;
4110486    %mend varDept;
4110487    %macro optCode(outdata=fcmpdata);
4110488    %global fcmpStart;
4110489    %let fcmpStart = 0;
4110490    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4110491    %let NumNodes=9;
4110492    %do k=1 %to &NumNodes;
4110493    %vardept(fcmpdata=&outdata, id=&k);
4110494    %end;
4110495    %mend optCode;
4110496    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 161 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 118 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 43 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 43 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 86 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4110497    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4110498    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4110499    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4110500    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110501    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4110502    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4110503    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4110504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4110505    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4110506    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4110506  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4110507    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4110508    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4110509    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4110510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4110511    filename _pref
4110511  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
4110512    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4110513    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
4110514   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4110515   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4110516   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4110517   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4110518   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4110519   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4110520   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4110521   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4110522   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4110523   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4110524   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4110525   +LENGTH _WARN_ $4
4110526   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4110527   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4110528   +
4110529   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4110530   +
4110531   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4110532   +
4110533   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4110534   +
4110535   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4110536   +
4110537   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4110538   +
4110539   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4110540   +
4110541   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4110542   +
4110543   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4110544   +
4110545   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4110546   +
4110547   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4110548   +
4110549   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4110550   +
4110551   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4110552   +
4110553   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4110554   +
4110555   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4110556   +
4110557   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4110558   +
4110559   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4110560   +
4110561   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4110562   +
4110563   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4110564   +
4110565   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4110566   +
4110567   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4110568   +
4110569   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4110570   +
4110571   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4110572   +
4110573   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4110574   +
4110575   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4110576   +
4110577   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4110578   +
4110579   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4110580   +
4110581   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4110582   +
4110583   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4110584   +
4110585   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4110586   +
4110587   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4110588   +
4110589   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4110590   +
4110591   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4110592   +
4110593   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4110594   +
4110595   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4110596   +
4110597   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4110598   +
4110599   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4110600   +
4110601   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4110602   +
4110603   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4110604   +
4110605   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4110606   +
4110607   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4110608   +
4110609   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4110610   +
4110611   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4110612   +
4110613   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4110614   +
4110615   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4110616   +
4110617   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4110618   +
4110619   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4110620   +
4110621   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4110622   +
4110623   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4110624   +
4110625   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4110626   +
4110627   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4110628   +
4110629   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4110630   +
4110631   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4110632   +
4110633   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4110634   +
4110635   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4110636   +
4110637   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4110638   +
4110639   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4110640   +
4110641   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4110642   +
4110643   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4110644   +
4110645   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4110646   +
4110647   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4110648   +
4110649   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4110650   +
4110651   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4110652   +
4110653   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4110654   +
4110655   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4110656   +
4110657   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4110658   +
4110659   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4110660   +
4110661   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4110662   +
4110663   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4110664   +
4110665   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4110666   +
4110667   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4110668   +
4110669   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4110670   +
4110671   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4110672   +
4110673   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4110674   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4110675   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4110676   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4110677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110679   +end;
MPRINT(EM_DIAGRAM):   end;
4110680   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110682   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4110683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110684   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110685   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4110686   +   end;
MPRINT(EM_DIAGRAM):   end;
4110687   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110688   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4110689   +   end;
MPRINT(EM_DIAGRAM):   end;
4110690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110691   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4110692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110694   +   end;
MPRINT(EM_DIAGRAM):   end;
4110695   +end;
MPRINT(EM_DIAGRAM):   end;
4110696   +
4110697   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4110698   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4110699   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4110700   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4110701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110703   +end;
MPRINT(EM_DIAGRAM):   end;
4110704   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110706   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4110707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110708   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110709   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4110710   +   end;
MPRINT(EM_DIAGRAM):   end;
4110711   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110712   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4110713   +   end;
MPRINT(EM_DIAGRAM):   end;
4110714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110715   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4110716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110718   +   end;
MPRINT(EM_DIAGRAM):   end;
4110719   +end;
MPRINT(EM_DIAGRAM):   end;
4110720   +
4110721   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4110722   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4110723   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4110724   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4110725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110727   +end;
MPRINT(EM_DIAGRAM):   end;
4110728   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110730   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4110731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110732   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110733   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4110734   +   end;
MPRINT(EM_DIAGRAM):   end;
4110735   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110736   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4110737   +   end;
MPRINT(EM_DIAGRAM):   end;
4110738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110739   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4110740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110742   +   end;
MPRINT(EM_DIAGRAM):   end;
4110743   +end;
MPRINT(EM_DIAGRAM):   end;
4110744   +
4110745   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4110746   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4110747   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4110748   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4110749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110751   +end;
MPRINT(EM_DIAGRAM):   end;
4110752   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110754   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4110755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110757   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4110758   +   end;
MPRINT(EM_DIAGRAM):   end;
4110759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110760   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4110761   +   end;
MPRINT(EM_DIAGRAM):   end;
4110762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110763   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4110764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110766   +   end;
MPRINT(EM_DIAGRAM):   end;
4110767   +end;
MPRINT(EM_DIAGRAM):   end;
4110768   +
4110769   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4110770   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4110771   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4110772   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4110773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110775   +end;
MPRINT(EM_DIAGRAM):   end;
4110776   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110778   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4110779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110781   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4110782   +   end;
MPRINT(EM_DIAGRAM):   end;
4110783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110784   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4110785   +   end;
MPRINT(EM_DIAGRAM):   end;
4110786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110787   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4110788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110790   +   end;
MPRINT(EM_DIAGRAM):   end;
4110791   +end;
MPRINT(EM_DIAGRAM):   end;
4110792   +
4110793   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4110794   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4110795   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4110796   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4110797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110799   +end;
MPRINT(EM_DIAGRAM):   end;
4110800   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110802   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4110803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4110805   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4110806   +   end;
MPRINT(EM_DIAGRAM):   end;
4110807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4110808   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4110809   +   end;
MPRINT(EM_DIAGRAM):   end;
4110810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110811   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4110812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110814   +   end;
MPRINT(EM_DIAGRAM):   end;
4110815   +end;
MPRINT(EM_DIAGRAM):   end;
4110816   +
4110817   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4110818   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4110819   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4110820   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4110821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110823   +end;
MPRINT(EM_DIAGRAM):   end;
4110824   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4110826   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4110827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110828   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4110829   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4110830   +   end;
MPRINT(EM_DIAGRAM):   end;
4110831   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4110832   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4110833   +   end;
MPRINT(EM_DIAGRAM):   end;
4110834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110835   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4110836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110838   +   end;
MPRINT(EM_DIAGRAM):   end;
4110839   +end;
MPRINT(EM_DIAGRAM):   end;
4110840   +
4110841   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4110842   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4110843   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4110844   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4110845   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4110846   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4110847   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4110848   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4110849   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4110850   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4110851   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4110852   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4110853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110855   +end;
MPRINT(EM_DIAGRAM):   end;
4110856   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110857   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4110858   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4110859   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110860   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4110861   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4110862   +   end;
MPRINT(EM_DIAGRAM):   end;
4110863   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4110864   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4110865   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4110866   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4110867   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4110868   +   end;
MPRINT(EM_DIAGRAM):   end;
4110869   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4110870   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4110871   +   end;
MPRINT(EM_DIAGRAM):   end;
4110872   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4110873   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4110874   +   end;
MPRINT(EM_DIAGRAM):   end;
4110875   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4110876   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4110877   +   end;
MPRINT(EM_DIAGRAM):   end;
4110878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110879   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4110880   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4110881   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4110882   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4110883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110885   +   end;
MPRINT(EM_DIAGRAM):   end;
4110886   +end;
MPRINT(EM_DIAGRAM):   end;
4110887   +
4110888   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4110889   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4110890   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4110891   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4110892   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4110893   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4110894   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4110895   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4110896   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4110897   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4110898   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4110899   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4110900   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4110901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4110902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110903   +end;
MPRINT(EM_DIAGRAM):   end;
4110904   +else do;
MPRINT(EM_DIAGRAM):   else do;
4110905   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4110906   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4110907   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4110908   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4110909   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4110910   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4110911   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4110912   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4110913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4110914   +         end;
MPRINT(EM_DIAGRAM):   end;
4110915   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4110916   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4110917   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4110918   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4110919   +            end;
MPRINT(EM_DIAGRAM):   end;
4110920   +         end;
MPRINT(EM_DIAGRAM):   end;
4110921   +      end;
MPRINT(EM_DIAGRAM):   end;
4110922   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4110923   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4110924   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4110925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4110926   +         end;
MPRINT(EM_DIAGRAM):   end;
4110927   +      end;
MPRINT(EM_DIAGRAM):   end;
4110928   +   end;
MPRINT(EM_DIAGRAM):   end;
4110929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4110930   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4110931   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4110932   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4110933   +      end;
MPRINT(EM_DIAGRAM):   end;
4110934   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4110935   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4110936   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4110937   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4110938   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4110939   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4110940   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4110941   +         end;
MPRINT(EM_DIAGRAM):   end;
4110942   +      end;
MPRINT(EM_DIAGRAM):   end;
4110943   +   end;
MPRINT(EM_DIAGRAM):   end;
4110944   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4110945   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4110946   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4110947   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4110948   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4110949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4110950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110951   +   end;
MPRINT(EM_DIAGRAM):   end;
4110952   +end;
MPRINT(EM_DIAGRAM):   end;
4110953   +
4110954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110955   +*** Checking missing input Interval
4110956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4110957   +
4110958   +IF NMISS(
4110959   +   AcceptedCmpTotal ,
4110960   +   Age ,
4110961   +   Frq ,
4110962   +   Income ,
4110963   +   Kidhome ,
4110964   +   Mnt ,
4110965   +   MntFishProducts ,
4110966   +   MntFruits ,
4110967   +   MntGoldProds ,
4110968   +   MntMeatProducts ,
4110969   +   MntSweetProducts ,
4110970   +   MntWines ,
4110971   +   MonthsAsCustomer ,
4110972   +   NumCatalogPurchases ,
4110973   +   NumDealsPurchases ,
4110974   +   NumDistPurchases ,
4110975   +   NumStorePurchases ,
4110976   +   NumWebPurchases ,
4110977   +   NumWebVisitsMonth ,
4110978   +   RFMstat ,
4110979   +   RMntFrq ,
4110980   +   Recency ,
4110981   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4110982   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4110983   +
4110984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4110985   +END;
MPRINT(EM_DIAGRAM):   END;
4110986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110987   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4110988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4110989   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4110990   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4110991   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4110992   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4110993   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4110994   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4110995   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4110996   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4110997   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4110998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4110999   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4111000   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4111001   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4111002   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4111003   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4111004   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4111005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4111006   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4111007   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4111008   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4111009   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4111010   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4111011   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4111012   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4111013   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4111014   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4111015   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4111016   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4111017   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4111018   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4111019   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4111020   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4111021   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4111022   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4111023   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4111024   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4111025   +END;
MPRINT(EM_DIAGRAM):   END;
4111026   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111027   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4111028   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4111029   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4111030   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4111031   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4111032   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4111033   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4111034   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4111035   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4111036   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4111037   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4111038   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4111039   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4111040   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4111041   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4111042   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4111043   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4111044   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4111045   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4111046   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4111047   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4111048   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4111049   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4111050   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4111051   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4111052   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4111053   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4111054   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4111055   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4111056   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4111057   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4111058   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4111059   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4111060   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4111061   +   ELSE S_NumCatalogPurchases
4111062   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4111063   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4111064   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4111065   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4111066   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4111067   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4111068   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4111069   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4111070   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4111071   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4111072   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4111073   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4111074   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4111075   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4111076   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4111077   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4111078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4111079   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4111080   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4111081   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4111082   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4111083   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4111084   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4111085   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4111086   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4111087   +END;
MPRINT(EM_DIAGRAM):   END;
4111088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111089   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4111090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111092   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4111093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111095   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4111096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111098   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4111099   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4111100   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4111101   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4111102   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4111103   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4111104   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4111105   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4111106   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4111107   +          +     3.45371614080196 * S_NumDealsPurchases
4111108   +          +     0.19118374544537 * S_NumDistPurchases
4111109   +          +    -2.45138001446793 * S_NumStorePurchases
4111110   +          +    -0.11424280244155 * S_NumWebPurchases
4111111   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4111112   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4111113   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4111114   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4111115   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4111116   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4111117   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4111118   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4111119   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4111120   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4111121   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4111122   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4111123   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4111124   +          +    -1.28390925647659 * S_NumDealsPurchases
4111125   +          +     0.82669177239926 * S_NumDistPurchases
4111126   +          +     1.71678585204511 * S_NumStorePurchases
4111127   +          +     1.49226295608046 * S_NumWebPurchases
4111128   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4111129   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4111130   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4111131   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4111132   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4111133   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4111134   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4111135   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4111136   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4111137   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4111138   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4111139   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4111140   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4111141   +          +     0.22958626391725 * S_NumDealsPurchases
4111142   +          +    -0.02046515813996 * S_NumDistPurchases
4111143   +          +      0.8618502050837 * S_NumStorePurchases
4111144   +          +     1.45175370326009 * S_NumWebPurchases
4111145   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4111146   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4111147   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4111148   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4111149   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4111150   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4111151   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4111152   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4111153   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4111154   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4111155   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4111156   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4111157   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4111158   +          +     1.25310034610344 * S_NumDealsPurchases
4111159   +          +     0.92141098602176 * S_NumDistPurchases
4111160   +          +    -0.08806509391473 * S_NumStorePurchases
4111161   +          +     -1.0533787624668 * S_NumWebPurchases
4111162   +          +     3.07050739830585 * S_NumWebVisitsMonth
4111163   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4111164   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4111165   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4111166   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4111167   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4111168   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4111169   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4111170   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4111171   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4111172   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4111173   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4111174   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4111175   +          +    -1.68259553608287 * S_NumDealsPurchases
4111176   +          +    -0.53835572290445 * S_NumDistPurchases
4111177   +          +     1.25833922835446 * S_NumStorePurchases
4111178   +          +     0.48300830623998 * S_NumWebPurchases
4111179   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4111180   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4111181   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4111182   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4111183   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4111184   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4111185   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4111186   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4111187   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4111188   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4111189   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4111190   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4111191   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4111192   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4111193   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4111194   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4111195   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4111196   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4111197   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4111198   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4111199   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4111200   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4111201   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4111202   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4111203   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4111204   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4111205   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4111206   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4111207   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4111208   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4111209   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4111210   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4111211   +          +     0.26230568150721 * Marital_StatusDivorced
4111212   +          +     0.27563523967756 * Marital_StatusMarried
4111213   +          +     0.54464481618478 * Marital_StatusSingle
4111214   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4111215   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4111216   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4111217   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4111218   +          +    -0.06750661313108 * Marital_StatusDivorced
4111219   +          +     1.48628445854207 * Marital_StatusMarried
4111220   +          +    -0.52197797291165 * Marital_StatusSingle
4111221   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4111222   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4111223   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4111224   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4111225   +          +     0.03219453957597 * Marital_StatusDivorced
4111226   +          +    -0.73835008216677 * Marital_StatusMarried
4111227   +          +     0.11212575818086 * Marital_StatusSingle
4111228   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4111229   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4111230   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4111231   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4111232   +          +    -0.95055539413405 * Marital_StatusDivorced
4111233   +          +    -1.65922419336067 * Marital_StatusMarried
4111234   +          +     0.78727538125107 * Marital_StatusSingle
4111235   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4111236   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4111237   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4111238   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4111239   +          +     -4.1747415035634 * Marital_StatusDivorced
4111240   +          +     3.61194282451968 * Marital_StatusMarried
4111241   +          +     -3.2800495365546 * Marital_StatusSingle
4111242   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4111243   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4111244   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4111245   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4111246   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4111247   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4111248   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4111249   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4111250   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4111251   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4111252   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4111253   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4111254   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4111255   +END;
MPRINT(EM_DIAGRAM):   END;
4111256   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111257   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4111258   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4111259   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4111260   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4111261   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4111262   +END;
MPRINT(EM_DIAGRAM):   END;
4111263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111264   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4111265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111266   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111267   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4111268   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4111269   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4111270   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4111271   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4111272   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4111273   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4111274   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4111275   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4111276   +          +     1.29727972396867 * S_NumDealsPurchases
4111277   +          +     -0.4796144286007 * S_NumDistPurchases
4111278   +          +     0.88365985808591 * S_NumStorePurchases
4111279   +          +     0.68522096892804 * S_NumWebPurchases
4111280   +          +     0.54931043107798 * S_NumWebVisitsMonth
4111281   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4111282   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4111283   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4111284   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4111285   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4111286   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4111287   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4111288   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4111289   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4111290   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4111291   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4111292   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4111293   +          +     0.26997834581422 * S_NumDealsPurchases
4111294   +          +      1.4974894627406 * S_NumDistPurchases
4111295   +          +     0.20577850505638 * S_NumStorePurchases
4111296   +          +     0.67578530037026 * S_NumWebPurchases
4111297   +          +     1.48893165613941 * S_NumWebVisitsMonth
4111298   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4111299   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4111300   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4111301   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4111302   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4111303   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4111304   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4111305   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4111306   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4111307   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4111308   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4111309   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4111310   +          +    -0.75474919633886 * S_NumDealsPurchases
4111311   +          +     2.21872386475638 * S_NumDistPurchases
4111312   +          +    -0.36191460108989 * S_NumStorePurchases
4111313   +          +     0.03160010932412 * S_NumWebPurchases
4111314   +          +     0.00984650739909 * S_NumWebVisitsMonth
4111315   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4111316   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4111317   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4111318   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4111319   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4111320   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4111321   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4111322   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4111323   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4111324   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4111325   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4111326   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4111327   +          +    -1.12057357865269 * S_NumDealsPurchases
4111328   +          +    -0.70841760614521 * S_NumDistPurchases
4111329   +          +    -1.39174816270404 * S_NumStorePurchases
4111330   +          +    -1.62343249380806 * S_NumWebPurchases
4111331   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4111332   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4111333   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4111334   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4111335   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4111336   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4111337   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4111338   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4111339   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4111340   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4111341   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4111342   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4111343   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4111344   +          +     0.66880481485557 * S_NumDealsPurchases
4111345   +          +     0.69540174544859 * S_NumDistPurchases
4111346   +          +     1.68246546921736 * S_NumStorePurchases
4111347   +          +     1.85958176898295 * S_NumWebPurchases
4111348   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4111349   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4111350   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4111351   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4111352   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4111353   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4111354   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4111355   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4111356   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4111357   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4111358   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4111359   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4111360   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4111361   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4111362   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4111363   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4111364   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4111365   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4111366   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4111367   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4111368   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4111369   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4111370   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4111371   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4111372   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4111373   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4111374   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4111375   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4111376   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4111377   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4111378   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4111379   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4111380   +          +      0.2766977476799 * Marital_StatusDivorced
4111381   +          +     0.99585126449473 * Marital_StatusMarried
4111382   +          +    -0.71244490682808 * Marital_StatusSingle
4111383   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4111384   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4111385   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4111386   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4111387   +          +     0.04724779113048 * Marital_StatusDivorced
4111388   +          +    -0.80186231440666 * Marital_StatusMarried
4111389   +          +    -0.02226793584171 * Marital_StatusSingle
4111390   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4111391   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4111392   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4111393   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4111394   +          +     0.28206835683721 * Marital_StatusDivorced
4111395   +          +     0.46500886756532 * Marital_StatusMarried
4111396   +          +     0.35327545255503 * Marital_StatusSingle
4111397   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4111398   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4111399   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4111400   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4111401   +          +     1.22291788006392 * Marital_StatusDivorced
4111402   +          +    -2.27040720272432 * Marital_StatusMarried
4111403   +          +     1.13606780043773 * Marital_StatusSingle
4111404   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4111405   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4111406   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4111407   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4111408   +          +     -0.3999800759199 * Marital_StatusDivorced
4111409   +          +    -0.40978271635345 * Marital_StatusMarried
4111410   +          +    -0.55524279444227 * Marital_StatusSingle
4111411   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4111412   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4111413   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4111414   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4111415   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4111416   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4111417   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4111418   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4111419   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4111420   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4111421   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4111422   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4111423   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4111424   +END;
MPRINT(EM_DIAGRAM):   END;
4111425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111426   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4111427   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4111428   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4111429   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4111430   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4111431   +END;
MPRINT(EM_DIAGRAM):   END;
4111432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111433   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4111434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111435   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111436   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4111437   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4111438   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4111439   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4111440   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4111441   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4111442   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4111443   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4111444   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4111445   +          +     0.15783958682465 * S_NumDealsPurchases
4111446   +          +     1.52124708558457 * S_NumDistPurchases
4111447   +          +     -1.3804418313581 * S_NumStorePurchases
4111448   +          +    -1.29570111649272 * S_NumWebPurchases
4111449   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4111450   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4111451   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4111452   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4111453   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4111454   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4111455   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4111456   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4111457   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4111458   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4111459   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4111460   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4111461   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4111462   +          +     0.12337111358286 * S_NumDealsPurchases
4111463   +          +     -2.3848926094027 * S_NumDistPurchases
4111464   +          +    -1.20666646996433 * S_NumStorePurchases
4111465   +          +     0.89549302881365 * S_NumWebPurchases
4111466   +          +     0.95359042569947 * S_NumWebVisitsMonth
4111467   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4111468   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4111469   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4111470   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4111471   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4111472   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4111473   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4111474   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4111475   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4111476   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4111477   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4111478   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4111479   +          +    -1.05383642674948 * S_NumDealsPurchases
4111480   +          +     1.71861984509369 * S_NumDistPurchases
4111481   +          +     1.47595181536047 * S_NumStorePurchases
4111482   +          +    -1.64165005491178 * S_NumWebPurchases
4111483   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4111484   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4111485   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4111486   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4111487   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4111488   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4111489   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4111490   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4111491   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4111492   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4111493   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4111494   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4111495   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4111496   +          +     0.13347794794222 * S_NumDealsPurchases
4111497   +          +     0.30533639886561 * S_NumDistPurchases
4111498   +          +     1.63892955540526 * S_NumStorePurchases
4111499   +          +     0.43734586516446 * S_NumWebPurchases
4111500   +          +     1.79260779802864 * S_NumWebVisitsMonth
4111501   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4111502   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4111503   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4111504   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4111505   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4111506   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4111507   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4111508   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4111509   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4111510   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4111511   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4111512   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4111513   +          +     1.64209094349557 * S_NumDealsPurchases
4111514   +          +    -0.38876870460627 * S_NumDistPurchases
4111515   +          +    -0.48559309584971 * S_NumStorePurchases
4111516   +          +     0.21254626353218 * S_NumWebPurchases
4111517   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4111518   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4111519   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4111520   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4111521   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4111522   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4111523   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4111524   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4111525   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4111526   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4111527   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4111528   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4111529   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4111530   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4111531   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4111532   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4111533   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4111534   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4111535   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4111536   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4111537   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4111538   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4111539   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4111540   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4111541   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4111542   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4111543   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4111544   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4111545   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4111546   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4111547   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4111548   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4111549   +          +     1.33953173091973 * Marital_StatusDivorced
4111550   +          +    -0.26253208073262 * Marital_StatusMarried
4111551   +          +    -0.00960552682431 * Marital_StatusSingle
4111552   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4111553   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4111554   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4111555   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4111556   +          +     1.43150850334311 * Marital_StatusDivorced
4111557   +          +    -0.69239127844934 * Marital_StatusMarried
4111558   +          +     2.08477562471559 * Marital_StatusSingle
4111559   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4111560   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4111561   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4111562   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4111563   +          +     1.08387556786168 * Marital_StatusDivorced
4111564   +          +      1.0283506000217 * Marital_StatusMarried
4111565   +          +    -0.87069431107983 * Marital_StatusSingle
4111566   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4111567   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4111568   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4111569   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4111570   +          +      -1.347780188307 * Marital_StatusDivorced
4111571   +          +    -0.53911983240372 * Marital_StatusMarried
4111572   +          +     0.22083074159185 * Marital_StatusSingle
4111573   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4111574   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4111575   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4111576   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4111577   +          +     1.46582538311384 * Marital_StatusDivorced
4111578   +          +     0.05256161016002 * Marital_StatusMarried
4111579   +          +    -1.21402967626877 * Marital_StatusSingle
4111580   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4111581   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4111582   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4111583   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4111584   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4111585   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4111586   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4111587   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4111588   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4111589   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4111590   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4111591   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4111592   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4111593   +END;
MPRINT(EM_DIAGRAM):   END;
4111594   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111595   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4111596   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4111597   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4111598   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4111599   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4111600   +END;
MPRINT(EM_DIAGRAM):   END;
4111601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111602   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4111603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111604   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111605   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4111606   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4111607   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4111608   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4111609   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4111610   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4111611   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4111612   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4111613   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4111614   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4111615   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4111616   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4111617   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4111618   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4111619   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4111620   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4111621   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4111622   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4111623   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4111624   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4111625   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4111626   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4111627   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4111628   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4111629   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4111630   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4111631   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4111632   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4111633   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4111634   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4111635   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4111636   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4111637   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4111638   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4111639   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4111640   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4111641   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4111642   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4111643   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4111644   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4111645   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4111646   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4111647   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4111648   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4111649   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4111650   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4111651   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4111652   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4111653   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4111654   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4111655   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4111656   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4111657   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4111658   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4111659   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4111660   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4111661   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4111662   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4111663   +END;
MPRINT(EM_DIAGRAM):   END;
4111664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111665   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4111666   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4111667   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4111668   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4111669   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4111670   +END;
MPRINT(EM_DIAGRAM):   END;
4111671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111672   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4111673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111674   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111675   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4111676   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4111677   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4111678   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4111679   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4111680   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4111681   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4111682   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4111683   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4111684   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4111685   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4111686   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4111687   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4111688   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4111689   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4111690   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4111691   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4111692   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4111693   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4111694   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4111695   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4111696   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4111697   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4111698   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4111699   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4111700   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4111701   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4111702   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4111703   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4111704   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4111705   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4111706   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4111707   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4111708   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4111709   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4111710   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4111711   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4111712   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4111713   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4111714   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4111715   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4111716   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4111717   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4111718   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4111719   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4111720   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4111721   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4111722   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4111723   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4111724   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4111725   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4111726   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4111727   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4111728   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4111729   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4111730   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4111731   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4111732   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4111733   +END;
MPRINT(EM_DIAGRAM):   END;
4111734   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111735   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4111736   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4111737   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4111738   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4111739   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4111740   +END;
MPRINT(EM_DIAGRAM):   END;
4111741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111742   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4111743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111744   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111745   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4111746   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4111747   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4111748   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4111749   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4111750   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4111751   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4111752   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4111753   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4111754   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4111755   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4111756   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4111757   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4111758   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4111759   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4111760   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4111761   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4111762   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4111763   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4111764   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4111765   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4111766   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4111767   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4111768   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4111769   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4111770   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4111771   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4111772   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4111773   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4111774   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4111775   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4111776   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4111777   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4111778   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4111779   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4111780   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4111781   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4111782   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4111783   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4111784   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4111785   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4111786   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4111787   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4111788   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4111789   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4111790   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4111791   +END;
MPRINT(EM_DIAGRAM):   END;
4111792   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111793   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4111794   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4111795   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4111796   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4111797   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4111798   +END;
MPRINT(EM_DIAGRAM):   END;
4111799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111800   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4111801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111802   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4111803   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4111804   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4111805   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4111806   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4111807   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4111808   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4111809   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4111810   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4111811   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4111812   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4111813   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4111814   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4111815   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4111816   +END;
MPRINT(EM_DIAGRAM):   END;
4111817   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4111818   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4111819   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4111820   +END;
MPRINT(EM_DIAGRAM):   END;
4111821   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4111822   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4111823   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4111824   +END;
MPRINT(EM_DIAGRAM):   END;
4111825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111826   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4111827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4111828   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4111829   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4111830   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4111831   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4111832   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4111833   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4111834   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4111835   +END;
MPRINT(EM_DIAGRAM):   END;
4111836   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4111837   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4111838   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4111839   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4111840    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4111841    quit;
4111842    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4111843    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4111844    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4111845    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
4111846    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4111847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4111848    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4111849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4111851    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
4111852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111854    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111855    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4111856    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4111857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4111858    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
4111859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4111860    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4111861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111863    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111864    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4111865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111866    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111867    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4111868    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4111868  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.
 
4111869    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4111870    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4111871    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111872    filename _pref
4111872  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4111873    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4111874    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4111875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4111876   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4111877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4111878   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4111879   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4111880   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4111881    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4111882    quit;
4111883    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4111884    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4111885    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4111886    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4111887    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4111888    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111889    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4111890    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4111892    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4111893    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111895    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111896    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4111897    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4111898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111899    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4111900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4111901    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4111902    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111904    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111905    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4111906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111907    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4111908    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4111909    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4111909  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4111910    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111911    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4111912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111913    filename _pref
4111913  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4111914    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4111915    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4111916   +
4111917   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4111918   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4111918  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4111919   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4111920   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4111921   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4111922   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4111923   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4111924    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4111925    quit;
4111926    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4111927    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4111928    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4111929    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4111930    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4111931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4111932    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4111933    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111935    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4111936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111938    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111939    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4111940    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4111941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111942    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4111943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.17 seconds
      cpu time            0.00 seconds
 
 
4111944    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4111945    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111947    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4111948    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4111949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4111950    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4111951    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4111952    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4111952  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4111953    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4111954    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4111955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4111956    filename _pref
4111956  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4111957    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4111958    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4111959   +
4111960   +
4111961   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4111962   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4111963   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4111964   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4111965   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4111966   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4111967   +
4111968   +
4111969   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4111970   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4111971   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4111972   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4111973   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4111974   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4111975   +
4111976   +
4111977   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4111978   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4111979   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4111980   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4111981   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4111982   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4111983   +
4111984   +
4111985   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4111986   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4111987   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4111988   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4111989   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4111990   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4111991   +
4111992   +
4111993   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4111994   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4111995   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4111996   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4111997   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4111998   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4111999   +
4112000   +
4112001   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4112002   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4112003   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4112004   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4112005   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4112006   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4112007   +
4112008   +
4112009   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4112010   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4112011   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4112012   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4112013   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4112014   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4112015   +
4112016   +
4112017   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4112018   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4112019   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4112020   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4112021   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4112022   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4112023   +if
4112024   +_FILTERNORM1 not in ( '.')
4112025   + and
4112026   +_FILTERNORM2 not in ( '.')
4112027   + and
4112028   +_FILTERNORM3 not in ( '.')
4112029   + and
4112030   +_FILTERNORM4 not in ( '.')
4112031   + and
4112032   +_FILTERNORM5 not in ( '.')
4112033   + and
4112034   +_FILTERNORM6 not in ( '.')
4112035   + and
4112036   +_FILTERNORM7 not in ( ' ')
4112037   + and
4112038   +_FILTERNORM8 not in ( ' ')
4112039   +and
4112040   +( Dt_Customer ne .)
4112041   +and ( Income ne . and (Income<=107000))
4112042   +and ( Kidhome ne .)
4112043   +and ( MntFishProducts ne .)
4112044   +and ( MntFruits ne .)
4112045   +and ( MntGoldProds ne .)
4112046   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4112047   +and ( MntSweetProducts ne .)
4112048   +and ( MntWines ne .)
4112049   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4112050   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4112051   +and ( NumStorePurchases ne .)
4112052   +and ( NumWebPurchases ne .)
4112053   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4112054   +and ( Recency ne .)
4112055   +and ( Teenhome ne .)
4112056   +and ( Year_Birth ne .)
4112057   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4112058   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4112059   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4112060   +end;
MPRINT(EM_DIAGRAM):   end;
4112061   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4112062   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4112063    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4112064    quit;
4112065    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4112066    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4112067    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4112068    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4112069    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4112070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112071    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4112072    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112074    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4112075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112077    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112078    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4112079    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4112080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112081    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4112082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4112083    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4112084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112086    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112087    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4112088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112089    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112090    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4112091    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4112091  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4112092    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112093    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4112094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112095    %macro varDept(fcmpdata=,id=);
4112096    %global nobs&id scoreFlag&id;
4112097    %let scoreFlag&id = 0;
4112098    %if &id=1 or ^&fcmpStart %then %do;
4112099    proc sort data=&fcmpdata out=_temp&id nodupkey;
4112100    by NAME;
4112101    where id=&id and LHS in( %let j=1;
4112102    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4112103    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4112104    "&var" %let j = %eval(&j+1);
4112105    %end;
4112106    );
4112107    run;
4112108    %let dsid = %sysfunc(open(_temp&id));
4112109    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4112110    %let dsid = %sysfunc(close(&dsid));
4112111    %if &&nobs&id %then %do;
4112112    %let scoreFlag&id = 1;
4112113    %let fcmpStart = 1;
4112114    %end;
4112115    %else %let fcmpStart = 0;
4112116    %end;
4112117    %else %do;
4112118    proc sort data=&fcmpdata out=_tempid;
4112119    where id=&id;
4112120    by LHS;
4112121    run;
4112122    %let dsid = %sysfunc(open(_tempid));
4112123    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4112124    %let dsid = %sysfunc(close(&dsid));
4112125    %if ^&&nobs&id %then %do;
4112126    proc datasets lib=work nolist;
4112127    delete _tempid;
4112128    run;
4112129    quit;
4112130    %end;
4112131    %else %do;
4112132    data _tempAll;
4112133    set %let j=%eval(&id-1);
4112134    %do x=1 %to &j;
4112135    %if &&nobs&x %then %do;
4112136    _temp&x %end;
4112137    %end;
4112138    ;
4112139    run;
4112140    proc sql;
4112141    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4112141  ! work._tempid p2 where p.name=p2.lhs;
4112142    quit;
4112143    data _temp&id;
4112144    set _temp&id;
4112145    where LHS ne '' and NAME ne '' and Node ne '';
4112146    run;
4112147    proc datasets lib=work nolist;
4112148    delete _tempAll;
4112149    run;
4112150    %let dsid = %sysfunc(open(_temp&id));
4112151    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4112152    %let dsid = %sysfunc(close(&dsid));
4112153    %if ^&&nobs&id %then %do;
4112154    proc datasets lib=work nolist;
4112155    delete _temp&id;
4112156    run;
4112157    quit;
4112158    %end;
4112159    %else %do;
4112160    %let scoreFlag&id = 1;
4112161    data _temp&id;
4112162    set _temp&id;
4112163    where LHS ne NAME and node ne '';
4112164    run;
4112165    %let dsid = %sysfunc(open(_temp&id));
4112166    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4112167    %let dsid = %sysfunc(close(&dsid));
4112168    %if ^&&nobs&id %then %do;
4112169    proc datasets lib=work nolist;
4112170    delete _temp&id;
4112171    run;
4112172    quit;
4112173    %end;
4112174    %else %do;
4112175    proc sort data=_temp&id nodupkey;
4112176    by LHS NAME;
4112177    run;
4112178    %end;
4112179    %end;
4112180    %end;
4112181    %end;
4112182    %mend varDept;
4112183    %macro optCode(outdata=fcmpdata);
4112184    %global fcmpStart;
4112185    %let fcmpStart = 0;
4112186    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4112187    %let NumNodes=9;
4112188    %do k=1 %to &NumNodes;
4112189    %vardept(fcmpdata=&outdata, id=&k);
4112190    %end;
4112191    %mend optCode;
4112192    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 224 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4112193    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4112194    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4112195    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4112196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112197    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4112198    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4112199    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4112200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4112201    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4112202    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4112202  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4112203    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4112204    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4112205    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4112206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112207    filename _pref
4112207  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
4112208    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4112209    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
4112210   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4112211   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4112212   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4112213   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4112214   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4112215   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4112216   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4112217   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4112218   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4112219   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4112220   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4112221   +LENGTH _WARN_ $4
4112222   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4112223   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4112224   +
4112225   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4112226   +
4112227   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4112228   +
4112229   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4112230   +
4112231   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4112232   +
4112233   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4112234   +
4112235   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4112236   +
4112237   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4112238   +
4112239   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4112240   +
4112241   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4112242   +
4112243   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4112244   +
4112245   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4112246   +
4112247   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4112248   +
4112249   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4112250   +
4112251   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4112252   +
4112253   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4112254   +
4112255   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4112256   +
4112257   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4112258   +
4112259   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4112260   +
4112261   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4112262   +
4112263   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4112264   +
4112265   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4112266   +
4112267   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4112268   +
4112269   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4112270   +
4112271   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4112272   +
4112273   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4112274   +
4112275   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4112276   +
4112277   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4112278   +
4112279   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4112280   +
4112281   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4112282   +
4112283   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4112284   +
4112285   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4112286   +
4112287   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4112288   +
4112289   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4112290   +
4112291   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4112292   +
4112293   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4112294   +
4112295   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4112296   +
4112297   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4112298   +
4112299   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4112300   +
4112301   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4112302   +
4112303   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4112304   +
4112305   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4112306   +
4112307   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4112308   +
4112309   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4112310   +
4112311   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4112312   +
4112313   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4112314   +
4112315   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4112316   +
4112317   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4112318   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4112319   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4112320   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4112321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112323   +end;
MPRINT(EM_DIAGRAM):   end;
4112324   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112326   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4112327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112329   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4112330   +   end;
MPRINT(EM_DIAGRAM):   end;
4112331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112332   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4112333   +   end;
MPRINT(EM_DIAGRAM):   end;
4112334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112335   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4112336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112338   +   end;
MPRINT(EM_DIAGRAM):   end;
4112339   +end;
MPRINT(EM_DIAGRAM):   end;
4112340   +
4112341   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4112342   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4112343   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4112344   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4112345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112347   +end;
MPRINT(EM_DIAGRAM):   end;
4112348   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112350   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4112351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112353   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4112354   +   end;
MPRINT(EM_DIAGRAM):   end;
4112355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112356   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4112357   +   end;
MPRINT(EM_DIAGRAM):   end;
4112358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112359   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4112360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112362   +   end;
MPRINT(EM_DIAGRAM):   end;
4112363   +end;
MPRINT(EM_DIAGRAM):   end;
4112364   +
4112365   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4112366   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4112367   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4112368   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4112369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112371   +end;
MPRINT(EM_DIAGRAM):   end;
4112372   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112374   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4112375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112377   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4112378   +   end;
MPRINT(EM_DIAGRAM):   end;
4112379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112380   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4112381   +   end;
MPRINT(EM_DIAGRAM):   end;
4112382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112383   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4112384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112386   +   end;
MPRINT(EM_DIAGRAM):   end;
4112387   +end;
MPRINT(EM_DIAGRAM):   end;
4112388   +
4112389   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4112390   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4112391   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4112392   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4112393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112395   +end;
MPRINT(EM_DIAGRAM):   end;
4112396   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112398   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4112399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112401   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4112402   +   end;
MPRINT(EM_DIAGRAM):   end;
4112403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112404   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4112405   +   end;
MPRINT(EM_DIAGRAM):   end;
4112406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112407   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4112408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112410   +   end;
MPRINT(EM_DIAGRAM):   end;
4112411   +end;
MPRINT(EM_DIAGRAM):   end;
4112412   +
4112413   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4112414   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4112415   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4112416   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4112417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112419   +end;
MPRINT(EM_DIAGRAM):   end;
4112420   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112422   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4112423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112424   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112425   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4112426   +   end;
MPRINT(EM_DIAGRAM):   end;
4112427   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112428   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4112429   +   end;
MPRINT(EM_DIAGRAM):   end;
4112430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112431   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4112432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112434   +   end;
MPRINT(EM_DIAGRAM):   end;
4112435   +end;
MPRINT(EM_DIAGRAM):   end;
4112436   +
4112437   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4112438   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4112439   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4112440   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4112441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112443   +end;
MPRINT(EM_DIAGRAM):   end;
4112444   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112446   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4112447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112448   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4112449   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4112450   +   end;
MPRINT(EM_DIAGRAM):   end;
4112451   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4112452   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4112453   +   end;
MPRINT(EM_DIAGRAM):   end;
4112454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112455   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4112456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112458   +   end;
MPRINT(EM_DIAGRAM):   end;
4112459   +end;
MPRINT(EM_DIAGRAM):   end;
4112460   +
4112461   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4112462   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4112463   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4112464   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4112465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112467   +end;
MPRINT(EM_DIAGRAM):   end;
4112468   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4112470   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4112471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112472   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4112473   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4112474   +   end;
MPRINT(EM_DIAGRAM):   end;
4112475   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4112476   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4112477   +   end;
MPRINT(EM_DIAGRAM):   end;
4112478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112479   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4112480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112482   +   end;
MPRINT(EM_DIAGRAM):   end;
4112483   +end;
MPRINT(EM_DIAGRAM):   end;
4112484   +
4112485   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4112486   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4112487   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4112488   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4112489   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4112490   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4112491   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4112492   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4112493   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4112494   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4112495   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4112496   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4112497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112499   +end;
MPRINT(EM_DIAGRAM):   end;
4112500   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112501   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4112502   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4112503   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112504   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4112505   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4112506   +   end;
MPRINT(EM_DIAGRAM):   end;
4112507   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4112508   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4112509   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4112510   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4112511   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4112512   +   end;
MPRINT(EM_DIAGRAM):   end;
4112513   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4112514   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4112515   +   end;
MPRINT(EM_DIAGRAM):   end;
4112516   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4112517   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4112518   +   end;
MPRINT(EM_DIAGRAM):   end;
4112519   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4112520   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4112521   +   end;
MPRINT(EM_DIAGRAM):   end;
4112522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112523   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4112524   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4112525   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4112526   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4112527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112529   +   end;
MPRINT(EM_DIAGRAM):   end;
4112530   +end;
MPRINT(EM_DIAGRAM):   end;
4112531   +
4112532   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4112533   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4112534   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4112535   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4112536   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4112537   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4112538   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4112539   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4112540   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4112541   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4112542   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4112543   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4112544   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4112545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4112546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112547   +end;
MPRINT(EM_DIAGRAM):   end;
4112548   +else do;
MPRINT(EM_DIAGRAM):   else do;
4112549   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4112550   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4112551   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4112552   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4112553   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4112554   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4112555   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4112556   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4112557   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4112558   +         end;
MPRINT(EM_DIAGRAM):   end;
4112559   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4112560   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4112561   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4112562   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4112563   +            end;
MPRINT(EM_DIAGRAM):   end;
4112564   +         end;
MPRINT(EM_DIAGRAM):   end;
4112565   +      end;
MPRINT(EM_DIAGRAM):   end;
4112566   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4112567   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4112568   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4112569   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4112570   +         end;
MPRINT(EM_DIAGRAM):   end;
4112571   +      end;
MPRINT(EM_DIAGRAM):   end;
4112572   +   end;
MPRINT(EM_DIAGRAM):   end;
4112573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4112574   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4112575   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4112576   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4112577   +      end;
MPRINT(EM_DIAGRAM):   end;
4112578   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4112579   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4112580   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4112581   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4112582   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4112583   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4112584   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4112585   +         end;
MPRINT(EM_DIAGRAM):   end;
4112586   +      end;
MPRINT(EM_DIAGRAM):   end;
4112587   +   end;
MPRINT(EM_DIAGRAM):   end;
4112588   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4112589   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4112590   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4112591   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4112592   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4112593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4112594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112595   +   end;
MPRINT(EM_DIAGRAM):   end;
4112596   +end;
MPRINT(EM_DIAGRAM):   end;
4112597   +
4112598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112599   +*** Checking missing input Interval
4112600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4112601   +
4112602   +IF NMISS(
4112603   +   AcceptedCmpTotal ,
4112604   +   Age ,
4112605   +   Frq ,
4112606   +   Income ,
4112607   +   Kidhome ,
4112608   +   Mnt ,
4112609   +   MntFishProducts ,
4112610   +   MntFruits ,
4112611   +   MntGoldProds ,
4112612   +   MntMeatProducts ,
4112613   +   MntSweetProducts ,
4112614   +   MntWines ,
4112615   +   MonthsAsCustomer ,
4112616   +   NumCatalogPurchases ,
4112617   +   NumDealsPurchases ,
4112618   +   NumDistPurchases ,
4112619   +   NumStorePurchases ,
4112620   +   NumWebPurchases ,
4112621   +   NumWebVisitsMonth ,
4112622   +   RFMstat ,
4112623   +   RMntFrq ,
4112624   +   Recency ,
4112625   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4112626   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4112627   +
4112628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4112629   +END;
MPRINT(EM_DIAGRAM):   END;
4112630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112631   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4112632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4112634   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4112635   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4112636   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4112637   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4112638   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4112639   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4112640   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4112641   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4112642   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4112643   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4112644   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4112645   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4112646   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4112647   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4112648   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4112649   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4112650   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4112651   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4112652   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4112653   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4112654   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4112655   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4112656   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4112657   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4112658   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4112659   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4112660   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4112661   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4112662   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4112663   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4112664   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4112665   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4112666   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4112667   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4112668   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4112669   +END;
MPRINT(EM_DIAGRAM):   END;
4112670   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4112671   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4112672   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4112673   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4112674   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4112675   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4112676   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4112677   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4112678   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4112679   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4112680   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4112681   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4112682   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4112683   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4112684   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4112685   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4112686   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4112687   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4112688   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4112689   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4112690   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4112691   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4112692   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4112693   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4112694   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4112695   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4112696   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4112697   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4112698   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4112699   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4112700   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4112701   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4112702   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4112703   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4112704   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4112705   +   ELSE S_NumCatalogPurchases
4112706   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4112707   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4112708   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4112709   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4112710   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4112711   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4112712   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4112713   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4112714   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4112715   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4112716   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4112717   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4112718   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4112719   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4112720   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4112721   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4112722   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4112723   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4112724   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4112725   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4112726   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4112727   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4112728   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4112729   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4112730   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4112731   +END;
MPRINT(EM_DIAGRAM):   END;
4112732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112733   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4112734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112736   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4112737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112739   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4112740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112741   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4112742   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4112743   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4112744   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4112745   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4112746   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4112747   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4112748   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4112749   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4112750   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4112751   +          +    -1.14704878034134 * S_NumDealsPurchases
4112752   +          +    -0.17763404274659 * S_NumDistPurchases
4112753   +          +     0.08894400267969 * S_NumStorePurchases
4112754   +          +     0.59283747891957 * S_NumWebPurchases
4112755   +          +     0.85268274682505 * S_NumWebVisitsMonth
4112756   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4112757   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4112758   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4112759   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4112760   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4112761   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4112762   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4112763   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4112764   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4112765   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4112766   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4112767   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4112768   +          +    -0.80841566068716 * S_NumDealsPurchases
4112769   +          +    -0.17995640033768 * S_NumDistPurchases
4112770   +          +     0.00713417460936 * S_NumStorePurchases
4112771   +          +     0.57881024323076 * S_NumWebPurchases
4112772   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4112773   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4112774   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4112775   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4112776   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4112777   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4112778   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4112779   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4112780   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4112781   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4112782   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4112783   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4112784   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4112785   +          +     0.57891364118717 * S_NumDealsPurchases
4112786   +          +    -0.31024556838688 * S_NumDistPurchases
4112787   +          +    -1.48708542986704 * S_NumStorePurchases
4112788   +          +    -0.93009875249206 * S_NumWebPurchases
4112789   +          +     2.01900039122935 * S_NumWebVisitsMonth
4112790   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4112791   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4112792   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4112793   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4112794   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4112795   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4112796   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4112797   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4112798   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4112799   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4112800   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4112801   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4112802   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4112803   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4112804   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4112805   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4112806   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4112807   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4112808   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4112809   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4112810   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4112811   +          +     0.55883606830033 * Marital_StatusDivorced
4112812   +          +    -0.54530037567066 * Marital_StatusMarried
4112813   +          +    -0.52994736075753 * Marital_StatusSingle
4112814   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4112815   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4112816   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4112817   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4112818   +          +    -1.07368484057033 * Marital_StatusDivorced
4112819   +          +     2.73313504711262 * Marital_StatusMarried
4112820   +          +    -2.18530462876058 * Marital_StatusSingle
4112821   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4112822   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4112823   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4112824   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4112825   +          +     0.49993144243043 * Marital_StatusDivorced
4112826   +          +    -0.38953339116829 * Marital_StatusMarried
4112827   +          +    -0.10836287319942 * Marital_StatusSingle
4112828   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4112829   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4112830   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4112831   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4112832   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4112833   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4112834   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4112835   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4112836   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4112837   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4112838   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4112839   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4112840   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4112841   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4112842   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4112843   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4112844   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4112845   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4112846   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4112847   +END;
MPRINT(EM_DIAGRAM):   END;
4112848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4112849   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4112850   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4112851   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4112852   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4112853   +END;
MPRINT(EM_DIAGRAM):   END;
4112854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112855   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4112856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112857   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4112858   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4112859   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4112860   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4112861   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4112862   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4112863   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4112864   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4112865   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4112866   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4112867   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4112868   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4112869   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4112870   +END;
MPRINT(EM_DIAGRAM):   END;
4112871   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4112872   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4112873   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4112874   +END;
MPRINT(EM_DIAGRAM):   END;
4112875   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4112876   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4112877   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4112878   +END;
MPRINT(EM_DIAGRAM):   END;
4112879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112880   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4112881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4112882   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4112883   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4112884   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4112885   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4112886   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4112887   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4112888   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4112889   +END;
MPRINT(EM_DIAGRAM):   END;
4112890   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4112891   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4112892   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4112893   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4112894    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4112895    quit;
4112896    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4112897    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4112898    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4112899    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
4112900    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4112901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112902    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4112903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112905    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
4112906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112907    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112909    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4112910    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4112911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112912    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
4112913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4112914    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4112915    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112916    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112917    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112918    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4112919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112920    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112921    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4112922    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4112922  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
4112923    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112924    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4112925    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112926    filename _pref
4112926  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4112927    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4112928    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4112929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4112930   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4112931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4112932   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4112933   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4112934   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4112935    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4112936    quit;
4112937    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4112938    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4112939    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4112940    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4112941    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4112942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112943    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4112944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112946    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4112947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112949    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112950    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4112951    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4112952    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112953    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4112954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4112955    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4112956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112958    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112959    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4112960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112961    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112962    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4112963    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4112963  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4112964    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112965    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4112966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112967    filename _pref
4112967  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4112968    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4112969    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4112970   +
4112971   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4112972   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4112972  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4112973   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4112974   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4112975   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4112976   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4112977   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4112978    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4112979    quit;
4112980    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4112981    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4112982    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4112983    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4112984    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4112985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112986    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4112987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112989    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4112990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4112991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4112993    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4112994    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4112995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4112996    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4112997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4112998    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4112999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4113002    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4113003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113004    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113005    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4113006    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4113006  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4113007    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113008    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4113009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113010    filename _pref
4113010  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4113011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4113012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4113013   +
4113014   +
4113015   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4113016   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4113017   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4113018   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4113019   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4113020   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113021   +
4113022   +
4113023   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4113024   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4113025   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4113026   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4113027   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4113028   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113029   +
4113030   +
4113031   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4113032   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4113033   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4113034   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4113035   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4113036   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113037   +
4113038   +
4113039   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4113040   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4113041   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4113042   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4113043   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4113044   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113045   +
4113046   +
4113047   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4113048   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4113049   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4113050   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4113051   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4113052   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113053   +
4113054   +
4113055   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4113056   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4113057   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4113058   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4113059   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4113060   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113061   +
4113062   +
4113063   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4113064   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4113065   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4113066   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4113067   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4113068   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113069   +
4113070   +
4113071   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4113072   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4113073   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4113074   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4113075   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4113076   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4113077   +if
4113078   +_FILTERNORM1 not in ( '.')
4113079   + and
4113080   +_FILTERNORM2 not in ( '.')
4113081   + and
4113082   +_FILTERNORM3 not in ( '.')
4113083   + and
4113084   +_FILTERNORM4 not in ( '.')
4113085   + and
4113086   +_FILTERNORM5 not in ( '.')
4113087   + and
4113088   +_FILTERNORM6 not in ( '.')
4113089   + and
4113090   +_FILTERNORM7 not in ( ' ')
4113091   + and
4113092   +_FILTERNORM8 not in ( ' ')
4113093   +and
4113094   +( Dt_Customer ne .)
4113095   +and ( Income ne . and (Income<=107000))
4113096   +and ( Kidhome ne .)
4113097   +and ( MntFishProducts ne .)
4113098   +and ( MntFruits ne .)
4113099   +and ( MntGoldProds ne .)
4113100   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4113101   +and ( MntSweetProducts ne .)
4113102   +and ( MntWines ne .)
4113103   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4113104   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4113105   +and ( NumStorePurchases ne .)
4113106   +and ( NumWebPurchases ne .)
4113107   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4113108   +and ( Recency ne .)
4113109   +and ( Teenhome ne .)
4113110   +and ( Year_Birth ne .)
4113111   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4113112   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4113113   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4113114   +end;
MPRINT(EM_DIAGRAM):   end;
4113115   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4113116   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4113117    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4113118    quit;
4113119    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4113120    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4113121    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4113122    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4113123    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4113124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113125    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4113126    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113128    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4113129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4113131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4113132    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4113133    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4113134    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113135    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4113136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4113137    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4113138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4113141    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4113142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4113143    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113144    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4113145    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4113145  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4113146    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4113147    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4113148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113149    %macro varDept(fcmpdata=,id=);
4113150    %global nobs&id scoreFlag&id;
4113151    %let scoreFlag&id = 0;
4113152    %if &id=1 or ^&fcmpStart %then %do;
4113153    proc sort data=&fcmpdata out=_temp&id nodupkey;
4113154    by NAME;
4113155    where id=&id and LHS in( %let j=1;
4113156    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4113157    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4113158    "&var" %let j = %eval(&j+1);
4113159    %end;
4113160    );
4113161    run;
4113162    %let dsid = %sysfunc(open(_temp&id));
4113163    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4113164    %let dsid = %sysfunc(close(&dsid));
4113165    %if &&nobs&id %then %do;
4113166    %let scoreFlag&id = 1;
4113167    %let fcmpStart = 1;
4113168    %end;
4113169    %else %let fcmpStart = 0;
4113170    %end;
4113171    %else %do;
4113172    proc sort data=&fcmpdata out=_tempid;
4113173    where id=&id;
4113174    by LHS;
4113175    run;
4113176    %let dsid = %sysfunc(open(_tempid));
4113177    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4113178    %let dsid = %sysfunc(close(&dsid));
4113179    %if ^&&nobs&id %then %do;
4113180    proc datasets lib=work nolist;
4113181    delete _tempid;
4113182    run;
4113183    quit;
4113184    %end;
4113185    %else %do;
4113186    data _tempAll;
4113187    set %let j=%eval(&id-1);
4113188    %do x=1 %to &j;
4113189    %if &&nobs&x %then %do;
4113190    _temp&x %end;
4113191    %end;
4113192    ;
4113193    run;
4113194    proc sql;
4113195    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4113195  ! work._tempid p2 where p.name=p2.lhs;
4113196    quit;
4113197    data _temp&id;
4113198    set _temp&id;
4113199    where LHS ne '' and NAME ne '' and Node ne '';
4113200    run;
4113201    proc datasets lib=work nolist;
4113202    delete _tempAll;
4113203    run;
4113204    %let dsid = %sysfunc(open(_temp&id));
4113205    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4113206    %let dsid = %sysfunc(close(&dsid));
4113207    %if ^&&nobs&id %then %do;
4113208    proc datasets lib=work nolist;
4113209    delete _temp&id;
4113210    run;
4113211    quit;
4113212    %end;
4113213    %else %do;
4113214    %let scoreFlag&id = 1;
4113215    data _temp&id;
4113216    set _temp&id;
4113217    where LHS ne NAME and node ne '';
4113218    run;
4113219    %let dsid = %sysfunc(open(_temp&id));
4113220    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4113221    %let dsid = %sysfunc(close(&dsid));
4113222    %if ^&&nobs&id %then %do;
4113223    proc datasets lib=work nolist;
4113224    delete _temp&id;
4113225    run;
4113226    quit;
4113227    %end;
4113228    %else %do;
4113229    proc sort data=_temp&id nodupkey;
4113230    by LHS NAME;
4113231    run;
4113232    %end;
4113233    %end;
4113234    %end;
4113235    %end;
4113236    %mend varDept;
4113237    %macro optCode(outdata=fcmpdata);
4113238    %global fcmpStart;
4113239    %let fcmpStart = 0;
4113240    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4113241    %let NumNodes=9;
4113242    %do k=1 %to &NumNodes;
4113243    %vardept(fcmpdata=&outdata, id=&k);
4113244    %end;
4113245    %mend optCode;
4113246    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4113247    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4113248    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4113249    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4113250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113251    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4113252    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4113253    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4113254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113255    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4113256    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4113256  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4113257    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113258    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4113259    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4113260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4113261    filename _pref
4113261  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
4113262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4113263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
4113264   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4113265   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4113266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4113267   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4113268   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4113269   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4113270   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4113271   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4113272   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4113273   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4113274   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4113275   +LENGTH _WARN_ $4
4113276   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4113277   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4113278   +
4113279   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4113280   +
4113281   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4113282   +
4113283   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4113284   +
4113285   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4113286   +
4113287   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4113288   +
4113289   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4113290   +
4113291   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4113292   +
4113293   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4113294   +
4113295   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4113296   +
4113297   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4113298   +
4113299   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4113300   +
4113301   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4113302   +
4113303   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4113304   +
4113305   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4113306   +
4113307   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4113308   +
4113309   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4113310   +
4113311   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4113312   +
4113313   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4113314   +
4113315   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4113316   +
4113317   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4113318   +
4113319   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4113320   +
4113321   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4113322   +
4113323   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4113324   +
4113325   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4113326   +
4113327   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4113328   +
4113329   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4113330   +
4113331   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4113332   +
4113333   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4113334   +
4113335   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4113336   +
4113337   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4113338   +
4113339   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4113340   +
4113341   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4113342   +
4113343   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4113344   +
4113345   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4113346   +
4113347   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4113348   +
4113349   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4113350   +
4113351   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4113352   +
4113353   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4113354   +
4113355   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4113356   +
4113357   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4113358   +
4113359   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4113360   +
4113361   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4113362   +
4113363   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4113364   +
4113365   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4113366   +
4113367   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4113368   +
4113369   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4113370   +
4113371   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4113372   +
4113373   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4113374   +
4113375   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4113376   +
4113377   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4113378   +
4113379   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4113380   +
4113381   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4113382   +
4113383   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4113384   +
4113385   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4113386   +
4113387   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4113388   +
4113389   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4113390   +
4113391   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4113392   +
4113393   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4113394   +
4113395   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4113396   +
4113397   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4113398   +
4113399   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4113400   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4113401   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4113402   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4113403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113405   +end;
MPRINT(EM_DIAGRAM):   end;
4113406   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113408   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4113409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113410   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113411   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4113412   +   end;
MPRINT(EM_DIAGRAM):   end;
4113413   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113414   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4113415   +   end;
MPRINT(EM_DIAGRAM):   end;
4113416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113417   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4113418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113420   +   end;
MPRINT(EM_DIAGRAM):   end;
4113421   +end;
MPRINT(EM_DIAGRAM):   end;
4113422   +
4113423   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4113424   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4113425   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4113426   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4113427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113429   +end;
MPRINT(EM_DIAGRAM):   end;
4113430   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113432   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4113433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113435   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4113436   +   end;
MPRINT(EM_DIAGRAM):   end;
4113437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113438   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4113439   +   end;
MPRINT(EM_DIAGRAM):   end;
4113440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113441   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4113442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113444   +   end;
MPRINT(EM_DIAGRAM):   end;
4113445   +end;
MPRINT(EM_DIAGRAM):   end;
4113446   +
4113447   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4113448   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4113449   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4113450   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4113451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113453   +end;
MPRINT(EM_DIAGRAM):   end;
4113454   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113456   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4113457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113459   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4113460   +   end;
MPRINT(EM_DIAGRAM):   end;
4113461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113462   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4113463   +   end;
MPRINT(EM_DIAGRAM):   end;
4113464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113465   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4113466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113468   +   end;
MPRINT(EM_DIAGRAM):   end;
4113469   +end;
MPRINT(EM_DIAGRAM):   end;
4113470   +
4113471   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4113472   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4113473   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4113474   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4113475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113477   +end;
MPRINT(EM_DIAGRAM):   end;
4113478   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113480   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4113481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113483   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4113484   +   end;
MPRINT(EM_DIAGRAM):   end;
4113485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113486   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4113487   +   end;
MPRINT(EM_DIAGRAM):   end;
4113488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113489   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4113490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113492   +   end;
MPRINT(EM_DIAGRAM):   end;
4113493   +end;
MPRINT(EM_DIAGRAM):   end;
4113494   +
4113495   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4113496   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4113497   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4113498   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4113499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113501   +end;
MPRINT(EM_DIAGRAM):   end;
4113502   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113504   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4113505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113507   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4113508   +   end;
MPRINT(EM_DIAGRAM):   end;
4113509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113510   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4113511   +   end;
MPRINT(EM_DIAGRAM):   end;
4113512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113513   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4113514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113516   +   end;
MPRINT(EM_DIAGRAM):   end;
4113517   +end;
MPRINT(EM_DIAGRAM):   end;
4113518   +
4113519   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4113520   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4113521   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4113522   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4113523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113525   +end;
MPRINT(EM_DIAGRAM):   end;
4113526   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113528   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4113529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4113531   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4113532   +   end;
MPRINT(EM_DIAGRAM):   end;
4113533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4113534   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4113535   +   end;
MPRINT(EM_DIAGRAM):   end;
4113536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113537   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4113538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113540   +   end;
MPRINT(EM_DIAGRAM):   end;
4113541   +end;
MPRINT(EM_DIAGRAM):   end;
4113542   +
4113543   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4113544   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4113545   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4113546   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4113547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113549   +end;
MPRINT(EM_DIAGRAM):   end;
4113550   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4113552   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4113553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113554   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4113555   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4113556   +   end;
MPRINT(EM_DIAGRAM):   end;
4113557   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4113558   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4113559   +   end;
MPRINT(EM_DIAGRAM):   end;
4113560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113561   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4113562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113564   +   end;
MPRINT(EM_DIAGRAM):   end;
4113565   +end;
MPRINT(EM_DIAGRAM):   end;
4113566   +
4113567   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4113568   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4113569   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4113570   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4113571   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4113572   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4113573   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4113574   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4113575   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4113576   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4113577   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4113578   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4113579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113581   +end;
MPRINT(EM_DIAGRAM):   end;
4113582   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113583   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4113584   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4113585   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113586   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4113587   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4113588   +   end;
MPRINT(EM_DIAGRAM):   end;
4113589   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4113590   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4113591   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4113592   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4113593   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4113594   +   end;
MPRINT(EM_DIAGRAM):   end;
4113595   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4113596   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4113597   +   end;
MPRINT(EM_DIAGRAM):   end;
4113598   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4113599   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4113600   +   end;
MPRINT(EM_DIAGRAM):   end;
4113601   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4113602   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4113603   +   end;
MPRINT(EM_DIAGRAM):   end;
4113604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113605   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4113606   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4113607   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4113608   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4113609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113611   +   end;
MPRINT(EM_DIAGRAM):   end;
4113612   +end;
MPRINT(EM_DIAGRAM):   end;
4113613   +
4113614   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4113615   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4113616   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4113617   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4113618   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4113619   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4113620   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4113621   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4113622   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4113623   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4113624   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4113625   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4113626   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4113627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4113628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113629   +end;
MPRINT(EM_DIAGRAM):   end;
4113630   +else do;
MPRINT(EM_DIAGRAM):   else do;
4113631   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4113632   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4113633   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4113634   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4113635   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4113636   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4113637   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4113638   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4113639   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4113640   +         end;
MPRINT(EM_DIAGRAM):   end;
4113641   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4113642   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4113643   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4113644   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4113645   +            end;
MPRINT(EM_DIAGRAM):   end;
4113646   +         end;
MPRINT(EM_DIAGRAM):   end;
4113647   +      end;
MPRINT(EM_DIAGRAM):   end;
4113648   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4113649   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4113650   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4113651   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4113652   +         end;
MPRINT(EM_DIAGRAM):   end;
4113653   +      end;
MPRINT(EM_DIAGRAM):   end;
4113654   +   end;
MPRINT(EM_DIAGRAM):   end;
4113655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4113656   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4113657   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4113658   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4113659   +      end;
MPRINT(EM_DIAGRAM):   end;
4113660   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4113661   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4113662   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4113663   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4113664   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4113665   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4113666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4113667   +         end;
MPRINT(EM_DIAGRAM):   end;
4113668   +      end;
MPRINT(EM_DIAGRAM):   end;
4113669   +   end;
MPRINT(EM_DIAGRAM):   end;
4113670   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4113671   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4113672   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4113673   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4113674   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4113675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4113676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113677   +   end;
MPRINT(EM_DIAGRAM):   end;
4113678   +end;
MPRINT(EM_DIAGRAM):   end;
4113679   +
4113680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113681   +*** Checking missing input Interval
4113682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4113683   +
4113684   +IF NMISS(
4113685   +   AcceptedCmpTotal ,
4113686   +   Age ,
4113687   +   Frq ,
4113688   +   Income ,
4113689   +   Kidhome ,
4113690   +   Mnt ,
4113691   +   MntFishProducts ,
4113692   +   MntFruits ,
4113693   +   MntGoldProds ,
4113694   +   MntMeatProducts ,
4113695   +   MntSweetProducts ,
4113696   +   MntWines ,
4113697   +   MonthsAsCustomer ,
4113698   +   NumCatalogPurchases ,
4113699   +   NumDealsPurchases ,
4113700   +   NumDistPurchases ,
4113701   +   NumStorePurchases ,
4113702   +   NumWebPurchases ,
4113703   +   NumWebVisitsMonth ,
4113704   +   RFMstat ,
4113705   +   RMntFrq ,
4113706   +   Recency ,
4113707   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4113708   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4113709   +
4113710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4113711   +END;
MPRINT(EM_DIAGRAM):   END;
4113712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113713   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4113714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113715   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4113716   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4113717   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4113718   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4113719   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4113720   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4113721   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4113722   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4113723   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4113724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4113725   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4113726   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4113727   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4113728   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4113729   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4113730   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4113731   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4113732   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4113733   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4113734   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4113735   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4113736   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4113737   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4113738   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4113739   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4113740   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4113741   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4113742   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4113743   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4113744   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4113745   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4113746   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4113747   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4113748   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4113749   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4113750   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4113751   +END;
MPRINT(EM_DIAGRAM):   END;
4113752   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4113753   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4113754   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4113755   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4113756   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4113757   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4113758   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4113759   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4113760   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4113761   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4113762   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4113763   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4113764   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4113765   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4113766   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4113767   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4113768   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4113769   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4113770   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4113771   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4113772   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4113773   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4113774   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4113775   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4113776   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4113777   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4113778   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4113779   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4113780   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4113781   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4113782   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4113783   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4113784   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4113785   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4113786   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4113787   +   ELSE S_NumCatalogPurchases
4113788   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4113789   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4113790   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4113791   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4113792   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4113793   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4113794   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4113795   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4113796   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4113797   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4113798   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4113799   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4113800   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4113801   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4113802   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4113803   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4113804   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4113805   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4113806   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4113807   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4113808   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4113809   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4113810   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4113811   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4113812   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4113813   +END;
MPRINT(EM_DIAGRAM):   END;
4113814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113815   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4113816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113818   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4113819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113821   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4113822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4113823   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4113824   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4113825   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4113826   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4113827   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4113828   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4113829   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4113830   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4113831   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4113832   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4113833   +          +     0.89422627895323 * S_NumDealsPurchases
4113834   +          +    -0.13304125929765 * S_NumDistPurchases
4113835   +          +    -1.04568442570811 * S_NumStorePurchases
4113836   +          +    -0.28677765126751 * S_NumWebPurchases
4113837   +          +      1.2327638737509 * S_NumWebVisitsMonth
4113838   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4113839   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4113840   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4113841   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4113842   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4113843   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4113844   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4113845   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4113846   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4113847   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4113848   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4113849   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4113850   +          +     0.04224590196535 * S_NumDealsPurchases
4113851   +          +     0.76554742700113 * S_NumDistPurchases
4113852   +          +    -0.49155496870812 * S_NumStorePurchases
4113853   +          +     0.59606812744403 * S_NumWebPurchases
4113854   +          +     1.86809286276405 * S_NumWebVisitsMonth
4113855   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4113856   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4113857   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4113858   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4113859   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4113860   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4113861   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4113862   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4113863   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4113864   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4113865   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4113866   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4113867   +          +    -0.04866536993486 * S_NumDealsPurchases
4113868   +          +    -0.53535979020214 * S_NumDistPurchases
4113869   +          +     2.20634071253676 * S_NumStorePurchases
4113870   +          +      0.6164564989007 * S_NumWebPurchases
4113871   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4113872   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4113873   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4113874   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4113875   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4113876   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4113877   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4113878   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4113879   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4113880   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4113881   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4113882   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4113883   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4113884   +          +     1.37461255707863 * S_NumDealsPurchases
4113885   +          +    -0.17684775000818 * S_NumDistPurchases
4113886   +          +    -0.62755623855535 * S_NumStorePurchases
4113887   +          +    -1.46551649022657 * S_NumWebPurchases
4113888   +          +     3.35784247878638 * S_NumWebVisitsMonth
4113889   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4113890   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4113891   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4113892   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4113893   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4113894   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4113895   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4113896   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4113897   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4113898   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4113899   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4113900   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4113901   +          +    -0.76256677907121 * S_NumDealsPurchases
4113902   +          +    -0.31591571751692 * S_NumDistPurchases
4113903   +          +      0.0506832614089 * S_NumStorePurchases
4113904   +          +      1.4636796923764 * S_NumWebPurchases
4113905   +          +     0.37743519705036 * S_NumWebVisitsMonth
4113906   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4113907   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4113908   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4113909   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4113910   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4113911   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4113912   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4113913   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4113914   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4113915   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4113916   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4113917   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4113918   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4113919   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4113920   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4113921   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4113922   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4113923   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4113924   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4113925   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4113926   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4113927   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4113928   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4113929   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4113930   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4113931   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4113932   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4113933   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4113934   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4113935   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4113936   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4113937   +          +     0.68641668264565 * Marital_StatusDivorced
4113938   +          +    -0.81586871439732 * Marital_StatusMarried
4113939   +          +     0.63758920518451 * Marital_StatusSingle
4113940   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4113941   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4113942   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4113943   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4113944   +          +     0.05137560133238 * Marital_StatusDivorced
4113945   +          +    -2.24401993266209 * Marital_StatusMarried
4113946   +          +     1.57359386216115 * Marital_StatusSingle
4113947   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4113948   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4113949   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4113950   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4113951   +          +     -1.0649987815942 * Marital_StatusDivorced
4113952   +          +     0.76065111692388 * Marital_StatusMarried
4113953   +          +    -0.21694149754801 * Marital_StatusSingle
4113954   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4113955   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4113956   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4113957   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4113958   +          +     2.02155453548328 * Marital_StatusDivorced
4113959   +          +    -2.60190649735306 * Marital_StatusMarried
4113960   +          +     1.09149388354927 * Marital_StatusSingle
4113961   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4113962   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4113963   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4113964   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4113965   +          +     0.66315970650309 * Marital_StatusDivorced
4113966   +          +    -1.20476729758152 * Marital_StatusMarried
4113967   +          +     0.56175027826397 * Marital_StatusSingle
4113968   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4113969   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4113970   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4113971   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4113972   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4113973   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4113974   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4113975   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4113976   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4113977   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4113978   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4113979   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4113980   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4113981   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4113982   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4113983   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4113984   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4113985   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4113986   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4113987   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4113988   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4113989   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4113990   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4113991   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4113992   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4113993   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4113994   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4113995   +END;
MPRINT(EM_DIAGRAM):   END;
4113996   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4113997   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4113998   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4113999   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4114000   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4114001   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4114002   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4114003   +END;
MPRINT(EM_DIAGRAM):   END;
4114004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114005   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4114006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4114008   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4114009   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4114010   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4114011   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4114012   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4114013   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4114014   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4114015   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4114016   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4114017   +          +     1.50005927423985 * S_NumDealsPurchases
4114018   +          +      0.5590536933569 * S_NumDistPurchases
4114019   +          +    -0.61757824339318 * S_NumStorePurchases
4114020   +          +     0.37259686538158 * S_NumWebPurchases
4114021   +          +     2.59725437895564 * S_NumWebVisitsMonth
4114022   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4114023   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4114024   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4114025   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4114026   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4114027   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4114028   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4114029   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4114030   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4114031   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4114032   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4114033   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4114034   +          +    -0.09282222088797 * S_NumDealsPurchases
4114035   +          +     0.10726247938321 * S_NumDistPurchases
4114036   +          +     -1.1235971458527 * S_NumStorePurchases
4114037   +          +    -0.78304387839877 * S_NumWebPurchases
4114038   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4114039   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4114040   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4114041   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4114042   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4114043   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4114044   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4114045   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4114046   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4114047   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4114048   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4114049   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4114050   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4114051   +          +     0.35349185459988 * S_NumDealsPurchases
4114052   +          +     0.06853677714859 * S_NumDistPurchases
4114053   +          +    -1.47546012999338 * S_NumStorePurchases
4114054   +          +     0.20926435398916 * S_NumWebPurchases
4114055   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4114056   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4114057   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4114058   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4114059   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4114060   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4114061   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4114062   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4114063   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4114064   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4114065   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4114066   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4114067   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4114068   +          +      0.3873586120272 * S_NumDealsPurchases
4114069   +          +     0.25911651157596 * S_NumDistPurchases
4114070   +          +     1.58922489084287 * S_NumStorePurchases
4114071   +          +     0.49041797743368 * S_NumWebPurchases
4114072   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4114073   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4114074   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4114075   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4114076   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4114077   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4114078   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4114079   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4114080   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4114081   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4114082   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4114083   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4114084   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4114085   +          +    -0.60830880287865 * S_NumDealsPurchases
4114086   +          +      0.0745331267194 * S_NumDistPurchases
4114087   +          +    -1.39472448256952 * S_NumStorePurchases
4114088   +          +     1.95372179969087 * S_NumWebPurchases
4114089   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4114090   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4114091   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4114092   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4114093   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4114094   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4114095   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4114096   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4114097   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4114098   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4114099   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4114100   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4114101   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4114102   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4114103   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4114104   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4114105   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4114106   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4114107   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4114108   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4114109   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4114110   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4114111   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4114112   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4114113   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4114114   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4114115   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4114116   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4114117   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4114118   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4114119   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4114120   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4114121   +          +    -1.33377871643323 * Marital_StatusDivorced
4114122   +          +    -0.87184228840898 * Marital_StatusMarried
4114123   +          +     1.41223186340257 * Marital_StatusSingle
4114124   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4114125   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4114126   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4114127   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4114128   +          +    -0.21479890935233 * Marital_StatusDivorced
4114129   +          +     -0.0025459519579 * Marital_StatusMarried
4114130   +          +     1.33900491702264 * Marital_StatusSingle
4114131   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4114132   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4114133   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4114134   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4114135   +          +    -0.38307267471999 * Marital_StatusDivorced
4114136   +          +     0.97088969451415 * Marital_StatusMarried
4114137   +          +    -0.28578224473381 * Marital_StatusSingle
4114138   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4114139   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4114140   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4114141   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4114142   +          +    -1.42229401093569 * Marital_StatusDivorced
4114143   +          +      0.7234508382397 * Marital_StatusMarried
4114144   +          +    -0.29062202974628 * Marital_StatusSingle
4114145   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4114146   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4114147   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4114148   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4114149   +          +    -0.99067637207205 * Marital_StatusDivorced
4114150   +          +    -0.50245902142079 * Marital_StatusMarried
4114151   +          +     0.54214494533793 * Marital_StatusSingle
4114152   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4114153   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4114154   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4114155   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4114156   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4114157   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4114158   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4114159   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4114160   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4114161   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4114162   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4114163   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4114164   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4114165   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4114166   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4114167   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4114168   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4114169   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4114170   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4114171   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4114172   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4114173   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4114174   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4114175   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4114176   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4114177   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4114178   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4114179   +END;
MPRINT(EM_DIAGRAM):   END;
4114180   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4114181   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4114182   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4114183   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4114184   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4114185   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4114186   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4114187   +END;
MPRINT(EM_DIAGRAM):   END;
4114188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114189   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4114190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114191   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4114192   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4114193   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4114194   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4114195   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4114196   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4114197   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4114198   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4114199   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4114200   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4114201   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4114202   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4114203   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4114204   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4114205   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4114206   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4114207   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4114208   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4114209   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4114210   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4114211   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4114212   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4114213   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4114214   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4114215   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4114216   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4114217   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4114218   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4114219   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4114220   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4114221   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4114222   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4114223   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4114224   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4114225   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4114226   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4114227   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4114228   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4114229   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4114230   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4114231   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4114232   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4114233   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4114234   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4114235   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4114236   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4114237   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4114238   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4114239   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4114240   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4114241   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4114242   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4114243   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4114244   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4114245   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4114246   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4114247   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4114248   +END;
MPRINT(EM_DIAGRAM):   END;
4114249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4114250   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4114251   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4114252   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4114253   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4114254   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4114255   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4114256   +END;
MPRINT(EM_DIAGRAM):   END;
4114257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114258   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4114259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114260   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4114261   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4114262   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4114263   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4114264   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4114265   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4114266   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4114267   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4114268   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4114269   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4114270   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4114271   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4114272   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4114273   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4114274   +END;
MPRINT(EM_DIAGRAM):   END;
4114275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4114276   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4114277   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4114278   +END;
MPRINT(EM_DIAGRAM):   END;
4114279   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4114280   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4114281   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4114282   +END;
MPRINT(EM_DIAGRAM):   END;
4114283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114284   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4114285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4114286   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4114287   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4114288   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4114289   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4114290   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4114291   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4114292   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4114293   +END;
MPRINT(EM_DIAGRAM):   END;
4114294   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4114295   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4114296   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4114297   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4114298    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4114299    quit;
4114300    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4114301    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4114302    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4114303    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
4114304    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4114305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114306    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4114307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114309    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
4114310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114312    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114313    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4114314    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4114315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114316    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
4114317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4114318    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4114319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114321    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114322    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4114323    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114324    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114325    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4114326    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4114326  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
The SAS System
 
4114327    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114328    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4114329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114330    filename _pref
4114330  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4114331    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4114332    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4114333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4114334   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4114335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4114336   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4114337   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4114338   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4114339    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4114340    quit;
4114341    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4114342    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4114343    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4114344    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4114345    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4114346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114347    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4114348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114350    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4114351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114353    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114354    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4114355    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4114356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114357    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4114358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4114359    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4114360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114363    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4114364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114365    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114366    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4114367    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4114367  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4114368    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114369    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4114370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114371    filename _pref
4114371  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4114372    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4114373    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4114374   +
4114375   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4114376   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4114376  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4114377   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4114378   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4114379   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4114380   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4114381   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4114382    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4114383    quit;
4114384    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4114385    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4114386    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4114387    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4114388    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4114389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114390    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4114391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114393    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4114394    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114396    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114397    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4114398    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4114399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114400    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4114401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114402    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4114403    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114405    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114406    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4114407    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114408    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114409    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4114410    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4114410  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4114411    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114412    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4114413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114414    filename _pref
4114414  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4114415    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4114416    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4114417   +
4114418   +
4114419   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4114420   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4114421   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4114422   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4114423   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4114424   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114425   +
4114426   +
4114427   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4114428   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4114429   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4114430   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4114431   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4114432   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114433   +
4114434   +
4114435   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4114436   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4114437   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4114438   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4114439   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4114440   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114441   +
4114442   +
4114443   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4114444   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4114445   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4114446   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4114447   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4114448   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114449   +
4114450   +
4114451   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4114452   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4114453   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4114454   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4114455   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4114456   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114457   +
4114458   +
4114459   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4114460   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4114461   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4114462   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4114463   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4114464   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114465   +
4114466   +
4114467   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4114468   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4114469   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4114470   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4114471   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4114472   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114473   +
4114474   +
4114475   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4114476   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4114477   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4114478   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4114479   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4114480   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4114481   +if
4114482   +_FILTERNORM1 not in ( '.')
4114483   + and
4114484   +_FILTERNORM2 not in ( '.')
4114485   + and
4114486   +_FILTERNORM3 not in ( '.')
4114487   + and
4114488   +_FILTERNORM4 not in ( '.')
4114489   + and
4114490   +_FILTERNORM5 not in ( '.')
4114491   + and
4114492   +_FILTERNORM6 not in ( '.')
4114493   + and
4114494   +_FILTERNORM7 not in ( ' ')
4114495   + and
4114496   +_FILTERNORM8 not in ( ' ')
4114497   +and
4114498   +( Dt_Customer ne .)
4114499   +and ( Income ne . and (Income<=107000))
4114500   +and ( Kidhome ne .)
4114501   +and ( MntFishProducts ne .)
4114502   +and ( MntFruits ne .)
4114503   +and ( MntGoldProds ne .)
4114504   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4114505   +and ( MntSweetProducts ne .)
4114506   +and ( MntWines ne .)
4114507   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4114508   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4114509   +and ( NumStorePurchases ne .)
4114510   +and ( NumWebPurchases ne .)
4114511   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4114512   +and ( Recency ne .)
4114513   +and ( Teenhome ne .)
4114514   +and ( Year_Birth ne .)
4114515   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4114516   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4114517   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4114518   +end;
MPRINT(EM_DIAGRAM):   end;
4114519   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4114520   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4114521    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4114522    quit;
4114523    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4114524    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4114525    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4114526    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4114527    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4114528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114529    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4114530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114532    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4114533    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114535    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114536    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4114537    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4114538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114539    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4114540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4114541    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4114542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114544    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4114545    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4114546    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4114547    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114548    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4114549    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4114549  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4114550    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114551    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4114552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114553    %macro varDept(fcmpdata=,id=);
4114554    %global nobs&id scoreFlag&id;
4114555    %let scoreFlag&id = 0;
4114556    %if &id=1 or ^&fcmpStart %then %do;
4114557    proc sort data=&fcmpdata out=_temp&id nodupkey;
4114558    by NAME;
4114559    where id=&id and LHS in( %let j=1;
4114560    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4114561    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4114562    "&var" %let j = %eval(&j+1);
4114563    %end;
4114564    );
4114565    run;
4114566    %let dsid = %sysfunc(open(_temp&id));
4114567    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4114568    %let dsid = %sysfunc(close(&dsid));
4114569    %if &&nobs&id %then %do;
4114570    %let scoreFlag&id = 1;
4114571    %let fcmpStart = 1;
4114572    %end;
4114573    %else %let fcmpStart = 0;
4114574    %end;
4114575    %else %do;
4114576    proc sort data=&fcmpdata out=_tempid;
4114577    where id=&id;
4114578    by LHS;
4114579    run;
4114580    %let dsid = %sysfunc(open(_tempid));
4114581    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4114582    %let dsid = %sysfunc(close(&dsid));
4114583    %if ^&&nobs&id %then %do;
4114584    proc datasets lib=work nolist;
4114585    delete _tempid;
4114586    run;
4114587    quit;
4114588    %end;
4114589    %else %do;
4114590    data _tempAll;
4114591    set %let j=%eval(&id-1);
4114592    %do x=1 %to &j;
4114593    %if &&nobs&x %then %do;
4114594    _temp&x %end;
4114595    %end;
4114596    ;
4114597    run;
4114598    proc sql;
4114599    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4114599  ! work._tempid p2 where p.name=p2.lhs;
4114600    quit;
4114601    data _temp&id;
4114602    set _temp&id;
4114603    where LHS ne '' and NAME ne '' and Node ne '';
4114604    run;
4114605    proc datasets lib=work nolist;
4114606    delete _tempAll;
4114607    run;
4114608    %let dsid = %sysfunc(open(_temp&id));
4114609    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4114610    %let dsid = %sysfunc(close(&dsid));
4114611    %if ^&&nobs&id %then %do;
4114612    proc datasets lib=work nolist;
4114613    delete _temp&id;
4114614    run;
4114615    quit;
4114616    %end;
4114617    %else %do;
4114618    %let scoreFlag&id = 1;
4114619    data _temp&id;
4114620    set _temp&id;
4114621    where LHS ne NAME and node ne '';
4114622    run;
4114623    %let dsid = %sysfunc(open(_temp&id));
4114624    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4114625    %let dsid = %sysfunc(close(&dsid));
4114626    %if ^&&nobs&id %then %do;
4114627    proc datasets lib=work nolist;
4114628    delete _temp&id;
4114629    run;
4114630    quit;
4114631    %end;
4114632    %else %do;
4114633    proc sort data=_temp&id nodupkey;
4114634    by LHS NAME;
4114635    run;
4114636    %end;
4114637    %end;
4114638    %end;
4114639    %end;
4114640    %mend varDept;
4114641    %macro optCode(outdata=fcmpdata);
4114642    %global fcmpStart;
4114643    %let fcmpStart = 0;
4114644    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4114645    %let NumNodes=9;
4114646    %do k=1 %to &NumNodes;
4114647    %vardept(fcmpdata=&outdata, id=&k);
4114648    %end;
4114649    %mend optCode;
4114650    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4114651    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4114652    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4114653    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4114654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114655    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4114656    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4114657    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4114658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4114659    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4114660    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4114660  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4114661    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114662    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4114663    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4114664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4114665    filename _pref
4114665  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
4114666    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4114667    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
4114668   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4114669   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4114670   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4114671   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4114672   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4114673   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4114674   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4114675   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4114676   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4114677   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4114678   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4114679   +LENGTH _WARN_ $4
4114680   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4114681   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4114682   +
4114683   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4114684   +
4114685   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4114686   +
4114687   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4114688   +
4114689   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4114690   +
4114691   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4114692   +
4114693   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4114694   +
4114695   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4114696   +
4114697   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4114698   +
4114699   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4114700   +
4114701   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4114702   +
4114703   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4114704   +
4114705   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4114706   +
4114707   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4114708   +
4114709   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4114710   +
4114711   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4114712   +
4114713   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4114714   +
4114715   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4114716   +
4114717   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4114718   +
4114719   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4114720   +
4114721   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4114722   +
4114723   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4114724   +
4114725   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4114726   +
4114727   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4114728   +
4114729   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4114730   +
4114731   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4114732   +
4114733   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4114734   +
4114735   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4114736   +
4114737   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4114738   +
4114739   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4114740   +
4114741   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4114742   +
4114743   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4114744   +
4114745   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4114746   +
4114747   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4114748   +
4114749   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4114750   +
4114751   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4114752   +
4114753   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4114754   +
4114755   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4114756   +
4114757   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4114758   +
4114759   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4114760   +
4114761   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4114762   +
4114763   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4114764   +
4114765   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4114766   +
4114767   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4114768   +
4114769   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4114770   +
4114771   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4114772   +
4114773   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4114774   +
4114775   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4114776   +
4114777   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4114778   +
4114779   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4114780   +
4114781   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4114782   +
4114783   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4114784   +
4114785   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4114786   +
4114787   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4114788   +
4114789   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4114790   +
4114791   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4114792   +
4114793   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4114794   +
4114795   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4114796   +
4114797   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4114798   +
4114799   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4114800   +
4114801   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4114802   +
4114803   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4114804   +
4114805   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4114806   +
4114807   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4114808   +
4114809   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4114810   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4114811   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4114812   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4114813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114815   +end;
MPRINT(EM_DIAGRAM):   end;
4114816   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114818   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4114819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114820   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114821   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4114822   +   end;
MPRINT(EM_DIAGRAM):   end;
4114823   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114824   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4114825   +   end;
MPRINT(EM_DIAGRAM):   end;
4114826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114827   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4114828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114830   +   end;
MPRINT(EM_DIAGRAM):   end;
4114831   +end;
MPRINT(EM_DIAGRAM):   end;
4114832   +
4114833   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4114834   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4114835   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4114836   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4114837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114839   +end;
MPRINT(EM_DIAGRAM):   end;
4114840   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114842   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4114843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114844   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114845   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4114846   +   end;
MPRINT(EM_DIAGRAM):   end;
4114847   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114848   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4114849   +   end;
MPRINT(EM_DIAGRAM):   end;
4114850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114851   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4114852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114854   +   end;
MPRINT(EM_DIAGRAM):   end;
4114855   +end;
MPRINT(EM_DIAGRAM):   end;
4114856   +
4114857   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4114858   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4114859   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4114860   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4114861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114863   +end;
MPRINT(EM_DIAGRAM):   end;
4114864   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114865   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114866   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4114867   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114868   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114869   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4114870   +   end;
MPRINT(EM_DIAGRAM):   end;
4114871   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114872   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4114873   +   end;
MPRINT(EM_DIAGRAM):   end;
4114874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114875   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4114876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114878   +   end;
MPRINT(EM_DIAGRAM):   end;
4114879   +end;
MPRINT(EM_DIAGRAM):   end;
4114880   +
4114881   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4114882   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4114883   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4114884   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4114885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114887   +end;
MPRINT(EM_DIAGRAM):   end;
4114888   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114889   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114890   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4114891   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114892   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114893   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4114894   +   end;
MPRINT(EM_DIAGRAM):   end;
4114895   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114896   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4114897   +   end;
MPRINT(EM_DIAGRAM):   end;
4114898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114899   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4114900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114902   +   end;
MPRINT(EM_DIAGRAM):   end;
4114903   +end;
MPRINT(EM_DIAGRAM):   end;
4114904   +
4114905   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4114906   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4114907   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4114908   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4114909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114911   +end;
MPRINT(EM_DIAGRAM):   end;
4114912   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114913   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114914   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4114915   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114916   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114917   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4114918   +   end;
MPRINT(EM_DIAGRAM):   end;
4114919   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114920   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4114921   +   end;
MPRINT(EM_DIAGRAM):   end;
4114922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114923   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4114924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114926   +   end;
MPRINT(EM_DIAGRAM):   end;
4114927   +end;
MPRINT(EM_DIAGRAM):   end;
4114928   +
4114929   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4114930   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4114931   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4114932   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4114933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114935   +end;
MPRINT(EM_DIAGRAM):   end;
4114936   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114938   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4114939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114940   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4114941   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4114942   +   end;
MPRINT(EM_DIAGRAM):   end;
4114943   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4114944   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4114945   +   end;
MPRINT(EM_DIAGRAM):   end;
4114946   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114947   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4114948   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114949   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114950   +   end;
MPRINT(EM_DIAGRAM):   end;
4114951   +end;
MPRINT(EM_DIAGRAM):   end;
4114952   +
4114953   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4114954   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4114955   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4114956   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4114957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114959   +end;
MPRINT(EM_DIAGRAM):   end;
4114960   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4114962   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4114963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114964   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4114965   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4114966   +   end;
MPRINT(EM_DIAGRAM):   end;
4114967   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4114968   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4114969   +   end;
MPRINT(EM_DIAGRAM):   end;
4114970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4114971   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4114972   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4114973   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114974   +   end;
MPRINT(EM_DIAGRAM):   end;
4114975   +end;
MPRINT(EM_DIAGRAM):   end;
4114976   +
4114977   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4114978   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4114979   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4114980   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4114981   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4114982   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4114983   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4114984   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4114985   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4114986   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4114987   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4114988   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4114989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4114990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4114991   +end;
MPRINT(EM_DIAGRAM):   end;
4114992   +else do;
MPRINT(EM_DIAGRAM):   else do;
4114993   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4114994   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4114995   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4114996   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4114997   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4114998   +   end;
MPRINT(EM_DIAGRAM):   end;
4114999   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4115000   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4115001   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4115002   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4115003   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4115004   +   end;
MPRINT(EM_DIAGRAM):   end;
4115005   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4115006   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4115007   +   end;
MPRINT(EM_DIAGRAM):   end;
4115008   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4115009   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4115010   +   end;
MPRINT(EM_DIAGRAM):   end;
4115011   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4115012   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4115013   +   end;
MPRINT(EM_DIAGRAM):   end;
4115014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4115015   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4115016   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4115017   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4115018   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4115019   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4115020   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4115021   +   end;
MPRINT(EM_DIAGRAM):   end;
4115022   +end;
MPRINT(EM_DIAGRAM):   end;
4115023   +
4115024   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4115025   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4115026   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4115027   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4115028   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4115029   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4115030   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4115031   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4115032   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4115033   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4115034   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4115035   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4115036   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4115037   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4115038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4115039   +end;
MPRINT(EM_DIAGRAM):   end;
4115040   +else do;
MPRINT(EM_DIAGRAM):   else do;
4115041   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4115042   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4115043   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4115044   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4115045   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4115046   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4115047   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4115048   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4115049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4115050   +         end;
MPRINT(EM_DIAGRAM):   end;
4115051   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4115052   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4115053   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4115054   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4115055   +            end;
MPRINT(EM_DIAGRAM):   end;
4115056   +         end;
MPRINT(EM_DIAGRAM):   end;
4115057   +      end;
MPRINT(EM_DIAGRAM):   end;
4115058   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4115059   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4115060   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4115061   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4115062   +         end;
MPRINT(EM_DIAGRAM):   end;
4115063   +      end;
MPRINT(EM_DIAGRAM):   end;
4115064   +   end;
MPRINT(EM_DIAGRAM):   end;
4115065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4115066   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4115067   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4115068   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4115069   +      end;
MPRINT(EM_DIAGRAM):   end;
4115070   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4115071   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4115072   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4115073   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4115074   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4115075   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4115076   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4115077   +         end;
MPRINT(EM_DIAGRAM):   end;
4115078   +      end;
MPRINT(EM_DIAGRAM):   end;
4115079   +   end;
MPRINT(EM_DIAGRAM):   end;
4115080   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4115081   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4115082   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4115083   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4115084   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4115085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4115086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4115087   +   end;
MPRINT(EM_DIAGRAM):   end;
4115088   +end;
MPRINT(EM_DIAGRAM):   end;
4115089   +
4115090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115091   +*** Checking missing input Interval
4115092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4115093   +
4115094   +IF NMISS(
4115095   +   AcceptedCmpTotal ,
4115096   +   Age ,
4115097   +   Frq ,
4115098   +   Income ,
4115099   +   Kidhome ,
4115100   +   Mnt ,
4115101   +   MntFishProducts ,
4115102   +   MntFruits ,
4115103   +   MntGoldProds ,
4115104   +   MntMeatProducts ,
4115105   +   MntSweetProducts ,
4115106   +   MntWines ,
4115107   +   MonthsAsCustomer ,
4115108   +   NumCatalogPurchases ,
4115109   +   NumDealsPurchases ,
4115110   +   NumDistPurchases ,
4115111   +   NumStorePurchases ,
4115112   +   NumWebPurchases ,
4115113   +   NumWebVisitsMonth ,
4115114   +   RFMstat ,
4115115   +   RMntFrq ,
4115116   +   Recency ,
4115117   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4115118   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4115119   +
4115120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4115121   +END;
MPRINT(EM_DIAGRAM):   END;
4115122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115123   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4115124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115125   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4115126   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4115127   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4115128   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4115129   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4115130   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4115131   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4115132   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4115133   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4115134   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4115135   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4115136   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4115137   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4115138   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4115139   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4115140   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4115141   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4115142   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4115143   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4115144   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4115145   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4115146   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4115147   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4115148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4115149   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4115150   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4115151   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4115152   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4115153   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4115154   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4115155   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4115156   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4115157   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4115158   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4115159   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4115160   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4115161   +END;
MPRINT(EM_DIAGRAM):   END;
4115162   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4115163   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4115164   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4115165   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4115166   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4115167   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4115168   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4115169   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4115170   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4115171   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4115172   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4115173   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4115174   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4115175   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4115176   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4115177   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4115178   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4115179   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4115180   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4115181   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4115182   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4115183   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4115184   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4115185   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4115186   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4115187   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4115188   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4115189   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4115190   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4115191   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4115192   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4115193   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4115194   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4115195   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4115196   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4115197   +   ELSE S_NumCatalogPurchases
4115198   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4115199   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4115200   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4115201   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4115202   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4115203   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4115204   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4115205   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4115206   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4115207   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4115208   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4115209   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4115210   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4115211   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4115212   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4115213   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4115214   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4115215   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4115216   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4115217   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4115218   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4115219   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4115220   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4115221   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4115222   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4115223   +END;
MPRINT(EM_DIAGRAM):   END;
4115224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115225   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4115226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115228   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4115229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115231   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4115232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115233   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4115234   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4115235   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4115236   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4115237   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4115238   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4115239   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4115240   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4115241   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4115242   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4115243   +          +     1.17276395296242 * S_NumDealsPurchases
4115244   +          +     0.26632768295477 * S_NumDistPurchases
4115245   +          +    -1.26575615903579 * S_NumStorePurchases
4115246   +          +    -0.95316107557927 * S_NumWebPurchases
4115247   +          +     1.01828574356487 * S_NumWebVisitsMonth
4115248   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4115249   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4115250   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4115251   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4115252   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4115253   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4115254   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4115255   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4115256   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4115257   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4115258   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4115259   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4115260   +          +     1.14485571201233 * S_NumDealsPurchases
4115261   +          +     0.21414266588987 * S_NumDistPurchases
4115262   +          +    -0.10530090074297 * S_NumStorePurchases
4115263   +          +    -0.41712321238458 * S_NumWebPurchases
4115264   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4115265   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4115266   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4115267   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4115268   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4115269   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4115270   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4115271   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4115272   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4115273   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4115274   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4115275   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4115276   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4115277   +          +      0.7196418967437 * S_NumDealsPurchases
4115278   +          +     0.69035286374177 * S_NumDistPurchases
4115279   +          +     0.38027656631135 * S_NumStorePurchases
4115280   +          +    -0.18878358997924 * S_NumWebPurchases
4115281   +          +     1.61962062004798 * S_NumWebVisitsMonth
4115282   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4115283   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4115284   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4115285   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4115286   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4115287   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4115288   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4115289   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4115290   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4115291   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4115292   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4115293   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4115294   +          +    -0.00642902007204 * S_NumDealsPurchases
4115295   +          +     0.29785069480367 * S_NumDistPurchases
4115296   +          +    -0.42243322063147 * S_NumStorePurchases
4115297   +          +     0.54880896338383 * S_NumWebPurchases
4115298   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4115299   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4115300   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4115301   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4115302   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4115303   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4115304   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4115305   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4115306   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4115307   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4115308   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4115309   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4115310   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4115311   +          +    -0.48404738328225 * S_NumDealsPurchases
4115312   +          +    -0.02464180457879 * S_NumDistPurchases
4115313   +          +     1.17201831082067 * S_NumStorePurchases
4115314   +          +     0.57453655167516 * S_NumWebPurchases
4115315   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4115316   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4115317   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4115318   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4115319   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4115320   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4115321   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4115322   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4115323   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4115324   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4115325   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4115326   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4115327   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4115328   +          +    -1.49850531967483 * S_NumDealsPurchases
4115329   +          +    -0.82105466264223 * S_NumDistPurchases
4115330   +          +     0.29984603642824 * S_NumStorePurchases
4115331   +          +     0.06557123721611 * S_NumWebPurchases
4115332   +          +     1.04754749365002 * S_NumWebVisitsMonth
4115333   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4115334   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4115335   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4115336   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4115337   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4115338   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4115339   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4115340   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4115341   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4115342   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4115343   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4115344   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4115345   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4115346   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4115347   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4115348   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4115349   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4115350   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4115351   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4115352   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4115353   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4115354   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4115355   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4115356   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4115357   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4115358   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4115359   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4115360   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4115361   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4115362   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4115363   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4115364   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4115365   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4115366   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4115367   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4115368   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4115369   +          +     0.24583509957712 * Marital_StatusDivorced
4115370   +          +    -0.22681931588361 * Marital_StatusMarried
4115371   +          +    -0.12924106229536 * Marital_StatusSingle
4115372   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4115373   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4115374   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4115375   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4115376   +          +    -0.12585334311068 * Marital_StatusDivorced
4115377   +          +    -0.20835502467207 * Marital_StatusMarried
4115378   +          +    -0.13839534449368 * Marital_StatusSingle
4115379   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4115380   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4115381   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4115382   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4115383   +          +     0.35106363238113 * Marital_StatusDivorced
4115384   +          +     -1.3414808583918 * Marital_StatusMarried
4115385   +          +     1.40835320798486 * Marital_StatusSingle
4115386   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4115387   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4115388   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4115389   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4115390   +          +     0.48174546958393 * Marital_StatusDivorced
4115391   +          +    -0.41416978858191 * Marital_StatusMarried
4115392   +          +    -0.23376801546265 * Marital_StatusSingle
4115393   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4115394   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4115395   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4115396   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4115397   +          +    -0.67557643774246 * Marital_StatusDivorced
4115398   +          +     1.63844045917367 * Marital_StatusMarried
4115399   +          +    -0.70320960247699 * Marital_StatusSingle
4115400   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4115401   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4115402   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4115403   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4115404   +          +    -0.11371453086883 * Marital_StatusDivorced
4115405   +          +    -0.34226997176291 * Marital_StatusMarried
4115406   +          +    -1.01568676685754 * Marital_StatusSingle
4115407   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4115408   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4115409   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4115410   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4115411   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4115412   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4115413   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4115414   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4115415   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4115416   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4115417   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4115418   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4115419   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4115420   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4115421   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4115422   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4115423   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4115424   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4115425   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4115426   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4115427   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4115428   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4115429   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4115430   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4115431   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4115432   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4115433   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4115434   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4115435   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4115436   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4115437   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4115438   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4115439   +END;
MPRINT(EM_DIAGRAM):   END;
4115440   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4115441   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4115442   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4115443   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4115444   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4115445   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4115446   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4115447   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4115448   +END;
MPRINT(EM_DIAGRAM):   END;
4115449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115450   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4115451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115452   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4115453   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4115454   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4115455   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4115456   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4115457   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4115458   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4115459   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4115460   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4115461   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4115462   +          +    -0.87259051567474 * S_NumDealsPurchases
4115463   +          +    -0.36454149529139 * S_NumDistPurchases
4115464   +          +     0.12447759925061 * S_NumStorePurchases
4115465   +          +    -1.08133487947367 * S_NumWebPurchases
4115466   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4115467   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4115468   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4115469   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4115470   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4115471   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4115472   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4115473   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4115474   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4115475   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4115476   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4115477   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4115478   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4115479   +          +     2.23121497416403 * S_NumDealsPurchases
4115480   +          +    -0.48674842191071 * S_NumDistPurchases
4115481   +          +     1.77510728607544 * S_NumStorePurchases
4115482   +          +     0.14647433155436 * S_NumWebPurchases
4115483   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4115484   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4115485   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4115486   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4115487   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4115488   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4115489   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4115490   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4115491   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4115492   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4115493   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4115494   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4115495   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4115496   +          +     0.14338855349611 * S_NumDealsPurchases
4115497   +          +    -2.21071010829235 * S_NumDistPurchases
4115498   +          +    -0.21795889348002 * S_NumStorePurchases
4115499   +          +     1.98825087883535 * S_NumWebPurchases
4115500   +          +     1.02482442531149 * S_NumWebVisitsMonth
4115501   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4115502   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4115503   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4115504   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4115505   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4115506   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4115507   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4115508   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4115509   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4115510   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4115511   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4115512   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4115513   +          +     0.30041205661012 * S_NumDealsPurchases
4115514   +          +    -0.63499849986918 * S_NumDistPurchases
4115515   +          +    -0.34155713433714 * S_NumStorePurchases
4115516   +          +    -1.14183354933936 * S_NumWebPurchases
4115517   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4115518   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4115519   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4115520   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4115521   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4115522   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4115523   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4115524   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4115525   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4115526   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4115527   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4115528   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4115529   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4115530   +          +    -0.21237915559831 * S_NumDealsPurchases
4115531   +          +     0.48256923764182 * S_NumDistPurchases
4115532   +          +    -0.45553093140641 * S_NumStorePurchases
4115533   +          +      0.5593655963659 * S_NumWebPurchases
4115534   +          +     0.27943768691188 * S_NumWebVisitsMonth
4115535   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4115536   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4115537   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4115538   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4115539   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4115540   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4115541   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4115542   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4115543   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4115544   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4115545   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4115546   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4115547   +          +     2.38967021388062 * S_NumDealsPurchases
4115548   +          +    -0.97722398866481 * S_NumDistPurchases
4115549   +          +     1.57612333191312 * S_NumStorePurchases
4115550   +          +    -0.75968679115983 * S_NumWebPurchases
4115551   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4115552   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4115553   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4115554   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4115555   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4115556   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4115557   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4115558   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4115559   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4115560   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4115561   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4115562   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4115563   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4115564   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4115565   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4115566   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4115567   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4115568   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4115569   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4115570   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4115571   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4115572   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4115573   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4115574   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4115575   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4115576   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4115577   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4115578   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4115579   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4115580   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4115581   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4115582   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4115583   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4115584   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4115585   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4115586   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4115587   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4115588   +          +     0.96470902298142 * Marital_StatusDivorced
4115589   +          +     0.94805959268314 * Marital_StatusMarried
4115590   +          +     -0.6523948769616 * Marital_StatusSingle
4115591   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4115592   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4115593   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4115594   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4115595   +          +      0.3918249505531 * Marital_StatusDivorced
4115596   +          +    -0.00968091979586 * Marital_StatusMarried
4115597   +          +     0.84615379885071 * Marital_StatusSingle
4115598   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4115599   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4115600   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4115601   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4115602   +          +     1.14335160313191 * Marital_StatusDivorced
4115603   +          +     0.50580517192175 * Marital_StatusMarried
4115604   +          +     0.17264295020921 * Marital_StatusSingle
4115605   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4115606   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4115607   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4115608   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4115609   +          +    -0.11238504444225 * Marital_StatusDivorced
4115610   +          +    -0.81348274043749 * Marital_StatusMarried
4115611   +          +     0.46075415610001 * Marital_StatusSingle
4115612   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4115613   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4115614   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4115615   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4115616   +          +    -0.46342068701431 * Marital_StatusDivorced
4115617   +          +    -0.41667845270204 * Marital_StatusMarried
4115618   +          +    -0.47166707496281 * Marital_StatusSingle
4115619   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4115620   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4115621   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4115622   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4115623   +          +    -0.45376613787812 * Marital_StatusDivorced
4115624   +          +     0.01337046049801 * Marital_StatusMarried
4115625   +          +    -0.92811489484121 * Marital_StatusSingle
4115626   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4115627   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4115628   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4115629   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4115630   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4115631   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4115632   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4115633   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4115634   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4115635   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4115636   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4115637   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4115638   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4115639   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4115640   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4115641   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4115642   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4115643   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4115644   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4115645   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4115646   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4115647   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4115648   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4115649   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4115650   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4115651   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4115652   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4115653   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4115654   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4115655   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4115656   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4115657   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4115658   +END;
MPRINT(EM_DIAGRAM):   END;
4115659   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4115660   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4115661   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4115662   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4115663   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4115664   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4115665   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4115666   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4115667   +END;
MPRINT(EM_DIAGRAM):   END;
4115668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115669   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4115670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115671   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4115672   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4115673   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4115674   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4115675   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4115676   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4115677   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4115678   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4115679   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4115680   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4115681   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4115682   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4115683   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4115684   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4115685   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4115686   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4115687   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4115688   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4115689   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4115690   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4115691   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4115692   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4115693   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4115694   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4115695   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4115696   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4115697   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4115698   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4115699   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4115700   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4115701   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4115702   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4115703   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4115704   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4115705   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4115706   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4115707   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4115708   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4115709   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4115710   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4115711   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4115712   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4115713   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4115714   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4115715   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4115716   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4115717   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4115718   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4115719   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4115720   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4115721   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4115722   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4115723   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4115724   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4115725   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4115726   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4115727   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4115728   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4115729   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4115730   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4115731   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4115732   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4115733   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4115734   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4115735   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4115736   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4115737   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4115738   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4115739   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4115740   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4115741   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4115742   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4115743   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4115744   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4115745   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4115746   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4115747   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4115748   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4115749   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4115750   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4115751   +END;
MPRINT(EM_DIAGRAM):   END;
4115752   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4115753   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4115754   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4115755   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4115756   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4115757   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4115758   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4115759   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4115760   +END;
MPRINT(EM_DIAGRAM):   END;
4115761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115762   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4115763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4115765   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4115766   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4115767   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4115768   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4115769   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4115770   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4115771   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4115772   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4115773   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4115774   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4115775   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4115776   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4115777   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4115778   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4115779   +END;
MPRINT(EM_DIAGRAM):   END;
4115780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4115781   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4115782   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4115783   +END;
MPRINT(EM_DIAGRAM):   END;
4115784   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4115785   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4115786   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4115787   +END;
MPRINT(EM_DIAGRAM):   END;
4115788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115789   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4115790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4115791   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4115792   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4115793   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4115794   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4115795   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4115796   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4115797   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4115798   +END;
MPRINT(EM_DIAGRAM):   END;
4115799   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4115800   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4115801   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4115802   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4115803    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4115804    quit;
4115805    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4115806    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4115807    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4115808    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
4115809    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4115810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115811    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4115812    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4115814    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
4115815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115817    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115818    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4115819    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4115820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115821    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
4115822    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
4115823    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4115824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115826    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115827    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4115828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115829    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115830    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4115831    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4115831  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.
 
4115832    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115833    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4115834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4115835    filename _pref
4115835  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4115836    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4115837    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4115838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4115839   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4115840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4115841   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4115842   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4115843   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4115844    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4115845    quit;
4115846    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4115847    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4115848    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4115849    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4115850    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4115851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115852    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4115853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115855    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4115856    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115858    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115859    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4115860    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4115861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115862    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4115863    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4115864    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4115865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115866    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115867    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115868    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4115869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115870    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115871    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4115872    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4115872  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4115873    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115874    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4115875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115876    filename _pref
4115876  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4115877    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4115878    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4115879   +
4115880   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4115881   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4115881  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4115882   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4115883   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4115884   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4115885   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4115886   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4115887    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4115888    quit;
4115889    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4115890    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4115891    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4115892    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4115893    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4115894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115895    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4115896    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115897    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115898    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4115899    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115901    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115902    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4115903    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4115904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115905    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4115906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115907    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4115908    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115910    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4115911    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4115912    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4115913    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4115914    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4115915    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4115915  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4115916    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4115917    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4115918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4115919    filename _pref
4115919  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4115920    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4115921    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4115922   +
4115923   +
4115924   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4115925   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4115926   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4115927   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4115928   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4115929   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115930   +
4115931   +
4115932   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4115933   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4115934   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4115935   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4115936   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4115937   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115938   +
4115939   +
4115940   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4115941   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4115942   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4115943   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4115944   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4115945   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115946   +
4115947   +
4115948   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4115949   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4115950   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4115951   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4115952   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4115953   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115954   +
4115955   +
4115956   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4115957   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4115958   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4115959   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4115960   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4115961   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115962   +
4115963   +
4115964   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4115965   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4115966   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4115967   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4115968   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4115969   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115970   +
4115971   +
4115972   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4115973   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4115974   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4115975   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4115976   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4115977   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115978   +
4115979   +
4115980   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4115981   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4115982   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4115983   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4115984   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4115985   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4115986   +if
4115987   +_FILTERNORM1 not in ( '.')
4115988   + and
4115989   +_FILTERNORM2 not in ( '.')
4115990   + and
4115991   +_FILTERNORM3 not in ( '.')
4115992   + and
4115993   +_FILTERNORM4 not in ( '.')
4115994   + and
4115995   +_FILTERNORM5 not in ( '.')
4115996   + and
4115997   +_FILTERNORM6 not in ( '.')
4115998   + and
4115999   +_FILTERNORM7 not in ( ' ')
4116000   + and
4116001   +_FILTERNORM8 not in ( ' ')
4116002   +and
4116003   +( Dt_Customer ne .)
4116004   +and ( Income ne . and (Income<=107000))
4116005   +and ( Kidhome ne .)
4116006   +and ( MntFishProducts ne .)
4116007   +and ( MntFruits ne .)
4116008   +and ( MntGoldProds ne .)
4116009   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4116010   +and ( MntSweetProducts ne .)
4116011   +and ( MntWines ne .)
4116012   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4116013   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4116014   +and ( NumStorePurchases ne .)
4116015   +and ( NumWebPurchases ne .)
4116016   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4116017   +and ( Recency ne .)
4116018   +and ( Teenhome ne .)
4116019   +and ( Year_Birth ne .)
4116020   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4116021   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4116022   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4116023   +end;
MPRINT(EM_DIAGRAM):   end;
4116024   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4116025   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4116026    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4116027    quit;
4116028    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4116029    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4116030    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4116031    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4116032    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4116033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116034    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4116035    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4116037    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4116038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116040    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4116041    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4116042    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4116043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116044    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4116045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4116046    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4116047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116049    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4116050    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4116051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116052    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116053    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4116054    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4116054  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4116055    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116056    proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl37_FCMP data=_tempx;
4116057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL37_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL37_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116058    %macro varDept(fcmpdata=,id=);
4116059    %global nobs&id scoreFlag&id;
4116060    %let scoreFlag&id = 0;
4116061    %if &id=1 or ^&fcmpStart %then %do;
4116062    proc sort data=&fcmpdata out=_temp&id nodupkey;
4116063    by NAME;
4116064    where id=&id and LHS in( %let j=1;
4116065    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4116066    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4116067    "&var" %let j = %eval(&j+1);
4116068    %end;
4116069    );
4116070    run;
4116071    %let dsid = %sysfunc(open(_temp&id));
4116072    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4116073    %let dsid = %sysfunc(close(&dsid));
4116074    %if &&nobs&id %then %do;
4116075    %let scoreFlag&id = 1;
4116076    %let fcmpStart = 1;
4116077    %end;
4116078    %else %let fcmpStart = 0;
4116079    %end;
4116080    %else %do;
4116081    proc sort data=&fcmpdata out=_tempid;
4116082    where id=&id;
4116083    by LHS;
4116084    run;
4116085    %let dsid = %sysfunc(open(_tempid));
4116086    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4116087    %let dsid = %sysfunc(close(&dsid));
4116088    %if ^&&nobs&id %then %do;
4116089    proc datasets lib=work nolist;
4116090    delete _tempid;
4116091    run;
4116092    quit;
4116093    %end;
4116094    %else %do;
4116095    data _tempAll;
4116096    set %let j=%eval(&id-1);
4116097    %do x=1 %to &j;
4116098    %if &&nobs&x %then %do;
4116099    _temp&x %end;
4116100    %end;
4116101    ;
4116102    run;
4116103    proc sql;
4116104    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4116104  ! work._tempid p2 where p.name=p2.lhs;
4116105    quit;
4116106    data _temp&id;
4116107    set _temp&id;
4116108    where LHS ne '' and NAME ne '' and Node ne '';
4116109    run;
4116110    proc datasets lib=work nolist;
4116111    delete _tempAll;
4116112    run;
4116113    %let dsid = %sysfunc(open(_temp&id));
4116114    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4116115    %let dsid = %sysfunc(close(&dsid));
4116116    %if ^&&nobs&id %then %do;
4116117    proc datasets lib=work nolist;
4116118    delete _temp&id;
4116119    run;
4116120    quit;
4116121    %end;
4116122    %else %do;
4116123    %let scoreFlag&id = 1;
4116124    data _temp&id;
4116125    set _temp&id;
4116126    where LHS ne NAME and node ne '';
4116127    run;
4116128    %let dsid = %sysfunc(open(_temp&id));
4116129    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4116130    %let dsid = %sysfunc(close(&dsid));
4116131    %if ^&&nobs&id %then %do;
4116132    proc datasets lib=work nolist;
4116133    delete _temp&id;
4116134    run;
4116135    quit;
4116136    %end;
4116137    %else %do;
4116138    proc sort data=_temp&id nodupkey;
4116139    by LHS NAME;
4116140    run;
4116141    %end;
4116142    %end;
4116143    %end;
4116144    %end;
4116145    %mend varDept;
4116146    %macro optCode(outdata=fcmpdata);
4116147    %global fcmpStart;
4116148    %let fcmpStart = 0;
4116149    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4116150    %let NumNodes=9;
4116151    %do k=1 %to &NumNodes;
4116152    %vardept(fcmpdata=&outdata, id=&k);
4116153    %end;
4116154    %mend optCode;
4116155    %optcode(outData=EMWS8.Ensmbl37_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 197 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl37_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4116156    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4116157    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4116158    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4116159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116160    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4116161    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4116162    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4116163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116164    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4116165    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4116165  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4116166    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4116167    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4116168    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4116169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4116170    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
4116171    * Ensmbl37: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Computing metadata for TRAIN data;
4116172    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl37_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl37_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl37_TRAIN out=WORK.M0BDZK62 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BDZK62;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BDZK62(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BDZK62;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BDZK62;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M345QEY3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VCRV3S(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QEY3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl37";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl37";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl37: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl37";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
4116492    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
4116493    set EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO;
4116494    where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl37' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
4116495    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL37_EMINFO.
      WHERE (DATA='Ensmbl37') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116496    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMINFO;
4116497    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
4116498    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
4116499    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
4116503    run;
4116504    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
4116505    set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMINFO WORK.MODELTEMP_INFO;
4116506    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4116507    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl37_EMINFO NOTHREADS;
4116508    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4116509    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116510    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
4116511    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4116512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4116513    proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl37_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
4116514    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4116515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL37_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116516    data EMWS8.Ensmbl37_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMINFO;
4116517    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
4116518    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4116519    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL37_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116520    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
4116521    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
4116522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
4116523    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                11.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1A0HJEQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl37\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1A0HJEQ new;
MPRINT(EM_DIAGRAM):   run;
4116547    data EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMOUTFIT;
4116548    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
4116549    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
4116550    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
4116550  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
4116551    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
4116552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4116553    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMREPORTFIT nothreads;
4116554    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
4116555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL37_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116556    %let _EMwarndup = 0;
4116557    %let _EMtargetdup =;
4116558    %let _EMASEtargetdup =;
4116559    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4116560    set EMWS8.Ensmbl37_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMOUTFIT;
4116561    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
4116562    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
4116563    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
4116564    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
4116565    end;
MPRINT(EM_DIAGRAM):   end;
4116566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL37_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116567    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
4116568    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS8.AUTONEURAL6_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 50 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4116570    proc sort data=EMWS8.Ensmbl37_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl37_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
4116571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116573    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
4116574    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
4116575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4116576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 40 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 50 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116577    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
4116578    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
4116579    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
4116579  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
4116580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4116581    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
4116582    set EMWS8.Ensmbl37_TRAIN(keep=
4116583    F_DepVar
4116584    I_DepVar
4116585    P_DepVar0
4116586    P_DepVar1
4116587    R_DepVar0
4116588    R_DepVar1
4116589    U_DepVar
4116590    _WARN_
4116591    DepVar
4116592    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
4116593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL37_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL37_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_1962949 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_1962949;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1962949(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1962949;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_1962949;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.1132633663 OVLMAX 0.9999999998 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
4120859    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
4120860    set EMWS8.Ensmbl37_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_CMeta_TRAIN;
4120861    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
4120861  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
4120862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL37_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4120863    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
4120864    set EMWS8.Ensmbl37_VALIDATE(keep=
4120865    F_DepVar
4120866    I_DepVar
4120867    P_DepVar0
4120868    P_DepVar1
4120869    R_DepVar0
4120870    R_DepVar1
4120871    U_DepVar
4120872    _WARN_
4120873    DepVar
4120874    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
4120875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL37_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL37_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl37_099RTXE nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl37_099RTXE;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_099RTXE(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMCLASSIFICATION WORK.Ensmbl37_099RTXE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl37_099RTXE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.1132625561 OVLMAX 0.9999999995 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
4125150    %let _cn = %sysfunc(getoption(CENTER));
4125151    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4125152    proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMREPORTFIT noobs label;
4125153    var STAT LABEL TRAIN
4125154    VALIDATE
4125155    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
4125156    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
4125157    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4125158    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
4125159    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL37_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 3436.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4125160    title10;
MPRINT(EM_DIAGRAM):   title10;
4125161    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4125162    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl37_EMCLASSIFICATION nothreads;
4125163    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
4125164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL37_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
4125165    %let _cn = %sysfunc(getoption(CENTER));
4125166    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
4125167    proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMCLASSIFICATION noobs label;
4125168    var from into pct_row pct_col count percent
4125169    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
4125170    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
4125171    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
4125172    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
4125173    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
4125174    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
4125175    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
4125176    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
4125177    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
4125178    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4125179    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
4125180    run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL37_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 3437.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4125181    title9;
MPRINT(EM_DIAGRAM):   title9;
4125182    title10;
MPRINT(EM_DIAGRAM):   title10;
4125183    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4125184    %let _cn = %sysfunc(getoption(CENTER));
4125185    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4125186    data EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl37_EMEVENTREPORT;
4125187    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
4125187  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
4125188    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4125188  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
4125188  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
4125188  ! FALSEEVENT
4125189    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
4125189  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
4125189  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
4125190       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
4125191    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
4125192    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
4125193    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
4125194    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
4125195    set EMWS8.Ensmbl37_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl37_EMEVENTREPORT;
4125196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL37_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4125197    proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMEVENTREPORT noobs label;
4125198    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4125199    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
4125200    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
4125201    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL37_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 3438.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4125202    title10;
MPRINT(EM_DIAGRAM):   title10;
4125203    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4125204    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
4125205    modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
4125206    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
4125207    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4125207  ! ;
MPRINT(EM_DIAGRAM):   run;
4125208    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMRANK.DATA.
4125209    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
4125210    %let _cn = %sysfunc(getoption(CENTER));
4125211    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4125212    proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMRANK label noobs;
4125213    var
4125214    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
4125215    by
4125216    notsorted DATAROLE
4125217    notsorted TARGET
4125218    notsorted TARGETLABEL
4125219    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
4125220    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4125221    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
4125222    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL37_EMRANK.
NOTE: The PROCEDURE PRINT printed page 3439.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4125223    title10;
MPRINT(EM_DIAGRAM):   title10;
4125224    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4125225    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
4125226    modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl37_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
4125227    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
4125227  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
4125228    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4125228  ! ;
MPRINT(EM_DIAGRAM):   run;
4125229    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL37_EMSCOREDIST.DATA.
4125230    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl37_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
