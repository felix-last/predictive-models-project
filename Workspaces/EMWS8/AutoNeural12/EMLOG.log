*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                18.50 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                18.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O074MXOQ
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O074MXOQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
423999     proc freq data=EMWS8.AutoNeural12_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural12_VariableSet noprint;
424000     table ROLE*LEVEL/out=WORK.AutoNeural12META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural12META;
424001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL12META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424002     proc print data=WORK.AutoNeural12META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural12META label noobs;
424003     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
424004     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
424004   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
424004   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
424005     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
424006     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
424007     run;
 
NOTE: There were 5 observations read from the data set WORK.AUTONEURAL12META.
NOTE: The PROCEDURE PRINT printed page 494.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424008     title10;
MPRINT(EM_DIAGRAM):   title10;
424009     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural12_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_DepVar_DD
out=EMWS8.AutoNeural12_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
424056     data WORK.AutoNeural12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural12_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
424057     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
424058     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
424058   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
424058   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
424059        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
424059   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
424059   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
424060     set EMWS8.AUTONEURAL12_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL12_DEPVAR_DM( where=(_TYPE_="TARGET"));
424061     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
424062     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
424063     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
424064     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
424065     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
424066     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
424067     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
424068     end;
MPRINT(EM_DIAGRAM):   end;
424069     output;
MPRINT(EM_DIAGRAM):   output;
424070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL12_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424071     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
424072     proc print data=WORK.AutoNeural12_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural12_EVENT noobs label;
424073     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
424074     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
424075     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
424076     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL12_EVENT.
NOTE: The PROCEDURE PRINT printed page 495.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424077     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
424078     proc print data = EMWS8.AutoNeural12_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural12_DepVar_DM noobs label;
424079     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
424080     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
424081     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
424081   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
424081   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
424082     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
424083     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
424084     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL12_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 496.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424085     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3QWRCZM;
MPRINT(EM_DIAGRAM):   set WORK.M3QWRCZM;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
424094     data WORK.M3QWRCZM;
MPRINT(EM_DIAGRAM):    data WORK.M3QWRCZM;
424095     set WORK.M3QWRCZM end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3QWRCZM end=eof;
424096     output;
MPRINT(EM_DIAGRAM):   output;
424097     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
424098     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
424099     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
424100     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
424101     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
424102     output;
MPRINT(EM_DIAGRAM):   output;
424103     end;
MPRINT(EM_DIAGRAM):   end;
424104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M3QWRCZM.
NOTE: The data set WORK.M3QWRCZM has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL12_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
424105     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
424106     * AutoNeural12: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Create decision matrix;
424107     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
424108     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
424109       length   DepVar                           $  32
424110                COUNT                                8
424111                DATAPRIOR                            8
424112                TRAINPRIOR                           8
424113                DECPRIOR                             8
424114                DECISION1                            8
424115                DECISION2                            8
424116                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
424117
424118       label    COUNT="Level Counts"
424119                DATAPRIOR="Data Proportions"
424120                TRAINPRIOR="Training Proportions"
424121                DECPRIOR="Decision Priors"
424122                DECISION1="1"
424123                DECISION2="0"
424124                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
424125       format   COUNT 10.
424126                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
424127     DepVar="1"; COUNT=359; DATAPRIOR=0.15122156697556; TRAINPRIOR=0.15122156697556;
424127   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
424128     output;
MPRINT(EM_DIAGRAM):   output;
424129     DepVar="0"; COUNT=2015; DATAPRIOR=0.84877843302443; TRAINPRIOR=0.84877843302443;
424129   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
424130     output;
MPRINT(EM_DIAGRAM):   output;
424131     ;
MPRINT(EM_DIAGRAM):   ;
424132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424133     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
424134     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
424135     label DECISION1= '1';
424136     label DECISION2= '0';
424137     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
424138     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
424139     data EM_AutoNeural12;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural12;
424140     set EMWS8.Meta_TRAIN(keep=
424141     AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5
424142     AcceptedCmpTotal Age Complain DepVar Education Frq HigherEducationBinary Income
424143     Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
424144     MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
424145     NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
424146     NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN(keep= AcceptedCmp1 AcceptedCmp2 AcceptedCmp3
AcceptedCmp4 AcceptedCmp5 AcceptedCmpTotal Age Complain DepVar Education Frq
HigherEducationBinary Income Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome );
424147     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424148     *------------------------------------------------------------* ;
424149     * AutoNeural12: DMDBClass Macro ;
424150     *------------------------------------------------------------* ;
424151     %macro DMDBClass;
424152         AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
424153        AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
424154        HigherEducationBinary(ASC) Marital_Status(ASC)
424155     %mend DMDBClass;
424156     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424157     * AutoNeural12: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: DMDBVar Macro ;
424158     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424159     %macro DMDBVar;
424160         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
424161        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
424162        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
424163        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
424164     %mend DMDBVar;
424165     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
424166     * AutoNeural12: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Create DMDB;
424167     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
424168     proc dmdb batch data=WORK.EM_AutoNeural12
424169     dmdbcat=WORK.AutoNeural12_DMDB
424170     maxlevel = 513
424171     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
424172     class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC)
Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
424173     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
424174     target
424175     DepVar
424176     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
424177     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL12.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
424178     quit;
424179     *--- end code ---*;
 
424180     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
424181     * AutoNeural12: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Interval Inputs Macro ;
424182     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424183     %macro INTINPUTS;
424184         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
424185        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
424186        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
424187        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
424188     %mend INTINPUTS;
424189     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424190     * AutoNeural12: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Binary Inputs Macro ;
424191     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424192     %macro BININPUTS;
424193         AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
424194        HigherEducationBinary
424195     %mend BININPUTS;
424196     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424197     * AutoNeural12: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Nominal Inputs Macro ;
424198     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424199     %macro NOMINPUTS;
424200         Education Marital_Status
424201     %mend NOMINPUTS;
424202     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424203     * AutoNeural12: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Ordinal Inputs Macro ;
424204     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
424205     %macro ORDINPUTS;
424206
424207     %mend ORDINPUTS;
424208     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
424209     ;
MPRINT(EM_DIAGRAM):   ;
424210     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
424211     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
424212     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
424213     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
424214     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
424215     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424216     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
424216   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
424217     *;
 
424218     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424219     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
424220     ;
MPRINT(EM_DIAGRAM):   ;
424221     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424222     *;
MPRINT(EM_DIAGRAM):   *;
 
424223     *;
MPRINT(EM_DIAGRAM):    *;
424224     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424225     validdata=EMWS8.Meta_VALIDATE
424226     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424227     *;
MPRINT(EM_DIAGRAM):   *;
424228     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424229     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424230     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424231     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424232     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424233     target DepVar / level=NOMINAL id=DepVar
424234     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424235     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424236     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
424237     ;
MPRINT(EM_DIAGRAM):   ;
424238     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424239     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
424240     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
424241     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
424242     *;
MPRINT(EM_DIAGRAM):   *;
424243     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424244     *;
MPRINT(EM_DIAGRAM):   *;
424245     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424246     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424246   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 56 observations and 54 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424247     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424248     tech = Default;
424249     ;
424250     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.50 seconds
      cpu time            0.49 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.51 seconds
      cpu time            0.49 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424251     *;
424252     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424253     var _iter_ _aic_ _averr_ _misc_
424254     _vaverr_ _vmisc_
424255     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424256     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 497.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424257     *------------------------------------------------------------*;
424258     * Extract best iteration;
424259     ;
424260     *------------------------------------------------------------*;
424261     %global _iter;
424262     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424263     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424264     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424265     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424266     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424267     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424268     end;
MPRINT(EM_DIAGRAM):   end;
424269     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424270     *;
 
424271     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424272     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424273     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
424274     output;
MPRINT(EM_DIAGRAM):   output;
424275     stop;
MPRINT(EM_DIAGRAM):   stop;
424276     end;
MPRINT(EM_DIAGRAM):   end;
424277     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424278     *;
424279     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424280     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424281     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
424282     output;
MPRINT(EM_DIAGRAM):   output;
424283     stop;
MPRINT(EM_DIAGRAM):   stop;
424284     end;
MPRINT(EM_DIAGRAM):   end;
424285     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424286     *;
MPRINT(EM_DIAGRAM):    *;
424287     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424288     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424288   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424289     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424290     var _iter_ _aic_ _averr_ _misc_
424291     _vaverr_ _vmisc_
424292     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 498.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424294     title9;
MPRINT(EM_DIAGRAM):   title9;
424295     title10;
MPRINT(EM_DIAGRAM):   title10;
424296     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
424297     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424298     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
424299     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
424299   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
424300     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
424300   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
424301     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
424301   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
424302     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
424302   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
424303     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
424304     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
424305     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
424306     set
424307     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
424308     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
424309     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424310     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424311     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424312     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424314     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424315     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424316     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424317     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424318     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
424319     ;
MPRINT(EM_DIAGRAM):   ;
424320     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
424321     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424322     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424323     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
424324     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424326     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
424327     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424329     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
424330     ;
MPRINT(EM_DIAGRAM):   ;
424331     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424332     set EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY;
424333     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
424334     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
424335     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424336     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424337     ;
MPRINT(EM_DIAGRAM):   ;
424338     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424339     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424340     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424341     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
424342     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
424343     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
424344     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
424345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424346     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424347     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424349     *;
MPRINT(EM_DIAGRAM):    *;
424350     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424351     validdata=EMWS8.Meta_VALIDATE
424352     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424353     *;
MPRINT(EM_DIAGRAM):   *;
424354     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424355     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424356     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424357     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424358     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424359     target DepVar / level=NOMINAL id=DepVar
424360     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424361     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424362     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424363     ;
MPRINT(EM_DIAGRAM):   ;
424364     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424365     Hidden 7 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=LOG;
424366     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424367     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424368     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424369     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
424370     *;
MPRINT(EM_DIAGRAM):   *;
424371     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424372     *;
MPRINT(EM_DIAGRAM):   *;
424373     initial
424374     ;
MPRINT(EM_DIAGRAM):   initial ;
424375     *;
MPRINT(EM_DIAGRAM):   *;
424376     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424377     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
424377   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=32 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 296 variables.
MPRINT(EM_DIAGRAM):   *;
424378     prelim 28 outest=_anpre pretime=32 preiter=25
424379     tech = Default
424380     ;
424381     *;
424382     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424383     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424383   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 296 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424384     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424385     tech = Default;
424386     ;
424387     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           15.76 seconds
      cpu time            14.88 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 499.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           15.77 seconds
      cpu time            14.88 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424388     *;
424389     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424390     var _iter_ _aic_ _averr_ _misc_
424391     _vaverr_ _vmisc_
424392     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424393     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 500.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424394     *------------------------------------------------------------*;
424395     * Extract best iteration;
424396     ;
424397     *------------------------------------------------------------*;
424398     %global _iter;
424399     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424400     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424401     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424402     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424403     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424404     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424405     end;
MPRINT(EM_DIAGRAM):   end;
424406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424407     *;
 
424408     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424409     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424410     if _ITER_ eq 14 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 then do;
424411     output;
MPRINT(EM_DIAGRAM):   output;
424412     stop;
MPRINT(EM_DIAGRAM):   stop;
424413     end;
MPRINT(EM_DIAGRAM):   end;
424414     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 296
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424415     *;
424416     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424417     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424418     if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
424419     output;
MPRINT(EM_DIAGRAM):   output;
424420     stop;
MPRINT(EM_DIAGRAM):   stop;
424421     end;
MPRINT(EM_DIAGRAM):   end;
424422     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424423     *;
MPRINT(EM_DIAGRAM):    *;
424424     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424425     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424425   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424426     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424427     var _iter_ _aic_ _averr_ _misc_
424428     _vaverr_ _vmisc_
424429     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 501.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424431     title9;
MPRINT(EM_DIAGRAM):   title9;
424432     title10;
MPRINT(EM_DIAGRAM):   title10;
424433     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424434     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424435     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424436     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424437     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424438     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424439     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424440     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424441     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
424442     ;
MPRINT(EM_DIAGRAM):   ;
424443     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
424444     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424445     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 296
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424446     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
424447     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424448     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 296
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424449     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
424450     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424451     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424452     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424453     ;
MPRINT(EM_DIAGRAM):   ;
424454     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424455     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424456     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424457     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
424458     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
424459     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
424460     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
424461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424462     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424463     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424464     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424465     *;
MPRINT(EM_DIAGRAM):    *;
424466     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424467     validdata=EMWS8.Meta_VALIDATE
424468     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424469     *;
MPRINT(EM_DIAGRAM):   *;
424470     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424471     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424472     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424473     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424474     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424475     target DepVar / level=NOMINAL id=DepVar
424476     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424477     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424478     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424479     ;
MPRINT(EM_DIAGRAM):   ;
424480     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424481     Hidden 7 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SINE;
424482     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424483     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424484     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424485     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
424486     *;
MPRINT(EM_DIAGRAM):   *;
424487     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424488     *;
MPRINT(EM_DIAGRAM):   *;
424489     initial
424490     ;
MPRINT(EM_DIAGRAM):   initial ;
424491     *;
MPRINT(EM_DIAGRAM):   *;
424492     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424493     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
424493   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=32 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 296 variables.
MPRINT(EM_DIAGRAM):   *;
424494     prelim 28 outest=_anpre pretime=32 preiter=25
424495     tech = Default
424496     ;
424497     *;
424498     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424499     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424499   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 296 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424500     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424501     tech = Default;
424502     ;
424503     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           13.41 seconds
      cpu time            13.36 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 502.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.42 seconds
      cpu time            13.36 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424504     *;
424505     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424506     var _iter_ _aic_ _averr_ _misc_
424507     _vaverr_ _vmisc_
424508     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 503.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424510     *------------------------------------------------------------*;
424511     * Extract best iteration;
424512     ;
424513     *------------------------------------------------------------*;
424514     %global _iter;
424515     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424516     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424517     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424518     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424519     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424520     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424521     end;
MPRINT(EM_DIAGRAM):   end;
424522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424523     *;
 
424524     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424525     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424526     if _ITER_ eq 24 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 then do;
424527     output;
MPRINT(EM_DIAGRAM):   output;
424528     stop;
MPRINT(EM_DIAGRAM):   stop;
424529     end;
MPRINT(EM_DIAGRAM):   end;
424530     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 296
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424531     *;
424532     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424533     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424534     if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
424535     output;
MPRINT(EM_DIAGRAM):   output;
424536     stop;
MPRINT(EM_DIAGRAM):   stop;
424537     end;
MPRINT(EM_DIAGRAM):   end;
424538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424539     *;
MPRINT(EM_DIAGRAM):    *;
424540     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424541     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424541   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424542     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424543     var _iter_ _aic_ _averr_ _misc_
424544     _vaverr_ _vmisc_
424545     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 504.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424547     title9;
MPRINT(EM_DIAGRAM):   title9;
424548     title10;
MPRINT(EM_DIAGRAM):   title10;
424549     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424550     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424551     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424553     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424554     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424555     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424557     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424558     ;
MPRINT(EM_DIAGRAM):   ;
424559     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424560     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424561     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424562     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
424563     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
424564     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
424565     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
424566     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424567     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424568     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424570     *;
MPRINT(EM_DIAGRAM):    *;
424571     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424572     validdata=EMWS8.Meta_VALIDATE
424573     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424574     *;
MPRINT(EM_DIAGRAM):   *;
424575     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424576     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424577     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424578     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424579     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424580     target DepVar / level=NOMINAL id=DepVar
424581     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424582     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424583     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424584     ;
MPRINT(EM_DIAGRAM):   ;
424585     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424586     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
424587     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424588     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424589     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424590     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
424591     *;
MPRINT(EM_DIAGRAM):   *;
424592     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424593     *;
MPRINT(EM_DIAGRAM):   *;
424594     initial
424595     ;
MPRINT(EM_DIAGRAM):   initial ;
424596     *;
MPRINT(EM_DIAGRAM):   *;
424597     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424598     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
424598   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=31 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 257 variables.
MPRINT(EM_DIAGRAM):   *;
424599     prelim 28 outest=_anpre pretime=31 preiter=25
424600     tech = Default
424601     ;
424602     *;
424603     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424604     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424604   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 257 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424605     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424606     tech = Default;
424607     ;
424608     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           16.38 seconds
      cpu time            16.31 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 505.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           16.39 seconds
      cpu time            16.33 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424609     *;
424610     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424611     var _iter_ _aic_ _averr_ _misc_
424612     _vaverr_ _vmisc_
424613     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424614     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 506.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424615     *------------------------------------------------------------*;
424616     * Extract best iteration;
424617     ;
424618     *------------------------------------------------------------*;
424619     %global _iter;
424620     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424621     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424622     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424623     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424624     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424625     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424626     end;
MPRINT(EM_DIAGRAM):   end;
424627     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424628     *;
 
424629     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424630     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424631     if _ITER_ eq 21 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 then do;
424632     output;
MPRINT(EM_DIAGRAM):   output;
424633     stop;
MPRINT(EM_DIAGRAM):   stop;
424634     end;
MPRINT(EM_DIAGRAM):   end;
424635     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 257
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424636     *;
424637     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424638     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424639     if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
424640     output;
MPRINT(EM_DIAGRAM):   output;
424641     stop;
MPRINT(EM_DIAGRAM):   stop;
424642     end;
MPRINT(EM_DIAGRAM):   end;
424643     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424644     *;
MPRINT(EM_DIAGRAM):    *;
424645     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424646     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424646   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424647     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424648     var _iter_ _aic_ _averr_ _misc_
424649     _vaverr_ _vmisc_
424650     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 507.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424652     title9;
MPRINT(EM_DIAGRAM):   title9;
424653     title10;
MPRINT(EM_DIAGRAM):   title10;
424654     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424655     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424656     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424657     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424658     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424659     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424660     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424661     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424662     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
424663     ;
MPRINT(EM_DIAGRAM):   ;
424664     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
424665     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 257
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424667     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
424668     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424669     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 257
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424670     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
424671     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424673     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424674     ;
MPRINT(EM_DIAGRAM):   ;
424675     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424676     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424677     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424678     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
424679     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
424680     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
424681     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
424682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424683     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424684     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424685     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424686     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
424687     ;
MPRINT(EM_DIAGRAM):   ;
424688     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
424689     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
424690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 257
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424691     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424692     set WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_01IF6XB;
424693     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_01IF6XB.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424694     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424695     ;
MPRINT(EM_DIAGRAM):   ;
424696     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424697     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424698     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424699     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
424700     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
424701     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
424702     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
424703     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424704     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424705     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424707     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424708     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424709     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424710     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424711     *;
MPRINT(EM_DIAGRAM):    *;
424712     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424713     validdata=EMWS8.Meta_VALIDATE
424714     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424715     *;
MPRINT(EM_DIAGRAM):   *;
424716     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424717     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424718     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424719     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424720     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424721     target DepVar / level=NOMINAL id=DepVar
424722     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424723     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424724     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
424725     ;
MPRINT(EM_DIAGRAM):   ;
424726     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424727     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
424728     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
424729     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
424730     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424731     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424732     ;
MPRINT(EM_DIAGRAM):   ;
424733     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424734     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
424735     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424736     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424737     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424738     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
424739     *;
MPRINT(EM_DIAGRAM):   *;
424740     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424741     *;
MPRINT(EM_DIAGRAM):   *;
424742     initial
424743     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 257
      variables.
424744     ;
MPRINT(EM_DIAGRAM):   ;
424745     *;
MPRINT(EM_DIAGRAM):   *;
424746     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424747     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
424747   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
424748     prelim 28 outest=_anpre pretime=31 preiter=25
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=31 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 295 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 257
      variables.
MPRINT(EM_DIAGRAM):   *;
424749     tech = Default
424750     inest = EMWS8.AutoNeural12_ESTDS bylabel
424751     ;
424752     *;
424753     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424754     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424754   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=888
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 295 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424755     train estiter=1 outest=_anest outfit=_anfit maxtime=888 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424756     tech = Default;
424757     ;
424758     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.65 seconds
      cpu time            1.65 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 508.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.65 seconds
      cpu time            1.65 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424759     *;
424760     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424761     var _iter_ _aic_ _averr_ _misc_
424762     _vaverr_ _vmisc_
424763     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 509.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424765     *------------------------------------------------------------*;
424766     * Extract best iteration;
424767     ;
424768     *------------------------------------------------------------*;
424769     %global _iter;
424770     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424771     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424772     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424773     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424774     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424775     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424776     end;
MPRINT(EM_DIAGRAM):   end;
424777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424778     *;
 
424779     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424780     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424781     if _ITER_ eq 40 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 40 then do;
424782     output;
MPRINT(EM_DIAGRAM):   output;
424783     stop;
MPRINT(EM_DIAGRAM):   stop;
424784     end;
MPRINT(EM_DIAGRAM):   end;
424785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 295
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424786     *;
424787     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424788     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424789     if _ITER_ eq 40 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 40 and _NAME_ eq "OVERALL" then do;
424790     output;
MPRINT(EM_DIAGRAM):   output;
424791     stop;
MPRINT(EM_DIAGRAM):   stop;
424792     end;
MPRINT(EM_DIAGRAM):   end;
424793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 82 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424794     *;
MPRINT(EM_DIAGRAM):    *;
424795     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424796     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424796   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424797     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424798     var _iter_ _aic_ _averr_ _misc_
424799     _vaverr_ _vmisc_
424800     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 510.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424802     title9;
MPRINT(EM_DIAGRAM):   title9;
424803     title10;
MPRINT(EM_DIAGRAM):   title10;
424804     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424805     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424806     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424807     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424808     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424809     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424810     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424812     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
424813     ;
MPRINT(EM_DIAGRAM):   ;
424814     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
424815     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 295
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424817     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
424818     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 295
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424820     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
424821     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424822     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424823     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424824     ;
MPRINT(EM_DIAGRAM):   ;
424825     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424826     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424827     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424828     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
424829     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
424830     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
424831     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
424832     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424833     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424834     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424836     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
424837     ;
MPRINT(EM_DIAGRAM):   ;
424838     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
424839     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
424840     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 295
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424841     *;
MPRINT(EM_DIAGRAM):    *;
424842     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424843     validdata=EMWS8.Meta_VALIDATE
424844     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424845     *;
MPRINT(EM_DIAGRAM):   *;
424846     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424847     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424848     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424849     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424850     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424851     target DepVar / level=NOMINAL id=DepVar
424852     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424853     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424854     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424855     ;
MPRINT(EM_DIAGRAM):   ;
424856     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424857     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
424858     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424859     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424860     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424861     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
424862     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
424863     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
424864     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
424865     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424866     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
424867     ;
MPRINT(EM_DIAGRAM):   ;
424868     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424869     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
424870     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
424871     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
424872     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
424873     *;
MPRINT(EM_DIAGRAM):   *;
424874     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
424875     *;
MPRINT(EM_DIAGRAM):   *;
424876     initial
424877     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 295
      variables.
424878     ;
MPRINT(EM_DIAGRAM):   ;
424879     *;
MPRINT(EM_DIAGRAM):   *;
424880     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424881     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
424881   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
424882     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 596 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 295
      variables.
MPRINT(EM_DIAGRAM):   *;
424883     tech = Default
424884     inest = EMWS8.AutoNeural12_ESTDS bylabel
424885     ;
424886     *;
424887     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424888     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
424888   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=888
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 596 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
424889     train estiter=1 outest=_anest outfit=_anfit maxtime=888 maxiter=50
MPRINT(EM_DIAGRAM):   run;
424890     tech = Default;
424891     ;
424892     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           34.90 seconds
      cpu time            34.75 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 511.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           34.90 seconds
      cpu time            34.75 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424893     *;
424894     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
424895     var _iter_ _aic_ _averr_ _misc_
424896     _vaverr_ _vmisc_
424897     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424898     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 512.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424899     *------------------------------------------------------------*;
424900     * Extract best iteration;
424901     ;
424902     *------------------------------------------------------------*;
424903     %global _iter;
424904     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
424905     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
424906     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
424907     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
424908     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
424909     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
424910     end;
MPRINT(EM_DIAGRAM):   end;
424911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424912     *;
 
424913     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
424914     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
424915     if _ITER_ eq 13 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 then do;
424916     output;
MPRINT(EM_DIAGRAM):   output;
424917     stop;
MPRINT(EM_DIAGRAM):   stop;
424918     end;
MPRINT(EM_DIAGRAM):   end;
424919     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
424920     *;
424921     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424922     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
424923     if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
424924     output;
MPRINT(EM_DIAGRAM):   output;
424925     stop;
MPRINT(EM_DIAGRAM):   stop;
424926     end;
MPRINT(EM_DIAGRAM):   end;
424927     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424928     *;
MPRINT(EM_DIAGRAM):    *;
424929     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
424930     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
424930   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
424931     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
424932     var _iter_ _aic_ _averr_ _misc_
424933     _vaverr_ _vmisc_
424934     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
424935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 513.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424936     title9;
MPRINT(EM_DIAGRAM):   title9;
424937     title10;
MPRINT(EM_DIAGRAM):   title10;
424938     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424939     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424940     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424942     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
424943     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424944     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
424945     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424946     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
424947     ;
MPRINT(EM_DIAGRAM):   ;
424948     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
424949     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424951     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
424952     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
424953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424954     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
424955     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424957     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
424958     ;
MPRINT(EM_DIAGRAM):   ;
424959     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
424960     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
424961     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
424962     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
424963     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
424964     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
424965     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
424966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424967     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
424968     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
424969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
424970     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
424971     ;
MPRINT(EM_DIAGRAM):   ;
424972     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
424973     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
424974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
424975     *;
MPRINT(EM_DIAGRAM):    *;
424976     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
424977     validdata=EMWS8.Meta_VALIDATE
424978     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
424979     *;
MPRINT(EM_DIAGRAM):   *;
424980     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
424981     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
424982     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
424983     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
424984     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
424985     target DepVar / level=NOMINAL id=DepVar
424986     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
424987     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424988     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
424989     ;
MPRINT(EM_DIAGRAM):   ;
424990     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
424991     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
424992     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
424993     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
424994     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
424995     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
424996     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
424997     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
424998     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
424999     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425000     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425001     ;
MPRINT(EM_DIAGRAM):   ;
425002     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425003     Hidden 7 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SINE;
425004     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425005     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425006     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
425007     *;
MPRINT(EM_DIAGRAM):   *;
425008     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425009     *;
MPRINT(EM_DIAGRAM):   *;
425010     initial
425011     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
425012     ;
MPRINT(EM_DIAGRAM):   ;
425013     *;
MPRINT(EM_DIAGRAM):   *;
425014     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425015     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425015   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
425016     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 596 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
MPRINT(EM_DIAGRAM):   *;
425017     tech = Default
425018     inest = EMWS8.AutoNeural12_ESTDS bylabel
425019     ;
425020     *;
425021     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425022     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425022   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=879
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 596 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425023     train estiter=1 outest=_anest outfit=_anfit maxtime=879 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425024     tech = Default;
425025     ;
425026     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.90 seconds
      cpu time            2.85 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 514.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.91 seconds
      cpu time            2.85 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425027     *;
425028     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425029     var _iter_ _aic_ _averr_ _misc_
425030     _vaverr_ _vmisc_
425031     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 515.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425033     *------------------------------------------------------------*;
425034     * Extract best iteration;
425035     ;
425036     *------------------------------------------------------------*;
425037     %global _iter;
425038     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425039     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425040     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425041     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425042     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425043     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425044     end;
MPRINT(EM_DIAGRAM):   end;
425045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425046     *;
 
425047     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425048     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425049     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
425050     output;
MPRINT(EM_DIAGRAM):   output;
425051     stop;
MPRINT(EM_DIAGRAM):   stop;
425052     end;
MPRINT(EM_DIAGRAM):   end;
425053     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425054     *;
425055     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425056     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425057     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
425058     output;
MPRINT(EM_DIAGRAM):   output;
425059     stop;
MPRINT(EM_DIAGRAM):   stop;
425060     end;
MPRINT(EM_DIAGRAM):   end;
425061     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425062     *;
MPRINT(EM_DIAGRAM):    *;
425063     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425064     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425064   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425065     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425066     var _iter_ _aic_ _averr_ _misc_
425067     _vaverr_ _vmisc_
425068     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425069     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 516.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425070     title9;
MPRINT(EM_DIAGRAM):   title9;
425071     title10;
MPRINT(EM_DIAGRAM):   title10;
425072     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425073     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425074     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425075     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425076     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425077     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425078     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425079     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425080     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425081     ;
MPRINT(EM_DIAGRAM):   ;
425082     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425083     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425084     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425085     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
425086     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
425087     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
425088     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
425089     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425090     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425091     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425092     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425093     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
425094     ;
MPRINT(EM_DIAGRAM):   ;
425095     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425096     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425098     *;
MPRINT(EM_DIAGRAM):    *;
425099     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425100     validdata=EMWS8.Meta_VALIDATE
425101     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425102     *;
MPRINT(EM_DIAGRAM):   *;
425103     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425104     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425105     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425106     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425107     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425108     target DepVar / level=NOMINAL id=DepVar
425109     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425110     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425111     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425112     ;
MPRINT(EM_DIAGRAM):   ;
425113     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425114     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425115     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425116     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425117     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425118     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425119     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425120     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425121     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425122     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425123     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425124     ;
MPRINT(EM_DIAGRAM):   ;
425125     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425126     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425127     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425128     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425129     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
425130     *;
MPRINT(EM_DIAGRAM):   *;
425131     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425132     *;
MPRINT(EM_DIAGRAM):   *;
425133     initial
425134     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
425135     ;
MPRINT(EM_DIAGRAM):   ;
425136     *;
MPRINT(EM_DIAGRAM):   *;
425137     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425138     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425138   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
425139     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 581 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 596
      variables.
MPRINT(EM_DIAGRAM):   *;
425140     tech = Default
425141     inest = EMWS8.AutoNeural12_ESTDS bylabel
425142     ;
425143     *;
425144     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425145     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425145   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=878
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 581 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425146     train estiter=1 outest=_anest outfit=_anfit maxtime=878 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425147     tech = Default;
425148     ;
425149     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           3.04 seconds
      cpu time            3.01 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 517.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.05 seconds
      cpu time            3.02 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425150     *;
425151     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425152     var _iter_ _aic_ _averr_ _misc_
425153     _vaverr_ _vmisc_
425154     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425155     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 518.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425156     *------------------------------------------------------------*;
425157     * Extract best iteration;
425158     ;
425159     *------------------------------------------------------------*;
425160     %global _iter;
425161     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425162     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425163     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425164     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425165     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425166     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425167     end;
MPRINT(EM_DIAGRAM):   end;
425168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425169     *;
 
425170     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425171     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425172     if _ITER_ eq 25 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 25 then do;
425173     output;
MPRINT(EM_DIAGRAM):   output;
425174     stop;
MPRINT(EM_DIAGRAM):   stop;
425175     end;
MPRINT(EM_DIAGRAM):   end;
425176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425177     *;
425178     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425179     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425180     if _ITER_ eq 25 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 25 and _NAME_ eq "OVERALL" then do;
425181     output;
MPRINT(EM_DIAGRAM):   output;
425182     stop;
MPRINT(EM_DIAGRAM):   stop;
425183     end;
MPRINT(EM_DIAGRAM):   end;
425184     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425185     *;
MPRINT(EM_DIAGRAM):    *;
425186     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425187     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425187   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425188     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425189     var _iter_ _aic_ _averr_ _misc_
425190     _vaverr_ _vmisc_
425191     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 519.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425193     title9;
MPRINT(EM_DIAGRAM):   title9;
425194     title10;
MPRINT(EM_DIAGRAM):   title10;
425195     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425196     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425197     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425199     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425200     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425201     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425202     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425203     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
425204     ;
MPRINT(EM_DIAGRAM):   ;
425205     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
425206     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
425207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425208     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
425209     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
425210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425211     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
425212     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425213     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425214     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425215     ;
MPRINT(EM_DIAGRAM):   ;
425216     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425217     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425218     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425219     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
425220     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
425221     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
425222     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
425223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425224     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425225     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425227     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
425228     ;
MPRINT(EM_DIAGRAM):   ;
425229     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425230     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425231     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425232     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425233     set WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_01IF6XB;
425234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_01IF6XB.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425235     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425236     ;
MPRINT(EM_DIAGRAM):   ;
425237     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425238     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425239     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425240     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
425241     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
425242     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
425243     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
425244     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425245     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425246     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425248     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425249     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425250     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425251     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425252     *;
MPRINT(EM_DIAGRAM):    *;
425253     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425254     validdata=EMWS8.Meta_VALIDATE
425255     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425256     *;
MPRINT(EM_DIAGRAM):   *;
425257     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425258     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425259     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425260     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425261     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425262     target DepVar / level=NOMINAL id=DepVar
425263     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425264     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425265     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
425266     ;
MPRINT(EM_DIAGRAM):   ;
425267     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425268     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
425269     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
425270     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
425271     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425272     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425273     ;
MPRINT(EM_DIAGRAM):   ;
425274     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425275     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425276     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425277     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425278     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425279     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425280     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425281     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425282     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425283     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425284     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425285     ;
MPRINT(EM_DIAGRAM):   ;
425286     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425287     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425288     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425289     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425290     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
425291     *;
MPRINT(EM_DIAGRAM):   *;
425292     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425293     *;
MPRINT(EM_DIAGRAM):   *;
425294     initial
425295     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
425296     ;
MPRINT(EM_DIAGRAM):   ;
425297     *;
MPRINT(EM_DIAGRAM):   *;
425298     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425299     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425299   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
425300     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 619 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
MPRINT(EM_DIAGRAM):   *;
425301     tech = Default
425302     inest = EMWS8.AutoNeural12_ESTDS bylabel
425303     ;
425304     *;
425305     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425306     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425306   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=877
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 619 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425307     train estiter=1 outest=_anest outfit=_anfit maxtime=877 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425308     tech = Default;
425309     ;
425310     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           3.43 seconds
      cpu time            3.22 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 520.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.44 seconds
      cpu time            3.22 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425311     *;
425312     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425313     var _iter_ _aic_ _averr_ _misc_
425314     _vaverr_ _vmisc_
425315     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425316     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 521.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425317     *------------------------------------------------------------*;
425318     * Extract best iteration;
425319     ;
425320     *------------------------------------------------------------*;
425321     %global _iter;
425322     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425323     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425324     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425325     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425326     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425327     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425328     end;
MPRINT(EM_DIAGRAM):   end;
425329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425330     *;
 
425331     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425332     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425333     if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
425334     output;
MPRINT(EM_DIAGRAM):   output;
425335     stop;
MPRINT(EM_DIAGRAM):   stop;
425336     end;
MPRINT(EM_DIAGRAM):   end;
425337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 619
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425338     *;
425339     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425340     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425341     if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
425342     output;
MPRINT(EM_DIAGRAM):   output;
425343     stop;
MPRINT(EM_DIAGRAM):   stop;
425344     end;
MPRINT(EM_DIAGRAM):   end;
425345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425346     *;
MPRINT(EM_DIAGRAM):    *;
425347     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425348     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425348   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425349     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425350     var _iter_ _aic_ _averr_ _misc_
425351     _vaverr_ _vmisc_
425352     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 522.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425354     title9;
MPRINT(EM_DIAGRAM):   title9;
425355     title10;
MPRINT(EM_DIAGRAM):   title10;
425356     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425357     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425358     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425359     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425360     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425361     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425362     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425363     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425364     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425365     ;
MPRINT(EM_DIAGRAM):   ;
425366     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425367     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425368     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425369     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
425370     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
425371     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
425372     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
425373     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425374     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425375     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425376     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425377     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
425378     ;
MPRINT(EM_DIAGRAM):   ;
425379     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425380     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425381     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425382     *;
MPRINT(EM_DIAGRAM):    *;
425383     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425384     validdata=EMWS8.Meta_VALIDATE
425385     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425386     *;
MPRINT(EM_DIAGRAM):   *;
425387     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425388     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425389     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425390     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425391     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425392     target DepVar / level=NOMINAL id=DepVar
425393     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425394     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425395     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425396     ;
MPRINT(EM_DIAGRAM):   ;
425397     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425398     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425399     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425400     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425401     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425402     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425403     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425404     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425405     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425406     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
425407     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
425408     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
425409     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
425410     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425411     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425412     ;
MPRINT(EM_DIAGRAM):   ;
425413     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425414     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425415     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425416     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425417     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
425418     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
425419     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
425420     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
425421     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
425422     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425423     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
425424     ;
MPRINT(EM_DIAGRAM):   ;
425425     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425426     Hidden 7 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=LOG;
425427     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
425428     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
425429     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
425430     *;
MPRINT(EM_DIAGRAM):   *;
425431     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425432     *;
MPRINT(EM_DIAGRAM):   *;
425433     initial
425434     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
425435     ;
MPRINT(EM_DIAGRAM):   ;
425436     *;
MPRINT(EM_DIAGRAM):   *;
425437     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425438     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425438   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
425439     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1094 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
MPRINT(EM_DIAGRAM):   *;
425440     tech = Default
425441     inest = EMWS8.AutoNeural12_ESTDS bylabel
425442     ;
425443     *;
425444     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425445     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425445   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=876
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1094 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425446     train estiter=1 outest=_anest outfit=_anfit maxtime=876 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425447     tech = Default;
425448     ;
425449     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           58.88 seconds
      cpu time            58.67 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 523.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           58.88 seconds
      cpu time            58.67 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425450     *;
425451     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425452     var _iter_ _aic_ _averr_ _misc_
425453     _vaverr_ _vmisc_
425454     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425455     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 524.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425456     *------------------------------------------------------------*;
425457     * Extract best iteration;
425458     ;
425459     *------------------------------------------------------------*;
425460     %global _iter;
425461     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425462     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425463     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425464     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425465     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425466     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425467     end;
MPRINT(EM_DIAGRAM):   end;
425468     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425469     *;
 
425470     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425471     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425472     if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
425473     output;
MPRINT(EM_DIAGRAM):   output;
425474     stop;
MPRINT(EM_DIAGRAM):   stop;
425475     end;
MPRINT(EM_DIAGRAM):   end;
425476     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425477     *;
425478     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425479     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425480     if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
425481     output;
MPRINT(EM_DIAGRAM):   output;
425482     stop;
MPRINT(EM_DIAGRAM):   stop;
425483     end;
MPRINT(EM_DIAGRAM):   end;
425484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425485     *;
MPRINT(EM_DIAGRAM):    *;
425486     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425487     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425487   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425488     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425489     var _iter_ _aic_ _averr_ _misc_
425490     _vaverr_ _vmisc_
425491     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 525.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425493     title9;
MPRINT(EM_DIAGRAM):   title9;
425494     title10;
MPRINT(EM_DIAGRAM):   title10;
425495     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425496     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425497     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425499     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425500     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425501     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425502     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425503     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425504     ;
MPRINT(EM_DIAGRAM):   ;
425505     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425506     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425507     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425508     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
425509     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
425510     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
425511     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
425512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425513     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425514     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425515     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425516     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
425517     ;
MPRINT(EM_DIAGRAM):   ;
425518     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425519     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425520     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425521     *;
MPRINT(EM_DIAGRAM):    *;
425522     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425523     validdata=EMWS8.Meta_VALIDATE
425524     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425525     *;
MPRINT(EM_DIAGRAM):   *;
425526     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425527     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425528     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425529     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425530     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425531     target DepVar / level=NOMINAL id=DepVar
425532     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425533     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425534     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425535     ;
MPRINT(EM_DIAGRAM):   ;
425536     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425537     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425538     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425539     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425540     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425541     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425542     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425543     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425544     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425545     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
425546     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
425547     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
425548     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
425549     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425550     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425551     ;
MPRINT(EM_DIAGRAM):   ;
425552     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425553     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425554     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425555     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425556     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
425557     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
425558     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
425559     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
425560     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
425561     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425562     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
425563     ;
MPRINT(EM_DIAGRAM):   ;
425564     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425565     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
425566     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
425567     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
425568     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
425569     *;
MPRINT(EM_DIAGRAM):   *;
425570     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425571     *;
MPRINT(EM_DIAGRAM):   *;
425572     initial
425573     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
425574     ;
MPRINT(EM_DIAGRAM):   ;
425575     *;
MPRINT(EM_DIAGRAM):   *;
425576     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425577     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425577   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
425578     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1094 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 581
      variables.
MPRINT(EM_DIAGRAM):   *;
425579     tech = Default
425580     inest = EMWS8.AutoNeural12_ESTDS bylabel
425581     ;
425582     *;
425583     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425584     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425584   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=862
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1094 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425585     train estiter=1 outest=_anest outfit=_anfit maxtime=862 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425586     tech = Default;
425587     ;
425588     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           52.91 seconds
      cpu time            52.76 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 526.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           52.91 seconds
      cpu time            52.77 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425589     *;
425590     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425591     var _iter_ _aic_ _averr_ _misc_
425592     _vaverr_ _vmisc_
425593     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 527.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425595     *------------------------------------------------------------*;
425596     * Extract best iteration;
425597     ;
425598     *------------------------------------------------------------*;
425599     %global _iter;
425600     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425601     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425602     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425603     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425604     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425605     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425606     end;
MPRINT(EM_DIAGRAM):   end;
425607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425608     *;
 
425609     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425610     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425611     if _ITER_ eq 23 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 then do;
425612     output;
MPRINT(EM_DIAGRAM):   output;
425613     stop;
MPRINT(EM_DIAGRAM):   stop;
425614     end;
MPRINT(EM_DIAGRAM):   end;
425615     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425616     *;
425617     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425618     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425619     if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
425620     output;
MPRINT(EM_DIAGRAM):   output;
425621     stop;
MPRINT(EM_DIAGRAM):   stop;
425622     end;
MPRINT(EM_DIAGRAM):   end;
425623     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425624     *;
MPRINT(EM_DIAGRAM):    *;
425625     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425626     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425626   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425627     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425628     var _iter_ _aic_ _averr_ _misc_
425629     _vaverr_ _vmisc_
425630     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 528.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425632     title9;
MPRINT(EM_DIAGRAM):   title9;
425633     title10;
MPRINT(EM_DIAGRAM):   title10;
425634     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425635     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425636     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425637     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425638     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425639     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425640     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425641     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425642     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
425643     ;
MPRINT(EM_DIAGRAM):   ;
425644     data WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_01IF6XB;
425645     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
425646     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_01IF6XB has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425647     data EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_BESTDS;
425648     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
425649     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_BESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425650     data WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_01IF6XB;
425651     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_01IF6XB has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425653     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425654     ;
MPRINT(EM_DIAGRAM):   ;
425655     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425656     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425657     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425658     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
425659     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
425660     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
425661     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
425662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425663     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425664     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425665     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425666     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
425667     ;
MPRINT(EM_DIAGRAM):   ;
425668     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425669     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425670     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425671     *;
MPRINT(EM_DIAGRAM):    *;
425672     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425673     validdata=EMWS8.Meta_VALIDATE
425674     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425675     *;
MPRINT(EM_DIAGRAM):   *;
425676     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425677     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425678     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425679     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425680     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425681     target DepVar / level=NOMINAL id=DepVar
425682     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425683     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425684     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425685     ;
MPRINT(EM_DIAGRAM):   ;
425686     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425687     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425688     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425689     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425690     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425691     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425692     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425693     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425694     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425695     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
425696     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
425697     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
425698     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
425699     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425700     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425701     ;
MPRINT(EM_DIAGRAM):   ;
425702     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425703     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425704     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425705     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425706     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
425707     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
425708     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
425709     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
425710     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
425711     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425712     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
425713     ;
MPRINT(EM_DIAGRAM):   ;
425714     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425715     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
425716     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
425717     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
425718     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
425719     *;
MPRINT(EM_DIAGRAM):   *;
425720     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425721     *;
MPRINT(EM_DIAGRAM):   *;
425722     initial
425723     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
425724     ;
MPRINT(EM_DIAGRAM):   ;
425725     *;
MPRINT(EM_DIAGRAM):   *;
425726     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425727     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425727   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
425728     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 1079 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
425729     tech = Default
425730     inest = EMWS8.AutoNeural12_ESTDS bylabel
425731     ;
425732     *;
425733     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425734     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425734   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=848
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1079 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425735     train estiter=1 outest=_anest outfit=_anfit maxtime=848 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425736     tech = Default;
425737     ;
425738     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           5.53 seconds
      cpu time            5.02 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 529.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.54 seconds
      cpu time            5.02 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425739     *;
425740     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425741     var _iter_ _aic_ _averr_ _misc_
425742     _vaverr_ _vmisc_
425743     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 530.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425745     *------------------------------------------------------------*;
425746     * Extract best iteration;
425747     ;
425748     *------------------------------------------------------------*;
425749     %global _iter;
425750     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425751     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425752     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425753     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425754     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425755     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425756     end;
MPRINT(EM_DIAGRAM):   end;
425757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425758     *;
 
425759     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425760     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425761     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
425762     output;
MPRINT(EM_DIAGRAM):   output;
425763     stop;
MPRINT(EM_DIAGRAM):   stop;
425764     end;
MPRINT(EM_DIAGRAM):   end;
425765     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1079
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425766     *;
425767     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425768     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425769     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
425770     output;
MPRINT(EM_DIAGRAM):   output;
425771     stop;
MPRINT(EM_DIAGRAM):   stop;
425772     end;
MPRINT(EM_DIAGRAM):   end;
425773     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425774     *;
MPRINT(EM_DIAGRAM):    *;
425775     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425776     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425776   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425777     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425778     var _iter_ _aic_ _averr_ _misc_
425779     _vaverr_ _vmisc_
425780     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 531.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425782     title9;
MPRINT(EM_DIAGRAM):   title9;
425783     title10;
MPRINT(EM_DIAGRAM):   title10;
425784     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425785     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425786     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425788     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425789     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425790     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425792     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425793     ;
MPRINT(EM_DIAGRAM):   ;
425794     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425795     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425796     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425797     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
425798     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
425799     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
425800     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
425801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425802     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425803     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425805     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
425806     ;
MPRINT(EM_DIAGRAM):   ;
425807     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425808     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425810     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425811     set WORK.BFITDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_01IF6XB;
425812     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_01IF6XB.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425813     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425814     ;
MPRINT(EM_DIAGRAM):   ;
425815     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425816     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425817     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425818     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
425819     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
425820     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
425821     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
425822     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425823     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425824     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425826     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425827     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425828     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425829     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425830     *;
MPRINT(EM_DIAGRAM):    *;
425831     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425832     validdata=EMWS8.Meta_VALIDATE
425833     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425834     *;
MPRINT(EM_DIAGRAM):   *;
425835     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425836     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425837     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425838     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425839     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425840     target DepVar / level=NOMINAL id=DepVar
425841     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425842     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425843     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
425844     ;
MPRINT(EM_DIAGRAM):   ;
425845     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425846     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
425847     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
425848     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
425849     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425850     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425851     ;
MPRINT(EM_DIAGRAM):   ;
425852     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425853     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425854     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425855     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425856     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425857     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425858     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425859     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425860     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
425861     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
425862     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
425863     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
425864     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
425865     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425866     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
425867     ;
MPRINT(EM_DIAGRAM):   ;
425868     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425869     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
425870     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
425871     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
425872     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
425873     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
425874     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
425875     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
425876     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
425877     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425878     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
425879     ;
MPRINT(EM_DIAGRAM):   ;
425880     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425881     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
425882     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
425883     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
425884     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
425885     *;
MPRINT(EM_DIAGRAM):   *;
425886     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
425887     *;
MPRINT(EM_DIAGRAM):   *;
425888     initial
425889     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
425890     ;
MPRINT(EM_DIAGRAM):   ;
425891     *;
MPRINT(EM_DIAGRAM):   *;
425892     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425893     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
425893   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
425894     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 1132 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
425895     tech = Default
425896     inest = EMWS8.AutoNeural12_ESTDS bylabel
425897     ;
425898     *;
425899     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425900     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
425900   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=847
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1132 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
425901     train estiter=1 outest=_anest outfit=_anfit maxtime=847 maxiter=50
MPRINT(EM_DIAGRAM):   run;
425902     tech = Default;
425903     ;
425904     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           5.27 seconds
      cpu time            5.25 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 532.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.28 seconds
      cpu time            5.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425905     *;
425906     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
425907     var _iter_ _aic_ _averr_ _misc_
425908     _vaverr_ _vmisc_
425909     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425910     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 533.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425911     *------------------------------------------------------------*;
425912     * Extract best iteration;
425913     ;
425914     *------------------------------------------------------------*;
425915     %global _iter;
425916     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
425917     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
425918     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
425919     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
425920     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
425921     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
425922     end;
MPRINT(EM_DIAGRAM):   end;
425923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425924     *;
 
425925     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
425926     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
425927     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
425928     output;
MPRINT(EM_DIAGRAM):   output;
425929     stop;
MPRINT(EM_DIAGRAM):   stop;
425930     end;
MPRINT(EM_DIAGRAM):   end;
425931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1132
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
425932     *;
425933     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425934     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
425935     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
425936     output;
MPRINT(EM_DIAGRAM):   output;
425937     stop;
MPRINT(EM_DIAGRAM):   stop;
425938     end;
MPRINT(EM_DIAGRAM):   end;
425939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425940     *;
MPRINT(EM_DIAGRAM):    *;
425941     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
425942     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
425942   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
425943     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
425944     var _iter_ _aic_ _averr_ _misc_
425945     _vaverr_ _vmisc_
425946     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
425947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 534.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425948     title9;
MPRINT(EM_DIAGRAM):   title9;
425949     title10;
MPRINT(EM_DIAGRAM):   title10;
425950     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425951     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425952     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425954     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
425955     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425956     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
425957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
425958     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
425959     ;
MPRINT(EM_DIAGRAM):   ;
425960     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
425961     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
425962     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
425963     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
425964     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
425965     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
425966     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
425967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425968     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
425969     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
425970     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425971     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
425972     ;
MPRINT(EM_DIAGRAM):   ;
425973     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
425974     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
425975     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
425976     *;
MPRINT(EM_DIAGRAM):    *;
425977     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
425978     validdata=EMWS8.Meta_VALIDATE
425979     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
425980     *;
MPRINT(EM_DIAGRAM):   *;
425981     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
425982     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
425983     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
425984     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
425985     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
425986     target DepVar / level=NOMINAL id=DepVar
425987     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
425988     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425989     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
425990     ;
MPRINT(EM_DIAGRAM):   ;
425991     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
425992     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
425993     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
425994     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
425995     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
425996     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
425997     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
425998     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
425999     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
426000     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
426001     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
426002     connect binary H1x3_;
The SAS System
 
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
426003     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
426004     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
426005     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
426006     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
426007     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
426008     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426009     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
426010     ;
MPRINT(EM_DIAGRAM):   ;
426011     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426012     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
426013     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
426014     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
426015     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
426016     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
426017     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
426018     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
426019     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
426020     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
426021     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
426022     Hidden 7 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=SOFTMAX;
426023     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
426024     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
426025     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
426026     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
426027     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426028     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
426029     ;
MPRINT(EM_DIAGRAM):   ;
426030     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426031     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
426032     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
426033     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
426034     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
426035     Hidden 7 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SINE;
426036     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
426037     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
426038     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
426039     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426040     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
426041     ;
MPRINT(EM_DIAGRAM):   ;
426042     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426043     Hidden 7 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=LOG;
426044     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
426045     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
426046     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
426047     *;
MPRINT(EM_DIAGRAM):   *;
426048     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
426049     *;
MPRINT(EM_DIAGRAM):   *;
426050     initial
426051     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
426052     ;
MPRINT(EM_DIAGRAM):   ;
426053     *;
MPRINT(EM_DIAGRAM):   *;
426054     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426055     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
426055   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
426056     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1894 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
426057     tech = Default
426058     inest = EMWS8.AutoNeural12_ESTDS bylabel
426059     ;
426060     *;
426061     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426062     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
426062   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=846
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1894 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
426063     train estiter=1 outest=_anest outfit=_anfit maxtime=846 maxiter=50
MPRINT(EM_DIAGRAM):   run;
426064     tech = Default;
426065     ;
426066     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:26.09
      cpu time            1:25.75
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 535.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:26.10
      cpu time            1:25.76
 
 
MPRINT(EM_DIAGRAM):   *;
426067     *;
426068     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
426069     var _iter_ _aic_ _averr_ _misc_
426070     _vaverr_ _vmisc_
426071     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 536.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426073     *------------------------------------------------------------*;
426074     * Extract best iteration;
426075     ;
426076     *------------------------------------------------------------*;
426077     %global _iter;
426078     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
426079     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
426080     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
426081     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
426082     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
426083     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
426084     end;
MPRINT(EM_DIAGRAM):   end;
426085     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426086     *;
 
426087     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
426088     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
426089     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
426090     output;
MPRINT(EM_DIAGRAM):   output;
426091     stop;
MPRINT(EM_DIAGRAM):   stop;
426092     end;
MPRINT(EM_DIAGRAM):   end;
426093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1894
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426094     *;
426095     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426096     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
426097     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
426098     output;
MPRINT(EM_DIAGRAM):   output;
426099     stop;
MPRINT(EM_DIAGRAM):   stop;
426100     end;
MPRINT(EM_DIAGRAM):   end;
426101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426102     *;
MPRINT(EM_DIAGRAM):    *;
426103     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426104     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
426104   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
426105     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
426106     var _iter_ _aic_ _averr_ _misc_
426107     _vaverr_ _vmisc_
426108     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 537.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426110     title9;
MPRINT(EM_DIAGRAM):   title9;
426111     title10;
MPRINT(EM_DIAGRAM):   title10;
426112     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426113     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426114     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426116     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426117     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426118     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426119     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426120     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
426121     ;
MPRINT(EM_DIAGRAM):   ;
426122     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426123     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426124     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
426125     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
426126     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
426127     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
426128     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
426129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426130     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
426131     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
426132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426133     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
426134     ;
MPRINT(EM_DIAGRAM):   ;
426135     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
426136     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
426137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426138     *;
MPRINT(EM_DIAGRAM):    *;
426139     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
426140     validdata=EMWS8.Meta_VALIDATE
426141     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
426142     *;
MPRINT(EM_DIAGRAM):   *;
426143     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
426144     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
426145     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
426146     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
426147     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
426148     target DepVar / level=NOMINAL id=DepVar
426149     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
426150     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426151     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
426152     ;
MPRINT(EM_DIAGRAM):   ;
426153     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426154     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
426155     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
426156     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
426157     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
426158     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
426159     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
426160     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
426161     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
426162     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
426163     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
426164     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
426165     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
426166     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
426167     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
426168     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
426169     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
426170     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426171     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
426172     ;
MPRINT(EM_DIAGRAM):   ;
426173     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426174     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
426175     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
426176     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
426177     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
426178     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
426179     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
426180     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
426181     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
426182     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
426183     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
426184     Hidden 7 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=SOFTMAX;
426185     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
426186     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
426187     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
426188     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
426189     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426190     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
426191     ;
MPRINT(EM_DIAGRAM):   ;
426192     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426193     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
426194     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
426195     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
426196     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
426197     Hidden 7 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SINE;
426198     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
426199     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
426200     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
426201     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426202     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
426203     ;
MPRINT(EM_DIAGRAM):   ;
426204     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426205     Hidden 7 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SINE;
426206     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
426207     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
426208     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
426209     *;
MPRINT(EM_DIAGRAM):   *;
426210     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
426211     *;
MPRINT(EM_DIAGRAM):   *;
426212     initial
426213     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
426214     ;
MPRINT(EM_DIAGRAM):   ;
426215     *;
MPRINT(EM_DIAGRAM):   *;
426216     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426217     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
426217   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
426218     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1894 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
426219     tech = Default
426220     inest = EMWS8.AutoNeural12_ESTDS bylabel
426221     ;
426222     *;
426223     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426224     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
426224   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=824
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 53 observations and 1894 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
426225     train estiter=1 outest=_anest outfit=_anfit maxtime=824 maxiter=50
MPRINT(EM_DIAGRAM):   run;
426226     tech = Default;
426227     ;
426228     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:20.14
      cpu time            1:19.68
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 538.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:20.14
      cpu time            1:19.68
 
 
MPRINT(EM_DIAGRAM):   *;
426229     *;
426230     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
426231     var _iter_ _aic_ _averr_ _misc_
426232     _vaverr_ _vmisc_
426233     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 539.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426235     *------------------------------------------------------------*;
426236     * Extract best iteration;
426237     ;
426238     *------------------------------------------------------------*;
426239     %global _iter;
426240     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
426241     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
426242     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
426243     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
426244     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
426245     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
426246     end;
MPRINT(EM_DIAGRAM):   end;
426247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426248     *;
 
426249     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
426250     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
426251     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
426252     output;
MPRINT(EM_DIAGRAM):   output;
426253     stop;
MPRINT(EM_DIAGRAM):   stop;
426254     end;
MPRINT(EM_DIAGRAM):   end;
426255     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1894
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426256     *;
426257     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426258     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
426259     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
426260     output;
MPRINT(EM_DIAGRAM):   output;
426261     stop;
MPRINT(EM_DIAGRAM):   stop;
426262     end;
MPRINT(EM_DIAGRAM):   end;
426263     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426264     *;
MPRINT(EM_DIAGRAM):    *;
426265     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426266     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
426266   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
426267     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
426268     var _iter_ _aic_ _averr_ _misc_
426269     _vaverr_ _vmisc_
426270     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 540.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426272     title9;
MPRINT(EM_DIAGRAM):   title9;
426273     title10;
MPRINT(EM_DIAGRAM):   title10;
426274     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426275     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426276     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426277     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426278     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426279     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426280     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426282     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
426283     ;
MPRINT(EM_DIAGRAM):   ;
426284     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426285     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426286     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
426287     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
426288     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
426289     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
426290     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
426291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426292     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
426293     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
426294     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426295     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
426296     ;
MPRINT(EM_DIAGRAM):   ;
426297     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_ESTDS;
426298     set EMWS8.AutoNeural12_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_BESTDS;
426299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426300     *;
MPRINT(EM_DIAGRAM):    *;
426301     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
426302     validdata=EMWS8.Meta_VALIDATE
426303     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
426304     *;
MPRINT(EM_DIAGRAM):   *;
426305     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
426306     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
426307     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
426308     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
426309     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
426310     target DepVar / level=NOMINAL id=DepVar
426311     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
426312     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426313     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
426314     ;
MPRINT(EM_DIAGRAM):   ;
426315     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426316     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
426317     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
426318     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
426319     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
426320     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
426321     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
426322     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
426323     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
426324     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
426325     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
426326     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
426327     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
426328     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
426329     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
426330     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
426331     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
426332     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426333     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
426334     ;
MPRINT(EM_DIAGRAM):   ;
426335     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426336     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
426337     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
426338     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
426339     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
426340     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
426341     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
426342     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
426343     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
426344     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
426345     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
426346     Hidden 7 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=SOFTMAX;
426347     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
426348     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
426349     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
426350     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
426351     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426352     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
426353     ;
MPRINT(EM_DIAGRAM):   ;
426354     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426355     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
426356     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
426357     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
426358     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
426359     Hidden 7 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SINE;
426360     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
426361     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
426362     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
426363     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426364     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
426365     ;
MPRINT(EM_DIAGRAM):   ;
426366     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426367     Hidden 7 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SOFTMAX;
426368     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
426369     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
426370     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
426371     *;
MPRINT(EM_DIAGRAM):   *;
426372     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
426373     *;
MPRINT(EM_DIAGRAM):   *;
426374     initial
426375     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
426376     ;
MPRINT(EM_DIAGRAM):   ;
426377     *;
MPRINT(EM_DIAGRAM):   *;
426378     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426379     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
426379   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
426380     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1879 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
426381     tech = Default
426382     inest = EMWS8.AutoNeural12_ESTDS bylabel
426383     ;
426384     *;
426385     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426386     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
426386   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=804
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1879 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
426387     train estiter=1 outest=_anest outfit=_anfit maxtime=804 maxiter=50
MPRINT(EM_DIAGRAM):   run;
426388     tech = Default;
426389     ;
426390     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:33.07
      cpu time            1:32.82
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 541.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:33.08
      cpu time            1:32.82
 
 
MPRINT(EM_DIAGRAM):   *;
426391     *;
426392     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
426393     var _iter_ _aic_ _averr_ _misc_
426394     _vaverr_ _vmisc_
426395     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426396     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 542.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426397     *------------------------------------------------------------*;
426398     * Extract best iteration;
426399     ;
426400     *------------------------------------------------------------*;
426401     %global _iter;
426402     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
426403     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
426404     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
426405     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
426406     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
426407     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
426408     end;
MPRINT(EM_DIAGRAM):   end;
426409     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426410     *;
 
426411     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
426412     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
426413     if _ITER_ eq 22 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 then do;
426414     output;
MPRINT(EM_DIAGRAM):   output;
426415     stop;
MPRINT(EM_DIAGRAM):   stop;
426416     end;
MPRINT(EM_DIAGRAM):   end;
426417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1879
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426418     *;
426419     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426420     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
426421     if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
426422     output;
MPRINT(EM_DIAGRAM):   output;
426423     stop;
MPRINT(EM_DIAGRAM):   stop;
426424     end;
MPRINT(EM_DIAGRAM):   end;
426425     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426426     *;
MPRINT(EM_DIAGRAM):    *;
426427     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426428     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
426428   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
426429     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
426430     var _iter_ _aic_ _averr_ _misc_
426431     _vaverr_ _vmisc_
426432     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426433     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 543.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426434     title9;
MPRINT(EM_DIAGRAM):   title9;
426435     title10;
MPRINT(EM_DIAGRAM):   title10;
426436     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426437     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426438     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426439     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426440     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
426441     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426442     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
426443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426444     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
426445     ;
MPRINT(EM_DIAGRAM):   ;
426446     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426447     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426448     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
426449     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
426450     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
426451     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
426452     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
426453     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
426454     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
426455     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
426456     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 20 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426457     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
426458     set WORK.SAVEDS_AUTONEUR_01IF6XB;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_01IF6XB;
426459     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_01IF6XB.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426460     *;
MPRINT(EM_DIAGRAM):    *;
426461     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
426462     validdata=EMWS8.Meta_VALIDATE
426463     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
426464     *;
MPRINT(EM_DIAGRAM):   *;
426465     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
426466     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
426467     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
426468     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
426469     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
426470     target DepVar / level=NOMINAL id=DepVar
426471     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
426472     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426473     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
426474     ;
MPRINT(EM_DIAGRAM):   ;
426475     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426476     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
426477     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
426478     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
426479     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
426480     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
426481     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
426482     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
426483     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
426484     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
426485     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
426486     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
426487     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
426488     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426489     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
426490     ;
MPRINT(EM_DIAGRAM):   ;
426491     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426492     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
426493     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
426494     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
426495     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
426496     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
426497     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
426498     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
426499     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
426500     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426501     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
426502     ;
MPRINT(EM_DIAGRAM):   ;
426503     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426504     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
426505     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
426506     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
426507     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
426508     *;
MPRINT(EM_DIAGRAM):   *;
426509     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
426510     *;
MPRINT(EM_DIAGRAM):   *;
426511     initial
426512     inest = EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
426513     ;
MPRINT(EM_DIAGRAM):   ;
426514     *;
MPRINT(EM_DIAGRAM):   *;
426515     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426516     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
426516   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
426517     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural12_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 1094 variables.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
MPRINT(EM_DIAGRAM):   *;
426518     tech = Default
426519     inest = EMWS8.AutoNeural12_ESTDS bylabel
426520     ;
426521     *;
426522     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426523     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
426523   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=781
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 1094 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
426524     train estiter=1 outest=_anest outfit=_anfit maxtime=781 maxiter=5
MPRINT(EM_DIAGRAM):   run;
426525     tech = Default;
426526     ;
426527     run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.25 seconds
      cpu time            2.24 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 544.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.25 seconds
      cpu time            2.24 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426528     *;
426529     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
426530     var _iter_ _aic_ _averr_ _misc_
426531     _vaverr_ _vmisc_
426532     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426533     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 545.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426534     *------------------------------------------------------------*;
426535     * Extract best iteration;
426536     ;
426537     *------------------------------------------------------------*;
426538     %global _iter;
426539     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
426540     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
426541     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
426542     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
426543     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
426544     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
426545     end;
MPRINT(EM_DIAGRAM):   end;
426546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426547     *;
 
426548     data EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_ESTDS;
426549     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
426550     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
426551     output;
MPRINT(EM_DIAGRAM):   output;
426552     stop;
MPRINT(EM_DIAGRAM):   stop;
426553     end;
MPRINT(EM_DIAGRAM):   end;
426554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
426555     *;
426556     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426557     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
426558     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
426559     output;
MPRINT(EM_DIAGRAM):   output;
426560     stop;
MPRINT(EM_DIAGRAM):   stop;
426561     end;
MPRINT(EM_DIAGRAM):   end;
426562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
426563     *;
MPRINT(EM_DIAGRAM):    *;
426564     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
426565     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
426565   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
426566     proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_OUTFIT noobs;
426567     var _iter_ _aic_ _averr_ _misc_
426568     _vaverr_ _vmisc_
426569     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
426570     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 546.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426571     title9;
MPRINT(EM_DIAGRAM):   title9;
426572     title10;
MPRINT(EM_DIAGRAM):   title10;
426573     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
426574     ;
MPRINT(EM_DIAGRAM):   ;
426575     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426576     set EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT;
426577     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
426578     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
426579     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
426580     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
426581     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
426582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426583     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_HISTORY;
426584     set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY EMWS8.AutoNeural12_OUTFIT;
426585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL12_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 21 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
426586     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
426587     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
426587   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
426588     proc print data=EMWS8.AutoNeural12_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_HISTORY noobs;
426589     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
426590     _vaverr_ _vmisc_
426591     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
426592     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: The PROCEDURE PRINT printed page 547.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426593     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
426594     set EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY;
426595     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
426596     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
426597     else neurons=7;
MPRINT(EM_DIAGRAM):   else neurons=7;
426598     label neurons="%sysfunc(sasmsg(sashelp.dmine,
426598   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
426599     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL12_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426600     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
426601     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
426601   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
426602     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
426602   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
426602   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
426603     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
426604     var _func_ _averr_
426605     _vaverr_
426606     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
426607     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
426608     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 548.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426609     title8;
MPRINT(EM_DIAGRAM):   title8;
426610     title9;
MPRINT(EM_DIAGRAM):   title9;
426611     title10;
MPRINT(EM_DIAGRAM):   title10;
426612     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426613     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
426614     ;
MPRINT(EM_DIAGRAM):   ;
426615     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426616     *;
MPRINT(EM_DIAGRAM):   *;
426617     proc neural data=EM_AutoNeural12 dmdbcat=WORK.AutoNeural12_DMDB
426618     validdata=EMWS8.Meta_VALIDATE
426619     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural12
dmdbcat=WORK.AutoNeural12_DMDB validdata=EMWS8.Meta_VALIDATE ;
426620     *;
MPRINT(EM_DIAGRAM):   *;
426621     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
426622     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
426623     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
426624     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
426625     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
426626     target DepVar / level=NOMINAL id=DepVar
426627     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
426628     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426629     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
426630     ;
MPRINT(EM_DIAGRAM):   ;
426631     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426632     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
426633     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
426634     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
426635     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
426636     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
426637     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
426638     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
426639     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
426640     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
426641     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
426642     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
426643     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
426644     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426645     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
426646     ;
MPRINT(EM_DIAGRAM):   ;
426647     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426648     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
426649     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
426650     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
426651     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
426652     Hidden 7 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=SOFTMAX;
426653     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
426654     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
426655     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
426656     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426657     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
426658     ;
MPRINT(EM_DIAGRAM):   ;
426659     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426660     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
426661     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
426662     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
426663     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
426664     *;
MPRINT(EM_DIAGRAM):   *;
426665     initial inest= EMWS8.AutoNeural12_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural12_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL12_ESTDS has 1 observations and 1094
      variables.
426666     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
426667     code
426667   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\SCO
426667   ! RECODE.sas"
426668     group=AutoNeural12
426669     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\SCORECODE.sas"
 group=AutoNeural12 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\SCORECODE.sas
      opened.
426670     ;
MPRINT(EM_DIAGRAM):   ;
426671     code
426671   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\RES
426671   ! IDUALSCORECODE.sas"
426672     group=AutoNeural12
426673     residual
426674     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\RESIDUALSCOREC
ODE.sas" group=AutoNeural12 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\RESIDUALSCOREC
      ODE.sas opened.
426675     ;
MPRINT(EM_DIAGRAM):   ;
426676     score data=EMWS8.Meta_TRAIN out=_NULL_
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
426677     outfit=WORK.FIT1
426678     role=TRAIN
426679     outkey=EMWS8.AutoNeural12_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural12_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL12_OUTKEY has 92 observations and 8
      variables.
NOTE: The data set EMWS8.META_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
426680     score data=EMWS8.Meta_VALIDATE out=_NULL_
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
426681     outfit=WORK.FIT2
426682     outkey=EMWS8.AutoNeural12_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural12_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL12_OUTKEY has 92 observations and 8
      variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
426683     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL12 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
 
426684     data EMWS8.AutoNeural12_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_OUTFIT;
426685     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
426686     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426687     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426688     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
426689     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
426690     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
426690   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
426691     set EMWS8.AutoNeural12_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_ESTDS;
426692     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 1086 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426693     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
426694     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
426695     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 1086 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426696     proc transpose data=tempweight out=EMWS8.AutoNeural12_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural12_WEIGHTS;
426697     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
426698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL12_WEIGHTS has 1084 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
426699     data EMWS8.AutoNeural12_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_WEIGHTS;
426700     set EMWS8.AutoNeural12_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_WEIGHTS;
426701     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
426702     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
426703     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
426704     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
426705     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
426705   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
426705   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
426705   ! NOQUOTE))" WEIGHT =
426706        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
426707     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
426708     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1084 observations read from the data set
      EMWS8.AUTONEURAL12_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL12_WEIGHTS has 1079 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
426709     * restore printing options;
426710     ;
426711     title10;
MPRINT(EM_DIAGRAM):   title10;
426712     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
426713     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
426714     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
426715     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
426716     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
426717     *;
426718     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
426719     delete EM_AutoNeural12;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural12;
426720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL12 (memtype=DATA).
426721     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
426722     data EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_HISTORY;
426723     set EMWS8.AutoNeural12_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_HISTORY;
426724     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
426725     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
426725   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
426726     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
426727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL12_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL12_HISTORY has 21 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1925XSC
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1925XSC new;
MPRINT(EM_DIAGRAM):   run;
426829     filename emflow
426829   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426830     *------------------------------------------------------------*;
426831     * AutoNeural12: Scoring DATA data;
426832     *------------------------------------------------------------*;
426833     data EMWS8.AutoNeural12_TRAIN
426834     / view=EMWS8.AutoNeural12_TRAIN
426835     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_TRAIN / view=EMWS8.AutoNeural12_TRAIN ;
426836     set EMWS8.Meta_TRAIN
426837     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
426838     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
426839    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
426840    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
426841    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
426842    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
426843    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
426844    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
426845    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
426846    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
426847    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
426848    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
426849    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
426850    +LENGTH _WARN_ $4
426851    +      F_DepVar  $ 12
426852    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
426853    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
426854    +
426855    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
426856    +
426857    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
426858    +
426859    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
426860    +
426861    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
426862    +
426863    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
426864    +
426865    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
426866    +
426867    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
426868    +
426869    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
426870    +
426871    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
426872    +
426873    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
426874    +
426875    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
426876    +
426877    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
426878    +
426879    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
426880    +
426881    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
426882    +
426883    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
426884    +
426885    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
426886    +
426887    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
426888    +
426889    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
426890    +
426891    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
426892    +
426893    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
426894    +
426895    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
426896    +
426897    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
426898    +
426899    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
426900    +
426901    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
426902    +
426903    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
426904    +
426905    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
426906    +
426907    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
426908    +
426909    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
426910    +
426911    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
426912    +
426913    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
426914    +
426915    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
426916    +
426917    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
426918    +
426919    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
426920    +
426921    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
426922    +
426923    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
426924    +
426925    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
426926    +
426927    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
426928    +
426929    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
426930    +
426931    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
426932    +
426933    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
426934    +
426935    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
426936    +
426937    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
426938    +
426939    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
426940    +
426941    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
426942    +
426943    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
426944    +
426945    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
426946    +
426947    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
426948    +
426949    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
426950    +
426951    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
426952    +
426953    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
426954    +
426955    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
426956    +
426957    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
426958    +
426959    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
426960    +
426961    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
426962    +
426963    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
426964    +
426965    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
426966    +
426967    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
426968    +
426969    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
426970    +
426971    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
426972    +
426973    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
426974    +
426975    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
426976    +
426977    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
426978    +
426979    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
426980    +
426981    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
426982    +
426983    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
426984    +
426985    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
426986    +
426987    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
426988    +
426989    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
426990    +
426991    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
426992    +
426993    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
426994    +
426995    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
426996    +
426997    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
426998    +
426999    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
427000    +
427001    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
427002    +
427003    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
427004    +
427005    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
427006    +
427007    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
427008    +
427009    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
427010    +
427011    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
427012    +
427013    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
427014    +
427015    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
427016    +
427017    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
427018    +
427019    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
427020    +
427021    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
427022    +
427023    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
427024    +
427025    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
427026    +
427027    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
427028    +
427029    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
427030    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
427031    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
427032    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
427033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427035    +end;
MPRINT(EM_DIAGRAM):   end;
427036    +else do;
MPRINT(EM_DIAGRAM):   else do;
427037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427038    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
427039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427041    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
427042    +   end;
MPRINT(EM_DIAGRAM):   end;
427043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427044    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
427045    +   end;
MPRINT(EM_DIAGRAM):   end;
427046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427047    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
427048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427050    +   end;
MPRINT(EM_DIAGRAM):   end;
427051    +end;
MPRINT(EM_DIAGRAM):   end;
427052    +
427053    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
427054    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
427055    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
427056    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
427057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427059    +end;
MPRINT(EM_DIAGRAM):   end;
427060    +else do;
MPRINT(EM_DIAGRAM):   else do;
427061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427062    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
427063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427064    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427065    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
427066    +   end;
MPRINT(EM_DIAGRAM):   end;
427067    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427068    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
427069    +   end;
MPRINT(EM_DIAGRAM):   end;
427070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427071    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
427072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427074    +   end;
MPRINT(EM_DIAGRAM):   end;
427075    +end;
MPRINT(EM_DIAGRAM):   end;
427076    +
427077    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
427078    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
427079    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
427080    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
427081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427083    +end;
MPRINT(EM_DIAGRAM):   end;
427084    +else do;
MPRINT(EM_DIAGRAM):   else do;
427085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427086    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
427087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427089    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
427090    +   end;
MPRINT(EM_DIAGRAM):   end;
427091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427092    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
427093    +   end;
MPRINT(EM_DIAGRAM):   end;
427094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427095    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
427096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427098    +   end;
MPRINT(EM_DIAGRAM):   end;
427099    +end;
MPRINT(EM_DIAGRAM):   end;
427100    +
427101    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
427102    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
427103    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
427104    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
427105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427107    +end;
MPRINT(EM_DIAGRAM):   end;
427108    +else do;
MPRINT(EM_DIAGRAM):   else do;
427109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427110    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
427111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427112    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427113    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
427114    +   end;
MPRINT(EM_DIAGRAM):   end;
427115    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427116    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
427117    +   end;
MPRINT(EM_DIAGRAM):   end;
427118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427119    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
427120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427122    +   end;
MPRINT(EM_DIAGRAM):   end;
427123    +end;
MPRINT(EM_DIAGRAM):   end;
427124    +
427125    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
427126    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
427127    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
427128    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
427129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427131    +end;
MPRINT(EM_DIAGRAM):   end;
427132    +else do;
MPRINT(EM_DIAGRAM):   else do;
427133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427134    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
427135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427136    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427137    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
427138    +   end;
MPRINT(EM_DIAGRAM):   end;
427139    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427140    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
427141    +   end;
MPRINT(EM_DIAGRAM):   end;
427142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427143    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
427144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427146    +   end;
MPRINT(EM_DIAGRAM):   end;
427147    +end;
MPRINT(EM_DIAGRAM):   end;
427148    +
427149    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
427150    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
427151    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
427152    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
427153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427155    +end;
MPRINT(EM_DIAGRAM):   end;
427156    +else do;
MPRINT(EM_DIAGRAM):   else do;
427157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427158    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
427159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427160    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427161    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
427162    +   end;
MPRINT(EM_DIAGRAM):   end;
427163    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427164    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
427165    +   end;
MPRINT(EM_DIAGRAM):   end;
427166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427167    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
427168    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427169    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427170    +   end;
MPRINT(EM_DIAGRAM):   end;
427171    +end;
MPRINT(EM_DIAGRAM):   end;
427172    +
427173    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
427174    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
427175    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
427176    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
427177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427179    +end;
MPRINT(EM_DIAGRAM):   end;
427180    +else do;
MPRINT(EM_DIAGRAM):   else do;
427181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427182    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
427183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427184    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
427185    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
427186    +   end;
MPRINT(EM_DIAGRAM):   end;
427187    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
427188    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
427189    +   end;
MPRINT(EM_DIAGRAM):   end;
427190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427191    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
427192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427194    +   end;
MPRINT(EM_DIAGRAM):   end;
427195    +end;
MPRINT(EM_DIAGRAM):   end;
427196    +
427197    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
427198    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
427199    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
427200    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
427201    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
427202    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
427203    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
427204    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
427205    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
427206    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
427207    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
427208    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
427209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427211    +end;
MPRINT(EM_DIAGRAM):   end;
427212    +else do;
MPRINT(EM_DIAGRAM):   else do;
427213    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
427214    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
427215    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427216    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
427217    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
427218    +   end;
MPRINT(EM_DIAGRAM):   end;
427219    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
427220    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
427221    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
427222    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
427223    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
427224    +   end;
MPRINT(EM_DIAGRAM):   end;
427225    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
427226    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
427227    +   end;
MPRINT(EM_DIAGRAM):   end;
427228    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
427229    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
427230    +   end;
MPRINT(EM_DIAGRAM):   end;
427231    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
427232    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
427233    +   end;
MPRINT(EM_DIAGRAM):   end;
427234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427235    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
427236    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
427237    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
427238    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
427239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427241    +   end;
MPRINT(EM_DIAGRAM):   end;
427242    +end;
MPRINT(EM_DIAGRAM):   end;
427243    +
427244    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
427245    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
427246    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
427247    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
427248    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
427249    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
427250    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
427251    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
427252    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
427253    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427254    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427255    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427256    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427259    +end;
MPRINT(EM_DIAGRAM):   end;
427260    +else do;
MPRINT(EM_DIAGRAM):   else do;
427261    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
427262    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
427263    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427264    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
427265    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
427266    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
427267    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
427268    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
427269    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427270    +         end;
MPRINT(EM_DIAGRAM):   end;
427271    +         else do;
MPRINT(EM_DIAGRAM):   else do;
427272    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
427273    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
427274    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427275    +            end;
MPRINT(EM_DIAGRAM):   end;
427276    +         end;
MPRINT(EM_DIAGRAM):   end;
427277    +      end;
MPRINT(EM_DIAGRAM):   end;
427278    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427279    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
427280    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
427281    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427282    +         end;
MPRINT(EM_DIAGRAM):   end;
427283    +      end;
MPRINT(EM_DIAGRAM):   end;
427284    +   end;
MPRINT(EM_DIAGRAM):   end;
427285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427286    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
427287    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
427288    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427289    +      end;
MPRINT(EM_DIAGRAM):   end;
427290    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427291    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
427292    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
427293    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
427294    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
427295    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
427296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427297    +         end;
MPRINT(EM_DIAGRAM):   end;
427298    +      end;
MPRINT(EM_DIAGRAM):   end;
427299    +   end;
MPRINT(EM_DIAGRAM):   end;
427300    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
427301    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427302    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427303    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427304    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427305    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427306    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427307    +   end;
MPRINT(EM_DIAGRAM):   end;
427308    +end;
MPRINT(EM_DIAGRAM):   end;
427309    +
427310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427311    +*** Checking missing input Interval
427312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
427313    +
427314    +IF NMISS(
427315    +   AcceptedCmpTotal ,
427316    +   Age ,
427317    +   Frq ,
427318    +   Income ,
427319    +   Kidhome ,
427320    +   Mnt ,
427321    +   MntFishProducts ,
427322    +   MntFruits ,
427323    +   MntGoldProds ,
427324    +   MntMeatProducts ,
427325    +   MntSweetProducts ,
427326    +   MntWines ,
427327    +   MonthsAsCustomer ,
427328    +   NumCatalogPurchases ,
427329    +   NumDealsPurchases ,
427330    +   NumDistPurchases ,
427331    +   NumStorePurchases ,
427332    +   NumWebPurchases ,
427333    +   NumWebVisitsMonth ,
427334    +   RFMstat ,
427335    +   RMntFrq ,
427336    +   Recency ,
427337    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
427338    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
427339    +
427340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427341    +END;
MPRINT(EM_DIAGRAM):   END;
427342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427343    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
427344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427346    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427347    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
427348    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427349    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427350    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427351    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427352    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427353    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427354    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
427355    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427356    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427357    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
427358    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427359    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
427360    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427361    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
427362    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427363    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
427364    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
427365    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
427366    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
427367    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427368    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
427369    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427370    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
427371    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427372    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
427373    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427374    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
427375    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427376    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
427377    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427378    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427379    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427380    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427381    +END;
MPRINT(EM_DIAGRAM):   END;
427382    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427383    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
427384    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427385    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
427386    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
427387    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427388    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
427389    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427390    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
427391    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427392    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
427393    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427394    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
427395    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427396    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
427397    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427398    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
427399    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
427400    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
427401    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427402    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
427403    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427404    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
427405    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
427406    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427407    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
427408    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
427409    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427410    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
427411    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
427412    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427413    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
427414    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
427415    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
427416    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
427417    +   ELSE S_NumCatalogPurchases
427418    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
427419    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
427420    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
427421    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427422    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
427423    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
427424    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427425    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
427426    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
427427    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427428    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
427429    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
427430    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427431    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
427432    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
427433    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427434    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
427435    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
427436    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427437    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
427438    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427439    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
427440    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427441    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
427442    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427443    +END;
MPRINT(EM_DIAGRAM):   END;
427444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427445    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
427446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427448    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
427449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427451    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
427452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427454    +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
427455    +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
427456    +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
427457    +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
427458    +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
427459    +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
427460    +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
427461    +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
427462    +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
427463    +          +    -1.18466001117424 * S_NumDealsPurchases
427464    +          +     -0.1371252133567 * S_NumDistPurchases
427465    +          +     1.92719775731123 * S_NumStorePurchases
427466    +          +     1.23184249192116 * S_NumWebPurchases
427467    +          +    -1.55583843197424 * S_NumWebVisitsMonth
427468    +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
427469    +        S_RMntFrq  +     1.63863392145333 * S_Recency
427470    +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
427471    +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
427472    +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
427473    +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
427474    +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
427475    +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
427476    +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
427477    +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
427478    +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
427479    +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
427480    +          +     0.63616523425865 * S_NumDealsPurchases
427481    +          +     0.45460056261546 * S_NumDistPurchases
427482    +          +    -0.61009999017225 * S_NumStorePurchases
427483    +          +     1.85193755731081 * S_NumWebPurchases
427484    +          +    -2.47698404964319 * S_NumWebVisitsMonth
427485    +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
427486    +        S_RMntFrq  +     1.07962222419254 * S_Recency
427487    +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
427488    +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
427489    +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
427490    +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
427491    +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
427492    +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
427493    +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
427494    +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
427495    +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
427496    +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
427497    +          +      1.8907968580473 * S_NumDealsPurchases
427498    +          +     0.01244124801764 * S_NumDistPurchases
427499    +          +    -2.34409118104622 * S_NumStorePurchases
427500    +          +    -1.80820043087435 * S_NumWebPurchases
427501    +          +     2.40219682136039 * S_NumWebVisitsMonth
427502    +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
427503    +        S_RMntFrq  +    -2.05893311376628 * S_Recency
427504    +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
427505    +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
427506    +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
427507    +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
427508    +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
427509    +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
427510    +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
427511    +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
427512    +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
427513    +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
427514    +          +     0.28209537604198 * S_NumDealsPurchases
427515    +          +      0.6450277971767 * S_NumDistPurchases
427516    +          +     0.85050092520609 * S_NumStorePurchases
427517    +          +    -0.53920307215941 * S_NumWebPurchases
427518    +          +     3.01106015100147 * S_NumWebVisitsMonth
427519    +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
427520    +        S_RMntFrq  +    -3.15497765450512 * S_Recency
427521    +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
427522    +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
427523    +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
427524    +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
427525    +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
427526    +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
427527    +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
427528    +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
427529    +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
427530    +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
427531    +          +    -0.36642526324451 * S_NumDealsPurchases
427532    +          +     -0.6091014843932 * S_NumDistPurchases
427533    +          +    -0.21154626182088 * S_NumStorePurchases
427534    +          +    -0.10361347071364 * S_NumWebPurchases
427535    +          +     1.36358817627784 * S_NumWebVisitsMonth
427536    +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
427537    +        S_RMntFrq  +    -1.04649498091784 * S_Recency
427538    +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
427539    +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
427540    +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
427541    +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
427542    +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
427543    +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
427544    +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
427545    +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
427546    +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
427547    +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
427548    +          +    -0.14868505161718 * S_NumDealsPurchases
427549    +          +    -0.08395384711805 * S_NumDistPurchases
427550    +          +     0.60525238179245 * S_NumStorePurchases
427551    +          +     0.04555100214276 * S_NumWebPurchases
427552    +          +    -2.31888436784305 * S_NumWebVisitsMonth
427553    +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
427554    +        S_RMntFrq  +     3.02439474266744 * S_Recency
427555    +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
427556    +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
427557    +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
427558    +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
427559    +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
427560    +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
427561    +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
427562    +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
427563    +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
427564    +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
427565    +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
427566    +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
427567    +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
427568    +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
427569    +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
427570    +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
427571    +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
427572    +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
427573    +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
427574    +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
427575    +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
427576    +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
427577    +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
427578    +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
427579    +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
427580    +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
427581    +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
427582    +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
427583    +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
427584    +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
427585    +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
427586    +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
427587    +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
427588    +        EducationGraduation  +     0.96924197858068 * EducationMaster
427589    +          +     -0.7180104021039 * Marital_StatusDivorced
427590    +          +      0.5957373170744 * Marital_StatusMarried
427591    +          +    -0.86183942803988 * Marital_StatusSingle
427592    +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
427593    +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
427594    +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
427595    +        EducationGraduation  +    -1.23733321574678 * EducationMaster
427596    +          +     0.84772700244021 * Marital_StatusDivorced
427597    +          +    -0.37049970188511 * Marital_StatusMarried
427598    +          +     1.54291641732063 * Marital_StatusSingle
427599    +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
427600    +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
427601    +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
427602    +        EducationGraduation  +     0.02093123351397 * EducationMaster
427603    +          +     0.73222548496385 * Marital_StatusDivorced
427604    +          +    -0.50102202656102 * Marital_StatusMarried
427605    +          +    -0.07207130428422 * Marital_StatusSingle
427606    +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
427607    +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
427608    +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
427609    +        EducationGraduation  +     0.65366032471107 * EducationMaster
427610    +          +     0.25894719464799 * Marital_StatusDivorced
427611    +          +    -1.95576501275834 * Marital_StatusMarried
427612    +          +     2.65422185276746 * Marital_StatusSingle
427613    +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
427614    +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
427615    +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
427616    +        EducationGraduation  +    -0.28683119112285 * EducationMaster
427617    +          +     0.60936191204707 * Marital_StatusDivorced
427618    +          +    -0.52190111190458 * Marital_StatusMarried
427619    +          +    -0.60982305233136 * Marital_StatusSingle
427620    +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
427621    +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
427622    +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
427623    +        EducationGraduation  +     0.51538853297606 * EducationMaster
427624    +          +    -1.44614502228294 * Marital_StatusDivorced
427625    +          +      2.9001493892928 * Marital_StatusMarried
427626    +          +    -2.60467399972513 * Marital_StatusSingle
427627    +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
427628    +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
427629    +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
427630    +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
427631    +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
427632    +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
427633    +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
427634    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
427635    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
427636    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
427637    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
427638    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
427639    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
427640    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
427641    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
427642    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
427643    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
427644    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
427645    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
427646    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
427647    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
427648    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
427649    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
427650    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
427651    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
427652    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
427653    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
427654    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
427655    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
427656    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
427657    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
427658    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
427659    +END;
MPRINT(EM_DIAGRAM):   END;
427660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427661    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
427662    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
427663    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
427664    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
427665    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
427666    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
427667    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
427668    +END;
MPRINT(EM_DIAGRAM):   END;
427669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427670    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
427671    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427672    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427673    +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
427674    +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
427675    +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
427676    +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
427677    +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
427678    +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
427679    +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
427680    +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
427681    +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
427682    +          +    -0.46483717253931 * S_NumDealsPurchases
427683    +          +    -0.53329008421157 * S_NumDistPurchases
427684    +          +      0.2490774300193 * S_NumStorePurchases
427685    +          +    -0.82755150673885 * S_NumWebPurchases
427686    +          +     0.04007223822389 * S_NumWebVisitsMonth
427687    +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
427688    +        S_RMntFrq  +     0.43434806411249 * S_Recency
427689    +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
427690    +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
427691    +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
427692    +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
427693    +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
427694    +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
427695    +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
427696    +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
427697    +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
427698    +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
427699    +          +     0.75855101382458 * S_NumDealsPurchases
427700    +          +     1.61754951768262 * S_NumDistPurchases
427701    +          +    -0.48146714929729 * S_NumStorePurchases
427702    +          +    -0.76460728035552 * S_NumWebPurchases
427703    +          +    -0.71146787112442 * S_NumWebVisitsMonth
427704    +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
427705    +        S_RMntFrq  +    -0.01528916550509 * S_Recency
427706    +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
427707    +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
427708    +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
427709    +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
427710    +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
427711    +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
427712    +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
427713    +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
427714    +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
427715    +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
427716    +          +     0.75255317965748 * S_NumDealsPurchases
427717    +          +     1.34900588315783 * S_NumDistPurchases
427718    +          +    -0.17717469778048 * S_NumStorePurchases
427719    +          +    -0.01560551546553 * S_NumWebPurchases
427720    +          +     1.24315988674343 * S_NumWebVisitsMonth
427721    +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
427722    +        S_RMntFrq  +    -2.01558015490584 * S_Recency
427723    +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
427724    +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
427725    +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
427726    +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
427727    +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
427728    +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
427729    +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
427730    +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
427731    +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
427732    +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
427733    +          +    -1.71127148178768 * S_NumDealsPurchases
427734    +          +    -1.77527355221308 * S_NumDistPurchases
427735    +          +    -1.40009594349363 * S_NumStorePurchases
427736    +          +    -0.46471012062697 * S_NumWebPurchases
427737    +          +     0.04619891083228 * S_NumWebVisitsMonth
427738    +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
427739    +        S_RMntFrq  +     0.84880186653433 * S_Recency
427740    +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
427741    +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
427742    +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
427743    +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
427744    +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
427745    +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
427746    +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
427747    +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
427748    +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
427749    +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
427750    +          +    -0.22204470395056 * S_NumDealsPurchases
427751    +          +    -1.74490476011984 * S_NumDistPurchases
427752    +          +     1.93538420108324 * S_NumStorePurchases
427753    +          +     1.04892631742152 * S_NumWebPurchases
427754    +          +     1.50717841566047 * S_NumWebVisitsMonth
427755    +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
427756    +        S_RMntFrq  +      1.9918829185386 * S_Recency
427757    +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
427758    +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
427759    +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
427760    +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
427761    +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
427762    +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
427763    +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
427764    +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
427765    +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
427766    +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
427767    +          +    -0.94690420785776 * S_NumDealsPurchases
427768    +          +     1.87932706342204 * S_NumDistPurchases
427769    +          +     0.31232717416487 * S_NumStorePurchases
427770    +          +     1.51889492693355 * S_NumWebPurchases
427771    +          +     0.04376853689795 * S_NumWebVisitsMonth
427772    +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
427773    +        S_RMntFrq  +    -1.21983510008829 * S_Recency
427774    +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
427775    +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
427776    +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
427777    +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
427778    +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
427779    +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
427780    +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
427781    +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
427782    +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
427783    +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
427784    +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
427785    +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
427786    +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
427787    +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
427788    +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
427789    +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
427790    +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
427791    +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
427792    +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
427793    +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
427794    +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
427795    +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
427796    +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
427797    +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
427798    +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
427799    +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
427800    +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
427801    +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
427802    +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
427803    +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
427804    +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
427805    +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
427806    +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
427807    +        EducationGraduation  +    -0.11344307008943 * EducationMaster
427808    +          +     0.56030871857835 * Marital_StatusDivorced
427809    +          +    -1.22448534379831 * Marital_StatusMarried
427810    +          +     0.78141783495855 * Marital_StatusSingle
427811    +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
427812    +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
427813    +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
427814    +        EducationGraduation  +     0.69607179798453 * EducationMaster
427815    +          +    -2.63452071552997 * Marital_StatusDivorced
427816    +          +     0.61829054779121 * Marital_StatusMarried
427817    +          +    -2.20743370246315 * Marital_StatusSingle
427818    +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
427819    +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
427820    +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
427821    +        EducationGraduation  +    -1.68638824011899 * EducationMaster
427822    +          +      -1.454102516731 * Marital_StatusDivorced
427823    +          +     0.71488291465759 * Marital_StatusMarried
427824    +          +     0.96038830049792 * Marital_StatusSingle
427825    +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
427826    +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
427827    +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
427828    +        EducationGraduation  +    -1.12481097095571 * EducationMaster
427829    +          +    -0.01160394891598 * Marital_StatusDivorced
427830    +          +    -1.09054636482951 * Marital_StatusMarried
427831    +          +      0.7793855479379 * Marital_StatusSingle
427832    +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
427833    +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
427834    +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
427835    +        EducationGraduation  +     0.09666597691691 * EducationMaster
427836    +          +    -0.73414854875115 * Marital_StatusDivorced
427837    +          +     0.46421425621114 * Marital_StatusMarried
427838    +          +    -0.54512730625469 * Marital_StatusSingle
427839    +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
427840    +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
427841    +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
427842    +        EducationGraduation  +     0.56518194582557 * EducationMaster
427843    +          +     0.25131188683384 * Marital_StatusDivorced
427844    +          +     2.38279806963807 * Marital_StatusMarried
427845    +          +     0.28897706448348 * Marital_StatusSingle
427846    +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
427847    +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
427848    +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
427849    +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
427850    +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
427851    +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
427852    +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
427853    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
427854    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
427855    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
427856    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
427857    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
427858    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
427859    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
427860    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
427861    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
427862    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
427863    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
427864    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
427865    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
427866    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
427867    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
427868    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
427869    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
427870    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
427871    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
427872    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
427873    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
427874    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
427875    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
427876    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
427877    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
427878    +END;
MPRINT(EM_DIAGRAM):   END;
427879    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427880    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
427881    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
427882    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
427883    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
427884    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
427885    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
427886    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
427887    +END;
MPRINT(EM_DIAGRAM):   END;
427888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427889    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
427890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427891    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427892    +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
427893    +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
427894    +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
427895    +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
427896    +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
427897    +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
427898    +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
427899    +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
427900    +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
427901    +          +     1.11855402225797 * S_NumDealsPurchases
427902    +          +     0.39150287442005 * S_NumDistPurchases
427903    +          +     0.00160244551627 * S_NumStorePurchases
427904    +          +     1.54380043731879 * S_NumWebPurchases
427905    +          +      0.6462755347813 * S_NumWebVisitsMonth
427906    +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
427907    +        S_RMntFrq  +     0.91533450209744 * S_Recency
427908    +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
427909    +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
427910    +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
427911    +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
427912    +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
427913    +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
427914    +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
427915    +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
427916    +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
427917    +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
427918    +          +     0.01911815525287 * S_NumDealsPurchases
427919    +          +    -1.07196707915227 * S_NumDistPurchases
427920    +          +      0.6452048321682 * S_NumStorePurchases
427921    +          +    -0.15818575353955 * S_NumWebPurchases
427922    +          +    -0.82586162051382 * S_NumWebVisitsMonth
427923    +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
427924    +        S_RMntFrq  +     0.23398669008843 * S_Recency
427925    +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
427926    +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
427927    +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
427928    +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
427929    +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
427930    +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
427931    +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
427932    +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
427933    +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
427934    +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
427935    +          +     1.56893739271853 * S_NumDealsPurchases
427936    +          +      0.6745865425238 * S_NumDistPurchases
427937    +          +    -0.26848765783548 * S_NumStorePurchases
427938    +          +     0.79227081430227 * S_NumWebPurchases
427939    +          +     0.83054874267768 * S_NumWebVisitsMonth
427940    +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
427941    +        S_RMntFrq  +     0.80917480816898 * S_Recency
427942    +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
427943    +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
427944    +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
427945    +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
427946    +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
427947    +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
427948    +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
427949    +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
427950    +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
427951    +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
427952    +          +    -0.23954856030467 * S_NumDealsPurchases
427953    +          +    -1.61914390483829 * S_NumDistPurchases
427954    +          +      -1.014570623016 * S_NumStorePurchases
427955    +          +    -0.36828642098701 * S_NumWebPurchases
427956    +          +    -0.04976922659227 * S_NumWebVisitsMonth
427957    +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
427958    +        S_RMntFrq  +    -0.40880481304369 * S_Recency
427959    +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
427960    +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
427961    +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
427962    +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
427963    +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
427964    +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
427965    +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
427966    +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
427967    +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
427968    +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
427969    +          +     1.00094082424204 * S_NumDealsPurchases
427970    +          +      0.2724785290725 * S_NumDistPurchases
427971    +          +     0.13170237783486 * S_NumStorePurchases
427972    +          +    -1.31447792523743 * S_NumWebPurchases
427973    +          +    -0.09121088371438 * S_NumWebVisitsMonth
427974    +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
427975    +        S_RMntFrq  +      0.6767512513985 * S_Recency
427976    +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
427977    +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
427978    +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
427979    +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
427980    +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
427981    +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
427982    +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
427983    +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
427984    +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
427985    +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
427986    +          +    -0.73198872336344 * S_NumDealsPurchases
427987    +          +     0.29368958872361 * S_NumDistPurchases
427988    +          +     1.52772046446908 * S_NumStorePurchases
427989    +          +    -1.75065469134874 * S_NumWebPurchases
427990    +          +      0.0264954621772 * S_NumWebVisitsMonth
427991    +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
427992    +        S_RMntFrq  +     1.14219878739476 * S_Recency
427993    +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
427994    +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
427995    +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
427996    +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
427997    +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
427998    +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
427999    +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
428000    +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
428001    +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
428002    +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
428003    +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
428004    +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
428005    +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
428006    +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
428007    +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
428008    +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
428009    +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
428010    +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
428011    +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
428012    +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
428013    +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
428014    +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
428015    +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
428016    +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
428017    +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
428018    +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
428019    +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
428020    +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
428021    +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
428022    +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
428023    +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
428024    +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
428025    +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
428026    +        EducationGraduation  +     1.49476669226441 * EducationMaster
428027    +          +     0.32207432513904 * Marital_StatusDivorced
428028    +          +      0.6397913221395 * Marital_StatusMarried
428029    +          +    -0.25330032559918 * Marital_StatusSingle
428030    +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
428031    +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
428032    +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
428033    +        EducationGraduation  +      0.0913616986494 * EducationMaster
428034    +          +     0.79430904713493 * Marital_StatusDivorced
428035    +          +     2.54456429102799 * Marital_StatusMarried
428036    +          +     0.59410742352499 * Marital_StatusSingle
428037    +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
428038    +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
428039    +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
428040    +        EducationGraduation  +    -0.07080985966069 * EducationMaster
428041    +          +    -0.43081775693595 * Marital_StatusDivorced
428042    +          +    -0.78485102174552 * Marital_StatusMarried
428043    +          +    -1.56581090110813 * Marital_StatusSingle
428044    +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
428045    +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
428046    +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
428047    +        EducationGraduation  +     1.01633562820676 * EducationMaster
428048    +          +     0.38226706522151 * Marital_StatusDivorced
428049    +          +     0.96666958079914 * Marital_StatusMarried
428050    +          +    -0.07771259761555 * Marital_StatusSingle
428051    +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
428052    +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
428053    +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
428054    +        EducationGraduation  +     0.05813076059598 * EducationMaster
428055    +          +    -0.38325393606947 * Marital_StatusDivorced
428056    +          +    -1.43303056163299 * Marital_StatusMarried
428057    +          +     0.11571941757387 * Marital_StatusSingle
428058    +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
428059    +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
428060    +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
428061    +        EducationGraduation  +     0.90837023676142 * EducationMaster
428062    +          +    -0.36491799765765 * Marital_StatusDivorced
428063    +          +     0.14142786767503 * Marital_StatusMarried
428064    +          +     0.22643970468805 * Marital_StatusSingle
428065    +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
428066    +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
428067    +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
428068    +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
428069    +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
428070    +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
428071    +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
428072    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
428073    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
428074    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
428075    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428076    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
428077    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
428078    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
428079    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
428080    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
428081    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
428082    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
428083    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
428084    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
428085    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
428086    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
428087    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
428088    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
428089    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
428090    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
428091    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
428092    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
428093    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
428094    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
428095    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
428096    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
428097    +END;
MPRINT(EM_DIAGRAM):   END;
428098    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428099    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
428100    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
428101    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
428102    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
428103    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
428104    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
428105    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
428106    +END;
MPRINT(EM_DIAGRAM):   END;
428107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428108    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
428109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428110    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428111    +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
428112    +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
428113    +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
428114    +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
428115    +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
428116    +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
428117    +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
428118    +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
428119    +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
428120    +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
428121    +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
428122    +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
428123    +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
428124    +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
428125    +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
428126    +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
428127    +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
428128    +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
428129    +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
428130    +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
428131    +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
428132    +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
428133    +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
428134    +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
428135    +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
428136    +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
428137    +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
428138    +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
428139    +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
428140    +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
428141    +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
428142    +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
428143    +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
428144    +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
428145    +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
428146    +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
428147    +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
428148    +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
428149    +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
428150    +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
428151    +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
428152    +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
428153    +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
428154    +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
428155    +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
428156    +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
428157    +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
428158    +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
428159    +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
428160    +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
428161    +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
428162    +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
428163    +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
428164    +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
428165    +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
428166    +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
428167    +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
428168    +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
428169    +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
428170    +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
428171    +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
428172    +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
428173    +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
428174    +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
428175    +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
428176    +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
428177    +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
428178    +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
428179    +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
428180    +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
428181    +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
428182    +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
428183    +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
428184    +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
428185    +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
428186    +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
428187    +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
428188    +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
428189    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
428190    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
428191    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
428192    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428193    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
428194    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
428195    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
428196    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
428197    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
428198    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
428199    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
428200    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
428201    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
428202    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
428203    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
428204    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
428205    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
428206    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
428207    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
428208    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
428209    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
428210    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
428211    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
428212    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
428213    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
428214    +END;
MPRINT(EM_DIAGRAM):   END;
428215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428216    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
428217    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
428218    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
428219    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
428220    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
428221    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
428222    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
428223    +END;
MPRINT(EM_DIAGRAM):   END;
428224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428225    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
428226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428227    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428228    +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
428229    +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
428230    +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
428231    +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
428232    +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
428233    +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
428234    +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
428235    +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
428236    +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
428237    +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
428238    +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
428239    +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
428240    +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
428241    +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
428242    +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
428243    +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
428244    +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
428245    +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
428246    +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
428247    +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
428248    +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
428249    +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
428250    +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
428251    +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
428252    +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
428253    +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
428254    +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
428255    +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
428256    +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
428257    +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
428258    +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
428259    +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
428260    +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
428261    +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
428262    +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
428263    +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
428264    +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
428265    +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
428266    +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
428267    +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
428268    +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
428269    +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
428270    +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
428271    +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
428272    +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
428273    +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
428274    +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
428275    +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
428276    +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
428277    +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
428278    +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
428279    +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
428280    +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
428281    +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
428282    +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
428283    +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
428284    +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
428285    +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
428286    +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
428287    +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
428288    +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
428289    +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
428290    +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
428291    +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
428292    +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
428293    +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
428294    +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
428295    +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
428296    +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
428297    +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
428298    +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
428299    +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
428300    +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
428301    +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
428302    +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
428303    +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
428304    +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
428305    +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
428306    +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
428307    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
428308    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
428309    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428310    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
428311    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
428312    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
428313    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
428314    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
428315    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
428316    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
428317    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
428318    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
428319    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
428320    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
428321    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
428322    +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
428323    +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
428324    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
428325    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
428326    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
428327    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
428328    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
428329    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
428330    +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
428331    +END;
MPRINT(EM_DIAGRAM):   END;
428332    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428333    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
428334    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
428335    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
428336    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
428337    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
428338    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
428339    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
428340    +END;
MPRINT(EM_DIAGRAM):   END;
428341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428342    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
428343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428344    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428345    +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
428346    +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
428347    +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
428348    +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
428349    +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
428350    +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
428351    +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
428352    +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
428353    +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
428354    +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
428355    +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
428356    +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
428357    +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
428358    +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
428359    +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
428360    +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
428361    +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
428362    +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
428363    +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
428364    +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
428365    +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
428366    +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
428367    +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
428368    +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
428369    +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
428370    +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
428371    +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
428372    +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
428373    +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
428374    +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
428375    +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
428376    +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
428377    +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
428378    +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
428379    +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
428380    +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
428381    +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
428382    +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
428383    +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
428384    +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
428385    +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
428386    +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
428387    +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
428388    +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
428389    +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
428390    +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
428391    +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
428392    +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
428393    +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
428394    +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
428395    +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
428396    +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
428397    +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
428398    +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
428399    +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
428400    +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
428401    +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
428402    +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
428403    +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
428404    +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
428405    +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
428406    +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
428407    +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
428408    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
428409    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
428410    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
428411    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
428412    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
428413    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
428414    +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
428415    +END;
MPRINT(EM_DIAGRAM):   END;
428416    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428417    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
428418    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
428419    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
428420    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
428421    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
428422    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
428423    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
428424    +END;
MPRINT(EM_DIAGRAM):   END;
428425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428426    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
428427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428428    +
428429    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
428430    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
428431    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428432    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
428433    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
428434    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428435    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
428436    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
428437    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
428438    +end;
MPRINT(EM_DIAGRAM):   end;
428439    +else do;
MPRINT(EM_DIAGRAM):   else do;
428440    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
428441    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
428442    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
428443    +   end;
MPRINT(EM_DIAGRAM):   end;
428444    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
428445    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
428446    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
428447    +   end;
MPRINT(EM_DIAGRAM):   end;
428448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428449    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
428450    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
428451    +   end;
MPRINT(EM_DIAGRAM):   end;
428452    +end;
MPRINT(EM_DIAGRAM):   end;
428453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428454    +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
428455    +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
428456    +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
428457    +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
428458    +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
428459    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
428460    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
428461    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428462    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
428463    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
428464    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
428465    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
428466    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
428467    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
428468    +END;
MPRINT(EM_DIAGRAM):   END;
428469    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428470    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
428471    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
428472    +END;
MPRINT(EM_DIAGRAM):   END;
428473    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
428474    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
428475    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
428476    +END;
MPRINT(EM_DIAGRAM):   END;
428477    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
428478    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
428479    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
428480    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
428481    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
428482    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
428483    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
428484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428485    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
428486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428487    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
428488    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
428489    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
428490    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
428491    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
428492    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
428493    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
428494    +END;
MPRINT(EM_DIAGRAM):   END;
428495    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
428496    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
428497    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
428498    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
428499     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
428500     quit;
428501     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
428502     filename emflow
428502   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428503     *------------------------------------------------------------*;
428504     * AutoNeural12: Scoring VALIDATE data;
428505     *------------------------------------------------------------*;
428506     data EMWS8.AutoNeural12_VALIDATE
428507     / view=EMWS8.AutoNeural12_VALIDATE
428508     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_VALIDATE / view=EMWS8.AutoNeural12_VALIDATE ;
428509     set EMWS8.Meta_VALIDATE
428510     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
428511     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
428512    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428513    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
428514    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428515    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
428516    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
428517    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
428518    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
428519    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
428520    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
428521    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
428522    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
428523    +LENGTH _WARN_ $4
428524    +      F_DepVar  $ 12
428525    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
428526    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
428527    +
428528    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
428529    +
428530    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
428531    +
428532    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
428533    +
428534    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
428535    +
428536    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
428537    +
428538    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
428539    +
428540    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
428541    +
428542    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
428543    +
428544    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
428545    +
428546    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
428547    +
428548    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
428549    +
428550    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
428551    +
428552    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
428553    +
428554    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
428555    +
428556    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
428557    +
428558    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
428559    +
428560    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
428561    +
428562    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
428563    +
428564    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
428565    +
428566    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
428567    +
428568    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
428569    +
428570    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
428571    +
428572    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
428573    +
428574    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
428575    +
428576    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
428577    +
428578    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
428579    +
428580    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
428581    +
428582    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
428583    +
428584    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
428585    +
428586    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
428587    +
428588    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
428589    +
428590    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
428591    +
428592    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
428593    +
428594    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
428595    +
428596    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
428597    +
428598    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
428599    +
428600    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
428601    +
428602    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
428603    +
428604    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
428605    +
428606    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
428607    +
428608    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
428609    +
428610    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
428611    +
428612    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
428613    +
428614    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
428615    +
428616    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
428617    +
428618    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
428619    +
428620    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
428621    +
428622    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
428623    +
428624    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
428625    +
428626    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
428627    +
428628    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
428629    +
428630    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
428631    +
428632    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
428633    +
428634    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
428635    +
428636    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
428637    +
428638    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
428639    +
428640    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
428641    +
428642    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
428643    +
428644    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
428645    +
428646    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
428647    +
428648    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
428649    +
428650    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
428651    +
428652    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
428653    +
428654    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
428655    +
428656    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
428657    +
428658    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
428659    +
428660    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
428661    +
428662    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
428663    +
428664    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
428665    +
428666    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
428667    +
428668    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
428669    +
428670    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
428671    +
428672    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
428673    +
428674    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
428675    +
428676    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
428677    +
428678    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
428679    +
428680    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
428681    +
428682    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
428683    +
428684    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
428685    +
428686    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
428687    +
428688    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428689    +
428690    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
428691    +
428692    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
428693    +
428694    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
428695    +
428696    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
428697    +
428698    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
428699    +
428700    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
428701    +
428702    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
428703    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
428704    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
428705    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
428706    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428707    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428708    +end;
MPRINT(EM_DIAGRAM):   end;
428709    +else do;
MPRINT(EM_DIAGRAM):   else do;
428710    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428711    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
428712    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428713    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428714    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
428715    +   end;
MPRINT(EM_DIAGRAM):   end;
428716    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428717    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
428718    +   end;
MPRINT(EM_DIAGRAM):   end;
428719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428720    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
428721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428723    +   end;
MPRINT(EM_DIAGRAM):   end;
428724    +end;
MPRINT(EM_DIAGRAM):   end;
428725    +
428726    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
428727    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
428728    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
428729    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
428730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428732    +end;
MPRINT(EM_DIAGRAM):   end;
428733    +else do;
MPRINT(EM_DIAGRAM):   else do;
428734    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428735    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
428736    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428737    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428738    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
428739    +   end;
MPRINT(EM_DIAGRAM):   end;
428740    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428741    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
428742    +   end;
MPRINT(EM_DIAGRAM):   end;
428743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428744    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
428745    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428746    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428747    +   end;
MPRINT(EM_DIAGRAM):   end;
428748    +end;
MPRINT(EM_DIAGRAM):   end;
428749    +
428750    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
428751    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
428752    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
428753    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
428754    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428755    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428756    +end;
MPRINT(EM_DIAGRAM):   end;
428757    +else do;
MPRINT(EM_DIAGRAM):   else do;
428758    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428759    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
428760    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428761    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428762    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
428763    +   end;
MPRINT(EM_DIAGRAM):   end;
428764    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428765    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
428766    +   end;
MPRINT(EM_DIAGRAM):   end;
428767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428768    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
428769    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428770    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428771    +   end;
MPRINT(EM_DIAGRAM):   end;
428772    +end;
MPRINT(EM_DIAGRAM):   end;
428773    +
428774    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
428775    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
428776    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
428777    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
428778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428780    +end;
MPRINT(EM_DIAGRAM):   end;
428781    +else do;
MPRINT(EM_DIAGRAM):   else do;
428782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428783    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
428784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428786    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
428787    +   end;
MPRINT(EM_DIAGRAM):   end;
428788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428789    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
428790    +   end;
MPRINT(EM_DIAGRAM):   end;
428791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428792    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
428793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428795    +   end;
MPRINT(EM_DIAGRAM):   end;
428796    +end;
MPRINT(EM_DIAGRAM):   end;
428797    +
428798    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
428799    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
428800    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
428801    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
428802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428804    +end;
MPRINT(EM_DIAGRAM):   end;
428805    +else do;
MPRINT(EM_DIAGRAM):   else do;
428806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428807    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
428808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428810    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
428811    +   end;
MPRINT(EM_DIAGRAM):   end;
428812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428813    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
428814    +   end;
MPRINT(EM_DIAGRAM):   end;
428815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428816    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
428817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428819    +   end;
MPRINT(EM_DIAGRAM):   end;
428820    +end;
MPRINT(EM_DIAGRAM):   end;
428821    +
428822    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
428823    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
428824    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
428825    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
428826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428828    +end;
MPRINT(EM_DIAGRAM):   end;
428829    +else do;
MPRINT(EM_DIAGRAM):   else do;
428830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428831    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
428832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428834    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
428835    +   end;
MPRINT(EM_DIAGRAM):   end;
428836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428837    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
428838    +   end;
MPRINT(EM_DIAGRAM):   end;
428839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428840    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
428841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428843    +   end;
MPRINT(EM_DIAGRAM):   end;
428844    +end;
MPRINT(EM_DIAGRAM):   end;
428845    +
428846    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
428847    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
428848    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
428849    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
428850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428852    +end;
MPRINT(EM_DIAGRAM):   end;
428853    +else do;
MPRINT(EM_DIAGRAM):   else do;
428854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428855    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
428856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428857    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
428858    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
428859    +   end;
MPRINT(EM_DIAGRAM):   end;
428860    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
428861    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
428862    +   end;
MPRINT(EM_DIAGRAM):   end;
428863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428864    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
428865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428867    +   end;
MPRINT(EM_DIAGRAM):   end;
428868    +end;
MPRINT(EM_DIAGRAM):   end;
428869    +
428870    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
428871    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
428872    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
428873    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
428874    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
428875    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
428876    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
428877    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
428878    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
428879    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
428880    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
428881    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
428882    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428883    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428884    +end;
MPRINT(EM_DIAGRAM):   end;
428885    +else do;
MPRINT(EM_DIAGRAM):   else do;
428886    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
428887    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
428888    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428889    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
428890    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
428891    +   end;
MPRINT(EM_DIAGRAM):   end;
428892    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
428893    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
428894    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
428895    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
428896    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
428897    +   end;
MPRINT(EM_DIAGRAM):   end;
428898    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
428899    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
428900    +   end;
MPRINT(EM_DIAGRAM):   end;
428901    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
428902    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
428903    +   end;
MPRINT(EM_DIAGRAM):   end;
428904    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
428905    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
428906    +   end;
MPRINT(EM_DIAGRAM):   end;
428907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428908    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
428909    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
428910    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
428911    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
428912    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428913    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428914    +   end;
MPRINT(EM_DIAGRAM):   end;
428915    +end;
MPRINT(EM_DIAGRAM):   end;
428916    +
428917    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
428918    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
428919    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
428920    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
428921    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
428922    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
428923    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
428924    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
428925    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
428926    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
428927    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
428928    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
428929    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
428930    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428932    +end;
MPRINT(EM_DIAGRAM):   end;
428933    +else do;
MPRINT(EM_DIAGRAM):   else do;
428934    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
428935    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
428936    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428937    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
428938    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
428939    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
428940    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
428941    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
428942    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428943    +         end;
MPRINT(EM_DIAGRAM):   end;
428944    +         else do;
MPRINT(EM_DIAGRAM):   else do;
428945    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
428946    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
428947    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428948    +            end;
MPRINT(EM_DIAGRAM):   end;
428949    +         end;
MPRINT(EM_DIAGRAM):   end;
428950    +      end;
MPRINT(EM_DIAGRAM):   end;
428951    +      else do;
MPRINT(EM_DIAGRAM):   else do;
428952    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
428953    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
428954    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428955    +         end;
MPRINT(EM_DIAGRAM):   end;
428956    +      end;
MPRINT(EM_DIAGRAM):   end;
428957    +   end;
MPRINT(EM_DIAGRAM):   end;
428958    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428959    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
428960    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
428961    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428962    +      end;
MPRINT(EM_DIAGRAM):   end;
428963    +      else do;
MPRINT(EM_DIAGRAM):   else do;
428964    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
428965    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
428966    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
428967    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
428968    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
428969    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428970    +         end;
MPRINT(EM_DIAGRAM):   end;
428971    +      end;
MPRINT(EM_DIAGRAM):   end;
428972    +   end;
MPRINT(EM_DIAGRAM):   end;
428973    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
428974    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
428975    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
428976    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
428977    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
428978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428980    +   end;
MPRINT(EM_DIAGRAM):   end;
428981    +end;
MPRINT(EM_DIAGRAM):   end;
428982    +
428983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428984    +*** Checking missing input Interval
428985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
428986    +
428987    +IF NMISS(
428988    +   AcceptedCmpTotal ,
428989    +   Age ,
428990    +   Frq ,
428991    +   Income ,
428992    +   Kidhome ,
428993    +   Mnt ,
428994    +   MntFishProducts ,
428995    +   MntFruits ,
428996    +   MntGoldProds ,
428997    +   MntMeatProducts ,
428998    +   MntSweetProducts ,
428999    +   MntWines ,
429000    +   MonthsAsCustomer ,
429001    +   NumCatalogPurchases ,
429002    +   NumDealsPurchases ,
429003    +   NumDistPurchases ,
429004    +   NumStorePurchases ,
429005    +   NumWebPurchases ,
429006    +   NumWebVisitsMonth ,
429007    +   RFMstat ,
429008    +   RMntFrq ,
429009    +   Recency ,
429010    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
429011    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
429012    +
429013    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429014    +END;
MPRINT(EM_DIAGRAM):   END;
429015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429016    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
429017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429018    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429019    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429020    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
429021    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
429022    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429023    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429024    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
429025    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429026    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
429027    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
429028    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
429029    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429030    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
429031    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429032    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
429033    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
429034    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
429035    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
429036    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
429037    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
429038    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
429039    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
429040    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429041    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
429042    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
429043    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
429044    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
429045    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
429046    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
429047    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
429048    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429049    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
429050    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429051    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
429052    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429053    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429054    +END;
MPRINT(EM_DIAGRAM):   END;
429055    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429056    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
429057    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429058    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
429059    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
429060    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
429061    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
429062    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429063    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
429064    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429065    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
429066    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
429067    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
429068    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429069    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
429070    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
429071    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
429072    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
429073    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
429074    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
429075    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
429076    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429077    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
429078    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
429079    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429080    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
429081    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
429082    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
429083    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
429084    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
429085    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
429086    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
429087    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
429088    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
429089    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
429090    +   ELSE S_NumCatalogPurchases
429091    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
429092    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
429093    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
429094    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429095    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
429096    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
429097    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
429098    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
429099    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
429100    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
429101    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
429102    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
429103    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
429104    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
429105    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
429106    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429107    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
429108    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
429109    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429110    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
429111    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
429112    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
429113    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429114    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
429115    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429116    +END;
MPRINT(EM_DIAGRAM):   END;
429117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429118    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
429119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429121    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
429122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429124    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
429125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429126    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429127    +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
429128    +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
429129    +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
429130    +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
429131    +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
429132    +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
429133    +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
429134    +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
429135    +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
429136    +          +    -1.18466001117424 * S_NumDealsPurchases
429137    +          +     -0.1371252133567 * S_NumDistPurchases
429138    +          +     1.92719775731123 * S_NumStorePurchases
429139    +          +     1.23184249192116 * S_NumWebPurchases
429140    +          +    -1.55583843197424 * S_NumWebVisitsMonth
429141    +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
429142    +        S_RMntFrq  +     1.63863392145333 * S_Recency
429143    +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 *
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 *
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts +
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 *
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 *
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 *
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 *
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq +
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
429144    +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
429145    +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
429146    +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
429147    +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
429148    +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
429149    +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
429150    +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
429151    +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
429152    +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
429153    +          +     0.63616523425865 * S_NumDealsPurchases
429154    +          +     0.45460056261546 * S_NumDistPurchases
429155    +          +    -0.61009999017225 * S_NumStorePurchases
429156    +          +     1.85193755731081 * S_NumWebPurchases
429157    +          +    -2.47698404964319 * S_NumWebVisitsMonth
429158    +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
429159    +        S_RMntFrq  +     1.07962222419254 * S_Recency
429160    +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 *
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 *
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts +
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 *
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines +
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases +
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases +
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases +
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 *
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
429161    +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
429162    +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
429163    +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
429164    +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
429165    +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
429166    +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
429167    +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
429168    +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
429169    +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
429170    +          +      1.8907968580473 * S_NumDealsPurchases
429171    +          +     0.01244124801764 * S_NumDistPurchases
429172    +          +    -2.34409118104622 * S_NumStorePurchases
429173    +          +    -1.80820043087435 * S_NumWebPurchases
429174    +          +     2.40219682136039 * S_NumWebVisitsMonth
429175    +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
429176    +        S_RMntFrq  +    -2.05893311376628 * S_Recency
429177    +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 *
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 *
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts +
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 *
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines +
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases +
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases +
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases +
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 *
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
429178    +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
429179    +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
429180    +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
429181    +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
429182    +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
429183    +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
429184    +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
429185    +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
429186    +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
429187    +          +     0.28209537604198 * S_NumDealsPurchases
429188    +          +      0.6450277971767 * S_NumDistPurchases
429189    +          +     0.85050092520609 * S_NumStorePurchases
429190    +          +    -0.53920307215941 * S_NumWebPurchases
429191    +          +     3.01106015100147 * S_NumWebVisitsMonth
429192    +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
429193    +        S_RMntFrq  +    -3.15497765450512 * S_Recency
429194    +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 *
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 *
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts +
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 *
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 *
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 *
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 *
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq +
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
429195    +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
429196    +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
429197    +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
429198    +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
429199    +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
429200    +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
429201    +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
429202    +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
429203    +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
429204    +          +    -0.36642526324451 * S_NumDealsPurchases
429205    +          +     -0.6091014843932 * S_NumDistPurchases
429206    +          +    -0.21154626182088 * S_NumStorePurchases
429207    +          +    -0.10361347071364 * S_NumWebPurchases
429208    +          +     1.36358817627784 * S_NumWebVisitsMonth
429209    +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
429210    +        S_RMntFrq  +    -1.04649498091784 * S_Recency
429211    +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 *
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 *
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts +
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 *
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines +
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases +
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases +
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases +
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 *
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
429212    +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
429213    +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
429214    +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
429215    +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
429216    +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
429217    +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
429218    +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
429219    +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
429220    +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
429221    +          +    -0.14868505161718 * S_NumDealsPurchases
429222    +          +    -0.08395384711805 * S_NumDistPurchases
429223    +          +     0.60525238179245 * S_NumStorePurchases
429224    +          +     0.04555100214276 * S_NumWebPurchases
429225    +          +    -2.31888436784305 * S_NumWebVisitsMonth
429226    +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
429227    +        S_RMntFrq  +     3.02439474266744 * S_Recency
429228    +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 *
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome +
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 *
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts +
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 *
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 *
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 *
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 *
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq +
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
429229    +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
429230    +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
429231    +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
429232    +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
429233    +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 *
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 +
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 *
HigherEducationBinary0 ;
429234    +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
429235    +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
429236    +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
429237    +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
429238    +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 *
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 +
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 *
HigherEducationBinary0 ;
429239    +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
429240    +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
429241    +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
429242    +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
429243    +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 *
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 +
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 *
HigherEducationBinary0 ;
429244    +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
429245    +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
429246    +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
429247    +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
429248    +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 +
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 *
HigherEducationBinary0 ;
429249    +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
429250    +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
429251    +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
429252    +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
429253    +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 *
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 +
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 *
HigherEducationBinary0 ;
429254    +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
429255    +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
429256    +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
429257    +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
429258    +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 +
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 *
HigherEducationBinary0 ;
429259    +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
429260    +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
429261    +        EducationGraduation  +     0.96924197858068 * EducationMaster
429262    +          +     -0.7180104021039 * Marital_StatusDivorced
429263    +          +      0.5957373170744 * Marital_StatusMarried
429264    +          +    -0.86183942803988 * Marital_StatusSingle
429265    +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle +
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 *
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 *
Marital_StatusTogether ;
429266    +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
429267    +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
429268    +        EducationGraduation  +    -1.23733321574678 * EducationMaster
429269    +          +     0.84772700244021 * Marital_StatusDivorced
429270    +          +    -0.37049970188511 * Marital_StatusMarried
429271    +          +     1.54291641732063 * Marital_StatusSingle
429272    +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle +
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation +
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced +
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle +
0.2036514883055 * Marital_StatusTogether ;
429273    +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
429274    +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
429275    +        EducationGraduation  +     0.02093123351397 * EducationMaster
429276    +          +     0.73222548496385 * Marital_StatusDivorced
429277    +          +    -0.50102202656102 * Marital_StatusMarried
429278    +          +    -0.07207130428422 * Marital_StatusSingle
429279    +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle +
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation +
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced +
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle +
0.17349558515949 * Marital_StatusTogether ;
429280    +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
429281    +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
429282    +        EducationGraduation  +     0.65366032471107 * EducationMaster
429283    +          +     0.25894719464799 * Marital_StatusDivorced
429284    +          +    -1.95576501275834 * Marital_StatusMarried
429285    +          +     2.65422185276746 * Marital_StatusSingle
429286    +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle +
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 *
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 *
Marital_StatusTogether ;
429287    +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
429288    +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
429289    +        EducationGraduation  +    -0.28683119112285 * EducationMaster
429290    +          +     0.60936191204707 * Marital_StatusDivorced
429291    +          +    -0.52190111190458 * Marital_StatusMarried
429292    +          +    -0.60982305233136 * Marital_StatusSingle
429293    +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle +
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation +
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced +
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle +
0.44659686388318 * Marital_StatusTogether ;
429294    +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
429295    +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
429296    +        EducationGraduation  +     0.51538853297606 * EducationMaster
429297    +          +    -1.44614502228294 * Marital_StatusDivorced
429298    +          +      2.9001493892928 * Marital_StatusMarried
429299    +          +    -2.60467399972513 * Marital_StatusSingle
429300    +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle +
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 *
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 *
Marital_StatusTogether ;
429301    +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
429302    +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
429303    +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
429304    +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
429305    +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
429306    +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
429307    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
429308    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
429309    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
429310    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429311    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
429312    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
429313    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
429314    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
429315    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
429316    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
429317    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
429318    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
429319    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
429320    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
429321    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
429322    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
429323    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
429324    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
429325    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
429326    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
429327    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
429328    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
429329    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
429330    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
429331    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
429332    +END;
MPRINT(EM_DIAGRAM):   END;
429333    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429334    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
429335    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
429336    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
429337    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
429338    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
429339    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
429340    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
429341    +END;
MPRINT(EM_DIAGRAM):   END;
429342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429343    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
429344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429346    +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
429347    +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
429348    +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
429349    +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
429350    +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
429351    +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
429352    +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
429353    +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
429354    +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
429355    +          +    -0.46483717253931 * S_NumDealsPurchases
429356    +          +    -0.53329008421157 * S_NumDistPurchases
429357    +          +      0.2490774300193 * S_NumStorePurchases
429358    +          +    -0.82755150673885 * S_NumWebPurchases
429359    +          +     0.04007223822389 * S_NumWebVisitsMonth
429360    +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
429361    +        S_RMntFrq  +     0.43434806411249 * S_Recency
429362    +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 *
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 *
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts +
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 *
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 *
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 *
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 *
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq +
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
429363    +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
429364    +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
429365    +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
429366    +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
429367    +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
429368    +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
429369    +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
429370    +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
429371    +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
429372    +          +     0.75855101382458 * S_NumDealsPurchases
429373    +          +     1.61754951768262 * S_NumDistPurchases
429374    +          +    -0.48146714929729 * S_NumStorePurchases
429375    +          +    -0.76460728035552 * S_NumWebPurchases
429376    +          +    -0.71146787112442 * S_NumWebVisitsMonth
429377    +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
429378    +        S_RMntFrq  +    -0.01528916550509 * S_Recency
429379    +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 *
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 *
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 *
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts +
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 *
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 *
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 *
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 *
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq +
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
429380    +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
429381    +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
429382    +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
429383    +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
429384    +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
429385    +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
429386    +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
429387    +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
429388    +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
429389    +          +     0.75255317965748 * S_NumDealsPurchases
429390    +          +     1.34900588315783 * S_NumDistPurchases
429391    +          +    -0.17717469778048 * S_NumStorePurchases
429392    +          +    -0.01560551546553 * S_NumWebPurchases
429393    +          +     1.24315988674343 * S_NumWebVisitsMonth
429394    +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
429395    +        S_RMntFrq  +    -2.01558015490584 * S_Recency
429396    +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 *
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 *
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts +
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 *
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 *
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 *
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 *
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq +
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
429397    +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
429398    +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
429399    +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
429400    +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
429401    +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
429402    +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
429403    +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
429404    +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
429405    +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
429406    +          +    -1.71127148178768 * S_NumDealsPurchases
429407    +          +    -1.77527355221308 * S_NumDistPurchases
429408    +          +    -1.40009594349363 * S_NumStorePurchases
429409    +          +    -0.46471012062697 * S_NumWebPurchases
429410    +          +     0.04619891083228 * S_NumWebVisitsMonth
429411    +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
429412    +        S_RMntFrq  +     0.84880186653433 * S_Recency
429413    +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 *
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 *
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts +
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 *
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 *
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 *
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 *
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq +
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
429414    +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
429415    +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
429416    +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
429417    +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
429418    +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
429419    +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
429420    +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
429421    +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
429422    +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
429423    +          +    -0.22204470395056 * S_NumDealsPurchases
429424    +          +    -1.74490476011984 * S_NumDistPurchases
429425    +          +     1.93538420108324 * S_NumStorePurchases
429426    +          +     1.04892631742152 * S_NumWebPurchases
429427    +          +     1.50717841566047 * S_NumWebVisitsMonth
429428    +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
429429    +        S_RMntFrq  +      1.9918829185386 * S_Recency
429430    +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 *
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 *
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts +
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 *
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 *
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 *
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 *
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq +
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
429431    +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
429432    +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
429433    +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
429434    +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
429435    +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
429436    +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
429437    +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
429438    +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
429439    +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
429440    +          +    -0.94690420785776 * S_NumDealsPurchases
429441    +          +     1.87932706342204 * S_NumDistPurchases
429442    +          +     0.31232717416487 * S_NumStorePurchases
429443    +          +     1.51889492693355 * S_NumWebPurchases
429444    +          +     0.04376853689795 * S_NumWebVisitsMonth
429445    +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
429446    +        S_RMntFrq  +    -1.21983510008829 * S_Recency
429447    +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 *
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 *
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts +
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 *
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 *
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 *
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 *
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq +
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
429448    +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
429449    +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
429450    +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
429451    +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
429452    +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 *
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 +
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 *
HigherEducationBinary0 ;
429453    +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
429454    +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
429455    +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
429456    +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
429457    +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 *
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 +
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 *
HigherEducationBinary0 ;
429458    +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
429459    +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
429460    +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
429461    +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
429462    +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 *
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 +
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 *
HigherEducationBinary0 ;
429463    +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
429464    +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
429465    +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
429466    +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
429467    +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 *
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 +
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 *
HigherEducationBinary0 ;
429468    +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
429469    +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
429470    +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
429471    +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
429472    +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 *
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 +
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 *
HigherEducationBinary0 ;
429473    +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
429474    +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
429475    +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
429476    +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
429477    +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 +
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 *
HigherEducationBinary0 ;
429478    +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
429479    +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
429480    +        EducationGraduation  +    -0.11344307008943 * EducationMaster
429481    +          +     0.56030871857835 * Marital_StatusDivorced
429482    +          +    -1.22448534379831 * Marital_StatusMarried
429483    +          +     0.78141783495855 * Marital_StatusSingle
429484    +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle +
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 *
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 *
Marital_StatusTogether ;
429485    +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
429486    +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
429487    +        EducationGraduation  +     0.69607179798453 * EducationMaster
429488    +          +    -2.63452071552997 * Marital_StatusDivorced
429489    +          +     0.61829054779121 * Marital_StatusMarried
429490    +          +    -2.20743370246315 * Marital_StatusSingle
429491    +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle +
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 *
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 *
Marital_StatusTogether ;
429492    +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
429493    +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
429494    +        EducationGraduation  +    -1.68638824011899 * EducationMaster
429495    +          +      -1.454102516731 * Marital_StatusDivorced
429496    +          +     0.71488291465759 * Marital_StatusMarried
429497    +          +     0.96038830049792 * Marital_StatusSingle
429498    +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle +
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 *
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 *
Marital_StatusTogether ;
429499    +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
429500    +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
429501    +        EducationGraduation  +    -1.12481097095571 * EducationMaster
429502    +          +    -0.01160394891598 * Marital_StatusDivorced
429503    +          +    -1.09054636482951 * Marital_StatusMarried
429504    +          +      0.7793855479379 * Marital_StatusSingle
429505    +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle +
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation +
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced +
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle +
-0.40649435490654 * Marital_StatusTogether ;
429506    +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
429507    +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
429508    +        EducationGraduation  +     0.09666597691691 * EducationMaster
429509    +          +    -0.73414854875115 * Marital_StatusDivorced
429510    +          +     0.46421425621114 * Marital_StatusMarried
429511    +          +    -0.54512730625469 * Marital_StatusSingle
429512    +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle +
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 *
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 *
Marital_StatusTogether ;
429513    +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
429514    +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
429515    +        EducationGraduation  +     0.56518194582557 * EducationMaster
429516    +          +     0.25131188683384 * Marital_StatusDivorced
429517    +          +     2.38279806963807 * Marital_StatusMarried
429518    +          +     0.28897706448348 * Marital_StatusSingle
429519    +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle +
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 *
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 *
Marital_StatusTogether ;
429520    +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
429521    +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
429522    +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
429523    +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
429524    +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
429525    +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
429526    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
429527    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
429528    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
429529    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429530    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
429531    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
429532    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
429533    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
429534    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
429535    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
429536    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
429537    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
429538    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
429539    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
429540    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
429541    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
429542    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
429543    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
429544    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
429545    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
429546    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
429547    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
429548    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
429549    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
429550    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
429551    +END;
MPRINT(EM_DIAGRAM):   END;
429552    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429553    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
429554    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
429555    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
429556    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
429557    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
429558    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
429559    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
429560    +END;
MPRINT(EM_DIAGRAM):   END;
429561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429562    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
429563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429564    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429565    +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
429566    +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
429567    +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
429568    +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
429569    +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
429570    +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
429571    +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
429572    +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
429573    +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
429574    +          +     1.11855402225797 * S_NumDealsPurchases
429575    +          +     0.39150287442005 * S_NumDistPurchases
429576    +          +     0.00160244551627 * S_NumStorePurchases
429577    +          +     1.54380043731879 * S_NumWebPurchases
429578    +          +      0.6462755347813 * S_NumWebVisitsMonth
429579    +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
429580    +        S_RMntFrq  +     0.91533450209744 * S_Recency
429581    +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 *
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 *
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts +
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 *
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 *
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 *
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 *
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq +
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
429582    +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
429583    +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
429584    +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
429585    +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
429586    +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
429587    +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
429588    +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
429589    +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
429590    +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
429591    +          +     0.01911815525287 * S_NumDealsPurchases
429592    +          +    -1.07196707915227 * S_NumDistPurchases
429593    +          +      0.6452048321682 * S_NumStorePurchases
429594    +          +    -0.15818575353955 * S_NumWebPurchases
429595    +          +    -0.82586162051382 * S_NumWebVisitsMonth
429596    +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
429597    +        S_RMntFrq  +     0.23398669008843 * S_Recency
429598    +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 *
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 *
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts +
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 *
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 *
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 *
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 *
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq +
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
429599    +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
429600    +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
429601    +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
429602    +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
429603    +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
429604    +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
429605    +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
429606    +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
429607    +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
429608    +          +     1.56893739271853 * S_NumDealsPurchases
429609    +          +      0.6745865425238 * S_NumDistPurchases
429610    +          +    -0.26848765783548 * S_NumStorePurchases
429611    +          +     0.79227081430227 * S_NumWebPurchases
429612    +          +     0.83054874267768 * S_NumWebVisitsMonth
429613    +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
429614    +        S_RMntFrq  +     0.80917480816898 * S_Recency
429615    +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome +
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 *
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts +
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 *
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 *
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 *
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 *
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq +
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
429616    +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
429617    +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
429618    +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
429619    +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
429620    +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
429621    +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
429622    +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
429623    +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
429624    +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
429625    +          +    -0.23954856030467 * S_NumDealsPurchases
429626    +          +    -1.61914390483829 * S_NumDistPurchases
429627    +          +      -1.014570623016 * S_NumStorePurchases
429628    +          +    -0.36828642098701 * S_NumWebPurchases
429629    +          +    -0.04976922659227 * S_NumWebVisitsMonth
429630    +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
429631    +        S_RMntFrq  +    -0.40880481304369 * S_Recency
429632    +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 *
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 *
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts +
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 *
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 *
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 *
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 *
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq +
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
429633    +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
429634    +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
429635    +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
429636    +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
429637    +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
429638    +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
429639    +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
429640    +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
429641    +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
429642    +          +     1.00094082424204 * S_NumDealsPurchases
429643    +          +      0.2724785290725 * S_NumDistPurchases
429644    +          +     0.13170237783486 * S_NumStorePurchases
429645    +          +    -1.31447792523743 * S_NumWebPurchases
429646    +          +    -0.09121088371438 * S_NumWebVisitsMonth
429647    +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
429648    +        S_RMntFrq  +      0.6767512513985 * S_Recency
429649    +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 *
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 *
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts +
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 *
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines +
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases +
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases +
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases +
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 *
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
429650    +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
429651    +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
429652    +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
429653    +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
429654    +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
429655    +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
429656    +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
429657    +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
429658    +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
429659    +          +    -0.73198872336344 * S_NumDealsPurchases
429660    +          +     0.29368958872361 * S_NumDistPurchases
429661    +          +     1.52772046446908 * S_NumStorePurchases
429662    +          +    -1.75065469134874 * S_NumWebPurchases
429663    +          +      0.0264954621772 * S_NumWebVisitsMonth
429664    +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
429665    +        S_RMntFrq  +     1.14219878739476 * S_Recency
429666    +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 *
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 *
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts +
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 *
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines +
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases +
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases +
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases +
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 *
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
429667    +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
429668    +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
429669    +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
429670    +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
429671    +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 *
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 +
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 *
HigherEducationBinary0 ;
429672    +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
429673    +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
429674    +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
429675    +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
429676    +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 *
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 +
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 *
HigherEducationBinary0 ;
429677    +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
429678    +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
429679    +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
429680    +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
429681    +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 *
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 +
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 *
HigherEducationBinary0 ;
429682    +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
429683    +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
429684    +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
429685    +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
429686    +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 *
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 +
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 *
HigherEducationBinary0 ;
429687    +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
429688    +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
429689    +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
429690    +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
429691    +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 *
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 +
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 *
HigherEducationBinary0 ;
429692    +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
429693    +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
429694    +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
429695    +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
429696    +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 *
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 +
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 *
HigherEducationBinary0 ;
429697    +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
429698    +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
429699    +        EducationGraduation  +     1.49476669226441 * EducationMaster
429700    +          +     0.32207432513904 * Marital_StatusDivorced
429701    +          +      0.6397913221395 * Marital_StatusMarried
429702    +          +    -0.25330032559918 * Marital_StatusSingle
429703    +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle +
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 *
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 *
Marital_StatusTogether ;
429704    +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
429705    +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
429706    +        EducationGraduation  +      0.0913616986494 * EducationMaster
429707    +          +     0.79430904713493 * Marital_StatusDivorced
429708    +          +     2.54456429102799 * Marital_StatusMarried
429709    +          +     0.59410742352499 * Marital_StatusSingle
429710    +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle +
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 *
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 *
Marital_StatusTogether ;
429711    +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
429712    +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
429713    +        EducationGraduation  +    -0.07080985966069 * EducationMaster
429714    +          +    -0.43081775693595 * Marital_StatusDivorced
429715    +          +    -0.78485102174552 * Marital_StatusMarried
429716    +          +    -1.56581090110813 * Marital_StatusSingle
429717    +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle +
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation +
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced +
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle +
1.31552735466691 * Marital_StatusTogether ;
429718    +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
429719    +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
429720    +        EducationGraduation  +     1.01633562820676 * EducationMaster
429721    +          +     0.38226706522151 * Marital_StatusDivorced
429722    +          +     0.96666958079914 * Marital_StatusMarried
429723    +          +    -0.07771259761555 * Marital_StatusSingle
429724    +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle +
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 *
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 *
Marital_StatusTogether ;
429725    +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
429726    +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
429727    +        EducationGraduation  +     0.05813076059598 * EducationMaster
429728    +          +    -0.38325393606947 * Marital_StatusDivorced
429729    +          +    -1.43303056163299 * Marital_StatusMarried
429730    +          +     0.11571941757387 * Marital_StatusSingle
429731    +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle +
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 *
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 *
Marital_StatusTogether ;
429732    +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
429733    +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
429734    +        EducationGraduation  +     0.90837023676142 * EducationMaster
429735    +          +    -0.36491799765765 * Marital_StatusDivorced
429736    +          +     0.14142786767503 * Marital_StatusMarried
429737    +          +     0.22643970468805 * Marital_StatusSingle
429738    +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried +
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
429739    +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
429740    +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
429741    +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
429742    +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
429743    +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
429744    +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
429745    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
429746    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
429747    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
429748    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429749    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
429750    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
429751    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
429752    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
429753    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
429754    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
429755    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
429756    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
429757    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
429758    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
429759    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
429760    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
429761    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
429762    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
429763    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
429764    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
429765    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
429766    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
429767    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
429768    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
429769    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
429770    +END;
MPRINT(EM_DIAGRAM):   END;
429771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429772    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
429773    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
429774    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
429775    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
429776    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
429777    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
429778    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
429779    +END;
MPRINT(EM_DIAGRAM):   END;
429780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429781    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
429782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429783    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429784    +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
429785    +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
429786    +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
429787    +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 +
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 +
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
429788    +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
429789    +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
429790    +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
429791    +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 +
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 +
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
429792    +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
429793    +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
429794    +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
429795    +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 +
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 +
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
429796    +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
429797    +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
429798    +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
429799    +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 +
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 +
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
429800    +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
429801    +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
429802    +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
429803    +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 +
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 +
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
429804    +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
429805    +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
429806    +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
429807    +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 +
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 +
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
429808    +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
429809    +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
429810    +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
429811    +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 *
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 +
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
429812    +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
429813    +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
429814    +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
429815    +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 +
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
429816    +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
429817    +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
429818    +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
429819    +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 +
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
429820    +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
429821    +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
429822    +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
429823    +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 +
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
429824    +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
429825    +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
429826    +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
429827    +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 *
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 +
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
429828    +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
429829    +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
429830    +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
429831    +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 +
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
429832    +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
429833    +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
429834    +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
429835    +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 +
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 +
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
429836    +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
429837    +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
429838    +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
429839    +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 +
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
429840    +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
429841    +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
429842    +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
429843    +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 +
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
429844    +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
429845    +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
429846    +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
429847    +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 +
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
429848    +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
429849    +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
429850    +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
429851    +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 +
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
429852    +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
429853    +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
429854    +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
429855    +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 +
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
429856    +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
429857    +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
429858    +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
429859    +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
429860    +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
429861    +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
429862    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
429863    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
429864    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
429865    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429866    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
429867    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
429868    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
429869    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
429870    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
429871    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
429872    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
429873    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
429874    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
429875    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
429876    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
429877    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
429878    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
429879    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
429880    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
429881    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
429882    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
429883    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
429884    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
429885    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
429886    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
429887    +END;
MPRINT(EM_DIAGRAM):   END;
429888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429889    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
429890    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
429891    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
429892    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
429893    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
429894    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
429895    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
429896    +END;
MPRINT(EM_DIAGRAM):   END;
429897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429898    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
429899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429900    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429901    +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
429902    +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
429903    +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
429904    +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 +
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 +
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
429905    +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
429906    +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
429907    +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
429908    +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 +
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 +
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
429909    +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
429910    +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
429911    +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
429912    +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 +
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 +
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
429913    +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
429914    +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
429915    +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
429916    +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 +
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 +
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
429917    +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
429918    +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
429919    +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
429920    +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 +
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 +
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
429921    +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
429922    +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
429923    +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
429924    +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 +
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 +
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
429925    +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
429926    +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
429927    +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
429928    +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 *
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 +
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
429929    +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
429930    +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
429931    +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
429932    +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 +
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
429933    +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
429934    +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
429935    +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
429936    +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 +
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
429937    +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
429938    +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
429939    +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
429940    +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 +
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
429941    +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
429942    +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
429943    +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
429944    +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 +
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
429945    +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
429946    +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
429947    +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
429948    +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 +
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
429949    +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
429950    +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
429951    +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
429952    +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 +
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 +
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
429953    +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
429954    +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
429955    +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
429956    +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 *
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 +
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
429957    +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
429958    +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
429959    +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
429960    +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 *
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 +
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
429961    +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
429962    +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
429963    +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
429964    +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 +
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
429965    +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
429966    +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
429967    +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
429968    +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 *
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 +
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
429969    +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
429970    +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
429971    +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
429972    +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 +
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
429973    +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
429974    +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
429975    +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
429976    +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
429977    +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
429978    +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
429979    +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
429980    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
429981    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 ,
H2x2_7 );
429982    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429983    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
429984    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
429985    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
429986    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
429987    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
429988    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
429989    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
429990    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
429991    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
429992    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
429993    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
429994    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
429995    +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
429996    +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
429997    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
429998    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
429999    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
430000    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
430001    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
430002    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
430003    +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
430004    +END;
MPRINT(EM_DIAGRAM):   END;
430005    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430006    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
430007    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
430008    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
430009    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
430010    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
430011    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
430012    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
430013    +END;
MPRINT(EM_DIAGRAM):   END;
430014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430015    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
430016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430017    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430018    +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
430019    +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
430020    +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
430021    +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 +
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 +
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
430022    +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
430023    +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
430024    +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
430025    +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 +
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 +
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
430026    +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
430027    +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
430028    +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
430029    +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 +
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 +
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
430030    +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
430031    +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
430032    +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
430033    +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 +
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 +
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
430034    +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
430035    +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
430036    +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
430037    +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 +
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 +
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
430038    +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
430039    +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
430040    +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
430041    +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 +
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 +
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
430042    +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
430043    +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
430044    +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
430045    +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 +
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 +
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
430046    +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
430047    +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
430048    +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
430049    +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 +
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
430050    +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
430051    +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
430052    +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
430053    +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 +
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
430054    +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
430055    +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
430056    +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
430057    +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 +
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
430058    +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
430059    +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
430060    +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
430061    +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 +
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
430062    +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
430063    +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
430064    +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
430065    +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 *
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 +
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
430066    +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
430067    +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
430068    +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
430069    +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 +
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
430070    +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
430071    +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
430072    +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
430073    +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 +
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
430074    +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
430075    +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
430076    +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
430077    +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
430078    +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
430079    +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
430080    +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
430081    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
430082    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
430083    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
430084    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
430085    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
430086    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
430087    +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
430088    +END;
MPRINT(EM_DIAGRAM):   END;
430089    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430090    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
430091    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
430092    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
430093    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
430094    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
430095    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
430096    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
430097    +END;
MPRINT(EM_DIAGRAM):   END;
430098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430099    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
430100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430101    +
430102    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
430103    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
430104    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
430105    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
430106    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
430107    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430108    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
430109    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
430110    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
430111    +end;
MPRINT(EM_DIAGRAM):   end;
430112    +else do;
MPRINT(EM_DIAGRAM):   else do;
430113    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
430114    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
430115    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
430116    +   end;
MPRINT(EM_DIAGRAM):   end;
430117    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
430118    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
430119    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
430120    +   end;
MPRINT(EM_DIAGRAM):   end;
430121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430122    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
430123    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
430124    +   end;
MPRINT(EM_DIAGRAM):   end;
430125    +end;
MPRINT(EM_DIAGRAM):   end;
430126    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430127    +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
430128    +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
430129    +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
430130    +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 +
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 +
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
430131    +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
430132    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
430133    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
430134    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
430135    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
430136    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
430137    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
430138    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
430139    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
430140    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
430141    +END;
MPRINT(EM_DIAGRAM):   END;
430142    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430143    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
430144    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
430145    +END;
MPRINT(EM_DIAGRAM):   END;
430146    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
430147    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
430148    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
430149    +END;
MPRINT(EM_DIAGRAM):   END;
430150    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
430151    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
430152    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
430153    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
430154    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
430155    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
430156    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
430157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430158    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
430159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430160    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
430161    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
430162    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
430163    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
430164    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
430165    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
430166    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
430167    +END;
MPRINT(EM_DIAGRAM):   END;
430168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
430169    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
430170    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
430171    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
430172     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
430173     quit;
430174     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
430175     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
430176     * AutoNeural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Computing metadata for TRAIN data;
430177     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural12_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural12_TRAIN out=WORK.M2XEQCRJ
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XEQCRJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XEQCRJ(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XEQCRJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XEQCRJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M20_C4UO NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_3TDGH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   set WORK.M20_C4UO;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
430489     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
430490     set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
430491     where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
430492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE (DATA='AutoNeural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430493     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMINFO;
430494     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
430495     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
430496     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
430500     run;
430501     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
430502     set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
430503     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430504     proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
430505     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
430506     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430507     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
430508     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
430509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
430510     proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
430511     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
430512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430513     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
430514     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
430515     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
430516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430517     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
430518     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
430519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
430520     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                18.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1NW7EWR
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1NW7EWR new;
MPRINT(EM_DIAGRAM):   run;
430544     proc sort data=EMWS8.AutoNeural12_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural12_OUTFIT nodupkey;
430545     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
430546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL12_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL12_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430547     data EMWS8.AutoNeural12_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMOUTFIT(rename=(_NAME_=TARGET));
430548     set EMWS8.AutoNeural12_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTFIT(where=(_NAME_ eq 'OVERALL'));
430549     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
430550     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
430551     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
430552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL12_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430553     data EMWS8.AutoNeural12_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMOUTFIT;
430554     set EMWS8.AutoNeural12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMOUTFIT;
430555     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
430556     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
430556   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
430557     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
430558     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
430559     proc sort data=EMWS8.AutoNeural12_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural12_EMREPORTFIT nothreads;
430560     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
430561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL12_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL12_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430562     %let _EMwarndup = 0;
430563     %let _EMtargetdup =;
430564     %let _EMASEtargetdup =;
430565     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
430566     set EMWS8.AutoNeural12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMOUTFIT;
430567     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
430568     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
430569     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
430570     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
430571     end;
MPRINT(EM_DIAGRAM):   end;
430572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL12_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430573     proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
430574     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
430575     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430576     proc sort data=EMWS8.AutoNeural12_VariableSet out=WORK.SUBSETVARSET(keep=NAME
430576   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
430577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
430578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430579     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
430580     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
430581     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
430582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430583     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
430584     set EMWS8.AutoNeural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_CMeta_TRAIN;
430585     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
430585   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
430586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL12_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
430587     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
430588     set EMWS8.AutoNeural12_TRAIN(keep=
430589     F_DepVar
430590     I_DepVar
430591     P_DepVar0
430592     P_DepVar1
430593     R_DepVar0
430594     R_DepVar1
430595     U_DepVar
430596     _WARN_
430597     DepVar
430598     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
430599     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL12_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural12_2VL48QN nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural12_2VL48QN;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural12_2VL48QN(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural12_2VL48QN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural12_2VL48QN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000268114 OVLMAX 0.9999591195 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
The SAS System
 
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
434865     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
434866     set EMWS8.AutoNeural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_CMeta_TRAIN;
434867     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
434867   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
434868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL12_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
434869     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
434870     set EMWS8.AutoNeural12_VALIDATE(keep=
434871     F_DepVar
434872     I_DepVar
434873     P_DepVar0
434874     P_DepVar1
434875     R_DepVar0
434876     R_DepVar1
434877     U_DepVar
434878     _WARN_
434879     DepVar
434880     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
434881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL12_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural12_1WR14PN nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural12_1WR14PN;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural12_1WR14PN(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMCLASSIFICATION WORK.AutoNeural12_1WR14PN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural12_1WR14PN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000274531 OVLMAX 0.9999592474 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
439156     %let _cn = %sysfunc(getoption(CENTER));
439157     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
439158     proc print data=EMWS8.AutoNeural12_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_EMREPORTFIT noobs label;
439159     var STAT LABEL TRAIN
439160     VALIDATE
439161     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
439162     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
439163     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
439164     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
439165     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL12_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 549.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
439166     title10;
MPRINT(EM_DIAGRAM):   title10;
439167     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
439168     proc sort data=EMWS8.AutoNeural12_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural12_EMCLASSIFICATION nothreads;
439169     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
439170     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL12_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL12_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
439171     %let _cn = %sysfunc(getoption(CENTER));
439172     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
439173     proc print data=EMWS8.AutoNeural12_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_EMCLASSIFICATION noobs label;
439174     var from into pct_row pct_col count percent
439175     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
439176     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
439177     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
439178     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
439179     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
439180     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
439181     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
439182     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
439183     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
439184     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
439185     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
439186     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL12_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 550.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
439187     title9;
MPRINT(EM_DIAGRAM):   title9;
439188     title10;
MPRINT(EM_DIAGRAM):   title10;
439189     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
439190     %let _cn = %sysfunc(getoption(CENTER));
439191     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
439192     data EMWS8.AutoNeural12_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMEVENTREPORT;
439193     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
439193   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
439194     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
439194   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
439194   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
439194   ! FALSEEVENT
439195     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
439195   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
439195   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
439196        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
439197     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
439198     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
439199     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
439200     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
439201     set EMWS8.AutoNeural12_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMEVENTREPORT;
439202     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL12_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL12_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
439203     proc print data=EMWS8.AutoNeural12_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_EMEVENTREPORT noobs label;
439204     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
439205     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
439206     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
439207     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL12_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 551.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
439208     title10;
MPRINT(EM_DIAGRAM):   title10;
439209     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
439210     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
439211     modify AutoNeural12_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural12_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
439212     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
439213     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
439213   ! ;
MPRINT(EM_DIAGRAM):   run;
439214     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL12_EMRANK.DATA.
439215     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
439216     %let _cn = %sysfunc(getoption(CENTER));
439217     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
439218     proc print data=EMWS8.AutoNeural12_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_EMRANK label noobs;
439219     var
439220     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
439221     by
439222     notsorted DATAROLE
439223     notsorted TARGET
439224     notsorted TARGETLABEL
439225     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
439226     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
439227     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
439228     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL12_EMRANK.
NOTE: The PROCEDURE PRINT printed page 552.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
439229     title10;
MPRINT(EM_DIAGRAM):   title10;
439230     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
439231     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
439232     modify AutoNeural12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural12_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
439233     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
439233   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
439234     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
439234   ! ;
MPRINT(EM_DIAGRAM):   run;
439235     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL12_EMSCOREDIST.DATA.
439236     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural12_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
